/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/maker/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fproject%2Fsrc%2Fapp%2Fmaker%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fproject%2Fsrc%2Fapp%2Fmaker%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/maker/page.tsx */ \"(app-pages-browser)/./src/app/maker/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRnByb2plY3QlMkZzcmMlMkZhcHAlMkZtYWtlciUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQXlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/ZGFlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL3Byb2plY3Qvc3JjL2FwcC9tYWtlci9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fproject%2Fsrc%2Fapp%2Fmaker%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5kZXZlbG9wbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7QUFDYixLQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxZQUFZO0FBQ3BFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxZQUFZO0FBQ3BFO0FBQ0EsMERBQTBELFlBQVk7QUFDdEUsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsbUZBQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDRCQUE0QjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0uZGV2ZWxvcG1lbnQuanM/NjNhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiB1c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLmRldmVsb3BtZW50LmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViAmJlxuICAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgICAgIHJldHVybiAoeCA9PT0geSAmJiAoMCAhPT0geCB8fCAxIC8geCA9PT0gMSAvIHkpKSB8fCAoeCAhPT0geCAmJiB5ICE9PSB5KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdXNlU3luY0V4dGVybmFsU3RvcmUkMihzdWJzY3JpYmUsIGdldFNuYXBzaG90KSB7XG4gICAgICBkaWRXYXJuT2xkMThBbHBoYSB8fFxuICAgICAgICB2b2lkIDAgPT09IFJlYWN0LnN0YXJ0VHJhbnNpdGlvbiB8fFxuICAgICAgICAoKGRpZFdhcm5PbGQxOEFscGhhID0gITApLFxuICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgIFwiWW91IGFyZSB1c2luZyBhbiBvdXRkYXRlZCwgcHJlLXJlbGVhc2UgYWxwaGEgb2YgUmVhY3QgMTggdGhhdCBkb2VzIG5vdCBzdXBwb3J0IHVzZVN5bmNFeHRlcm5hbFN0b3JlLiBUaGUgdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUgc2hpbSB3aWxsIG5vdCB3b3JrIGNvcnJlY3RseS4gVXBncmFkZSB0byBhIG5ld2VyIHByZS1yZWxlYXNlLlwiXG4gICAgICAgICkpO1xuICAgICAgdmFyIHZhbHVlID0gZ2V0U25hcHNob3QoKTtcbiAgICAgIGlmICghZGlkV2FyblVuY2FjaGVkR2V0U25hcHNob3QpIHtcbiAgICAgICAgdmFyIGNhY2hlZFZhbHVlID0gZ2V0U25hcHNob3QoKTtcbiAgICAgICAgb2JqZWN0SXModmFsdWUsIGNhY2hlZFZhbHVlKSB8fFxuICAgICAgICAgIChjb25zb2xlLmVycm9yKFxuICAgICAgICAgICAgXCJUaGUgcmVzdWx0IG9mIGdldFNuYXBzaG90IHNob3VsZCBiZSBjYWNoZWQgdG8gYXZvaWQgYW4gaW5maW5pdGUgbG9vcFwiXG4gICAgICAgICAgKSxcbiAgICAgICAgICAoZGlkV2FyblVuY2FjaGVkR2V0U25hcHNob3QgPSAhMCkpO1xuICAgICAgfVxuICAgICAgY2FjaGVkVmFsdWUgPSB1c2VTdGF0ZSh7XG4gICAgICAgIGluc3Q6IHsgdmFsdWU6IHZhbHVlLCBnZXRTbmFwc2hvdDogZ2V0U25hcHNob3QgfVxuICAgICAgfSk7XG4gICAgICB2YXIgaW5zdCA9IGNhY2hlZFZhbHVlWzBdLmluc3QsXG4gICAgICAgIGZvcmNlVXBkYXRlID0gY2FjaGVkVmFsdWVbMV07XG4gICAgICB1c2VMYXlvdXRFZmZlY3QoXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpbnN0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgaW5zdC5nZXRTbmFwc2hvdCA9IGdldFNuYXBzaG90O1xuICAgICAgICAgIGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkgJiYgZm9yY2VVcGRhdGUoeyBpbnN0OiBpbnN0IH0pO1xuICAgICAgICB9LFxuICAgICAgICBbc3Vic2NyaWJlLCB2YWx1ZSwgZ2V0U25hcHNob3RdXG4gICAgICApO1xuICAgICAgdXNlRWZmZWN0KFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgY2hlY2tJZlNuYXBzaG90Q2hhbmdlZChpbnN0KSAmJiBmb3JjZVVwZGF0ZSh7IGluc3Q6IGluc3QgfSk7XG4gICAgICAgICAgcmV0dXJuIHN1YnNjcmliZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjaGVja0lmU25hcHNob3RDaGFuZ2VkKGluc3QpICYmIGZvcmNlVXBkYXRlKHsgaW5zdDogaW5zdCB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgW3N1YnNjcmliZV1cbiAgICAgICk7XG4gICAgICB1c2VEZWJ1Z1ZhbHVlKHZhbHVlKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2hlY2tJZlNuYXBzaG90Q2hhbmdlZChpbnN0KSB7XG4gICAgICB2YXIgbGF0ZXN0R2V0U25hcHNob3QgPSBpbnN0LmdldFNuYXBzaG90O1xuICAgICAgaW5zdCA9IGluc3QudmFsdWU7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgbmV4dFZhbHVlID0gbGF0ZXN0R2V0U25hcHNob3QoKTtcbiAgICAgICAgcmV0dXJuICFvYmplY3RJcyhpbnN0LCBuZXh0VmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuICEwO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB1c2VTeW5jRXh0ZXJuYWxTdG9yZSQxKHN1YnNjcmliZSwgZ2V0U25hcHNob3QpIHtcbiAgICAgIHJldHVybiBnZXRTbmFwc2hvdCgpO1xuICAgIH1cbiAgICBcInVuZGVmaW5lZFwiICE9PSB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICYmXG4gICAgICBcImZ1bmN0aW9uXCIgPT09XG4gICAgICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0YXJ0ICYmXG4gICAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0YXJ0KEVycm9yKCkpO1xuICAgIHZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKSxcbiAgICAgIG9iamVjdElzID0gXCJmdW5jdGlvblwiID09PSB0eXBlb2YgT2JqZWN0LmlzID8gT2JqZWN0LmlzIDogaXMsXG4gICAgICB1c2VTdGF0ZSA9IFJlYWN0LnVzZVN0YXRlLFxuICAgICAgdXNlRWZmZWN0ID0gUmVhY3QudXNlRWZmZWN0LFxuICAgICAgdXNlTGF5b3V0RWZmZWN0ID0gUmVhY3QudXNlTGF5b3V0RWZmZWN0LFxuICAgICAgdXNlRGVidWdWYWx1ZSA9IFJlYWN0LnVzZURlYnVnVmFsdWUsXG4gICAgICBkaWRXYXJuT2xkMThBbHBoYSA9ICExLFxuICAgICAgZGlkV2FyblVuY2FjaGVkR2V0U25hcHNob3QgPSAhMSxcbiAgICAgIHNoaW0gPVxuICAgICAgICBcInVuZGVmaW5lZFwiID09PSB0eXBlb2Ygd2luZG93IHx8XG4gICAgICAgIFwidW5kZWZpbmVkXCIgPT09IHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgfHxcbiAgICAgICAgXCJ1bmRlZmluZWRcIiA9PT0gdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50XG4gICAgICAgICAgPyB1c2VTeW5jRXh0ZXJuYWxTdG9yZSQxXG4gICAgICAgICAgOiB1c2VTeW5jRXh0ZXJuYWxTdG9yZSQyO1xuICAgIGV4cG9ydHMudXNlU3luY0V4dGVybmFsU3RvcmUgPVxuICAgICAgdm9pZCAwICE9PSBSZWFjdC51c2VTeW5jRXh0ZXJuYWxTdG9yZSA/IFJlYWN0LnVzZVN5bmNFeHRlcm5hbFN0b3JlIDogc2hpbTtcbiAgICBcInVuZGVmaW5lZFwiICE9PSB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICYmXG4gICAgICBcImZ1bmN0aW9uXCIgPT09XG4gICAgICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0b3AgJiZcbiAgICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5yZWdpc3RlckludGVybmFsTW9kdWxlU3RvcChFcnJvcigpKTtcbiAgfSkoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      shim = __webpack_require__(/*! use-sync-external-store/shim */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useSyncExternalStore = shim.useSyncExternalStore,\n      useRef = React.useRef,\n      useEffect = React.useEffect,\n      useMemo = React.useMemo,\n      useDebugValue = React.useDebugValue;\n    exports.useSyncExternalStoreWithSelector = function (\n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      selector,\n      isEqual\n    ) {\n      var instRef = useRef(null);\n      if (null === instRef.current) {\n        var inst = { hasValue: !1, value: null };\n        instRef.current = inst;\n      } else inst = instRef.current;\n      instRef = useMemo(\n        function () {\n          function memoizedSelector(nextSnapshot) {\n            if (!hasMemo) {\n              hasMemo = !0;\n              memoizedSnapshot = nextSnapshot;\n              nextSnapshot = selector(nextSnapshot);\n              if (void 0 !== isEqual && inst.hasValue) {\n                var currentSelection = inst.value;\n                if (isEqual(currentSelection, nextSnapshot))\n                  return (memoizedSelection = currentSelection);\n              }\n              return (memoizedSelection = nextSnapshot);\n            }\n            currentSelection = memoizedSelection;\n            if (objectIs(memoizedSnapshot, nextSnapshot))\n              return currentSelection;\n            var nextSelection = selector(nextSnapshot);\n            if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n              return (memoizedSnapshot = nextSnapshot), currentSelection;\n            memoizedSnapshot = nextSnapshot;\n            return (memoizedSelection = nextSelection);\n          }\n          var hasMemo = !1,\n            memoizedSnapshot,\n            memoizedSelection,\n            maybeGetServerSnapshot =\n              void 0 === getServerSnapshot ? null : getServerSnapshot;\n          return [\n            function () {\n              return memoizedSelector(getSnapshot());\n            },\n            null === maybeGetServerSnapshot\n              ? void 0\n              : function () {\n                  return memoizedSelector(maybeGetServerSnapshot());\n                }\n          ];\n        },\n        [getSnapshot, getServerSnapshot, selector, isEqual]\n      );\n      var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n      useEffect(\n        function () {\n          inst.hasValue = !0;\n          inst.value = value;\n        },\n        [value]\n      );\n      useDebugValue(value);\n      return value;\n    };\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTtBQUNiLEtBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBTztBQUMvQixhQUFhLG1CQUFPLENBQUMsOEdBQThCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksd0NBQXdDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IuZGV2ZWxvcG1lbnQuanM/NTMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiB1c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IuZGV2ZWxvcG1lbnQuanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cblwidXNlIHN0cmljdFwiO1xuXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WICYmXG4gIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gaXMoeCwgeSkge1xuICAgICAgcmV0dXJuICh4ID09PSB5ICYmICgwICE9PSB4IHx8IDEgLyB4ID09PSAxIC8geSkpIHx8ICh4ICE9PSB4ICYmIHkgIT09IHkpO1xuICAgIH1cbiAgICBcInVuZGVmaW5lZFwiICE9PSB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICYmXG4gICAgICBcImZ1bmN0aW9uXCIgPT09XG4gICAgICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0YXJ0ICYmXG4gICAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0YXJ0KEVycm9yKCkpO1xuICAgIHZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKSxcbiAgICAgIHNoaW0gPSByZXF1aXJlKFwidXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbVwiKSxcbiAgICAgIG9iamVjdElzID0gXCJmdW5jdGlvblwiID09PSB0eXBlb2YgT2JqZWN0LmlzID8gT2JqZWN0LmlzIDogaXMsXG4gICAgICB1c2VTeW5jRXh0ZXJuYWxTdG9yZSA9IHNoaW0udXNlU3luY0V4dGVybmFsU3RvcmUsXG4gICAgICB1c2VSZWYgPSBSZWFjdC51c2VSZWYsXG4gICAgICB1c2VFZmZlY3QgPSBSZWFjdC51c2VFZmZlY3QsXG4gICAgICB1c2VNZW1vID0gUmVhY3QudXNlTWVtbyxcbiAgICAgIHVzZURlYnVnVmFsdWUgPSBSZWFjdC51c2VEZWJ1Z1ZhbHVlO1xuICAgIGV4cG9ydHMudXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3IgPSBmdW5jdGlvbiAoXG4gICAgICBzdWJzY3JpYmUsXG4gICAgICBnZXRTbmFwc2hvdCxcbiAgICAgIGdldFNlcnZlclNuYXBzaG90LFxuICAgICAgc2VsZWN0b3IsXG4gICAgICBpc0VxdWFsXG4gICAgKSB7XG4gICAgICB2YXIgaW5zdFJlZiA9IHVzZVJlZihudWxsKTtcbiAgICAgIGlmIChudWxsID09PSBpbnN0UmVmLmN1cnJlbnQpIHtcbiAgICAgICAgdmFyIGluc3QgPSB7IGhhc1ZhbHVlOiAhMSwgdmFsdWU6IG51bGwgfTtcbiAgICAgICAgaW5zdFJlZi5jdXJyZW50ID0gaW5zdDtcbiAgICAgIH0gZWxzZSBpbnN0ID0gaW5zdFJlZi5jdXJyZW50O1xuICAgICAgaW5zdFJlZiA9IHVzZU1lbW8oXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBmdW5jdGlvbiBtZW1vaXplZFNlbGVjdG9yKG5leHRTbmFwc2hvdCkge1xuICAgICAgICAgICAgaWYgKCFoYXNNZW1vKSB7XG4gICAgICAgICAgICAgIGhhc01lbW8gPSAhMDtcbiAgICAgICAgICAgICAgbWVtb2l6ZWRTbmFwc2hvdCA9IG5leHRTbmFwc2hvdDtcbiAgICAgICAgICAgICAgbmV4dFNuYXBzaG90ID0gc2VsZWN0b3IobmV4dFNuYXBzaG90KTtcbiAgICAgICAgICAgICAgaWYgKHZvaWQgMCAhPT0gaXNFcXVhbCAmJiBpbnN0Lmhhc1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRTZWxlY3Rpb24gPSBpbnN0LnZhbHVlO1xuICAgICAgICAgICAgICAgIGlmIChpc0VxdWFsKGN1cnJlbnRTZWxlY3Rpb24sIG5leHRTbmFwc2hvdCkpXG4gICAgICAgICAgICAgICAgICByZXR1cm4gKG1lbW9pemVkU2VsZWN0aW9uID0gY3VycmVudFNlbGVjdGlvbik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIChtZW1vaXplZFNlbGVjdGlvbiA9IG5leHRTbmFwc2hvdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjdXJyZW50U2VsZWN0aW9uID0gbWVtb2l6ZWRTZWxlY3Rpb247XG4gICAgICAgICAgICBpZiAob2JqZWN0SXMobWVtb2l6ZWRTbmFwc2hvdCwgbmV4dFNuYXBzaG90KSlcbiAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRTZWxlY3Rpb247XG4gICAgICAgICAgICB2YXIgbmV4dFNlbGVjdGlvbiA9IHNlbGVjdG9yKG5leHRTbmFwc2hvdCk7XG4gICAgICAgICAgICBpZiAodm9pZCAwICE9PSBpc0VxdWFsICYmIGlzRXF1YWwoY3VycmVudFNlbGVjdGlvbiwgbmV4dFNlbGVjdGlvbikpXG4gICAgICAgICAgICAgIHJldHVybiAobWVtb2l6ZWRTbmFwc2hvdCA9IG5leHRTbmFwc2hvdCksIGN1cnJlbnRTZWxlY3Rpb247XG4gICAgICAgICAgICBtZW1vaXplZFNuYXBzaG90ID0gbmV4dFNuYXBzaG90O1xuICAgICAgICAgICAgcmV0dXJuIChtZW1vaXplZFNlbGVjdGlvbiA9IG5leHRTZWxlY3Rpb24pO1xuICAgICAgICAgIH1cbiAgICAgICAgICB2YXIgaGFzTWVtbyA9ICExLFxuICAgICAgICAgICAgbWVtb2l6ZWRTbmFwc2hvdCxcbiAgICAgICAgICAgIG1lbW9pemVkU2VsZWN0aW9uLFxuICAgICAgICAgICAgbWF5YmVHZXRTZXJ2ZXJTbmFwc2hvdCA9XG4gICAgICAgICAgICAgIHZvaWQgMCA9PT0gZ2V0U2VydmVyU25hcHNob3QgPyBudWxsIDogZ2V0U2VydmVyU25hcHNob3Q7XG4gICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG1lbW9pemVkU2VsZWN0b3IoZ2V0U25hcHNob3QoKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbnVsbCA9PT0gbWF5YmVHZXRTZXJ2ZXJTbmFwc2hvdFxuICAgICAgICAgICAgICA/IHZvaWQgMFxuICAgICAgICAgICAgICA6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBtZW1vaXplZFNlbGVjdG9yKG1heWJlR2V0U2VydmVyU25hcHNob3QoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgIF07XG4gICAgICAgIH0sXG4gICAgICAgIFtnZXRTbmFwc2hvdCwgZ2V0U2VydmVyU25hcHNob3QsIHNlbGVjdG9yLCBpc0VxdWFsXVxuICAgICAgKTtcbiAgICAgIHZhciB2YWx1ZSA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlKHN1YnNjcmliZSwgaW5zdFJlZlswXSwgaW5zdFJlZlsxXSk7XG4gICAgICB1c2VFZmZlY3QoXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpbnN0Lmhhc1ZhbHVlID0gITA7XG4gICAgICAgICAgaW5zdC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICBbdmFsdWVdXG4gICAgICApO1xuICAgICAgdXNlRGVidWdWYWx1ZSh2YWx1ZSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfTtcbiAgICBcInVuZGVmaW5lZFwiICE9PSB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICYmXG4gICAgICBcImZ1bmN0aW9uXCIgPT09XG4gICAgICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0b3AgJiZcbiAgICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5yZWdpc3RlckludGVybmFsTW9kdWxlU3RvcChFcnJvcigpKTtcbiAgfSkoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js":
/*!************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw0TUFBOEU7QUFDaEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanM/NWNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0ucHJvZHVjdGlvbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/with-selector.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim/with-selector.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHdPQUE0RjtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzPzVkZTAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IucHJvZHVjdGlvbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/maker/page.tsx":
/*!********************************!*\
  !*** ./src/app/maker/page.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MusicMaker; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tone */ \"(app-pages-browser)/./node_modules/tone/build/Tone.js\");\n/* harmony import */ var _store_musicStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/musicStore */ \"(app-pages-browser)/./src/store/musicStore.ts\");\n/* harmony import */ var _barrel_optimize_names_PauseIcon_PlayIcon_PlusIcon_heroicons_react_24_solid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=PauseIcon,PlayIcon,PlusIcon!=!@heroicons/react/24/solid */ \"(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PauseIcon.js\");\n/* harmony import */ var _barrel_optimize_names_PauseIcon_PlayIcon_PlusIcon_heroicons_react_24_solid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=PauseIcon,PlayIcon,PlusIcon!=!@heroicons/react/24/solid */ \"(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PlayIcon.js\");\n/* harmony import */ var _barrel_optimize_names_PauseIcon_PlayIcon_PlusIcon_heroicons_react_24_solid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=PauseIcon,PlayIcon,PlusIcon!=!@heroicons/react/24/solid */ \"(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PlusIcon.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nfunction MusicMaker() {\n    _s();\n    const { isPlaying, bpm, tracks, setIsPlaying, setBpm, addTrack, removeTrack, updateTrackNote } = (0,_store_musicStore__WEBPACK_IMPORTED_MODULE_3__.useMusicStore)();\n    const [initialized, setInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handlePlayClick = async ()=>{\n        if (!initialized) {\n            await tone__WEBPACK_IMPORTED_MODULE_2__.start();\n            setInitialized(true);\n        }\n        setIsPlaying(!isPlaying);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-between mb-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-3xl font-bold text-indigo-400\",\n                        children: \"Music Maker\"\n                    }, void 0, false, {\n                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                        lineNumber: 33,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handlePlayClick,\n                                className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg flex items-center gap-2\",\n                                children: isPlaying ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_PauseIcon_PlayIcon_PlusIcon_heroicons_react_24_solid__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                            className: \"w-5 h-5\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/project/src/app/maker/page.tsx\",\n                                            lineNumber: 40,\n                                            columnNumber: 17\n                                        }, this),\n                                        \" Stop\"\n                                    ]\n                                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_PauseIcon_PlayIcon_PlusIcon_heroicons_react_24_solid__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                            className: \"w-5 h-5\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/project/src/app/maker/page.tsx\",\n                                            lineNumber: 42,\n                                            columnNumber: 17\n                                        }, this),\n                                        \" Play\"\n                                    ]\n                                }, void 0, true)\n                            }, void 0, false, {\n                                fileName: \"/home/project/src/app/maker/page.tsx\",\n                                lineNumber: 35,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: \"text-sm\",\n                                        children: \"BPM:\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                                        lineNumber: 46,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        value: bpm,\n                                        onChange: (e)=>setBpm(Number(e.target.value)),\n                                        className: \"w-16 bg-gray-800 text-white px-2 py-1 rounded\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                                        lineNumber: 47,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/project/src/app/maker/page.tsx\",\n                                lineNumber: 45,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: addTrack,\n                                className: \"bg-gray-700 hover:bg-gray-600 text-white px-3 py-2 rounded-lg flex items-center gap-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_PauseIcon_PlayIcon_PlusIcon_heroicons_react_24_solid__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                        className: \"w-5 h-5\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                                        lineNumber: 58,\n                                        columnNumber: 13\n                                    }, this),\n                                    \" Add Track\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/project/src/app/maker/page.tsx\",\n                                lineNumber: 54,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                        lineNumber: 34,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/project/src/app/maker/page.tsx\",\n                lineNumber: 32,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-4\",\n                children: tracks.map((track, trackIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-gray-800 p-4 rounded-lg\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center justify-between mb-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center gap-4\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-lg font-medium\",\n                                                children: [\n                                                    \"Track \",\n                                                    trackIndex + 1\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/project/src/app/maker/page.tsx\",\n                                                lineNumber: 68,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                value: track.instrument,\n                                                className: \"bg-gray-700 text-white px-2 py-1 rounded\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                        value: \"synth\",\n                                                        children: \"Synth\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                                                        lineNumber: 73,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                        value: \"drums\",\n                                                        children: \"Drums\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                                                        lineNumber: 74,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/project/src/app/maker/page.tsx\",\n                                                lineNumber: 69,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                                        lineNumber: 67,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>removeTrack(trackIndex),\n                                        className: \"text-red-400 hover:text-red-300\",\n                                        children: \"Remove\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                                        lineNumber: 77,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/project/src/app/maker/page.tsx\",\n                                lineNumber: 66,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"grid grid-cols-16 gap-1\",\n                                children: track.steps.map((enabled, stepIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>updateTrackNote(trackIndex, stepIndex, !enabled),\n                                        className: \"w-full aspect-square rounded \".concat(enabled ? \"bg-indigo-500\" : \"bg-gray-700\", \" hover:bg-indigo-400 transition-colors\")\n                                    }, stepIndex, false, {\n                                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                                        lineNumber: 86,\n                                        columnNumber: 17\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"/home/project/src/app/maker/page.tsx\",\n                                lineNumber: 84,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, track.id, true, {\n                        fileName: \"/home/project/src/app/maker/page.tsx\",\n                        lineNumber: 65,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/home/project/src/app/maker/page.tsx\",\n                lineNumber: 63,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/project/src/app/maker/page.tsx\",\n        lineNumber: 31,\n        columnNumber: 5\n    }, this);\n}\n_s(MusicMaker, \"uSujhwEh5eWNx3QBkTg4UF+c+Pk=\", false, function() {\n    return [\n        _store_musicStore__WEBPACK_IMPORTED_MODULE_3__.useMusicStore\n    ];\n});\n_c = MusicMaker;\nvar _c;\n$RefreshReg$(_c, \"MusicMaker\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvbWFrZXIvcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFFNEM7QUFDZjtBQUNzQjtBQUN1QjtBQUUzRCxTQUFTTTs7SUFDdEIsTUFBTSxFQUNKQyxTQUFTLEVBQ1RDLEdBQUcsRUFDSEMsTUFBTSxFQUNOQyxZQUFZLEVBQ1pDLE1BQU0sRUFDTkMsUUFBUSxFQUNSQyxXQUFXLEVBQ1hDLGVBQWUsRUFDaEIsR0FBR1osZ0VBQWFBO0lBRWpCLE1BQU0sQ0FBQ2EsYUFBYUMsZUFBZSxHQUFHaEIsK0NBQVFBLENBQUM7SUFFL0MsTUFBTWlCLGtCQUFrQjtRQUN0QixJQUFJLENBQUNGLGFBQWE7WUFDaEIsTUFBTWQsdUNBQVU7WUFDaEJlLGVBQWU7UUFDakI7UUFDQU4sYUFBYSxDQUFDSDtJQUNoQjtJQUVBLHFCQUNFLDhEQUFDWTtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0Q7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDQzt3QkFBR0QsV0FBVTtrQ0FBcUM7Ozs7OztrQ0FDbkQsOERBQUNEO3dCQUFJQyxXQUFVOzswQ0FDYiw4REFBQ0U7Z0NBQ0NDLFNBQVNOO2dDQUNURyxXQUFVOzBDQUVUYiwwQkFDQzs7c0RBQUUsOERBQUNILG1IQUFTQTs0Q0FBQ2dCLFdBQVU7Ozs7Ozt3Q0FBWTs7aUVBRW5DOztzREFBRSw4REFBQ2pCLG1IQUFRQTs0Q0FBQ2lCLFdBQVU7Ozs7Ozt3Q0FBWTs7Ozs7Ozs7MENBR3RDLDhEQUFDRDtnQ0FBSUMsV0FBVTs7a0RBQ2IsOERBQUNJO3dDQUFNSixXQUFVO2tEQUFVOzs7Ozs7a0RBQzNCLDhEQUFDSzt3Q0FDQ0MsTUFBSzt3Q0FDTEMsT0FBT25CO3dDQUNQb0IsVUFBVSxDQUFDQyxJQUFNbEIsT0FBT21CLE9BQU9ELEVBQUVFLE1BQU0sQ0FBQ0osS0FBSzt3Q0FDN0NQLFdBQVU7Ozs7Ozs7Ozs7OzswQ0FHZCw4REFBQ0U7Z0NBQ0NDLFNBQVNYO2dDQUNUUSxXQUFVOztrREFFViw4REFBQ2YsbUhBQVFBO3dDQUFDZSxXQUFVOzs7Ozs7b0NBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBS3RDLDhEQUFDRDtnQkFBSUMsV0FBVTswQkFDWlgsT0FBT3VCLEdBQUcsQ0FBQyxDQUFDQyxPQUFPQywyQkFDbEIsOERBQUNmO3dCQUFtQkMsV0FBVTs7MENBQzVCLDhEQUFDRDtnQ0FBSUMsV0FBVTs7a0RBQ2IsOERBQUNEO3dDQUFJQyxXQUFVOzswREFDYiw4REFBQ2U7Z0RBQUtmLFdBQVU7O29EQUFzQjtvREFBT2MsYUFBYTs7Ozs7OzswREFDMUQsOERBQUNFO2dEQUNDVCxPQUFPTSxNQUFNSSxVQUFVO2dEQUN2QmpCLFdBQVU7O2tFQUVWLDhEQUFDa0I7d0RBQU9YLE9BQU07a0VBQVE7Ozs7OztrRUFDdEIsOERBQUNXO3dEQUFPWCxPQUFNO2tFQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7a0RBRzFCLDhEQUFDTDt3Q0FDQ0MsU0FBUyxJQUFNVixZQUFZcUI7d0NBQzNCZCxXQUFVO2tEQUNYOzs7Ozs7Ozs7Ozs7MENBSUgsOERBQUNEO2dDQUFJQyxXQUFVOzBDQUNaYSxNQUFNTSxLQUFLLENBQUNQLEdBQUcsQ0FBQyxDQUFDUSxTQUFTQywwQkFDekIsOERBQUNuQjt3Q0FFQ0MsU0FBUyxJQUFNVCxnQkFBZ0JvQixZQUFZTyxXQUFXLENBQUNEO3dDQUN2RHBCLFdBQVcsZ0NBRVYsT0FEQ29CLFVBQVUsa0JBQWtCLGVBQzdCO3VDQUpJQzs7Ozs7Ozs7Ozs7dUJBdEJIUixNQUFNUyxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7O0FBbUM1QjtHQTVGd0JwQzs7UUFVbEJKLDREQUFhQTs7O0tBVktJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvbWFrZXIvcGFnZS50c3g/ODllMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBUb25lIGZyb20gJ3RvbmUnO1xuaW1wb3J0IHsgdXNlTXVzaWNTdG9yZSB9IGZyb20gJ0Avc3RvcmUvbXVzaWNTdG9yZSc7XG5pbXBvcnQgeyBQbGF5SWNvbiwgUGF1c2VJY29uLCBQbHVzSWNvbiB9IGZyb20gJ0BoZXJvaWNvbnMvcmVhY3QvMjQvc29saWQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNdXNpY01ha2VyKCkge1xuICBjb25zdCB7IFxuICAgIGlzUGxheWluZywgXG4gICAgYnBtLCBcbiAgICB0cmFja3MsIFxuICAgIHNldElzUGxheWluZywgXG4gICAgc2V0QnBtLCBcbiAgICBhZGRUcmFjaywgXG4gICAgcmVtb3ZlVHJhY2ssIFxuICAgIHVwZGF0ZVRyYWNrTm90ZSBcbiAgfSA9IHVzZU11c2ljU3RvcmUoKTtcbiAgXG4gIGNvbnN0IFtpbml0aWFsaXplZCwgc2V0SW5pdGlhbGl6ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGhhbmRsZVBsYXlDbGljayA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIWluaXRpYWxpemVkKSB7XG4gICAgICBhd2FpdCBUb25lLnN0YXJ0KCk7XG4gICAgICBzZXRJbml0aWFsaXplZCh0cnVlKTtcbiAgICB9XG4gICAgc2V0SXNQbGF5aW5nKCFpc1BsYXlpbmcpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgbXgtYXV0byBweC00IHB5LThcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLThcIj5cbiAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCB0ZXh0LWluZGlnby00MDBcIj5NdXNpYyBNYWtlcjwvaDE+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTRcIj5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVQbGF5Q2xpY2t9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1pbmRpZ28tNjAwIGhvdmVyOmJnLWluZGlnby03MDAgdGV4dC13aGl0ZSBweC00IHB5LTIgcm91bmRlZC1sZyBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAge2lzUGxheWluZyA/IChcbiAgICAgICAgICAgICAgPD48UGF1c2VJY29uIGNsYXNzTmFtZT1cInctNSBoLTVcIiAvPiBTdG9wPC8+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8PjxQbGF5SWNvbiBjbGFzc05hbWU9XCJ3LTUgaC01XCIgLz4gUGxheTwvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwidGV4dC1zbVwiPkJQTTo8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICB2YWx1ZT17YnBtfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldEJwbShOdW1iZXIoZS50YXJnZXQudmFsdWUpKX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy0xNiBiZy1ncmF5LTgwMCB0ZXh0LXdoaXRlIHB4LTIgcHktMSByb3VuZGVkXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17YWRkVHJhY2t9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1ncmF5LTcwMCBob3ZlcjpiZy1ncmF5LTYwMCB0ZXh0LXdoaXRlIHB4LTMgcHktMiByb3VuZGVkLWxnIGZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8UGx1c0ljb24gY2xhc3NOYW1lPVwidy01IGgtNVwiIC8+IEFkZCBUcmFja1xuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICB7dHJhY2tzLm1hcCgodHJhY2ssIHRyYWNrSW5kZXgpID0+IChcbiAgICAgICAgICA8ZGl2IGtleT17dHJhY2suaWR9IGNsYXNzTmFtZT1cImJnLWdyYXktODAwIHAtNCByb3VuZGVkLWxnXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi0yXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTRcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtbWVkaXVtXCI+VHJhY2sge3RyYWNrSW5kZXggKyAxfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgICAgICB2YWx1ZT17dHJhY2suaW5zdHJ1bWVudH1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJnLWdyYXktNzAwIHRleHQtd2hpdGUgcHgtMiBweS0xIHJvdW5kZWRcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJzeW50aFwiPlN5bnRoPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiZHJ1bXNcIj5EcnVtczwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHJlbW92ZVRyYWNrKHRyYWNrSW5kZXgpfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtcmVkLTQwMCBob3Zlcjp0ZXh0LXJlZC0zMDBcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgUmVtb3ZlXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTE2IGdhcC0xXCI+XG4gICAgICAgICAgICAgIHt0cmFjay5zdGVwcy5tYXAoKGVuYWJsZWQsIHN0ZXBJbmRleCkgPT4gKFxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIGtleT17c3RlcEluZGV4fVxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdXBkYXRlVHJhY2tOb3RlKHRyYWNrSW5kZXgsIHN0ZXBJbmRleCwgIWVuYWJsZWQpfVxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdy1mdWxsIGFzcGVjdC1zcXVhcmUgcm91bmRlZCAke1xuICAgICAgICAgICAgICAgICAgICBlbmFibGVkID8gJ2JnLWluZGlnby01MDAnIDogJ2JnLWdyYXktNzAwJ1xuICAgICAgICAgICAgICAgICAgfSBob3ZlcjpiZy1pbmRpZ28tNDAwIHRyYW5zaXRpb24tY29sb3JzYH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsIlRvbmUiLCJ1c2VNdXNpY1N0b3JlIiwiUGxheUljb24iLCJQYXVzZUljb24iLCJQbHVzSWNvbiIsIk11c2ljTWFrZXIiLCJpc1BsYXlpbmciLCJicG0iLCJ0cmFja3MiLCJzZXRJc1BsYXlpbmciLCJzZXRCcG0iLCJhZGRUcmFjayIsInJlbW92ZVRyYWNrIiwidXBkYXRlVHJhY2tOb3RlIiwiaW5pdGlhbGl6ZWQiLCJzZXRJbml0aWFsaXplZCIsImhhbmRsZVBsYXlDbGljayIsInN0YXJ0IiwiZGl2IiwiY2xhc3NOYW1lIiwiaDEiLCJidXR0b24iLCJvbkNsaWNrIiwibGFiZWwiLCJpbnB1dCIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiZSIsIk51bWJlciIsInRhcmdldCIsIm1hcCIsInRyYWNrIiwidHJhY2tJbmRleCIsInNwYW4iLCJzZWxlY3QiLCJpbnN0cnVtZW50Iiwib3B0aW9uIiwic3RlcHMiLCJlbmFibGVkIiwic3RlcEluZGV4IiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/maker/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/store/musicStore.ts":
/*!*********************************!*\
  !*** ./src/store/musicStore.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMusicStore: function() { return /* binding */ useMusicStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tone */ \"(app-pages-browser)/./node_modules/tone/build/Tone.js\");\n\n\nconst synth = new tone__WEBPACK_IMPORTED_MODULE_0__.PolySynth().toDestination();\nconst drumSampler = new tone__WEBPACK_IMPORTED_MODULE_0__.Sampler({\n    urls: {\n        C4: \"https://tonejs.github.io/audio/drum-samples/kick.mp3\",\n        D4: \"https://tonejs.github.io/audio/drum-samples/snare.mp3\",\n        E4: \"https://tonejs.github.io/audio/drum-samples/hihat.mp3\"\n    }\n}).toDestination();\nconst useMusicStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        isPlaying: false,\n        bpm: 120,\n        volume: -12,\n        currentTrack: 0,\n        tracks: [\n            {\n                id: \"1\",\n                instrument: \"synth\",\n                steps: Array(16).fill(false)\n            },\n            {\n                id: \"2\",\n                instrument: \"drums\",\n                steps: Array(16).fill(false)\n            }\n        ],\n        setIsPlaying: (isPlaying)=>{\n            if (isPlaying) {\n                tone__WEBPACK_IMPORTED_MODULE_0__.Transport.start();\n            } else {\n                tone__WEBPACK_IMPORTED_MODULE_0__.Transport.stop();\n            }\n            set({\n                isPlaying\n            });\n        },\n        setBpm: (bpm)=>{\n            tone__WEBPACK_IMPORTED_MODULE_0__.Transport.bpm.value = bpm;\n            set({\n                bpm\n            });\n        },\n        setVolume: (volume)=>{\n            tone__WEBPACK_IMPORTED_MODULE_0__.Destination.volume.value = volume;\n            set({\n                volume\n            });\n        },\n        addTrack: ()=>{\n            set((state)=>({\n                    tracks: [\n                        ...state.tracks,\n                        {\n                            id: Date.now().toString(),\n                            instrument: \"synth\",\n                            steps: Array(16).fill(false)\n                        }\n                    ]\n                }));\n        },\n        removeTrack: (index)=>{\n            set((state)=>({\n                    tracks: state.tracks.filter((_, i)=>i !== index)\n                }));\n        },\n        updateTrackNote: (trackIndex, stepIndex, enabled)=>{\n            set((state)=>({\n                    tracks: state.tracks.map((track, i)=>i === trackIndex ? {\n                            ...track,\n                            steps: track.steps.map((step, j)=>j === stepIndex ? enabled : step)\n                        } : track)\n                }));\n        }\n    }));\n// Set up the sequencer\ntone__WEBPACK_IMPORTED_MODULE_0__.Transport.bpm.value = 120;\nlet currentStep = 0;\ntone__WEBPACK_IMPORTED_MODULE_0__.Transport.scheduleRepeat((time)=>{\n    const store = useMusicStore.getState();\n    store.tracks.forEach((track, trackIndex)=>{\n        if (track.steps[currentStep]) {\n            if (track.instrument === \"drums\") {\n                drumSampler.triggerAttackRelease([\n                    \"C4\",\n                    \"D4\",\n                    \"E4\"\n                ][trackIndex % 3], \"8n\", time);\n            } else {\n                synth.triggerAttackRelease([\n                    \"C4\",\n                    \"E4\",\n                    \"G4\"\n                ][trackIndex % 3], \"8n\", time);\n            }\n        }\n    });\n    currentStep = (currentStep + 1) % 16;\n}, \"8n\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZS9tdXNpY1N0b3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUNKO0FBc0I3QixNQUFNRSxRQUFRLElBQUlELDJDQUFjLEdBQUdHLGFBQWE7QUFDaEQsTUFBTUMsY0FBYyxJQUFJSix5Q0FBWSxDQUFDO0lBQ25DTSxNQUFNO1FBQ0pDLElBQUk7UUFDSkMsSUFBSTtRQUNKQyxJQUFJO0lBQ047QUFDRixHQUFHTixhQUFhO0FBRVQsTUFBTU8sZ0JBQWdCWCwrQ0FBTUEsQ0FBYSxDQUFDWSxLQUFLQyxNQUFTO1FBQzdEQyxXQUFXO1FBQ1hDLEtBQUs7UUFDTEMsUUFBUSxDQUFDO1FBQ1RDLGNBQWM7UUFDZEMsUUFBUTtZQUNOO2dCQUFFQyxJQUFJO2dCQUFLQyxZQUFZO2dCQUFTQyxPQUFPQyxNQUFNLElBQUlDLElBQUksQ0FBQztZQUFPO1lBQzdEO2dCQUFFSixJQUFJO2dCQUFLQyxZQUFZO2dCQUFTQyxPQUFPQyxNQUFNLElBQUlDLElBQUksQ0FBQztZQUFPO1NBQzlEO1FBRURDLGNBQWMsQ0FBQ1Y7WUFDYixJQUFJQSxXQUFXO2dCQUNiYixpREFBb0I7WUFDdEIsT0FBTztnQkFDTEEsZ0RBQW1CO1lBQ3JCO1lBQ0FXLElBQUk7Z0JBQUVFO1lBQVU7UUFDbEI7UUFFQWMsUUFBUSxDQUFDYjtZQUNQZCxxREFBd0IsR0FBR2M7WUFDM0JILElBQUk7Z0JBQUVHO1lBQUk7UUFDWjtRQUVBZSxXQUFXLENBQUNkO1lBQ1ZmLDBEQUE2QixHQUFHZTtZQUNoQ0osSUFBSTtnQkFBRUk7WUFBTztRQUNmO1FBRUFnQixVQUFVO1lBQ1JwQixJQUFJLENBQUNxQixRQUFXO29CQUNkZixRQUFROzJCQUFJZSxNQUFNZixNQUFNO3dCQUFFOzRCQUN4QkMsSUFBSWUsS0FBS0MsR0FBRyxHQUFHQyxRQUFROzRCQUN2QmhCLFlBQVk7NEJBQ1pDLE9BQU9DLE1BQU0sSUFBSUMsSUFBSSxDQUFDO3dCQUN4QjtxQkFBRTtnQkFDSjtRQUNGO1FBRUFjLGFBQWEsQ0FBQ0M7WUFDWjFCLElBQUksQ0FBQ3FCLFFBQVc7b0JBQ2RmLFFBQVFlLE1BQU1mLE1BQU0sQ0FBQ3FCLE1BQU0sQ0FBQyxDQUFDQyxHQUFHQyxJQUFNQSxNQUFNSDtnQkFDOUM7UUFDRjtRQUVBSSxpQkFBaUIsQ0FBQ0MsWUFBWUMsV0FBV0M7WUFDdkNqQyxJQUFJLENBQUNxQixRQUFXO29CQUNkZixRQUFRZSxNQUFNZixNQUFNLENBQUM0QixHQUFHLENBQUMsQ0FBQ0MsT0FBT04sSUFDL0JBLE1BQU1FLGFBQ0Y7NEJBQUUsR0FBR0ksS0FBSzs0QkFBRTFCLE9BQU8wQixNQUFNMUIsS0FBSyxDQUFDeUIsR0FBRyxDQUFDLENBQUNFLE1BQU1DLElBQU1BLE1BQU1MLFlBQVlDLFVBQVVHO3dCQUFNLElBQ2xGRDtnQkFFUjtRQUNGO0lBQ0YsSUFBSTtBQUVKLHVCQUF1QjtBQUN2QjlDLHFEQUF3QixHQUFHO0FBQzNCLElBQUlpRCxjQUFjO0FBRWxCakQsMERBQTZCLENBQUMsQ0FBQ21EO0lBQzdCLE1BQU1DLFFBQVExQyxjQUFjMkMsUUFBUTtJQUVwQ0QsTUFBTW5DLE1BQU0sQ0FBQ3FDLE9BQU8sQ0FBQyxDQUFDUixPQUFPSjtRQUMzQixJQUFJSSxNQUFNMUIsS0FBSyxDQUFDNkIsWUFBWSxFQUFFO1lBQzVCLElBQUlILE1BQU0zQixVQUFVLEtBQUssU0FBUztnQkFDaENmLFlBQVltRCxvQkFBb0IsQ0FBQztvQkFBQztvQkFBTTtvQkFBTTtpQkFBSyxDQUFDYixhQUFhLEVBQUUsRUFBRSxNQUFNUztZQUM3RSxPQUFPO2dCQUNMbEQsTUFBTXNELG9CQUFvQixDQUFDO29CQUFDO29CQUFNO29CQUFNO2lCQUFLLENBQUNiLGFBQWEsRUFBRSxFQUFFLE1BQU1TO1lBQ3ZFO1FBQ0Y7SUFDRjtJQUVBRixjQUFjLENBQUNBLGNBQWMsS0FBSztBQUNwQyxHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zdG9yZS9tdXNpY1N0b3JlLnRzP2M2Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSAnenVzdGFuZCc7XG5pbXBvcnQgKiBhcyBUb25lIGZyb20gJ3RvbmUnO1xuXG5pbnRlcmZhY2UgTXVzaWNTdG9yZSB7XG4gIGlzUGxheWluZzogYm9vbGVhbjtcbiAgYnBtOiBudW1iZXI7XG4gIHZvbHVtZTogbnVtYmVyO1xuICBjdXJyZW50VHJhY2s6IG51bWJlcjtcbiAgdHJhY2tzOiBUcmFja1tdO1xuICBzZXRJc1BsYXlpbmc6IChpc1BsYXlpbmc6IGJvb2xlYW4pID0+IHZvaWQ7XG4gIHNldEJwbTogKGJwbTogbnVtYmVyKSA9PiB2b2lkO1xuICBzZXRWb2x1bWU6ICh2b2x1bWU6IG51bWJlcikgPT4gdm9pZDtcbiAgYWRkVHJhY2s6ICgpID0+IHZvaWQ7XG4gIHJlbW92ZVRyYWNrOiAoaW5kZXg6IG51bWJlcikgPT4gdm9pZDtcbiAgdXBkYXRlVHJhY2tOb3RlOiAodHJhY2tJbmRleDogbnVtYmVyLCBzdGVwSW5kZXg6IG51bWJlciwgZW5hYmxlZDogYm9vbGVhbikgPT4gdm9pZDtcbn1cblxuaW50ZXJmYWNlIFRyYWNrIHtcbiAgaWQ6IHN0cmluZztcbiAgaW5zdHJ1bWVudDogc3RyaW5nO1xuICBzdGVwczogYm9vbGVhbltdO1xufVxuXG5jb25zdCBzeW50aCA9IG5ldyBUb25lLlBvbHlTeW50aCgpLnRvRGVzdGluYXRpb24oKTtcbmNvbnN0IGRydW1TYW1wbGVyID0gbmV3IFRvbmUuU2FtcGxlcih7XG4gIHVybHM6IHtcbiAgICBDNDogXCJodHRwczovL3RvbmVqcy5naXRodWIuaW8vYXVkaW8vZHJ1bS1zYW1wbGVzL2tpY2subXAzXCIsXG4gICAgRDQ6IFwiaHR0cHM6Ly90b25lanMuZ2l0aHViLmlvL2F1ZGlvL2RydW0tc2FtcGxlcy9zbmFyZS5tcDNcIixcbiAgICBFNDogXCJodHRwczovL3RvbmVqcy5naXRodWIuaW8vYXVkaW8vZHJ1bS1zYW1wbGVzL2hpaGF0Lm1wM1wiLFxuICB9LFxufSkudG9EZXN0aW5hdGlvbigpO1xuXG5leHBvcnQgY29uc3QgdXNlTXVzaWNTdG9yZSA9IGNyZWF0ZTxNdXNpY1N0b3JlPigoc2V0LCBnZXQpID0+ICh7XG4gIGlzUGxheWluZzogZmFsc2UsXG4gIGJwbTogMTIwLFxuICB2b2x1bWU6IC0xMixcbiAgY3VycmVudFRyYWNrOiAwLFxuICB0cmFja3M6IFtcbiAgICB7IGlkOiAnMScsIGluc3RydW1lbnQ6ICdzeW50aCcsIHN0ZXBzOiBBcnJheSgxNikuZmlsbChmYWxzZSkgfSxcbiAgICB7IGlkOiAnMicsIGluc3RydW1lbnQ6ICdkcnVtcycsIHN0ZXBzOiBBcnJheSgxNikuZmlsbChmYWxzZSkgfSxcbiAgXSxcbiAgXG4gIHNldElzUGxheWluZzogKGlzUGxheWluZykgPT4ge1xuICAgIGlmIChpc1BsYXlpbmcpIHtcbiAgICAgIFRvbmUuVHJhbnNwb3J0LnN0YXJ0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIFRvbmUuVHJhbnNwb3J0LnN0b3AoKTtcbiAgICB9XG4gICAgc2V0KHsgaXNQbGF5aW5nIH0pO1xuICB9LFxuICBcbiAgc2V0QnBtOiAoYnBtKSA9PiB7XG4gICAgVG9uZS5UcmFuc3BvcnQuYnBtLnZhbHVlID0gYnBtO1xuICAgIHNldCh7IGJwbSB9KTtcbiAgfSxcbiAgXG4gIHNldFZvbHVtZTogKHZvbHVtZSkgPT4ge1xuICAgIFRvbmUuRGVzdGluYXRpb24udm9sdW1lLnZhbHVlID0gdm9sdW1lO1xuICAgIHNldCh7IHZvbHVtZSB9KTtcbiAgfSxcbiAgXG4gIGFkZFRyYWNrOiAoKSA9PiB7XG4gICAgc2V0KChzdGF0ZSkgPT4gKHtcbiAgICAgIHRyYWNrczogWy4uLnN0YXRlLnRyYWNrcywge1xuICAgICAgICBpZDogRGF0ZS5ub3coKS50b1N0cmluZygpLFxuICAgICAgICBpbnN0cnVtZW50OiAnc3ludGgnLFxuICAgICAgICBzdGVwczogQXJyYXkoMTYpLmZpbGwoZmFsc2UpXG4gICAgICB9XVxuICAgIH0pKTtcbiAgfSxcbiAgXG4gIHJlbW92ZVRyYWNrOiAoaW5kZXgpID0+IHtcbiAgICBzZXQoKHN0YXRlKSA9PiAoe1xuICAgICAgdHJhY2tzOiBzdGF0ZS50cmFja3MuZmlsdGVyKChfLCBpKSA9PiBpICE9PSBpbmRleClcbiAgICB9KSk7XG4gIH0sXG4gIFxuICB1cGRhdGVUcmFja05vdGU6ICh0cmFja0luZGV4LCBzdGVwSW5kZXgsIGVuYWJsZWQpID0+IHtcbiAgICBzZXQoKHN0YXRlKSA9PiAoe1xuICAgICAgdHJhY2tzOiBzdGF0ZS50cmFja3MubWFwKCh0cmFjaywgaSkgPT4gXG4gICAgICAgIGkgPT09IHRyYWNrSW5kZXhcbiAgICAgICAgICA/IHsgLi4udHJhY2ssIHN0ZXBzOiB0cmFjay5zdGVwcy5tYXAoKHN0ZXAsIGopID0+IGogPT09IHN0ZXBJbmRleCA/IGVuYWJsZWQgOiBzdGVwKSB9XG4gICAgICAgICAgOiB0cmFja1xuICAgICAgKVxuICAgIH0pKTtcbiAgfSxcbn0pKTtcblxuLy8gU2V0IHVwIHRoZSBzZXF1ZW5jZXJcblRvbmUuVHJhbnNwb3J0LmJwbS52YWx1ZSA9IDEyMDtcbmxldCBjdXJyZW50U3RlcCA9IDA7XG5cblRvbmUuVHJhbnNwb3J0LnNjaGVkdWxlUmVwZWF0KCh0aW1lKSA9PiB7XG4gIGNvbnN0IHN0b3JlID0gdXNlTXVzaWNTdG9yZS5nZXRTdGF0ZSgpO1xuICBcbiAgc3RvcmUudHJhY2tzLmZvckVhY2goKHRyYWNrLCB0cmFja0luZGV4KSA9PiB7XG4gICAgaWYgKHRyYWNrLnN0ZXBzW2N1cnJlbnRTdGVwXSkge1xuICAgICAgaWYgKHRyYWNrLmluc3RydW1lbnQgPT09ICdkcnVtcycpIHtcbiAgICAgICAgZHJ1bVNhbXBsZXIudHJpZ2dlckF0dGFja1JlbGVhc2UoW1wiQzRcIiwgXCJENFwiLCBcIkU0XCJdW3RyYWNrSW5kZXggJSAzXSwgXCI4blwiLCB0aW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN5bnRoLnRyaWdnZXJBdHRhY2tSZWxlYXNlKFtcIkM0XCIsIFwiRTRcIiwgXCJHNFwiXVt0cmFja0luZGV4ICUgM10sIFwiOG5cIiwgdGltZSk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgXG4gIGN1cnJlbnRTdGVwID0gKGN1cnJlbnRTdGVwICsgMSkgJSAxNjtcbn0sIFwiOG5cIik7Il0sIm5hbWVzIjpbImNyZWF0ZSIsIlRvbmUiLCJzeW50aCIsIlBvbHlTeW50aCIsInRvRGVzdGluYXRpb24iLCJkcnVtU2FtcGxlciIsIlNhbXBsZXIiLCJ1cmxzIiwiQzQiLCJENCIsIkU0IiwidXNlTXVzaWNTdG9yZSIsInNldCIsImdldCIsImlzUGxheWluZyIsImJwbSIsInZvbHVtZSIsImN1cnJlbnRUcmFjayIsInRyYWNrcyIsImlkIiwiaW5zdHJ1bWVudCIsInN0ZXBzIiwiQXJyYXkiLCJmaWxsIiwic2V0SXNQbGF5aW5nIiwiVHJhbnNwb3J0Iiwic3RhcnQiLCJzdG9wIiwic2V0QnBtIiwidmFsdWUiLCJzZXRWb2x1bWUiLCJEZXN0aW5hdGlvbiIsImFkZFRyYWNrIiwic3RhdGUiLCJEYXRlIiwibm93IiwidG9TdHJpbmciLCJyZW1vdmVUcmFjayIsImluZGV4IiwiZmlsdGVyIiwiXyIsImkiLCJ1cGRhdGVUcmFja05vdGUiLCJ0cmFja0luZGV4Iiwic3RlcEluZGV4IiwiZW5hYmxlZCIsIm1hcCIsInRyYWNrIiwic3RlcCIsImoiLCJjdXJyZW50U3RlcCIsInNjaGVkdWxlUmVwZWF0IiwidGltZSIsInN0b3JlIiwiZ2V0U3RhdGUiLCJmb3JFYWNoIiwidHJpZ2dlckF0dGFja1JlbGVhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/musicStore.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NDc5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PauseIcon.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@heroicons/react/24/solid/esm/PauseIcon.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\nfunction PauseIcon(param, svgRef) {\n    let { title, titleId, ...props } = param;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", Object.assign({\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        \"aria-hidden\": \"true\",\n        \"data-slot\": \"icon\",\n        ref: svgRef,\n        \"aria-labelledby\": titleId\n    }, props), title ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n        id: titleId\n    }, title) : null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        d: \"M6.75 5.25a.75.75 0 0 1 .75-.75H9a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H7.5a.75.75 0 0 1-.75-.75V5.25Zm7.5 0A.75.75 0 0 1 15 4.5h1.5a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H15a.75.75 0 0 1-.75-.75V5.25Z\",\n        clipRule: \"evenodd\"\n    }));\n}\n_c = PauseIcon;\nconst ForwardRef = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(PauseIcon);\n_c1 = ForwardRef;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ForwardRef);\nvar _c, _c1;\n$RefreshReg$(_c, \"PauseIcon\");\n$RefreshReg$(_c1, \"ForwardRef\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AaGVyb2ljb25zL3JlYWN0LzI0L3NvbGlkL2VzbS9QYXVzZUljb24uanMiLCJtYXBwaW5ncyI6Ijs7QUFBK0I7QUFDL0IsU0FBU0MsVUFBVSxLQUlsQixFQUFFQyxNQUFNO1FBSlUsRUFDakJDLEtBQUssRUFDTEMsT0FBTyxFQUNQLEdBQUdDLE9BQ0osR0FKa0I7SUFLakIsT0FBTyxXQUFXLEdBQUVMLGdEQUFtQixDQUFDLE9BQU9PLE9BQU9DLE1BQU0sQ0FBQztRQUMzREMsT0FBTztRQUNQQyxTQUFTO1FBQ1RDLE1BQU07UUFDTixlQUFlO1FBQ2YsYUFBYTtRQUNiQyxLQUFLVjtRQUNMLG1CQUFtQkU7SUFDckIsR0FBR0MsUUFBUUYsUUFBUSxXQUFXLEdBQUVILGdEQUFtQixDQUFDLFNBQVM7UUFDM0RhLElBQUlUO0lBQ04sR0FBR0QsU0FBUyxNQUFNLFdBQVcsR0FBRUgsZ0RBQW1CLENBQUMsUUFBUTtRQUN6RGMsVUFBVTtRQUNWQyxHQUFHO1FBQ0hDLFVBQVU7SUFDWjtBQUNGO0tBcEJTZjtBQXFCVCxNQUFNZ0IsYUFBYSxXQUFXLEdBQUdqQiw2Q0FBZ0IsQ0FBQ0M7O0FBQ2xELCtEQUFlZ0IsVUFBVUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGhlcm9pY29ucy9yZWFjdC8yNC9zb2xpZC9lc20vUGF1c2VJY29uLmpzP2MzYjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBQYXVzZUljb24oe1xuICB0aXRsZSxcbiAgdGl0bGVJZCxcbiAgLi4ucHJvcHNcbn0sIHN2Z1JlZikge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgT2JqZWN0LmFzc2lnbih7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICAgIGZpbGw6IFwiY3VycmVudENvbG9yXCIsXG4gICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIixcbiAgICBcImRhdGEtc2xvdFwiOiBcImljb25cIixcbiAgICByZWY6IHN2Z1JlZixcbiAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aXRsZUlkXG4gIH0sIHByb3BzKSwgdGl0bGUgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInRpdGxlXCIsIHtcbiAgICBpZDogdGl0bGVJZFxuICB9LCB0aXRsZSkgOiBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGZpbGxSdWxlOiBcImV2ZW5vZGRcIixcbiAgICBkOiBcIk02Ljc1IDUuMjVhLjc1Ljc1IDAgMCAxIC43NS0uNzVIOWEuNzUuNzUgMCAwIDEgLjc1Ljc1djEzLjVhLjc1Ljc1IDAgMCAxLS43NS43NUg3LjVhLjc1Ljc1IDAgMCAxLS43NS0uNzVWNS4yNVptNy41IDBBLjc1Ljc1IDAgMCAxIDE1IDQuNWgxLjVhLjc1Ljc1IDAgMCAxIC43NS43NXYxMy41YS43NS43NSAwIDAgMS0uNzUuNzVIMTVhLjc1Ljc1IDAgMCAxLS43NS0uNzVWNS4yNVpcIixcbiAgICBjbGlwUnVsZTogXCJldmVub2RkXCJcbiAgfSkpO1xufVxuY29uc3QgRm9yd2FyZFJlZiA9IC8qI19fUFVSRV9fKi8gUmVhY3QuZm9yd2FyZFJlZihQYXVzZUljb24pO1xuZXhwb3J0IGRlZmF1bHQgRm9yd2FyZFJlZjsiXSwibmFtZXMiOlsiUmVhY3QiLCJQYXVzZUljb24iLCJzdmdSZWYiLCJ0aXRsZSIsInRpdGxlSWQiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJPYmplY3QiLCJhc3NpZ24iLCJ4bWxucyIsInZpZXdCb3giLCJmaWxsIiwicmVmIiwiaWQiLCJmaWxsUnVsZSIsImQiLCJjbGlwUnVsZSIsIkZvcndhcmRSZWYiLCJmb3J3YXJkUmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PauseIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PlayIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/@heroicons/react/24/solid/esm/PlayIcon.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\nfunction PlayIcon(param, svgRef) {\n    let { title, titleId, ...props } = param;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", Object.assign({\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        \"aria-hidden\": \"true\",\n        \"data-slot\": \"icon\",\n        ref: svgRef,\n        \"aria-labelledby\": titleId\n    }, props), title ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n        id: titleId\n    }, title) : null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        d: \"M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z\",\n        clipRule: \"evenodd\"\n    }));\n}\n_c = PlayIcon;\nconst ForwardRef = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(PlayIcon);\n_c1 = ForwardRef;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ForwardRef);\nvar _c, _c1;\n$RefreshReg$(_c, \"PlayIcon\");\n$RefreshReg$(_c1, \"ForwardRef\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AaGVyb2ljb25zL3JlYWN0LzI0L3NvbGlkL2VzbS9QbGF5SWNvbi5qcyIsIm1hcHBpbmdzIjoiOztBQUErQjtBQUMvQixTQUFTQyxTQUFTLEtBSWpCLEVBQUVDLE1BQU07UUFKUyxFQUNoQkMsS0FBSyxFQUNMQyxPQUFPLEVBQ1AsR0FBR0MsT0FDSixHQUppQjtJQUtoQixPQUFPLFdBQVcsR0FBRUwsZ0RBQW1CLENBQUMsT0FBT08sT0FBT0MsTUFBTSxDQUFDO1FBQzNEQyxPQUFPO1FBQ1BDLFNBQVM7UUFDVEMsTUFBTTtRQUNOLGVBQWU7UUFDZixhQUFhO1FBQ2JDLEtBQUtWO1FBQ0wsbUJBQW1CRTtJQUNyQixHQUFHQyxRQUFRRixRQUFRLFdBQVcsR0FBRUgsZ0RBQW1CLENBQUMsU0FBUztRQUMzRGEsSUFBSVQ7SUFDTixHQUFHRCxTQUFTLE1BQU0sV0FBVyxHQUFFSCxnREFBbUIsQ0FBQyxRQUFRO1FBQ3pEYyxVQUFVO1FBQ1ZDLEdBQUc7UUFDSEMsVUFBVTtJQUNaO0FBQ0Y7S0FwQlNmO0FBcUJULE1BQU1nQixhQUFhLFdBQVcsR0FBR2pCLDZDQUFnQixDQUFDQzs7QUFDbEQsK0RBQWVnQixVQUFVQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AaGVyb2ljb25zL3JlYWN0LzI0L3NvbGlkL2VzbS9QbGF5SWNvbi5qcz82NjM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gUGxheUljb24oe1xuICB0aXRsZSxcbiAgdGl0bGVJZCxcbiAgLi4ucHJvcHNcbn0sIHN2Z1JlZikge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgT2JqZWN0LmFzc2lnbih7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICAgIGZpbGw6IFwiY3VycmVudENvbG9yXCIsXG4gICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIixcbiAgICBcImRhdGEtc2xvdFwiOiBcImljb25cIixcbiAgICByZWY6IHN2Z1JlZixcbiAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aXRsZUlkXG4gIH0sIHByb3BzKSwgdGl0bGUgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInRpdGxlXCIsIHtcbiAgICBpZDogdGl0bGVJZFxuICB9LCB0aXRsZSkgOiBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGZpbGxSdWxlOiBcImV2ZW5vZGRcIixcbiAgICBkOiBcIk00LjUgNS42NTNjMC0xLjQyNyAxLjUyOS0yLjMzIDIuNzc5LTEuNjQzbDExLjU0IDYuMzQ3YzEuMjk1LjcxMiAxLjI5NSAyLjU3MyAwIDMuMjg2TDcuMjggMTkuOTljLTEuMjUuNjg3LTIuNzc5LS4yMTctMi43NzktMS42NDNWNS42NTNaXCIsXG4gICAgY2xpcFJ1bGU6IFwiZXZlbm9kZFwiXG4gIH0pKTtcbn1cbmNvbnN0IEZvcndhcmRSZWYgPSAvKiNfX1BVUkVfXyovIFJlYWN0LmZvcndhcmRSZWYoUGxheUljb24pO1xuZXhwb3J0IGRlZmF1bHQgRm9yd2FyZFJlZjsiXSwibmFtZXMiOlsiUmVhY3QiLCJQbGF5SWNvbiIsInN2Z1JlZiIsInRpdGxlIiwidGl0bGVJZCIsInByb3BzIiwiY3JlYXRlRWxlbWVudCIsIk9iamVjdCIsImFzc2lnbiIsInhtbG5zIiwidmlld0JveCIsImZpbGwiLCJyZWYiLCJpZCIsImZpbGxSdWxlIiwiZCIsImNsaXBSdWxlIiwiRm9yd2FyZFJlZiIsImZvcndhcmRSZWYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PlayIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PlusIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/@heroicons/react/24/solid/esm/PlusIcon.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\nfunction PlusIcon(param, svgRef) {\n    let { title, titleId, ...props } = param;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", Object.assign({\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        \"aria-hidden\": \"true\",\n        \"data-slot\": \"icon\",\n        ref: svgRef,\n        \"aria-labelledby\": titleId\n    }, props), title ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", {\n        id: titleId\n    }, title) : null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        d: \"M12 3.75a.75.75 0 0 1 .75.75v6.75h6.75a.75.75 0 0 1 0 1.5h-6.75v6.75a.75.75 0 0 1-1.5 0v-6.75H4.5a.75.75 0 0 1 0-1.5h6.75V4.5a.75.75 0 0 1 .75-.75Z\",\n        clipRule: \"evenodd\"\n    }));\n}\n_c = PlusIcon;\nconst ForwardRef = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(PlusIcon);\n_c1 = ForwardRef;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ForwardRef);\nvar _c, _c1;\n$RefreshReg$(_c, \"PlusIcon\");\n$RefreshReg$(_c1, \"ForwardRef\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AaGVyb2ljb25zL3JlYWN0LzI0L3NvbGlkL2VzbS9QbHVzSWNvbi5qcyIsIm1hcHBpbmdzIjoiOztBQUErQjtBQUMvQixTQUFTQyxTQUFTLEtBSWpCLEVBQUVDLE1BQU07UUFKUyxFQUNoQkMsS0FBSyxFQUNMQyxPQUFPLEVBQ1AsR0FBR0MsT0FDSixHQUppQjtJQUtoQixPQUFPLFdBQVcsR0FBRUwsZ0RBQW1CLENBQUMsT0FBT08sT0FBT0MsTUFBTSxDQUFDO1FBQzNEQyxPQUFPO1FBQ1BDLFNBQVM7UUFDVEMsTUFBTTtRQUNOLGVBQWU7UUFDZixhQUFhO1FBQ2JDLEtBQUtWO1FBQ0wsbUJBQW1CRTtJQUNyQixHQUFHQyxRQUFRRixRQUFRLFdBQVcsR0FBRUgsZ0RBQW1CLENBQUMsU0FBUztRQUMzRGEsSUFBSVQ7SUFDTixHQUFHRCxTQUFTLE1BQU0sV0FBVyxHQUFFSCxnREFBbUIsQ0FBQyxRQUFRO1FBQ3pEYyxVQUFVO1FBQ1ZDLEdBQUc7UUFDSEMsVUFBVTtJQUNaO0FBQ0Y7S0FwQlNmO0FBcUJULE1BQU1nQixhQUFhLFdBQVcsR0FBR2pCLDZDQUFnQixDQUFDQzs7QUFDbEQsK0RBQWVnQixVQUFVQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AaGVyb2ljb25zL3JlYWN0LzI0L3NvbGlkL2VzbS9QbHVzSWNvbi5qcz9jOWE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gUGx1c0ljb24oe1xuICB0aXRsZSxcbiAgdGl0bGVJZCxcbiAgLi4ucHJvcHNcbn0sIHN2Z1JlZikge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgT2JqZWN0LmFzc2lnbih7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICAgIGZpbGw6IFwiY3VycmVudENvbG9yXCIsXG4gICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIixcbiAgICBcImRhdGEtc2xvdFwiOiBcImljb25cIixcbiAgICByZWY6IHN2Z1JlZixcbiAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aXRsZUlkXG4gIH0sIHByb3BzKSwgdGl0bGUgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInRpdGxlXCIsIHtcbiAgICBpZDogdGl0bGVJZFxuICB9LCB0aXRsZSkgOiBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGZpbGxSdWxlOiBcImV2ZW5vZGRcIixcbiAgICBkOiBcIk0xMiAzLjc1YS43NS43NSAwIDAgMSAuNzUuNzV2Ni43NWg2Ljc1YS43NS43NSAwIDAgMSAwIDEuNWgtNi43NXY2Ljc1YS43NS43NSAwIDAgMS0xLjUgMHYtNi43NUg0LjVhLjc1Ljc1IDAgMCAxIDAtMS41aDYuNzVWNC41YS43NS43NSAwIDAgMSAuNzUtLjc1WlwiLFxuICAgIGNsaXBSdWxlOiBcImV2ZW5vZGRcIlxuICB9KSk7XG59XG5jb25zdCBGb3J3YXJkUmVmID0gLyojX19QVVJFX18qLyBSZWFjdC5mb3J3YXJkUmVmKFBsdXNJY29uKTtcbmV4cG9ydCBkZWZhdWx0IEZvcndhcmRSZWY7Il0sIm5hbWVzIjpbIlJlYWN0IiwiUGx1c0ljb24iLCJzdmdSZWYiLCJ0aXRsZSIsInRpdGxlSWQiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJPYmplY3QiLCJhc3NpZ24iLCJ4bWxucyIsInZpZXdCb3giLCJmaWxsIiwicmVmIiwiaWQiLCJmaWxsUnVsZSIsImQiLCJjbGlwUnVsZSIsIkZvcndhcmRSZWYiLCJmb3J3YXJkUmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@heroicons/react/24/solid/esm/PlusIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tone/build/Tone.js":
/*!*****************************************!*\
  !*** ./node_modules/tone/build/Tone.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/*! For license information please see Tone.js.LICENSE.txt */\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.Tone=e():t.Tone=e()}(\"undefined\"!=typeof self?self:undefined,(()=>(()=>{var t={382:function(t,e,s){!function(t,e,s,n){\"use strict\";var i=function(t,e,s){return{endTime:e,insertTime:s,type:\"exponentialRampToValue\",value:t}},o=function(t,e,s){return{endTime:e,insertTime:s,type:\"linearRampToValue\",value:t}},r=function(t,e){return{startTime:e,type:\"setValue\",value:t}},a=function(t,e,s){return{duration:s,startTime:e,type:\"setValueCurve\",values:t}},c=function(t,e,s){var n=s.startTime,i=s.target,o=s.timeConstant;return i+(e-i)*Math.exp((n-t)/o)},h=function(t){return\"exponentialRampToValue\"===t.type},l=function(t){return\"linearRampToValue\"===t.type},u=function(t){return h(t)||l(t)},p=function(t){return\"setValue\"===t.type},d=function(t){return\"setValueCurve\"===t.type},f=function t(e,s,n,i){var o=e[s];return void 0===o?i:u(o)||p(o)?o.value:d(o)?o.values[o.values.length-1]:c(n,t(e,s-1,o.startTime,i),o)},_=function(t,e,s,n,i){return void 0===s?[n.insertTime,i]:u(s)?[s.endTime,s.value]:p(s)?[s.startTime,s.value]:d(s)?[s.startTime+s.duration,s.values[s.values.length-1]]:[s.startTime,f(t,e-1,s.startTime,i)]},m=function(t){return\"cancelAndHold\"===t.type},g=function(t){return\"cancelScheduledValues\"===t.type},v=function(t){return m(t)||g(t)?t.cancelTime:h(t)||l(t)?t.endTime:t.startTime},y=function(t,e,s,n){var i=n.endTime,o=n.value;return s===o?o:0<s&&0<o||s<0&&o<0?s*Math.pow(o/s,(t-e)/(i-e)):0},x=function(t,e,s,n){return s+(t-e)/(n.endTime-e)*(n.value-s)},w=function(t,e){var s=e.duration,n=e.startTime,i=e.values;return function(t,e){var s=Math.floor(e),n=Math.ceil(e);return s===n?t[s]:(1-(e-s))*t[s]+(1-(n-e))*t[n]}(i,(t-n)/s*(i.length-1))},b=function(t){return\"setTarget\"===t.type},T=function(){return n((function t(e){s(this,t),this._automationEvents=[],this._currenTime=0,this._defaultValue=e}),[{key:Symbol.iterator,value:function(){return this._automationEvents[Symbol.iterator]()}},{key:\"add\",value:function(t){var e=v(t);if(m(t)||g(t)){var s=this._automationEvents.findIndex((function(s){return g(t)&&d(s)?s.startTime+s.duration>=e:v(s)>=e})),n=this._automationEvents[s];if(-1!==s&&(this._automationEvents=this._automationEvents.slice(0,s)),m(t)){var c=this._automationEvents[this._automationEvents.length-1];if(void 0!==n&&u(n)){if(void 0!==c&&b(c))throw new Error(\"The internal list is malformed.\");var p=void 0===c?n.insertTime:d(c)?c.startTime+c.duration:v(c),f=void 0===c?this._defaultValue:d(c)?c.values[c.values.length-1]:c.value,_=h(n)?y(e,p,f,n):x(e,p,f,n),w=h(n)?i(_,e,this._currenTime):o(_,e,this._currenTime);this._automationEvents.push(w)}if(void 0!==c&&b(c)&&this._automationEvents.push(r(this.getValue(e),e)),void 0!==c&&d(c)&&c.startTime+c.duration>e){var T=e-c.startTime,S=(c.values.length-1)/c.duration,k=Math.max(2,1+Math.ceil(T*S)),A=T/(k-1)*S,C=c.values.slice(0,k);if(A<1)for(var D=1;D<k;D+=1){var O=A*D%1;C[D]=c.values[D-1]*(1-O)+c.values[D]*O}this._automationEvents[this._automationEvents.length-1]=a(C,c.startTime,T)}}}else{var M=this._automationEvents.findIndex((function(t){return v(t)>e})),E=-1===M?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[M-1];if(void 0!==E&&d(E)&&v(E)+E.duration>e)return!1;var R=h(t)?i(t.value,t.endTime,this._currenTime):l(t)?o(t.value,e,this._currenTime):t;if(-1===M)this._automationEvents.push(R);else{if(d(t)&&e+t.duration>v(this._automationEvents[M]))return!1;this._automationEvents.splice(M,0,R)}}return!0}},{key:\"flush\",value:function(t){var e=this._automationEvents.findIndex((function(e){return v(e)>t}));if(e>1){var s=this._automationEvents.slice(e-1),n=s[0];b(n)&&s.unshift(r(f(this._automationEvents,e-2,n.startTime,this._defaultValue),n.startTime)),this._automationEvents=s}}},{key:\"getValue\",value:function(t){if(0===this._automationEvents.length)return this._defaultValue;var s=this._automationEvents.findIndex((function(e){return v(e)>t})),n=this._automationEvents[s],i=(-1===s?this._automationEvents.length:s)-1,o=this._automationEvents[i];if(void 0!==o&&b(o)&&(void 0===n||!u(n)||n.insertTime>t))return c(t,f(this._automationEvents,i-1,o.startTime,this._defaultValue),o);if(void 0!==o&&p(o)&&(void 0===n||!u(n)))return o.value;if(void 0!==o&&d(o)&&(void 0===n||!u(n)||o.startTime+o.duration>t))return t<o.startTime+o.duration?w(t,o):o.values[o.values.length-1];if(void 0!==o&&u(o)&&(void 0===n||!u(n)))return o.value;if(void 0!==n&&h(n)){var r=_(this._automationEvents,i,o,n,this._defaultValue),a=e(r,2),m=a[0],g=a[1];return y(t,m,g,n)}if(void 0!==n&&l(n)){var T=_(this._automationEvents,i,o,n,this._defaultValue),S=e(T,2),k=S[0],A=S[1];return x(t,k,A,n)}return this._defaultValue}}])}();t.AutomationEventList=T,t.createCancelAndHoldAutomationEvent=function(t){return{cancelTime:t,type:\"cancelAndHold\"}},t.createCancelScheduledValuesAutomationEvent=function(t){return{cancelTime:t,type:\"cancelScheduledValues\"}},t.createExponentialRampToValueAutomationEvent=function(t,e){return{endTime:e,type:\"exponentialRampToValue\",value:t}},t.createLinearRampToValueAutomationEvent=function(t,e){return{endTime:e,type:\"linearRampToValue\",value:t}},t.createSetTargetAutomationEvent=function(t,e,s){return{startTime:e,target:t,timeConstant:s,type:\"setTarget\"}},t.createSetValueAutomationEvent=r,t.createSetValueCurveAutomationEvent=a}(e,s(424),s(690),s(728))},897:t=>{t.exports=function(t,e){(null==e||e>t.length)&&(e=t.length);for(var s=0,n=new Array(e);s<e;s++)n[s]=t[s];return n},t.exports.__esModule=!0,t.exports.default=t.exports},372:t=>{t.exports=function(t){if(Array.isArray(t))return t},t.exports.__esModule=!0,t.exports.default=t.exports},690:t=>{t.exports=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},t.exports.__esModule=!0,t.exports.default=t.exports},728:(t,e,s)=>{var n=s(62);function i(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,n(i.key),i)}}t.exports=function(t,e,s){return e&&i(t.prototype,e),s&&i(t,s),Object.defineProperty(t,\"prototype\",{writable:!1}),t},t.exports.__esModule=!0,t.exports.default=t.exports},872:t=>{t.exports=function(t,e){var s=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=s){var n,i,o,r,a=[],c=!0,h=!1;try{if(o=(s=s.call(t)).next,0===e){if(Object(s)!==s)return;c=!1}else for(;!(c=(n=o.call(s)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(t){h=!0,i=t}finally{try{if(!c&&null!=s.return&&(r=s.return(),Object(r)!==r))return}finally{if(h)throw i}}return a}},t.exports.__esModule=!0,t.exports.default=t.exports},218:t=>{t.exports=function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")},t.exports.__esModule=!0,t.exports.default=t.exports},424:(t,e,s)=>{var n=s(372),i=s(872),o=s(116),r=s(218);t.exports=function(t,e){return n(t)||i(t,e)||o(t,e)||r()},t.exports.__esModule=!0,t.exports.default=t.exports},36:(t,e,s)=>{var n=s(698).default;t.exports=function(t,e){if(\"object\"!=n(t)||!t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var i=s.call(t,e||\"default\");if(\"object\"!=n(i))return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)},t.exports.__esModule=!0,t.exports.default=t.exports},62:(t,e,s)=>{var n=s(698).default,i=s(36);t.exports=function(t){var e=i(t,\"string\");return\"symbol\"==n(e)?e:e+\"\"},t.exports.__esModule=!0,t.exports.default=t.exports},698:t=>{function e(s){return t.exports=e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},t.exports.__esModule=!0,t.exports.default=t.exports,e(s)}t.exports=e,t.exports.__esModule=!0,t.exports.default=t.exports},116:(t,e,s)=>{var n=s(897);t.exports=function(t,e){if(t){if(\"string\"==typeof t)return n(t,e);var s=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===s&&t.constructor&&(s=t.constructor.name),\"Map\"===s||\"Set\"===s?Array.from(t):\"Arguments\"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?n(t,e):void 0}},t.exports.__esModule=!0,t.exports.default=t.exports}},e={};function s(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n].call(o.exports,o,o.exports,s),o.exports}s.d=(t,e)=>{for(var n in e)s.o(e,n)&&!s.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),s.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};return(()=>{\"use strict\";s.r(n),s.d(n,{AMOscillator:()=>$o,AMSynth:()=>Cr,Abs:()=>pr,Add:()=>nr,AmplitudeEnvelope:()=>Sr,Analyser:()=>Xa,AudioToGain:()=>Xo,AutoFilter:()=>ua,AutoPanner:()=>da,AutoWah:()=>_a,BaseContext:()=>Ci,BiquadFilter:()=>Dr,BitCrusher:()=>ga,Buffer:()=>Dc,BufferSource:()=>Mc,Buffers:()=>Oc,Channel:()=>sc,Chebyshev:()=>ya,Chorus:()=>Sa,Clock:()=>vo,Compressor:()=>cc,Context:()=>Di,Convolver:()=>fc,CrossFade:()=>ca,DCMeter:()=>Ja,Delay:()=>yo,Destination:()=>yc,Distortion:()=>ka,Draw:()=>Sc,DuoSynth:()=>Rr,EQ3:()=>dc,Emitter:()=>Ai,Envelope:()=>xr,FFT:()=>Ha,FMOscillator:()=>Ho,FMSynth:()=>qr,FatOscillator:()=>Ko,FeedbackCombFilter:()=>Br,FeedbackDelay:()=>Ca,Filter:()=>Or,Follower:()=>fa,Freeverb:()=>Ra,Frequency:()=>Ji,FrequencyClass:()=>Yi,FrequencyEnvelope:()=>Mr,FrequencyShifter:()=>Oa,Gain:()=>ho,GainToAudio:()=>dr,Gate:()=>hc,GrainPlayer:()=>ur,GreaterThan:()=>gr,GreaterThanZero:()=>mr,IntervalTimeline:()=>Co,JCReverb:()=>Va,LFO:()=>rr,Limiter:()=>lc,Listener:()=>bc,Loop:()=>$r,LowpassCombFilter:()=>Gr,Master:()=>xc,MembraneSynth:()=>Vr,Merge:()=>wa,MetalSynth:()=>Ir,Meter:()=>$a,MidSideCompressor:()=>uc,MidSideMerge:()=>Ba,MidSideSplit:()=>Wa,Midi:()=>To,MidiClass:()=>bo,Mono:()=>nc,MonoSynth:()=>Er,MultibandCompressor:()=>pc,MultibandSplit:()=>ic,Multiply:()=>Yo,Negate:()=>fr,Noise:()=>Lo,NoiseSynth:()=>Nr,Offline:()=>xo,OfflineContext:()=>qi,OmniOscillator:()=>sr,OnePoleFilter:()=>Ur,Oscillator:()=>Zo,PWMOscillator:()=>tr,PanVol:()=>ec,Panner:()=>pa,Panner3D:()=>rc,Param:()=>no,Part:()=>Hr,Pattern:()=>ra,Phaser:()=>La,PingPongDelay:()=>Pa,PitchShift:()=>ja,Player:()=>hr,Players:()=>lr,PluckSynth:()=>Qr,PolySynth:()=>Zr,Pow:()=>Fo,PulseOscillator:()=>Jo,Recorder:()=>ac,Reverb:()=>za,Sampler:()=>Xr,Scale:()=>ir,ScaleExp:()=>vr,Sequence:()=>aa,Signal:()=>po,Solo:()=>tc,Split:()=>xa,StateTimeline:()=>so,StereoWidener:()=>Ga,Subtract:()=>_r,SyncedSignal:()=>yr,Synth:()=>kr,Ticks:()=>ko,TicksClass:()=>So,Time:()=>Xi,TimeClass:()=>Zi,Timeline:()=>wi,ToneAudioBuffer:()=>Ri,ToneAudioBuffers:()=>wo,ToneAudioNode:()=>io,ToneBufferSource:()=>jo,ToneEvent:()=>Yr,ToneOscillatorNode:()=>Qo,Transport:()=>gc,TransportTime:()=>to,TransportTimeClass:()=>Ki,Tremolo:()=>Qa,Unit:()=>e,UserMedia:()=>Uo,Vibrato:()=>Za,Volume:()=>Oo,WaveShaper:()=>qo,Waveform:()=>Ka,Zero:()=>or,connect:()=>ro,connectSeries:()=>oo,connectSignal:()=>fo,context:()=>Ac,dbToGain:()=>ji,debug:()=>t,defaultArg:()=>pi,disconnect:()=>ao,fanIn:()=>co,ftom:()=>Bi,gainToDb:()=>Li,getContext:()=>Vi,getDestination:()=>wc,getDraw:()=>kc,getListener:()=>Tc,getTransport:()=>vc,immediate:()=>mc,intervalToFrequencyRatio:()=>zi,isArray:()=>Ln,isBoolean:()=>jn,isDefined:()=>In,isFunction:()=>Vn,isNote:()=>Wn,isNumber:()=>Nn,isObject:()=>Pn,isString:()=>zn,isUndef:()=>Fn,loaded:()=>Cc,mtof:()=>Gi,now:()=>_c,optionsFromArguments:()=>ui,setContext:()=>Ni,start:()=>Pi,supported:()=>qn,version:()=>i});var t={};s.r(t),s.d(t,{assert:()=>Bn,assertContextRunning:()=>Gn,assertRange:()=>Un,assertUsedScheduleTime:()=>Yn,enterScheduledCallback:()=>Xn,log:()=>Jn,setLogger:()=>Hn,warn:()=>Kn});var e={};s.r(e);const i=\"14.9.17\";var o=s(382);const r=new WeakSet,a=new WeakMap,c=new WeakMap,h=new WeakMap,l=new WeakMap,u=new WeakMap,p=new WeakMap,d=new WeakMap,f=new WeakMap,_=new WeakMap,m={construct:()=>m},g=/^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/,v=(t,e)=>{const s=[];let n=t.replace(/^[\\s]+/,\"\"),i=n.match(g);for(;null!==i;){const t=i[1].slice(1,-1),o=i[0].replace(/([\\s]+)?;?$/,\"\").replace(t,new URL(t,e).toString());s.push(o),n=n.slice(i[0].length).replace(/^[\\s]+/,\"\"),i=n.match(g)}return[s.join(\";\"),n]},y=t=>{if(void 0!==t&&!Array.isArray(t))throw new TypeError(\"The parameterDescriptors property of given value for processorCtor is not an array.\")},x=t=>{if(!(t=>{try{new new Proxy(t,m)}catch{return!1}return!0})(t))throw new TypeError(\"The given value for processorCtor should be a constructor.\");if(null===t.prototype||\"object\"!=typeof t.prototype)throw new TypeError(\"The given value for processorCtor should have a prototype.\")},w=(t,e)=>{const s=t.get(e);if(void 0===s)throw new Error(\"A value with the given key could not be found.\");return s},b=(t,e)=>{const s=Array.from(t).filter(e);if(s.length>1)throw Error(\"More than one element was found.\");if(0===s.length)throw Error(\"No element was found.\");const[n]=s;return t.delete(n),n},T=(t,e,s,n)=>{const i=w(t,e),o=b(i,(t=>t[0]===s&&t[1]===n));return 0===i.size&&t.delete(e),o},S=t=>w(p,t),k=t=>{if(r.has(t))throw new Error(\"The AudioNode is already stored.\");r.add(t),S(t).forEach((t=>t(!0)))},A=t=>\"port\"in t,C=t=>{if(!r.has(t))throw new Error(\"The AudioNode is not stored.\");r.delete(t),S(t).forEach((t=>t(!1)))},D=(t,e)=>{!A(t)&&e.every((t=>0===t.size))&&C(t)},O={channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},M=(t,e)=>t.context===e,E=t=>{try{t.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},R=()=>new DOMException(\"\",\"IndexSizeError\"),q=t=>{var e;t.getChannelData=(e=t.getChannelData,s=>{try{return e.call(t,s)}catch(t){if(12===t.code)throw R();throw t}})},F={numberOfChannels:1},I=-34028234663852886e22,V=-I,N=t=>r.has(t),P={buffer:null,channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},j=t=>w(a,t),L=t=>w(h,t),z=(t,e)=>{const{activeInputs:s}=j(t);s.forEach((s=>s.forEach((([s])=>{e.includes(t)||z(s,[...e,t])}))));const n=(t=>\"playbackRate\"in t)(t)?[t.playbackRate]:A(t)?Array.from(t.parameters.values()):(t=>\"frequency\"in t&&\"gain\"in t)(t)?[t.Q,t.detune,t.frequency,t.gain]:(t=>\"offset\"in t)(t)?[t.offset]:(t=>!(\"frequency\"in t)&&\"gain\"in t)(t)?[t.gain]:(t=>\"detune\"in t&&\"frequency\"in t)(t)?[t.detune,t.frequency]:(t=>\"pan\"in t)(t)?[t.pan]:[];for(const t of n){const s=L(t);void 0!==s&&s.activeInputs.forEach((([t])=>z(t,e)))}N(t)&&C(t)},W=t=>{z(t.destination,[])},B=t=>\"context\"in t,U=t=>B(t[0]),G=(t,e,s,n)=>{for(const e of t)if(s(e)){if(n)return!1;throw Error(\"The set contains at least one similar element.\")}return t.add(e),!0},Q=(t,e,[s,n],i)=>{G(t,[e,s,n],(t=>t[0]===e&&t[1]===s),i)},Z=(t,[e,s,n],i)=>{const o=t.get(e);void 0===o?t.set(e,new Set([[s,n]])):G(o,[s,n],(t=>t[0]===s),i)},X=t=>\"inputs\"in t,Y=(t,e,s,n)=>{if(X(e)){const i=e.inputs[n];return t.connect(i,s,0),[i,s,0]}return t.connect(e,s,n),[e,s,n]},$=(t,e,s)=>{for(const n of t)if(n[0]===e&&n[1]===s)return t.delete(n),n;return null},H=(t,e)=>{if(!S(t).delete(e))throw new Error(\"Missing the expected event listener.\")},J=(t,e,s)=>{const n=w(t,e),i=b(n,(t=>t[0]===s));return 0===n.size&&t.delete(e),i},K=(t,e,s,n)=>{X(e)?t.disconnect(e.inputs[n],s,0):t.disconnect(e,s,n)},tt=t=>w(c,t),et=t=>w(l,t),st=t=>d.has(t),nt=t=>!r.has(t),it=(t,e)=>new Promise((s=>{if(null!==e)s(!0);else{const e=t.createScriptProcessor(256,1,1),n=t.createGain(),i=t.createBuffer(1,2,44100),o=i.getChannelData(0);o[0]=1,o[1]=1;const r=t.createBufferSource();r.buffer=i,r.loop=!0,r.connect(e).connect(t.destination),r.connect(n),r.disconnect(n),e.onaudioprocess=n=>{const i=n.inputBuffer.getChannelData(0);Array.prototype.some.call(i,(t=>1===t))?s(!0):s(!1),r.stop(),e.onaudioprocess=null,r.disconnect(e),e.disconnect(t.destination)},r.start()}})),ot=(t,e)=>{const s=new Map;for(const e of t)for(const t of e){const e=s.get(t);s.set(t,void 0===e?1:e+1)}s.forEach(((t,s)=>e(s,t)))},rt=t=>\"context\"in t,at=t=>{const e=new Map;t.connect=(t=>(s,n=0,i=0)=>{const o=rt(s)?t(s,n,i):t(s,n),r=e.get(s);return void 0===r?e.set(s,[{input:i,output:n}]):r.every((t=>t.input!==i||t.output!==n))&&r.push({input:i,output:n}),o})(t.connect.bind(t)),t.disconnect=(s=>(n,i,o)=>{if(s.apply(t),void 0===n)e.clear();else if(\"number\"==typeof n)for(const[t,s]of e){const i=s.filter((t=>t.output!==n));0===i.length?e.delete(t):e.set(t,i)}else if(e.has(n))if(void 0===i)e.delete(n);else{const t=e.get(n);if(void 0!==t){const s=t.filter((t=>t.output!==i&&(t.input!==o||void 0===o)));0===s.length?e.delete(n):e.set(n,s)}}for(const[s,n]of e)n.forEach((e=>{rt(s)?t.connect(s,e.output,e.input):t.connect(s,e.output)}))})(t.disconnect)},ct=(t,e,s,n,i)=>{const[o,r]=((t,e,s,n)=>{const{activeInputs:i,passiveInputs:o}=j(e),r=$(i[n],t,s);return null===r?[T(o,t,s,n)[2],!1]:[r[2],!0]})(t,s,n,i);if(null!==o&&(H(t,o),!r||e||st(t)||K(tt(t),tt(s),n,i)),N(s)){const{activeInputs:t}=j(s);D(s,t)}},ht=(t,e,s,n)=>{const[i,o]=((t,e,s)=>{const{activeInputs:n,passiveInputs:i}=L(e),o=$(n,t,s);return null===o?[J(i,t,s)[1],!1]:[o[2],!0]})(t,s,n);null!==i&&(H(t,i),!o||e||st(t)||tt(t).disconnect(et(s),n))};class lt{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach(((s,n)=>t.call(e,s,n,this)))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const ut={channelCount:2,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}};function pt(t,e,s,n,i){if(\"function\"==typeof t.copyFromChannel)0===e[s].byteLength&&(e[s]=new Float32Array(128)),t.copyFromChannel(e[s],n,i);else{const o=t.getChannelData(n);if(0===e[s].byteLength)e[s]=o.slice(i,i+128);else{const t=new Float32Array(o.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);e[s].set(t)}}}const dt=(t,e,s,n,i)=>{\"function\"==typeof t.copyToChannel?0!==e[s].byteLength&&t.copyToChannel(e[s],n,i):0!==e[s].byteLength&&t.getChannelData(n).set(e[s],i)},ft=(t,e)=>{const s=[];for(let n=0;n<t;n+=1){const t=[],i=\"number\"==typeof e?e:e[n];for(let e=0;e<i;e+=1)t.push(new Float32Array(128));s.push(t)}return s},_t=async(t,e,s,n,i,o,r)=>{const a=null===e?128*Math.ceil(t.context.length/128):e.length,c=n.channelCount*n.numberOfInputs,h=i.reduce(((t,e)=>t+e),0),l=0===h?null:s.createBuffer(h,a,s.sampleRate);if(void 0===o)throw new Error(\"Missing the processor constructor.\");const u=j(t),p=await((t,e)=>{const s=w(_,t),n=tt(e);return w(s,n)})(s,t),d=ft(n.numberOfInputs,n.channelCount),f=ft(n.numberOfOutputs,i),m=Array.from(t.parameters.keys()).reduce(((t,e)=>({...t,[e]:new Float32Array(128)})),{});for(let h=0;h<a;h+=128){if(n.numberOfInputs>0&&null!==e)for(let t=0;t<n.numberOfInputs;t+=1)for(let s=0;s<n.channelCount;s+=1)pt(e,d[t],s,s,h);void 0!==o.parameterDescriptors&&null!==e&&o.parameterDescriptors.forEach((({name:t},s)=>{pt(e,m,t,c+s,h)}));for(let t=0;t<n.numberOfInputs;t+=1)for(let e=0;e<i[t];e+=1)0===f[t][e].byteLength&&(f[t][e]=new Float32Array(128));try{const t=d.map(((t,e)=>0===u.activeInputs[e].size?[]:t)),e=r(h/s.sampleRate,s.sampleRate,(()=>p.process(t,f,m)));if(null!==l)for(let t=0,e=0;t<n.numberOfOutputs;t+=1){for(let s=0;s<i[t];s+=1)dt(l,f[t],s,e+s,h);e+=i[t]}if(!e)break}catch(e){t.dispatchEvent(new ErrorEvent(\"processorerror\",{colno:e.colno,filename:e.filename,lineno:e.lineno,message:e.message}));break}}return l},mt={Q:1,channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",detune:0,frequency:350,gain:0,type:\"lowpass\"},gt={channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:6},vt={channelCount:6,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",numberOfOutputs:6},yt={channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",offset:1},xt={buffer:null,channelCount:2,channelCountMode:\"clamped-max\",channelInterpretation:\"speakers\",disableNormalization:!1},wt=t=>{const{port1:e,port2:s}=new MessageChannel;return new Promise((n=>{const i=()=>{s.onmessage=null,e.close(),s.close(),n()};s.onmessage=()=>i();try{e.postMessage(t,[t])}catch{}finally{i()}}))},bt={channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",delayTime:0,maxDelayTime:1},Tt=(t,e,s)=>{const n=e[s];if(void 0===n)throw t();return n},St={attack:.003,channelCount:2,channelCountMode:\"clamped-max\",channelInterpretation:\"speakers\",knee:30,ratio:12,release:.25,threshold:-24},kt={channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",gain:1},At=()=>new DOMException(\"\",\"InvalidStateError\"),Ct=()=>new DOMException(\"\",\"InvalidAccessError\"),Dt={channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\"},Ot=(t,e,s,n,i,o,r,a,c,h,l)=>{const u=h.length;let p=a;for(let a=0;a<u;a+=1){let u=s[0]*h[a];for(let e=1;e<i;e+=1){const n=p-e&c-1;u+=s[e]*o[n],u-=t[e]*r[n]}for(let t=i;t<n;t+=1)u+=s[t]*o[p-t&c-1];for(let s=i;s<e;s+=1)u-=t[s]*r[p-s&c-1];o[p]=h[a],r[p]=u,p=p+1&c-1,l[a]=u}return p},Mt={channelCount:2,channelCountMode:\"explicit\",channelInterpretation:\"speakers\"},Et=t=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const s=t.decodeAudioData(e.buffer,(()=>{}));return void 0!==s&&(s.catch((()=>{})),!0)}catch{}return!1},Rt=(t,e,s)=>{const n=e[s];void 0!==n&&n!==t[s]&&(t[s]=n)},qt=(t,e)=>{Rt(t,e,\"channelCount\"),Rt(t,e,\"channelCountMode\"),Rt(t,e,\"channelInterpretation\")},Ft=t=>\"function\"==typeof t.getFloatTimeDomainData,It=(t,e,s)=>{const n=e[s];void 0!==n&&n!==t[s].value&&(t[s].value=n)},Vt=t=>{t.start=(e=>(s=0,n=0,i)=>{if(\"number\"==typeof i&&i<0||n<0||s<0)throw new RangeError(\"The parameters can't be negative.\");e.call(t,s,n,i)})(t.start)},Nt=t=>{var e;t.stop=(e=t.stop,(s=0)=>{if(s<0)throw new RangeError(\"The parameter can't be negative.\");e.call(t,s)})},Pt=(t,e)=>null===t?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(t*e))))),jt=(t,e)=>{const s=t.createBiquadFilter();return qt(s,e),It(s,e,\"Q\"),It(s,e,\"detune\"),It(s,e,\"frequency\"),It(s,e,\"gain\"),Rt(s,e,\"type\"),s},Lt=(t,e)=>{const s=t.createChannelSplitter(e.numberOfOutputs);return qt(s,e),(t=>{const e=t.numberOfOutputs;Object.defineProperty(t,\"channelCount\",{get:()=>e,set:t=>{if(t!==e)throw At()}}),Object.defineProperty(t,\"channelCountMode\",{get:()=>\"explicit\",set:t=>{if(\"explicit\"!==t)throw At()}}),Object.defineProperty(t,\"channelInterpretation\",{get:()=>\"discrete\",set:t=>{if(\"discrete\"!==t)throw At()}})})(s),s},zt=(t,e)=>(t.connect=e.connect.bind(e),t.disconnect=e.disconnect.bind(e),t),Wt=(t,e)=>{const s=t.createDelay(e.maxDelayTime);return qt(s,e),It(s,e,\"delayTime\"),s},Bt=(t,e)=>{const s=t.createGain();return qt(s,e),It(s,e,\"gain\"),s};function Ut(t,e){const s=e[0]*e[0]+e[1]*e[1];return[(t[0]*e[0]+t[1]*e[1])/s,(t[1]*e[0]-t[0]*e[1])/s]}function Gt(t,e){let s=[0,0];for(let o=t.length-1;o>=0;o-=1)i=e,s=[(n=s)[0]*i[0]-n[1]*i[1],n[0]*i[1]+n[1]*i[0]],s[0]+=t[o];var n,i;return s}const Qt=(t,e,s,n)=>t.createScriptProcessor(e,s,n),Zt=()=>new DOMException(\"\",\"NotSupportedError\"),Xt={numberOfChannels:1},Yt={channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",detune:0,frequency:440,periodicWave:void 0,type:\"sine\"},$t={channelCount:2,channelCountMode:\"clamped-max\",channelInterpretation:\"speakers\",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:\"inverse\",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:\"equalpower\",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},Ht={disableNormalization:!1},Jt={channelCount:2,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",pan:0},Kt=()=>new DOMException(\"\",\"UnknownError\"),te={channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",curve:null,oversample:\"none\"},ee=(t,e,s)=>void 0===t.copyFromChannel?t.getChannelData(s)[0]:(t.copyFromChannel(e,s),e[0]),se=t=>{if(null===t)return!1;const e=t.length;return e%2!=0?0!==t[Math.floor(e/2)]:t[e/2-1]+t[e/2]!==0},ne=(t,e,s,n)=>{let i=t;for(;!i.hasOwnProperty(e);)i=Object.getPrototypeOf(i);const{get:o,set:r}=Object.getOwnPropertyDescriptor(i,e);Object.defineProperty(t,e,{get:s(o),set:n(r)})},ie=(t,e,s)=>{try{t.setValueAtTime(e,s)}catch(n){if(9!==n.code)throw n;ie(t,e,s+1e-7)}},oe=t=>{const e=t.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},re=t=>{const e=t.createBuffer(1,1,44100),s=t.createBufferSource();s.buffer=e,s.start(),s.stop();try{return s.stop(),!0}catch{return!1}},ae=t=>{const e=t.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},ce=()=>{try{new DOMException}catch{return!1}return!0},he=()=>new Promise((t=>{const e=new ArrayBuffer(0),{port1:s,port2:n}=new MessageChannel;s.onmessage=({data:e})=>t(null!==e),n.postMessage(e,[e])})),le=(t,e)=>{const s=e.createGain();t.connect(s);const n=(e=>()=>{e.call(t,s),t.removeEventListener(\"ended\",n)})(t.disconnect);t.addEventListener(\"ended\",n),zt(t,s),t.stop=(e=>{let n=!1;return(i=0)=>{if(n)try{e.call(t,i)}catch{s.gain.setValueAtTime(0,i)}else e.call(t,i),n=!0}})(t.stop)},ue=(t,e)=>s=>{const n={value:t};return Object.defineProperties(s,{currentTarget:n,target:n}),\"function\"==typeof e?e.call(t,s):e.handleEvent.call(t,s)},pe=(t=>(e,s,[n,i,o],r)=>{t(e[i],[s,n,o],(t=>t[0]===s&&t[1]===n),r)})(G),de=(t=>(e,s,[n,i,o],r)=>{const a=e.get(n);void 0===a?e.set(n,new Set([[i,s,o]])):t(a,[i,s,o],(t=>t[0]===i&&t[1]===s),r)})(G),fe=(t=>(e,s,n,i)=>t(e[i],(t=>t[0]===s&&t[1]===n)))(b),_e=new WeakMap,me=(t=>e=>{var s;return null!==(s=t.get(e))&&void 0!==s?s:0})(_e),ge=(ve=new Map,ye=new WeakMap,(t,e)=>{const s=ye.get(t);if(void 0!==s)return s;const n=ve.get(t);if(void 0!==n)return n;try{const s=e();return s instanceof Promise?(ve.set(t,s),s.catch((()=>!1)).then((e=>(ve.delete(t),ye.set(t,e),e)))):(ye.set(t,s),s)}catch{return ye.set(t,!1),!1}});var ve,ye;const xe=\"undefined\"==typeof window?null:window,we=((t,e)=>(s,n)=>{const i=s.createAnalyser();if(qt(i,n),!(n.maxDecibels>n.minDecibels))throw e();return Rt(i,n,\"fftSize\"),Rt(i,n,\"maxDecibels\"),Rt(i,n,\"minDecibels\"),Rt(i,n,\"smoothingTimeConstant\"),t(Ft,(()=>Ft(i)))||(t=>{t.getFloatTimeDomainData=e=>{const s=new Uint8Array(e.length);t.getByteTimeDomainData(s);const n=Math.max(s.length,t.fftSize);for(let t=0;t<n;t+=1)e[t]=.0078125*(s[t]-128);return e}})(i),i})(ge,R),be=(t=>e=>{const s=t(e);if(null===s.renderer)throw new Error(\"Missing the renderer of the given AudioNode in the audio graph.\");return s.renderer})(j),Te=((t,e,s)=>async(n,i,o)=>{const r=t(n);await Promise.all(r.activeInputs.map(((t,r)=>Array.from(t).map((async([t,a])=>{const c=e(t),h=await c.render(t,i),l=n.context.destination;s(t)||n===l&&s(n)||h.connect(o,a,r)})))).reduce(((t,e)=>[...t,...e]),[]))})(j,be,st),Se=((t,e,s)=>()=>{const n=new WeakMap;return{render(i,o){const r=n.get(o);return void 0!==r?Promise.resolve(r):(async(i,o)=>{let r=e(i);if(!M(r,o)){const e={channelCount:r.channelCount,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,fftSize:r.fftSize,maxDecibels:r.maxDecibels,minDecibels:r.minDecibels,smoothingTimeConstant:r.smoothingTimeConstant};r=t(o,e)}return n.set(o,r),await s(i,o,r),r})(i,o)}}})(we,tt,Te),ke=(Ae=u,t=>{const e=Ae.get(t);if(void 0===e)throw At();return e});var Ae;const Ce=(t=>null===t?null:t.hasOwnProperty(\"OfflineAudioContext\")?t.OfflineAudioContext:t.hasOwnProperty(\"webkitOfflineAudioContext\")?t.webkitOfflineAudioContext:null)(xe),De=(t=>e=>null!==t&&e instanceof t)(Ce),Oe=new WeakMap,Me=(t=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(e,s,n){if(null!==s){let i=this._listeners.get(s);void 0===i&&(i=t(this,s),\"function\"==typeof s&&this._listeners.set(s,i)),this._nativeEventTarget.addEventListener(e,i,n)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,e,s){const n=null===e?void 0:this._listeners.get(e);this._nativeEventTarget.removeEventListener(t,void 0===n?null:n,s)}})(ue),Ee=(t=>null===t?null:t.hasOwnProperty(\"AudioContext\")?t.AudioContext:t.hasOwnProperty(\"webkitAudioContext\")?t.webkitAudioContext:null)(xe),Re=(t=>e=>null!==t&&e instanceof t)(Ee),qe=(t=>e=>null!==t&&\"function\"==typeof t.AudioNode&&e instanceof t.AudioNode)(xe),Fe=(t=>e=>null!==t&&\"function\"==typeof t.AudioParam&&e instanceof t.AudioParam)(xe),Ie=(t=>null===t?null:t.hasOwnProperty(\"AudioWorkletNode\")?t.AudioWorkletNode:null)(xe),Ve=((t,e,s,n,i,o,r,a,h,l,u,d,f,_,m,g)=>class extends l{constructor(e,n,i,o){super(i),this._context=e,this._nativeAudioNode=i;const r=u(e);d(r)&&!0!==s(it,(()=>it(r,g)))&&at(i),c.set(this,i),p.set(this,new Set),\"closed\"!==e.state&&n&&k(this),t(this,o,i)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(t){this._nativeAudioNode.channelCount=t}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(t){this._nativeAudioNode.channelCountMode=t}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(t){this._nativeAudioNode.channelInterpretation=t}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(t,s=0,a=0){if(s<0||s>=this._nativeAudioNode.numberOfOutputs)throw i();const c=u(this._context),l=m(c);if(f(t)||_(t))throw o();if(B(t)){const i=tt(t);try{const e=Y(this._nativeAudioNode,i,s,a),n=nt(this);(l||n)&&this._nativeAudioNode.disconnect(...e),\"closed\"!==this.context.state&&!n&&nt(t)&&k(t)}catch(t){if(12===t.code)throw o();throw t}if(e(this,t,s,a,l)){const e=h([this],t);ot(e,n(l))}return t}const p=et(t);if(\"playbackRate\"===p.name&&1024===p.maxValue)throw r();try{this._nativeAudioNode.connect(p,s),(l||nt(this))&&this._nativeAudioNode.disconnect(p,s)}catch(t){if(12===t.code)throw o();throw t}if(((t,e,s,n)=>{const{activeInputs:i,passiveInputs:o}=L(e),{outputs:r}=j(t),a=S(t),c=r=>{const a=tt(t),c=et(e);if(r){const e=J(o,t,s);Q(i,t,e,!1),n||st(t)||a.connect(c,s)}else{const e=((t,e,s)=>b(t,(t=>t[0]===e&&t[1]===s)))(i,t,s);Z(o,e,!1),n||st(t)||a.disconnect(c,s)}};return!!G(r,[e,s],(t=>t[0]===e&&t[1]===s),!0)&&(a.add(c),N(t)?Q(i,t,[s,c],!0):Z(o,[t,s,c],!0),!0)})(this,t,s,l)){const e=h([this],t);ot(e,n(l))}}disconnect(t,e,s){let n;const r=u(this._context),c=m(r);if(void 0===t)n=((t,e)=>{const s=j(t),n=[];for(const i of s.outputs)U(i)?ct(t,e,...i):ht(t,e,...i),n.push(i[0]);return s.outputs.clear(),n})(this,c);else if(\"number\"==typeof t){if(t<0||t>=this.numberOfOutputs)throw i();n=((t,e,s)=>{const n=j(t),i=[];for(const o of n.outputs)o[1]===s&&(U(o)?ct(t,e,...o):ht(t,e,...o),i.push(o[0]),n.outputs.delete(o));return i})(this,c,t)}else{if(void 0!==e&&(e<0||e>=this.numberOfOutputs))throw i();if(B(t)&&void 0!==s&&(s<0||s>=t.numberOfInputs))throw i();if(n=((t,e,s,n,i)=>{const o=j(t);return Array.from(o.outputs).filter((t=>!(t[0]!==s||void 0!==n&&t[1]!==n||void 0!==i&&t[2]!==i))).map((s=>(U(s)?ct(t,e,...s):ht(t,e,...s),o.outputs.delete(s),s[0])))})(this,c,t,e,s),0===n.length)throw o()}for(const t of n){const e=h([this],t);ot(e,a)}}})((Ne=a,(t,e,s)=>{const n=[];for(let t=0;t<s.numberOfInputs;t+=1)n.push(new Set);Ne.set(t,{activeInputs:n,outputs:new Set,passiveInputs:new WeakMap,renderer:e})}),((t,e,s,n,i,o,r,a,c,h,l,u,p)=>{const d=new WeakMap;return(f,_,m,g,v)=>{const{activeInputs:y,passiveInputs:x}=o(_),{outputs:w}=o(f),b=a(f),S=o=>{const a=c(_),h=c(f);if(o){const e=T(x,f,m,g);t(y,f,e,!1),v||u(f)||s(h,a,m,g),p(_)&&k(_)}else{const t=n(y,f,m,g);e(x,g,t,!1),v||u(f)||i(h,a,m,g);const s=r(_);if(0===s)l(_)&&D(_,y);else{const t=d.get(_);void 0!==t&&clearTimeout(t),d.set(_,setTimeout((()=>{l(_)&&D(_,y)}),1e3*s))}}};return!!h(w,[_,m,g],(t=>t[0]===_&&t[1]===m&&t[2]===g),!0)&&(b.add(S),l(f)?t(y,f,[m,g,S],!0):e(x,g,[f,m,S],!0),!0)}})(pe,de,Y,fe,K,j,me,S,tt,G,N,st,nt),ge,((t,e,s,n,i,o)=>r=>(a,c)=>{const h=t.get(a);if(void 0===h){if(!r&&o(a)){const t=n(a),{outputs:o}=s(a);for(const s of o)if(U(s)){const i=n(s[0]);e(t,i,s[1],s[2])}else{const e=i(s[0]);t.disconnect(e,s[1])}}t.set(a,c)}else t.set(a,h+c)})(d,K,j,tt,et,N),R,Ct,Zt,((t,e,s,n,i,o,r,a)=>(c,h)=>{const l=e.get(c);if(void 0===l)throw new Error(\"Missing the expected cycle count.\");const u=o(c.context),p=a(u);if(l===h){if(e.delete(c),!p&&r(c)){const e=n(c),{outputs:o}=s(c);for(const s of o)if(U(s)){const i=n(s[0]);t(e,i,s[1],s[2])}else{const t=i(s[0]);e.connect(t,s[1])}}}else e.set(c,l-h)})(Y,d,j,tt,et,ke,N,De),((t,e,s)=>function n(i,o){const r=B(o)?o:s(t,o);if((t=>\"delayTime\"in t)(r))return[];if(i[0]===r)return[i];if(i.includes(r))return[];const{outputs:a}=e(r);return Array.from(a).map((t=>n([...i,r],t[0]))).reduce(((t,e)=>t.concat(e)),[])})(Oe,j,w),Me,ke,Re,qe,Fe,De,Ie);var Ne;const Pe=((t,e,s,n,i,o)=>class extends t{constructor(t,s){const r=i(t),a={...O,...s},c=n(r,a);super(t,!1,c,o(r)?e():null),this._nativeAnalyserNode=c}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(t){this._nativeAnalyserNode.fftSize=t}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(t){const e=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=t,!(t>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=e,s()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(t){const e=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=t,!(this._nativeAnalyserNode.maxDecibels>t))throw this._nativeAnalyserNode.minDecibels=e,s()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(t){this._nativeAnalyserNode.smoothingTimeConstant=t}getByteFrequencyData(t){this._nativeAnalyserNode.getByteFrequencyData(t)}getByteTimeDomainData(t){this._nativeAnalyserNode.getByteTimeDomainData(t)}getFloatFrequencyData(t){this._nativeAnalyserNode.getFloatFrequencyData(t)}getFloatTimeDomainData(t){this._nativeAnalyserNode.getFloatTimeDomainData(t)}})(Ve,Se,R,we,ke,De),je=new WeakSet,Le=(t=>null===t?null:t.hasOwnProperty(\"AudioBuffer\")?t.AudioBuffer:null)(xe),ze=(We=new Uint32Array(1),t=>(We[0]=t,We[0]));var We;const Be=((t,e)=>s=>{s.copyFromChannel=(n,i,o=0)=>{const r=t(o),a=t(i);if(a>=s.numberOfChannels)throw e();const c=s.length,h=s.getChannelData(a),l=n.length;for(let t=r<0?-r:0;t+r<c&&t<l;t+=1)n[t]=h[t+r]},s.copyToChannel=(n,i,o=0)=>{const r=t(o),a=t(i);if(a>=s.numberOfChannels)throw e();const c=s.length,h=s.getChannelData(a),l=n.length;for(let t=r<0?-r:0;t+r<c&&t<l;t+=1)h[t+r]=n[t]}})(ze,R),Ue=(t=>e=>{e.copyFromChannel=(s=>(n,i,o=0)=>{const r=t(o),a=t(i);if(r<e.length)return s.call(e,n,a,r)})(e.copyFromChannel),e.copyToChannel=(s=>(n,i,o=0)=>{const r=t(o),a=t(i);if(r<e.length)return s.call(e,n,a,r)})(e.copyToChannel)})(ze),Ge=((t,e,s,n,i,o,r,a)=>{let c=null;return class h{constructor(h){if(null===i)throw new Error(\"Missing the native OfflineAudioContext constructor.\");const{length:l,numberOfChannels:u,sampleRate:p}={...F,...h};null===c&&(c=new i(1,1,44100));const d=null!==n&&e(o,o)?new n({length:l,numberOfChannels:u,sampleRate:p}):c.createBuffer(u,l,p);if(0===d.numberOfChannels)throw s();return\"function\"!=typeof d.copyFromChannel?(r(d),q(d)):e(E,(()=>E(d)))||a(d),t.add(d),d}static[Symbol.hasInstance](e){return null!==e&&\"object\"==typeof e&&Object.getPrototypeOf(e)===h.prototype||t.has(e)}}})(je,ge,Zt,Le,Ce,(t=>()=>{if(null===t)return!1;try{new t({length:1,sampleRate:44100})}catch{return!1}return!0})(Le),Be,Ue),Qe=(t=>(e,s)=>{const n=t(e,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",gain:0});s.connect(n).connect(e.destination);const i=()=>{s.removeEventListener(\"ended\",i),s.disconnect(n),n.disconnect()};s.addEventListener(\"ended\",i)})(Bt),Ze=((t,e,s)=>async(n,i,o)=>{const r=e(n);await Promise.all(Array.from(r.activeInputs).map((async([e,n])=>{const r=t(e),a=await r.render(e,i);s(e)||a.connect(o,n)})))})(be,L,st),Xe=(t=>(e,s,n)=>t(s,e,n))(Ze),Ye=((t,e,s,n,i,o,r,a,c,h,l)=>(c,u)=>{const p=c.createBufferSource();return qt(p,u),It(p,u,\"playbackRate\"),Rt(p,u,\"buffer\"),Rt(p,u,\"loop\"),Rt(p,u,\"loopEnd\"),Rt(p,u,\"loopStart\"),e(s,(()=>s(c)))||(t=>{t.start=(e=>{let s=!1;return(n=0,i=0,o)=>{if(s)throw At();e.call(t,n,i,o),s=!0}})(t.start)})(p),e(n,(()=>n(c)))||(t=>{t.start=(e=>(s=0,n=0,i)=>{const o=t.buffer,r=null===o?n:Math.min(o.duration,n);null!==o&&r>o.duration-.5/t.context.sampleRate?e.call(t,s,0,0):e.call(t,s,r,i)})(t.start)})(p),e(i,(()=>i(c)))||h(p,c),e(o,(()=>o(c)))||Vt(p),e(r,(()=>r(c)))||l(p,c),e(a,(()=>a(c)))||Nt(p),t(c,p),p})(Qe,ge,(t=>{const e=t.createBufferSource();e.start();try{e.start()}catch{return!0}return!1}),(t=>{const e=t.createBufferSource(),s=t.createBuffer(1,1,44100);e.buffer=s;try{e.start(0,1)}catch{return!1}return!0}),(t=>{const e=t.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0}),oe,re,ae,0,(t=>(e,s)=>{const n=s.createBuffer(1,1,44100);null===e.buffer&&(e.buffer=n),t(e,\"buffer\",(t=>()=>{const s=t.call(e);return s===n?null:s}),(t=>s=>t.call(e,null===s?n:s)))})(ne),le),$e=((t,e)=>(s,n,i)=>(t(n).replay(i),e(n,s,i)))((t=>e=>{const s=t(e);if(null===s.renderer)throw new Error(\"Missing the renderer of the given AudioParam in the audio graph.\");return s.renderer})(L),Ze),He=((t,e,s,n,i)=>()=>{const o=new WeakMap;let r=null,a=null;return{set start(t){r=t},set stop(t){a=t},render(c,h){const l=o.get(h);return void 0!==l?Promise.resolve(l):(async(c,h)=>{let l=s(c);const u=M(l,h);if(!u){const t={buffer:l.buffer,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,loop:l.loop,loopEnd:l.loopEnd,loopStart:l.loopStart,playbackRate:l.playbackRate.value};l=e(h,t),null!==r&&l.start(...r),null!==a&&l.stop(a)}return o.set(h,l),u?await t(h,c.playbackRate,l.playbackRate):await n(h,c.playbackRate,l.playbackRate),await i(c,h,l),l})(c,h)}}})(Xe,Ye,tt,$e,Te),Je=((t,e,s,n,i,r,a,c,h,l,u,p,d)=>(n,f,_,m=null,g=null)=>{const v=_.value,y=new o.AutomationEventList(v),x=f?(t=>({replay(e){for(const s of t)if(\"exponentialRampToValue\"===s.type){const{endTime:t,value:n}=s;e.exponentialRampToValueAtTime(n,t)}else if(\"linearRampToValue\"===s.type){const{endTime:t,value:n}=s;e.linearRampToValueAtTime(n,t)}else if(\"setTarget\"===s.type){const{startTime:t,target:n,timeConstant:i}=s;e.setTargetAtTime(n,t,i)}else if(\"setValue\"===s.type){const{startTime:t,value:n}=s;e.setValueAtTime(n,t)}else{if(\"setValueCurve\"!==s.type)throw new Error(\"Can't apply an unknown automation.\");{const{duration:t,startTime:n,values:i}=s;e.setValueCurveAtTime(i,n,t)}}}}))(y):null,w={get defaultValue(){return v},get maxValue(){return null===m?_.maxValue:m},get minValue(){return null===g?_.minValue:g},get value(){return _.value},set value(t){_.value=t,w.setValueAtTime(t,n.context.currentTime)},cancelAndHoldAtTime(t){if(\"function\"==typeof _.cancelAndHoldAtTime)null===x&&y.flush(n.context.currentTime),y.add(i(t)),_.cancelAndHoldAtTime(t);else{const e=Array.from(y).pop();null===x&&y.flush(n.context.currentTime),y.add(i(t));const s=Array.from(y).pop();_.cancelScheduledValues(t),e!==s&&void 0!==s&&(\"exponentialRampToValue\"===s.type?_.exponentialRampToValueAtTime(s.value,s.endTime):\"linearRampToValue\"===s.type?_.linearRampToValueAtTime(s.value,s.endTime):\"setValue\"===s.type?_.setValueAtTime(s.value,s.startTime):\"setValueCurve\"===s.type&&_.setValueCurveAtTime(s.values,s.startTime,s.duration))}return w},cancelScheduledValues:t=>(null===x&&y.flush(n.context.currentTime),y.add(r(t)),_.cancelScheduledValues(t),w),exponentialRampToValueAtTime(t,e){if(0===t)throw new RangeError;if(!Number.isFinite(e)||e<0)throw new RangeError;const s=n.context.currentTime;return null===x&&y.flush(s),0===Array.from(y).length&&(y.add(l(v,s)),_.setValueAtTime(v,s)),y.add(a(t,e)),_.exponentialRampToValueAtTime(t,e),w},linearRampToValueAtTime(t,e){const s=n.context.currentTime;return null===x&&y.flush(s),0===Array.from(y).length&&(y.add(l(v,s)),_.setValueAtTime(v,s)),y.add(c(t,e)),_.linearRampToValueAtTime(t,e),w},setTargetAtTime:(t,e,s)=>(null===x&&y.flush(n.context.currentTime),y.add(h(t,e,s)),_.setTargetAtTime(t,e,s),w),setValueAtTime:(t,e)=>(null===x&&y.flush(n.context.currentTime),y.add(l(t,e)),_.setValueAtTime(t,e),w),setValueCurveAtTime(t,e,s){const i=t instanceof Float32Array?t:new Float32Array(t);if(null!==p&&\"webkitAudioContext\"===p.name){const t=e+s,o=n.context.sampleRate,r=Math.ceil(e*o),a=Math.floor(t*o),c=a-r,h=new Float32Array(c);for(let t=0;t<c;t+=1){const n=(i.length-1)/s*((r+t)/o-e),a=Math.floor(n),c=Math.ceil(n);h[t]=a===c?i[a]:(1-(n-a))*i[a]+(1-(c-n))*i[c]}null===x&&y.flush(n.context.currentTime),y.add(u(h,e,s)),_.setValueCurveAtTime(h,e,s);const l=a/o;l<t&&d(w,h[h.length-1],l),d(w,i[i.length-1],t)}else null===x&&y.flush(n.context.currentTime),y.add(u(i,e,s)),_.setValueCurveAtTime(i,e,s);return w}};return s.set(w,_),e.set(w,n),t(w,x),w})((Ke=h,(t,e)=>{Ke.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})}),Oe,l,0,o.createCancelAndHoldAutomationEvent,o.createCancelScheduledValuesAutomationEvent,o.createExponentialRampToValueAutomationEvent,o.createLinearRampToValueAutomationEvent,o.createSetTargetAutomationEvent,o.createSetValueAutomationEvent,o.createSetValueCurveAutomationEvent,Ee,ie);var Ke;const ts=((t,e,s,n,i,o,r,a)=>class extends t{constructor(t,n){const a=o(t),c={...P,...n},h=i(a,c),l=r(a),u=l?e():null;super(t,!1,h,u),this._audioBufferSourceNodeRenderer=u,this._isBufferNullified=!1,this._isBufferSet=null!==c.buffer,this._nativeAudioBufferSourceNode=h,this._onended=null,this._playbackRate=s(this,l,h.playbackRate,V,I)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(t){if(this._nativeAudioBufferSourceNode.buffer=t,null!==t){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(t){this._nativeAudioBufferSourceNode.loop=t}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(t){this._nativeAudioBufferSourceNode.loopEnd=t}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(t){this._nativeAudioBufferSourceNode.loopStart=t}get onended(){return this._onended}set onended(t){const e=\"function\"==typeof t?a(this,t):null;this._nativeAudioBufferSourceNode.onended=e;const s=this._nativeAudioBufferSourceNode.onended;this._onended=null!==s&&s===e?t:s}get playbackRate(){return this._playbackRate}start(t=0,e=0,s){if(this._nativeAudioBufferSourceNode.start(t,e,s),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.start=void 0===s?[t,e]:[t,e,s]),\"closed\"!==this.context.state){k(this);const t=()=>{this._nativeAudioBufferSourceNode.removeEventListener(\"ended\",t),N(this)&&C(this)};this._nativeAudioBufferSourceNode.addEventListener(\"ended\",t)}}stop(t=0){this._nativeAudioBufferSourceNode.stop(t),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.stop=t)}})(Ve,He,Je,At,Ye,ke,De,ue),es=((t,e,s,n,i,o,r,a)=>class extends t{constructor(t,e){const s=o(t),n=r(s),c=i(s,e,n);super(t,!1,c,n?(t=>{const e=new WeakMap;return{render(s,n){const i=e.get(n);return void 0!==i?Promise.resolve(i):(async(s,n)=>{const i=n.destination;return e.set(n,i),await t(s,n,i),i})(s,n)}}})(a):null),this._isNodeOfNativeOfflineAudioContext=n,this._nativeAudioDestinationNode=c}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(t){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(t>this._nativeAudioDestinationNode.maxChannelCount)throw s();this._nativeAudioDestinationNode.channelCount=t}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(t){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=t}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}})(Ve,0,R,At,((t,e)=>(s,n,i)=>{const o=s.destination;if(o.channelCount!==n)try{o.channelCount=n}catch{}i&&\"explicit\"!==o.channelCountMode&&(o.channelCountMode=\"explicit\"),0===o.maxChannelCount&&Object.defineProperty(o,\"maxChannelCount\",{value:n});const r=t(s,{channelCount:n,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,gain:1});return e(r,\"channelCount\",(t=>()=>t.call(r)),(t=>e=>{t.call(r,e);try{o.channelCount=e}catch(t){if(e>o.maxChannelCount)throw t}})),e(r,\"channelCountMode\",(t=>()=>t.call(r)),(t=>e=>{t.call(r,e),o.channelCountMode=e})),e(r,\"channelInterpretation\",(t=>()=>t.call(r)),(t=>e=>{t.call(r,e),o.channelInterpretation=e})),Object.defineProperty(r,\"maxChannelCount\",{get:()=>o.maxChannelCount}),r.connect(o),r})(Bt,ne),ke,De,Te),ss=((t,e,s,n,i)=>()=>{const o=new WeakMap;return{render(r,a){const c=o.get(a);return void 0!==c?Promise.resolve(c):(async(r,a)=>{let c=s(r);const h=M(c,a);if(!h){const t={Q:c.Q.value,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,detune:c.detune.value,frequency:c.frequency.value,gain:c.gain.value,type:c.type};c=e(a,t)}return o.set(a,c),h?(await t(a,r.Q,c.Q),await t(a,r.detune,c.detune),await t(a,r.frequency,c.frequency),await t(a,r.gain,c.gain)):(await n(a,r.Q,c.Q),await n(a,r.detune,c.detune),await n(a,r.frequency,c.frequency),await n(a,r.gain,c.gain)),await i(r,a,c),c})(r,a)}}})(Xe,jt,tt,$e,Te),ns=(t=>(e,s)=>t.set(e,s))(_e),is=((t,e,s,n,i,o,r,a)=>class extends t{constructor(t,n){const c=o(t),h={...mt,...n},l=i(c,h),u=r(c);super(t,!1,l,u?s():null),this._Q=e(this,u,l.Q,V,I),this._detune=e(this,u,l.detune,1200*Math.log2(V),-1200*Math.log2(V)),this._frequency=e(this,u,l.frequency,t.sampleRate/2,0),this._gain=e(this,u,l.gain,40*Math.log10(V),I),this._nativeBiquadFilterNode=l,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(t){this._nativeBiquadFilterNode.type=t}getFrequencyResponse(t,e,s){try{this._nativeBiquadFilterNode.getFrequencyResponse(t,e,s)}catch(t){if(11===t.code)throw n();throw t}if(t.length!==e.length||e.length!==s.length)throw n()}})(Ve,Je,ss,Ct,jt,ke,De,ns),os=((t,e)=>(s,n,i)=>{const o=new Set;return s.connect=(i=>(r,a=0,c=0)=>{const h=0===o.size;if(e(r))return i.call(s,r,a,c),t(o,[r,a,c],(t=>t[0]===r&&t[1]===a&&t[2]===c),!0),h&&n(),r;i.call(s,r,a),t(o,[r,a],(t=>t[0]===r&&t[1]===a),!0),h&&n()})(s.connect),s.disconnect=(t=>(n,r,a)=>{const c=o.size>0;if(void 0===n)t.apply(s),o.clear();else if(\"number\"==typeof n){t.call(s,n);for(const t of o)t[1]===n&&o.delete(t)}else{e(n)?t.call(s,n,r,a):t.call(s,n,r);for(const t of o)t[0]!==n||void 0!==r&&t[1]!==r||void 0!==a&&t[2]!==a||o.delete(t)}const h=0===o.size;c&&h&&i()})(s.disconnect),s})(G,qe),rs=((t,e)=>(s,n)=>{n.channelCount=1,n.channelCountMode=\"explicit\",Object.defineProperty(n,\"channelCount\",{get:()=>1,set:()=>{throw t()}}),Object.defineProperty(n,\"channelCountMode\",{get:()=>\"explicit\",set:()=>{throw t()}});const i=s.createBufferSource();e(n,(()=>{const t=n.numberOfInputs;for(let e=0;e<t;e+=1)i.connect(n,0,e)}),(()=>i.disconnect(n)))})(At,os),as=((t,e)=>(s,n)=>{const i=s.createChannelMerger(n.numberOfInputs);return null!==t&&\"webkitAudioContext\"===t.name&&e(s,i),qt(i,n),i})(Ee,rs),cs=((t,e,s)=>()=>{const n=new WeakMap;return{render(i,o){const r=n.get(o);return void 0!==r?Promise.resolve(r):(async(i,o)=>{let r=e(i);if(!M(r,o)){const e={channelCount:r.channelCount,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,numberOfInputs:r.numberOfInputs};r=t(o,e)}return n.set(o,r),await s(i,o,r),r})(i,o)}}})(as,tt,Te),hs=((t,e,s,n,i)=>class extends t{constructor(t,o){const r=n(t),a={...gt,...o};super(t,!1,s(r,a),i(r)?e():null)}})(Ve,cs,as,ke,De),ls=((t,e,s)=>()=>{const n=new WeakMap;return{render(i,o){const r=n.get(o);return void 0!==r?Promise.resolve(r):(async(i,o)=>{let r=e(i);if(!M(r,o)){const e={channelCount:r.channelCount,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,numberOfOutputs:r.numberOfOutputs};r=t(o,e)}return n.set(o,r),await s(i,o,r),r})(i,o)}}})(Lt,tt,Te),us=((t,e,s,n,i,o)=>class extends t{constructor(t,o){const r=n(t),a=(t=>({...t,channelCount:t.numberOfOutputs}))({...vt,...o});super(t,!1,s(r,a),i(r)?e():null)}})(Ve,ls,Lt,ke,De),ps=((t,e,s,n)=>(i,{offset:o,...r})=>{const a=i.createBuffer(1,2,44100),c=e(i,{buffer:null,channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),h=s(i,{...r,gain:o}),l=a.getChannelData(0);l[0]=1,l[1]=1,c.buffer=a,c.loop=!0;const u={get bufferSize(){},get channelCount(){return h.channelCount},set channelCount(t){h.channelCount=t},get channelCountMode(){return h.channelCountMode},set channelCountMode(t){h.channelCountMode=t},get channelInterpretation(){return h.channelInterpretation},set channelInterpretation(t){h.channelInterpretation=t},get context(){return h.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return h.numberOfOutputs},get offset(){return h.gain},get onended(){return c.onended},set onended(t){c.onended=t},addEventListener:(...t)=>c.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>c.dispatchEvent(t[0]),removeEventListener:(...t)=>c.removeEventListener(t[0],t[1],t[2]),start(t=0){c.start.call(c,t)},stop(t=0){c.stop.call(c,t)}};return t(i,c),n(zt(u,h),(()=>c.connect(h)),(()=>c.disconnect(h)))})(Qe,Ye,Bt,os),ds=((t,e,s,n,i)=>(o,r)=>{if(void 0===o.createConstantSource)return s(o,r);const a=o.createConstantSource();return qt(a,r),It(a,r,\"offset\"),e(n,(()=>n(o)))||Vt(a),e(i,(()=>i(o)))||Nt(a),t(o,a),a})(Qe,ge,ps,oe,ae),fs=((t,e,s,n,i)=>()=>{const o=new WeakMap;let r=null,a=null;return{set start(t){r=t},set stop(t){a=t},render(c,h){const l=o.get(h);return void 0!==l?Promise.resolve(l):(async(c,h)=>{let l=s(c);const u=M(l,h);if(!u){const t={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,offset:l.offset.value};l=e(h,t),null!==r&&l.start(r),null!==a&&l.stop(a)}return o.set(h,l),u?await t(h,c.offset,l.offset):await n(h,c.offset,l.offset),await i(c,h,l),l})(c,h)}}})(Xe,ds,tt,$e,Te),_s=((t,e,s,n,i,o,r)=>class extends t{constructor(t,r){const a=i(t),c={...yt,...r},h=n(a,c),l=o(a),u=l?s():null;super(t,!1,h,u),this._constantSourceNodeRenderer=u,this._nativeConstantSourceNode=h,this._offset=e(this,l,h.offset,V,I),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(t){const e=\"function\"==typeof t?r(this,t):null;this._nativeConstantSourceNode.onended=e;const s=this._nativeConstantSourceNode.onended;this._onended=null!==s&&s===e?t:s}start(t=0){if(this._nativeConstantSourceNode.start(t),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.start=t),\"closed\"!==this.context.state){k(this);const t=()=>{this._nativeConstantSourceNode.removeEventListener(\"ended\",t),N(this)&&C(this)};this._nativeConstantSourceNode.addEventListener(\"ended\",t)}}stop(t=0){this._nativeConstantSourceNode.stop(t),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.stop=t)}})(Ve,Je,fs,ds,ke,De,ue),ms=((t,e)=>(s,n)=>{const i=s.createConvolver();if(qt(i,n),n.disableNormalization===i.normalize&&(i.normalize=!n.disableNormalization),Rt(i,n,\"buffer\"),n.channelCount>2)throw t();if(e(i,\"channelCount\",(t=>()=>t.call(i)),(e=>s=>{if(s>2)throw t();return e.call(i,s)})),\"max\"===n.channelCountMode)throw t();return e(i,\"channelCountMode\",(t=>()=>t.call(i)),(e=>s=>{if(\"max\"===s)throw t();return e.call(i,s)})),i})(Zt,ne),gs=((t,e,s)=>()=>{const n=new WeakMap;return{render(i,o){const r=n.get(o);return void 0!==r?Promise.resolve(r):(async(i,o)=>{let r=e(i);if(!M(r,o)){const e={buffer:r.buffer,channelCount:r.channelCount,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,disableNormalization:!r.normalize};r=t(o,e)}return n.set(o,r),X(r)?await s(i,o,r.inputs[0]):await s(i,o,r),r})(i,o)}}})(ms,tt,Te),vs=((t,e,s,n,i,o)=>class extends t{constructor(t,r){const a=n(t),c={...xt,...r},h=s(a,c);super(t,!1,h,i(a)?e():null),this._isBufferNullified=!1,this._nativeConvolverNode=h,null!==c.buffer&&o(this,c.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(t){if(this._nativeConvolverNode.buffer=t,null===t&&null!==this._nativeConvolverNode.buffer){const t=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=t.createBuffer(1,1,t.sampleRate),this._isBufferNullified=!0,o(this,0)}else this._isBufferNullified=!1,o(this,null===this._nativeConvolverNode.buffer?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(t){this._nativeConvolverNode.normalize=t}})(Ve,gs,ms,ke,De,ns),ys=((t,e,s,n,i)=>o=>{const r=new WeakMap;return{render(a,c){const h=r.get(c);return void 0!==h?Promise.resolve(h):(async(a,c)=>{let h=s(a);const l=M(h,c);if(!l){const t={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,delayTime:h.delayTime.value,maxDelayTime:o};h=e(c,t)}return r.set(c,h),l?await t(c,a.delayTime,h.delayTime):await n(c,a.delayTime,h.delayTime),await i(a,c,h),h})(a,c)}}})(Xe,Wt,tt,$e,Te),xs=((t,e,s,n,i,o,r)=>class extends t{constructor(t,a){const c=i(t),h={...bt,...a},l=n(c,h),u=o(c);super(t,!1,l,u?s(h.maxDelayTime):null),this._delayTime=e(this,u,l.delayTime),r(this,h.maxDelayTime)}get delayTime(){return this._delayTime}})(Ve,Je,ys,Wt,ke,De,ns),ws=(t=>(e,s)=>{const n=e.createDynamicsCompressor();if(qt(n,s),s.channelCount>2)throw t();if(\"max\"===s.channelCountMode)throw t();return It(n,s,\"attack\"),It(n,s,\"knee\"),It(n,s,\"ratio\"),It(n,s,\"release\"),It(n,s,\"threshold\"),n})(Zt),bs=((t,e,s,n,i)=>()=>{const o=new WeakMap;return{render(r,a){const c=o.get(a);return void 0!==c?Promise.resolve(c):(async(r,a)=>{let c=s(r);const h=M(c,a);if(!h){const t={attack:c.attack.value,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,knee:c.knee.value,ratio:c.ratio.value,release:c.release.value,threshold:c.threshold.value};c=e(a,t)}return o.set(a,c),h?(await t(a,r.attack,c.attack),await t(a,r.knee,c.knee),await t(a,r.ratio,c.ratio),await t(a,r.release,c.release),await t(a,r.threshold,c.threshold)):(await n(a,r.attack,c.attack),await n(a,r.knee,c.knee),await n(a,r.ratio,c.ratio),await n(a,r.release,c.release),await n(a,r.threshold,c.threshold)),await i(r,a,c),c})(r,a)}}})(Xe,ws,tt,$e,Te),Ts=((t,e,s,n,i,o,r,a)=>class extends t{constructor(t,i){const c=o(t),h={...St,...i},l=n(c,h),u=r(c);super(t,!1,l,u?s():null),this._attack=e(this,u,l.attack),this._knee=e(this,u,l.knee),this._nativeDynamicsCompressorNode=l,this._ratio=e(this,u,l.ratio),this._release=e(this,u,l.release),this._threshold=e(this,u,l.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(t){const e=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=t,t>2)throw this._nativeDynamicsCompressorNode.channelCount=e,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(t){const e=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=t,\"max\"===t)throw this._nativeDynamicsCompressorNode.channelCountMode=e,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return\"number\"==typeof this._nativeDynamicsCompressorNode.reduction.value?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}})(Ve,Je,bs,ws,Zt,ke,De,ns),Ss=((t,e,s,n,i)=>()=>{const o=new WeakMap;return{render(r,a){const c=o.get(a);return void 0!==c?Promise.resolve(c):(async(r,a)=>{let c=s(r);const h=M(c,a);if(!h){const t={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,gain:c.gain.value};c=e(a,t)}return o.set(a,c),h?await t(a,r.gain,c.gain):await n(a,r.gain,c.gain),await i(r,a,c),c})(r,a)}}})(Xe,Bt,tt,$e,Te),ks=((t,e,s,n,i,o)=>class extends t{constructor(t,r){const a=i(t),c={...kt,...r},h=n(a,c),l=o(a);super(t,!1,h,l?s():null),this._gain=e(this,l,h.gain,V,I)}get gain(){return this._gain}})(Ve,Je,Ss,Bt,ke,De),As=((t,e,s,n)=>(i,o,{channelCount:r,channelCountMode:a,channelInterpretation:c,feedback:h,feedforward:l})=>{const u=Pt(o,i.sampleRate),p=h instanceof Float64Array?h:new Float64Array(h),d=l instanceof Float64Array?l:new Float64Array(l),f=p.length,_=d.length,m=Math.min(f,_);if(0===f||f>20)throw n();if(0===p[0])throw e();if(0===_||_>20)throw n();if(0===d[0])throw e();if(1!==p[0]){for(let t=0;t<_;t+=1)d[t]/=p[0];for(let t=1;t<f;t+=1)p[t]/=p[0]}const g=s(i,u,r,r);g.channelCount=r,g.channelCountMode=a,g.channelInterpretation=c;const v=[],y=[],x=[];for(let t=0;t<r;t+=1){v.push(0);const t=new Float32Array(32),e=new Float32Array(32);t.fill(0),e.fill(0),y.push(t),x.push(e)}g.onaudioprocess=t=>{const e=t.inputBuffer,s=t.outputBuffer,n=e.numberOfChannels;for(let t=0;t<n;t+=1){const n=e.getChannelData(t),i=s.getChannelData(t);v[t]=Ot(p,f,d,_,m,y[t],x[t],v[t],32,n,i)}};const w=i.sampleRate/2;return zt({get bufferSize(){return u},get channelCount(){return g.channelCount},set channelCount(t){g.channelCount=t},get channelCountMode(){return g.channelCountMode},set channelCountMode(t){g.channelCountMode=t},get channelInterpretation(){return g.channelInterpretation},set channelInterpretation(t){g.channelInterpretation=t},get context(){return g.context},get inputs(){return[g]},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},addEventListener:(...t)=>g.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>g.dispatchEvent(t[0]),getFrequencyResponse(e,s,n){if(e.length!==s.length||s.length!==n.length)throw t();const i=e.length;for(let t=0;t<i;t+=1){const i=-Math.PI*(e[t]/w),o=[Math.cos(i),Math.sin(i)],r=Ut(Gt(d,o),Gt(p,o));s[t]=Math.sqrt(r[0]*r[0]+r[1]*r[1]),n[t]=Math.atan2(r[1],r[0])}},removeEventListener:(...t)=>g.removeEventListener(t[0],t[1],t[2])},g)})(Ct,At,Qt,Zt),Cs=((t,e,s,n)=>i=>t(Et,(()=>Et(i)))?Promise.resolve(t(n,n)).then((t=>{if(!t){const t=s(i,512,0,1);i.oncomplete=()=>{t.onaudioprocess=null,t.disconnect()},t.onaudioprocess=()=>i.currentTime,t.connect(i.destination)}return i.startRendering()})):new Promise((t=>{const s=e(i,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",gain:0});i.oncomplete=e=>{s.disconnect(),t(e.renderedBuffer)},s.connect(i.destination),i.startRendering()})))(ge,Bt,Qt,((t,e)=>()=>{if(null===e)return Promise.resolve(!1);const s=new e(1,1,44100),n=t(s,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",gain:0});return new Promise((t=>{s.oncomplete=()=>{n.disconnect(),t(0!==s.currentTime)},s.startRendering()}))})(Bt,Ce)),Ds=((t,e,s,n,i)=>(o,r)=>{const a=new WeakMap;let c=null;return{render(h,l){const u=a.get(l);return void 0!==u?Promise.resolve(u):(async(h,l)=>{let u=null,p=e(h);const d=M(p,l);if(void 0===l.createIIRFilter?u=t(l,{buffer:null,channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(p=l.createIIRFilter(r,o)),a.set(l,null===u?p:u),null!==u){if(null===c){if(null===s)throw new Error(\"Missing the native OfflineAudioContext constructor.\");const t=new s(h.context.destination.channelCount,h.context.length,l.sampleRate);c=(async()=>(await n(h,t,t.destination),((t,e,s,n)=>{const i=s instanceof Float64Array?s:new Float64Array(s),o=n instanceof Float64Array?n:new Float64Array(n),r=i.length,a=o.length,c=Math.min(r,a);if(1!==i[0]){for(let t=0;t<r;t+=1)o[t]/=i[0];for(let t=1;t<a;t+=1)i[t]/=i[0]}const h=new Float32Array(32),l=new Float32Array(32),u=e.createBuffer(t.numberOfChannels,t.length,t.sampleRate),p=t.numberOfChannels;for(let e=0;e<p;e+=1){const s=t.getChannelData(e),n=u.getChannelData(e);h.fill(0),l.fill(0),Ot(i,r,o,a,c,h,l,0,32,s,n)}return u})(await i(t),l,o,r)))()}const t=await c;return u.buffer=t,u.start(0),u}return await n(h,l,p),p})(h,l)}}})(Ye,tt,Ce,Te,Cs),Os=(t=>(e,s,n)=>{if(void 0===e.createIIRFilter)return t(e,s,n);const i=e.createIIRFilter(n.feedforward,n.feedback);return qt(i,n),i})(As),Ms=((t,e,s,n,i,o)=>class extends t{constructor(t,r){const a=n(t),c=i(a),h={...Dt,...r},l=e(a,c?null:t.baseLatency,h);super(t,!1,l,c?s(h.feedback,h.feedforward):null),(t=>{var e;t.getFrequencyResponse=(e=t.getFrequencyResponse,(s,n,i)=>{if(s.length!==n.length||n.length!==i.length)throw Ct();return e.call(t,s,n,i)})})(l),this._nativeIIRFilterNode=l,o(this,1)}getFrequencyResponse(t,e,s){return this._nativeIIRFilterNode.getFrequencyResponse(t,e,s)}})(Ve,Os,Ds,ke,De,ns),Es=((t,e,s,n,i,o,r,a)=>(c,h)=>{const l=h.listener,{forwardX:u,forwardY:p,forwardZ:d,positionX:f,positionY:_,positionZ:m,upX:g,upY:v,upZ:y}=void 0===l.forwardX?(()=>{const u=new Float32Array(1),p=e(h,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:9}),d=r(h);let f=!1,_=[0,0,-1,0,1,0],m=[0,0,0];const g=()=>{if(f)return;f=!0;const t=n(h,256,9,0);t.onaudioprocess=({inputBuffer:t})=>{const e=[o(t,u,0),o(t,u,1),o(t,u,2),o(t,u,3),o(t,u,4),o(t,u,5)];e.some(((t,e)=>t!==_[e]))&&(l.setOrientation(...e),_=e);const s=[o(t,u,6),o(t,u,7),o(t,u,8)];s.some(((t,e)=>t!==m[e]))&&(l.setPosition(...s),m=s)},p.connect(t)},v=t=>e=>{e!==_[t]&&(_[t]=e,l.setOrientation(..._))},y=t=>e=>{e!==m[t]&&(m[t]=e,l.setPosition(...m))},x=(e,n,o)=>{const r=s(h,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",offset:n});r.connect(p,0,e),r.start(),Object.defineProperty(r.offset,\"defaultValue\",{get:()=>n});const l=t({context:c},d,r.offset,V,I);var u,f,_,m,v,y,x;return a(l,\"value\",(t=>()=>t.call(l)),(t=>e=>{try{t.call(l,e)}catch(t){if(9!==t.code)throw t}g(),d&&o(e)})),l.cancelAndHoldAtTime=(u=l.cancelAndHoldAtTime,d?()=>{throw i()}:(...t)=>{const e=u.apply(l,t);return g(),e}),l.cancelScheduledValues=(f=l.cancelScheduledValues,d?()=>{throw i()}:(...t)=>{const e=f.apply(l,t);return g(),e}),l.exponentialRampToValueAtTime=(_=l.exponentialRampToValueAtTime,d?()=>{throw i()}:(...t)=>{const e=_.apply(l,t);return g(),e}),l.linearRampToValueAtTime=(m=l.linearRampToValueAtTime,d?()=>{throw i()}:(...t)=>{const e=m.apply(l,t);return g(),e}),l.setTargetAtTime=(v=l.setTargetAtTime,d?()=>{throw i()}:(...t)=>{const e=v.apply(l,t);return g(),e}),l.setValueAtTime=(y=l.setValueAtTime,d?()=>{throw i()}:(...t)=>{const e=y.apply(l,t);return g(),e}),l.setValueCurveAtTime=(x=l.setValueCurveAtTime,d?()=>{throw i()}:(...t)=>{const e=x.apply(l,t);return g(),e}),l};return{forwardX:x(0,0,v(0)),forwardY:x(1,0,v(1)),forwardZ:x(2,-1,v(2)),positionX:x(6,0,y(0)),positionY:x(7,0,y(1)),positionZ:x(8,0,y(2)),upX:x(3,0,v(3)),upY:x(4,1,v(4)),upZ:x(5,0,v(5))}})():l;return{get forwardX(){return u},get forwardY(){return p},get forwardZ(){return d},get positionX(){return f},get positionY(){return _},get positionZ(){return m},get upX(){return g},get upY(){return v},get upZ(){return y}}})(Je,as,ds,Qt,Zt,ee,De,ne),Rs=new WeakMap,qs=((t,e,s,n,i,o)=>class extends s{constructor(s,o){super(s),this._nativeContext=s,u.set(this,s),n(s)&&i.set(s,new Set),this._destination=new t(this,o),this._listener=e(this,s),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(t){const e=\"function\"==typeof t?o(this,t):null;this._nativeContext.onstatechange=e;const s=this._nativeContext.onstatechange;this._onstatechange=null!==s&&s===e?t:s}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}})(es,Es,Me,De,Rs,ue),Fs=((t,e,s,n,i,o)=>(r,a)=>{const c=r.createOscillator();return qt(c,a),It(c,a,\"detune\"),It(c,a,\"frequency\"),void 0!==a.periodicWave?c.setPeriodicWave(a.periodicWave):Rt(c,a,\"type\"),e(s,(()=>s(r)))||Vt(c),e(n,(()=>n(r)))||o(c,r),e(i,(()=>i(r)))||Nt(c),t(r,c),c})(Qe,ge,oe,re,ae,le),Is=((t,e,s,n,i)=>()=>{const o=new WeakMap;let r=null,a=null,c=null;return{set periodicWave(t){r=t},set start(t){a=t},set stop(t){c=t},render(h,l){const u=o.get(l);return void 0!==u?Promise.resolve(u):(async(h,l)=>{let u=s(h);const p=M(u,l);if(!p){const t={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,periodicWave:null===r?void 0:r,type:u.type};u=e(l,t),null!==a&&u.start(a),null!==c&&u.stop(c)}return o.set(l,u),p?(await t(l,h.detune,u.detune),await t(l,h.frequency,u.frequency)):(await n(l,h.detune,u.detune),await n(l,h.frequency,u.frequency)),await i(h,l,u),u})(h,l)}}})(Xe,Fs,tt,$e,Te),Vs=((t,e,s,n,i,o,r)=>class extends t{constructor(t,r){const a=i(t),c={...Yt,...r},h=s(a,c),l=o(a),u=l?n():null,p=t.sampleRate/2;super(t,!1,h,u),this._detune=e(this,l,h.detune,153600,-153600),this._frequency=e(this,l,h.frequency,p,-p),this._nativeOscillatorNode=h,this._onended=null,this._oscillatorNodeRenderer=u,null!==this._oscillatorNodeRenderer&&void 0!==c.periodicWave&&(this._oscillatorNodeRenderer.periodicWave=c.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(t){const e=\"function\"==typeof t?r(this,t):null;this._nativeOscillatorNode.onended=e;const s=this._nativeOscillatorNode.onended;this._onended=null!==s&&s===e?t:s}get type(){return this._nativeOscillatorNode.type}set type(t){this._nativeOscillatorNode.type=t,null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(t){this._nativeOscillatorNode.setPeriodicWave(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=t)}start(t=0){if(this._nativeOscillatorNode.start(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.start=t),\"closed\"!==this.context.state){k(this);const t=()=>{this._nativeOscillatorNode.removeEventListener(\"ended\",t),N(this)&&C(this)};this._nativeOscillatorNode.addEventListener(\"ended\",t)}}stop(t=0){this._nativeOscillatorNode.stop(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.stop=t)}})(Ve,Je,Fs,Is,ke,De,ue),Ns=(t=>(e,s)=>{const n=t(e,{buffer:null,channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=e.createBuffer(1,2,44100);return n.buffer=i,n.loop=!0,n.connect(s),n.start(),()=>{n.stop(),n.disconnect(s)}})(Ye),Ps=((t,e,s,n,i)=>(o,{curve:r,oversample:a,...c})=>{const h=o.createWaveShaper(),l=o.createWaveShaper();qt(h,c),qt(l,c);const u=s(o,{...c,gain:1}),p=s(o,{...c,gain:-1}),d=s(o,{...c,gain:1}),f=s(o,{...c,gain:-1});let _=null,m=!1,g=null;const v={get bufferSize(){},get channelCount(){return h.channelCount},set channelCount(t){u.channelCount=t,p.channelCount=t,h.channelCount=t,d.channelCount=t,l.channelCount=t,f.channelCount=t},get channelCountMode(){return h.channelCountMode},set channelCountMode(t){u.channelCountMode=t,p.channelCountMode=t,h.channelCountMode=t,d.channelCountMode=t,l.channelCountMode=t,f.channelCountMode=t},get channelInterpretation(){return h.channelInterpretation},set channelInterpretation(t){u.channelInterpretation=t,p.channelInterpretation=t,h.channelInterpretation=t,d.channelInterpretation=t,l.channelInterpretation=t,f.channelInterpretation=t},get context(){return h.context},get curve(){return g},set curve(s){if(null!==s&&s.length<2)throw e();if(null===s)h.curve=s,l.curve=s;else{const t=s.length,e=new Float32Array(t+2-t%2),n=new Float32Array(t+2-t%2);e[0]=s[0],n[0]=-s[t-1];const i=Math.ceil((t+1)/2),o=(t+1)/2-1;for(let r=1;r<i;r+=1){const a=r/i*o,c=Math.floor(a),h=Math.ceil(a);e[r]=c===h?s[c]:(1-(a-c))*s[c]+(1-(h-a))*s[h],n[r]=c===h?-s[t-1-c]:-(1-(a-c))*s[t-1-c]-(1-(h-a))*s[t-1-h]}e[i]=t%2==1?s[i-1]:(s[i-2]+s[i-1])/2,h.curve=e,l.curve=n}g=s,m&&(n(g)&&null===_?_=t(o,u):null!==_&&(_(),_=null))},get inputs(){return[u]},get numberOfInputs(){return h.numberOfInputs},get numberOfOutputs(){return h.numberOfOutputs},get oversample(){return h.oversample},set oversample(t){h.oversample=t,l.oversample=t},addEventListener:(...t)=>u.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>u.dispatchEvent(t[0]),removeEventListener:(...t)=>u.removeEventListener(t[0],t[1],t[2])};return null!==r&&(v.curve=r instanceof Float32Array?r:new Float32Array(r)),a!==v.oversample&&(v.oversample=a),i(zt(v,d),(()=>{u.connect(h).connect(d),u.connect(p).connect(l).connect(f).connect(d),m=!0,n(g)&&(_=t(o,u))}),(()=>{u.disconnect(h),h.disconnect(d),u.disconnect(p),p.disconnect(l),l.disconnect(f),f.disconnect(d),m=!1,null!==_&&(_(),_=null)}))})(Ns,At,Bt,se,os),js=((t,e,s,n,i,o,r)=>(a,c)=>{const h=a.createWaveShaper();if(null!==o&&\"webkitAudioContext\"===o.name&&void 0===a.createGain().gain.automationRate)return s(a,c);qt(h,c);const l=null===c.curve||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(null!==l&&l.length<2)throw e();Rt(h,{curve:l},\"curve\"),Rt(h,c,\"oversample\");let u=null,p=!1;return r(h,\"curve\",(t=>()=>t.call(h)),(e=>s=>(e.call(h,s),p&&(n(s)&&null===u?u=t(a,h):n(s)||null===u||(u(),u=null)),s))),i(h,(()=>{p=!0,n(h.curve)&&(u=t(a,h))}),(()=>{p=!1,null!==u&&(u(),u=null)}))})(Ns,At,Ps,se,os,Ee,ne),Ls=((t,e,s,n,i,o,r,a,c,h)=>(l,{coneInnerAngle:u,coneOuterAngle:p,coneOuterGain:d,distanceModel:f,maxDistance:_,orientationX:m,orientationY:g,orientationZ:v,panningModel:y,positionX:x,positionY:w,positionZ:b,refDistance:T,rolloffFactor:S,...k})=>{const A=l.createPanner();if(k.channelCount>2)throw r();if(\"max\"===k.channelCountMode)throw r();qt(A,k);const C={channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\"},D=s(l,{...C,channelInterpretation:\"speakers\",numberOfInputs:6}),O=n(l,{...k,gain:1}),M=n(l,{...C,gain:1}),E=n(l,{...C,gain:0}),R=n(l,{...C,gain:0}),q=n(l,{...C,gain:0}),F=n(l,{...C,gain:0}),I=n(l,{...C,gain:0}),V=i(l,256,6,1),N=o(l,{...C,curve:new Float32Array([1,1]),oversample:\"none\"});let P=[m,g,v],j=[x,w,b];const L=new Float32Array(1);V.onaudioprocess=({inputBuffer:t})=>{const e=[c(t,L,0),c(t,L,1),c(t,L,2)];e.some(((t,e)=>t!==P[e]))&&(A.setOrientation(...e),P=e);const s=[c(t,L,3),c(t,L,4),c(t,L,5)];s.some(((t,e)=>t!==j[e]))&&(A.setPosition(...s),j=s)},Object.defineProperty(E.gain,\"defaultValue\",{get:()=>0}),Object.defineProperty(R.gain,\"defaultValue\",{get:()=>0}),Object.defineProperty(q.gain,\"defaultValue\",{get:()=>0}),Object.defineProperty(F.gain,\"defaultValue\",{get:()=>0}),Object.defineProperty(I.gain,\"defaultValue\",{get:()=>0});const z={get bufferSize(){},get channelCount(){return A.channelCount},set channelCount(t){if(t>2)throw r();O.channelCount=t,A.channelCount=t},get channelCountMode(){return A.channelCountMode},set channelCountMode(t){if(\"max\"===t)throw r();O.channelCountMode=t,A.channelCountMode=t},get channelInterpretation(){return A.channelInterpretation},set channelInterpretation(t){O.channelInterpretation=t,A.channelInterpretation=t},get coneInnerAngle(){return A.coneInnerAngle},set coneInnerAngle(t){A.coneInnerAngle=t},get coneOuterAngle(){return A.coneOuterAngle},set coneOuterAngle(t){A.coneOuterAngle=t},get coneOuterGain(){return A.coneOuterGain},set coneOuterGain(t){if(t<0||t>1)throw e();A.coneOuterGain=t},get context(){return A.context},get distanceModel(){return A.distanceModel},set distanceModel(t){A.distanceModel=t},get inputs(){return[O]},get maxDistance(){return A.maxDistance},set maxDistance(t){if(t<0)throw new RangeError;A.maxDistance=t},get numberOfInputs(){return A.numberOfInputs},get numberOfOutputs(){return A.numberOfOutputs},get orientationX(){return M.gain},get orientationY(){return E.gain},get orientationZ(){return R.gain},get panningModel(){return A.panningModel},set panningModel(t){A.panningModel=t},get positionX(){return q.gain},get positionY(){return F.gain},get positionZ(){return I.gain},get refDistance(){return A.refDistance},set refDistance(t){if(t<0)throw new RangeError;A.refDistance=t},get rolloffFactor(){return A.rolloffFactor},set rolloffFactor(t){if(t<0)throw new RangeError;A.rolloffFactor=t},addEventListener:(...t)=>O.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>O.dispatchEvent(t[0]),removeEventListener:(...t)=>O.removeEventListener(t[0],t[1],t[2])};return u!==z.coneInnerAngle&&(z.coneInnerAngle=u),p!==z.coneOuterAngle&&(z.coneOuterAngle=p),d!==z.coneOuterGain&&(z.coneOuterGain=d),f!==z.distanceModel&&(z.distanceModel=f),_!==z.maxDistance&&(z.maxDistance=_),m!==z.orientationX.value&&(z.orientationX.value=m),g!==z.orientationY.value&&(z.orientationY.value=g),v!==z.orientationZ.value&&(z.orientationZ.value=v),y!==z.panningModel&&(z.panningModel=y),x!==z.positionX.value&&(z.positionX.value=x),w!==z.positionY.value&&(z.positionY.value=w),b!==z.positionZ.value&&(z.positionZ.value=b),T!==z.refDistance&&(z.refDistance=T),S!==z.rolloffFactor&&(z.rolloffFactor=S),1===P[0]&&0===P[1]&&0===P[2]||A.setOrientation(...P),0===j[0]&&0===j[1]&&0===j[2]||A.setPosition(...j),h(zt(z,A),(()=>{O.connect(A),t(O,N,0,0),N.connect(M).connect(D,0,0),N.connect(E).connect(D,0,1),N.connect(R).connect(D,0,2),N.connect(q).connect(D,0,3),N.connect(F).connect(D,0,4),N.connect(I).connect(D,0,5),D.connect(V).connect(l.destination)}),(()=>{O.disconnect(A),a(O,N,0,0),N.disconnect(M),M.disconnect(D),N.disconnect(E),E.disconnect(D),N.disconnect(R),R.disconnect(D),N.disconnect(q),q.disconnect(D),N.disconnect(F),F.disconnect(D),N.disconnect(I),I.disconnect(D),D.disconnect(V),V.disconnect(l.destination)}))})(Y,At,as,Bt,Qt,js,Zt,K,ee,os),zs=(t=>(e,s)=>{const n=e.createPanner();return void 0===n.orientationX?t(e,s):(qt(n,s),It(n,s,\"orientationX\"),It(n,s,\"orientationY\"),It(n,s,\"orientationZ\"),It(n,s,\"positionX\"),It(n,s,\"positionY\"),It(n,s,\"positionZ\"),Rt(n,s,\"coneInnerAngle\"),Rt(n,s,\"coneOuterAngle\"),Rt(n,s,\"coneOuterGain\"),Rt(n,s,\"distanceModel\"),Rt(n,s,\"maxDistance\"),Rt(n,s,\"panningModel\"),Rt(n,s,\"refDistance\"),Rt(n,s,\"rolloffFactor\"),n)})(Ls),Ws=((t,e,s,n,i,o,r,a,c,h)=>()=>{const l=new WeakMap;let u=null;return{render(p,d){const f=l.get(d);return void 0!==f?Promise.resolve(f):(async(p,d)=>{let f=null,_=o(p);const m={channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation},g={...m,coneInnerAngle:_.coneInnerAngle,coneOuterAngle:_.coneOuterAngle,coneOuterGain:_.coneOuterGain,distanceModel:_.distanceModel,maxDistance:_.maxDistance,panningModel:_.panningModel,refDistance:_.refDistance,rolloffFactor:_.rolloffFactor},v=M(_,d);if(\"bufferSize\"in _)f=n(d,{...m,gain:1});else if(!v){const t={...g,orientationX:_.orientationX.value,orientationY:_.orientationY.value,orientationZ:_.orientationZ.value,positionX:_.positionX.value,positionY:_.positionY.value,positionZ:_.positionZ.value};_=i(d,t)}if(l.set(d,null===f?_:f),null!==f){if(null===u){if(null===r)throw new Error(\"Missing the native OfflineAudioContext constructor.\");const t=new r(6,p.context.length,d.sampleRate),n=e(t,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:6});n.connect(t.destination),u=(async()=>{const e=await Promise.all([p.orientationX,p.orientationY,p.orientationZ,p.positionX,p.positionY,p.positionZ].map((async(e,n)=>{const i=s(t,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",offset:0===n?1:0});return await a(t,e,i.offset),i})));for(let t=0;t<6;t+=1)e[t].connect(n,0,t),e[t].start(0);return h(t)})()}const t=await u,o=n(d,{...m,gain:1});await c(p,d,o);const l=[];for(let e=0;e<t.numberOfChannels;e+=1)l.push(t.getChannelData(e));let _=[l[0][0],l[1][0],l[2][0]],v=[l[3][0],l[4][0],l[5][0]],y=n(d,{...m,gain:1}),x=i(d,{...g,orientationX:_[0],orientationY:_[1],orientationZ:_[2],positionX:v[0],positionY:v[1],positionZ:v[2]});o.connect(y).connect(x.inputs[0]),x.connect(f);for(let e=128;e<t.length;e+=128){const t=[l[0][e],l[1][e],l[2][e]],s=[l[3][e],l[4][e],l[5][e]];if(t.some(((t,e)=>t!==_[e]))||s.some(((t,e)=>t!==v[e]))){_=t,v=s;const r=e/d.sampleRate;y.gain.setValueAtTime(0,r),y=n(d,{...m,gain:0}),x=i(d,{...g,orientationX:_[0],orientationY:_[1],orientationZ:_[2],positionX:v[0],positionY:v[1],positionZ:v[2]}),y.gain.setValueAtTime(1,r),o.connect(y).connect(x.inputs[0]),x.connect(f)}}return f}return v?(await t(d,p.orientationX,_.orientationX),await t(d,p.orientationY,_.orientationY),await t(d,p.orientationZ,_.orientationZ),await t(d,p.positionX,_.positionX),await t(d,p.positionY,_.positionY),await t(d,p.positionZ,_.positionZ)):(await a(d,p.orientationX,_.orientationX),await a(d,p.orientationY,_.orientationY),await a(d,p.orientationZ,_.orientationZ),await a(d,p.positionX,_.positionX),await a(d,p.positionY,_.positionY),await a(d,p.positionZ,_.positionZ)),X(_)?await c(p,d,_.inputs[0]):await c(p,d,_),_})(p,d)}}})(Xe,as,ds,Bt,zs,tt,Ce,$e,Te,Cs),Bs=((t,e,s,n,i,o,r)=>class extends t{constructor(t,a){const c=i(t),h={...$t,...a},l=s(c,h),u=o(c);super(t,!1,l,u?n():null),this._nativePannerNode=l,this._orientationX=e(this,u,l.orientationX,V,I),this._orientationY=e(this,u,l.orientationY,V,I),this._orientationZ=e(this,u,l.orientationZ,V,I),this._positionX=e(this,u,l.positionX,V,I),this._positionY=e(this,u,l.positionY,V,I),this._positionZ=e(this,u,l.positionZ,V,I),r(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(t){this._nativePannerNode.coneInnerAngle=t}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(t){this._nativePannerNode.coneOuterAngle=t}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(t){this._nativePannerNode.coneOuterGain=t}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(t){this._nativePannerNode.distanceModel=t}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(t){this._nativePannerNode.maxDistance=t}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(t){this._nativePannerNode.panningModel=t}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(t){this._nativePannerNode.refDistance=t}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(t){this._nativePannerNode.rolloffFactor=t}})(Ve,Je,zs,Ws,ke,De,ns),Us=(t=>(e,{disableNormalization:s,imag:n,real:i})=>{const o=n instanceof Float32Array?n:new Float32Array(n),r=i instanceof Float32Array?i:new Float32Array(i),a=e.createPeriodicWave(r,o,{disableNormalization:s});if(Array.from(n).length<2)throw t();return a})(R),Gs=((t,e,s,n)=>class n{constructor(n,i){const o=e(n),r=(t=>{const{imag:e,real:s}=t;return void 0===e?void 0===s?{...t,imag:[0,0],real:[0,0]}:{...t,imag:Array.from(s,(()=>0)),real:s}:void 0===s?{...t,imag:e,real:Array.from(e,(()=>0))}:{...t,imag:e,real:s}})({...Ht,...i}),a=t(o,r);return s.add(a),a}static[Symbol.hasInstance](t){return null!==t&&\"object\"==typeof t&&Object.getPrototypeOf(t)===n.prototype||s.has(t)}})(Us,ke,new WeakSet),Qs=((t,e,s,n,i,o)=>{const r=16385,a=new Float32Array([1,1]),c=Math.PI/2,h={channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\"},l={...h,oversample:\"none\"},u=(t,o,u,p,d)=>{if(1===o)return((t,e,i,o)=>{const u=new Float32Array(r),p=new Float32Array(r);for(let t=0;t<r;t+=1){const e=t/16384*c;u[t]=Math.cos(e),p[t]=Math.sin(e)}const d=s(t,{...h,gain:0}),f=n(t,{...l,curve:u}),_=n(t,{...l,curve:a}),m=s(t,{...h,gain:0}),g=n(t,{...l,curve:p});return{connectGraph(){e.connect(d),e.connect(void 0===_.inputs?_:_.inputs[0]),e.connect(m),_.connect(i),i.connect(void 0===f.inputs?f:f.inputs[0]),i.connect(void 0===g.inputs?g:g.inputs[0]),f.connect(d.gain),g.connect(m.gain),d.connect(o,0,0),m.connect(o,0,1)},disconnectGraph(){e.disconnect(d),e.disconnect(void 0===_.inputs?_:_.inputs[0]),e.disconnect(m),_.disconnect(i),i.disconnect(void 0===f.inputs?f:f.inputs[0]),i.disconnect(void 0===g.inputs?g:g.inputs[0]),f.disconnect(d.gain),g.disconnect(m.gain),d.disconnect(o,0,0),m.disconnect(o,0,1)}}})(t,u,p,d);if(2===o)return((t,i,o,u)=>{const p=new Float32Array(r),d=new Float32Array(r),f=new Float32Array(r),_=new Float32Array(r),m=Math.floor(8192.5);for(let t=0;t<r;t+=1)if(t>m){const e=(t-m)/(16384-m)*c;p[t]=Math.cos(e),d[t]=Math.sin(e),f[t]=0,_[t]=1}else{const e=t/(16384-m)*c;p[t]=1,d[t]=0,f[t]=Math.cos(e),_[t]=Math.sin(e)}const g=e(t,{channelCount:2,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",numberOfOutputs:2}),v=s(t,{...h,gain:0}),y=n(t,{...l,curve:p}),x=s(t,{...h,gain:0}),w=n(t,{...l,curve:d}),b=n(t,{...l,curve:a}),T=s(t,{...h,gain:0}),S=n(t,{...l,curve:f}),k=s(t,{...h,gain:0}),A=n(t,{...l,curve:_});return{connectGraph(){i.connect(g),i.connect(void 0===b.inputs?b:b.inputs[0]),g.connect(v,0),g.connect(x,0),g.connect(T,1),g.connect(k,1),b.connect(o),o.connect(void 0===y.inputs?y:y.inputs[0]),o.connect(void 0===w.inputs?w:w.inputs[0]),o.connect(void 0===S.inputs?S:S.inputs[0]),o.connect(void 0===A.inputs?A:A.inputs[0]),y.connect(v.gain),w.connect(x.gain),S.connect(T.gain),A.connect(k.gain),v.connect(u,0,0),T.connect(u,0,0),x.connect(u,0,1),k.connect(u,0,1)},disconnectGraph(){i.disconnect(g),i.disconnect(void 0===b.inputs?b:b.inputs[0]),g.disconnect(v,0),g.disconnect(x,0),g.disconnect(T,1),g.disconnect(k,1),b.disconnect(o),o.disconnect(void 0===y.inputs?y:y.inputs[0]),o.disconnect(void 0===w.inputs?w:w.inputs[0]),o.disconnect(void 0===S.inputs?S:S.inputs[0]),o.disconnect(void 0===A.inputs?A:A.inputs[0]),y.disconnect(v.gain),w.disconnect(x.gain),S.disconnect(T.gain),A.disconnect(k.gain),v.disconnect(u,0,0),T.disconnect(u,0,0),x.disconnect(u,0,1),k.disconnect(u,0,1)}}})(t,u,p,d);throw i()};return(e,{channelCount:n,channelCountMode:r,pan:a,...c})=>{if(\"max\"===r)throw i();const h=t(e,{...c,channelCount:1,channelCountMode:r,numberOfInputs:2}),l=s(e,{...c,channelCount:n,channelCountMode:r,gain:1}),p=s(e,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",gain:a});let{connectGraph:d,disconnectGraph:f}=u(e,n,l,p,h);Object.defineProperty(p.gain,\"defaultValue\",{get:()=>0}),Object.defineProperty(p.gain,\"maxValue\",{get:()=>1}),Object.defineProperty(p.gain,\"minValue\",{get:()=>-1});const _={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(t){l.channelCount!==t&&(m&&f(),({connectGraph:d,disconnectGraph:f}=u(e,t,l,p,h)),m&&d()),l.channelCount=t},get channelCountMode(){return l.channelCountMode},set channelCountMode(t){if(\"clamped-max\"===t||\"max\"===t)throw i();l.channelCountMode=t},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(t){l.channelInterpretation=t},get context(){return l.context},get inputs(){return[l]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get pan(){return p.gain},addEventListener:(...t)=>l.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>l.dispatchEvent(t[0]),removeEventListener:(...t)=>l.removeEventListener(t[0],t[1],t[2])};let m=!1;return o(zt(_,h),(()=>{d(),m=!0}),(()=>{f(),m=!1}))}})(as,Lt,Bt,js,Zt,os),Zs=((t,e)=>(s,n)=>{const i=n.channelCountMode;if(\"clamped-max\"===i)throw e();if(void 0===s.createStereoPanner)return t(s,n);const o=s.createStereoPanner();return qt(o,n),It(o,n,\"pan\"),Object.defineProperty(o,\"channelCountMode\",{get:()=>i,set:t=>{if(t!==i)throw e()}}),o})(Qs,Zt),Xs=((t,e,s,n,i)=>()=>{const o=new WeakMap;return{render(r,a){const c=o.get(a);return void 0!==c?Promise.resolve(c):(async(r,a)=>{let c=s(r);const h=M(c,a);if(!h){const t={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,pan:c.pan.value};c=e(a,t)}return o.set(a,c),h?await t(a,r.pan,c.pan):await n(a,r.pan,c.pan),X(c)?await i(r,a,c.inputs[0]):await i(r,a,c),c})(r,a)}}})(Xe,Zs,tt,$e,Te),Ys=((t,e,s,n,i,o)=>class extends t{constructor(t,r){const a=i(t),c={...Jt,...r},h=s(a,c),l=o(a);super(t,!1,h,l?n():null),this._pan=e(this,l,h.pan)}get pan(){return this._pan}})(Ve,Je,Zs,Xs,ke,De),$s=((t,e,s)=>()=>{const n=new WeakMap;return{render(i,o){const r=n.get(o);return void 0!==r?Promise.resolve(r):(async(i,o)=>{let r=e(i);if(!M(r,o)){const e={channelCount:r.channelCount,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,curve:r.curve,oversample:r.oversample};r=t(o,e)}return n.set(o,r),X(r)?await s(i,o,r.inputs[0]):await s(i,o,r),r})(i,o)}}})(js,tt,Te),Hs=((t,e,s,n,i,o,r)=>class extends t{constructor(t,e){const a=i(t),c={...te,...e},h=s(a,c);super(t,!0,h,o(a)?n():null),this._isCurveNullified=!1,this._nativeWaveShaperNode=h,r(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(t){if(null===t)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(t.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=t}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(t){this._nativeWaveShaperNode.oversample=t}})(Ve,At,js,$s,ke,De,ns),Js=(t=>null!==t&&t.isSecureContext)(xe),Ks=(t=>(e,s,n)=>{Object.defineProperties(t,{currentFrame:{configurable:!0,get:()=>Math.round(e*s)},currentTime:{configurable:!0,get:()=>e}});try{return n()}finally{null!==t&&(delete t.currentFrame,delete t.currentTime)}})(xe),tn=new WeakMap,en=((t,e)=>s=>{let n=t.get(s);if(void 0!==n)return n;if(null===e)throw new Error(\"Missing the native OfflineAudioContext constructor.\");return n=new e(1,1,44100),t.set(s,n),n})(tn,Ce),sn=Js?((t,e,s,n,i,o,r,a,c,h,l,u,p)=>{let d=0;return(_,m,g={credentials:\"omit\"})=>{const w=l.get(_);if(void 0!==w&&w.has(m))return Promise.resolve();const b=h.get(_);if(void 0!==b){const t=b.get(m);if(void 0!==t)return t}const T=o(_),S=void 0===T.audioWorklet?i(m).then((([t,e])=>{const[n,i]=v(t,e);return s(`${n};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${i}\\n})})(window,'_AWGS')`)})).then((()=>{const t=p._AWGS.pop();if(void 0===t)throw new SyntaxError;n(T.currentTime,T.sampleRate,(()=>t(class{},void 0,((t,s)=>{if(\"\"===t.trim())throw e();const n=f.get(T);if(void 0!==n){if(n.has(t))throw e();x(s),y(s.parameterDescriptors),n.set(t,s)}else x(s),y(s.parameterDescriptors),f.set(T,new Map([[t,s]]))}),T.sampleRate,void 0,void 0)))})):Promise.all([i(m),Promise.resolve(t(u,u))]).then((([[t,e],s])=>{const n=d+1;d=n;const[i,o]=v(t,e),h=new Blob([`${i};((AudioWorkletProcessor,registerProcessor)=>{${o}\\n})(${s?\"AudioWorkletProcessor\":\"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}\"},(n,p)=>registerProcessor(n,class extends p{${s?\"\":\"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));\"}process(i,o,p){${s?\"\":\"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));\"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${n}',class extends AudioWorkletProcessor{process(){return !1}})`],{type:\"application/javascript; charset=utf-8\"}),l=URL.createObjectURL(h);return T.audioWorklet.addModule(l,g).then((()=>{if(a(T))return T;const t=r(T);return t.audioWorklet.addModule(l,g).then((()=>t))})).then((t=>{if(null===c)throw new SyntaxError;try{new c(t,`__sac${n}`)}catch{throw new SyntaxError}})).finally((()=>URL.revokeObjectURL(l)))}));return void 0===b?h.set(_,new Map([[m,S]])):b.set(m,S),S.then((()=>{const t=l.get(_);void 0===t?l.set(_,new Set([m])):t.add(m)})).finally((()=>{const t=h.get(_);void 0!==t&&t.delete(m)})),S}})(ge,Zt,(t=>e=>new Promise(((s,n)=>{if(null===t)return void n(new SyntaxError);const i=t.document.head;if(null===i)n(new SyntaxError);else{const o=t.document.createElement(\"script\"),r=new Blob([e],{type:\"application/javascript\"}),a=URL.createObjectURL(r),c=t.onerror,h=()=>{t.onerror=c,URL.revokeObjectURL(a)};t.onerror=(e,s,i,o,r)=>s===a||s===t.location.href&&1===i&&1===o?(h(),n(r),!1):null!==c?c(e,s,i,o,r):void 0,o.onerror=()=>{h(),n(new SyntaxError)},o.onload=()=>{h(),s()},o.src=a,o.type=\"module\",i.appendChild(o)}})))(xe),Ks,(async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw new DOMException(\"\",\"AbortError\")}),ke,en,De,Ie,new WeakMap,new WeakMap,((t,e)=>async()=>{if(null===t)return!0;if(null===e)return!1;const s=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'],{type:\"application/javascript; charset=utf-8\"}),n=new e(1,128,44100),i=URL.createObjectURL(s);let o=!1,r=!1;try{await n.audioWorklet.addModule(i);const e=new t(n,\"a\",{numberOfOutputs:0}),s=n.createOscillator();e.port.onmessage=()=>o=!0,e.onprocessorerror=()=>r=!0,s.connect(e),s.start(0),await n.startRendering(),await new Promise((t=>setTimeout(t)))}catch{}finally{URL.revokeObjectURL(i)}return o&&!r})(Ie,Ce),xe):void 0,nn=((t,e)=>s=>t(s)||e(s))(Re,De),on=((t,e,s,n,i,o,r,a,c,h,l)=>(s,n)=>{const u=r(s)?s:o(s);if(i.has(n)){const t=new DOMException(\"\",\"DataCloneError\");return Promise.reject(t)}try{i.add(n)}catch{}return e(c,(()=>c(u)))?u.decodeAudioData(n).then((s=>(wt(n).catch((()=>{})),e(a,(()=>a(s)))||l(s),t.add(s),s))):new Promise(((e,s)=>{const i=async()=>{try{await wt(n)}catch{}},o=t=>{s(t),i()};try{u.decodeAudioData(n,(s=>{\"function\"!=typeof s.copyFromChannel&&(h(s),q(s)),t.add(s),i().then((()=>e(s)))}),(t=>{o(null===t?new DOMException(\"\",\"EncodingError\"):t)}))}catch(t){o(t)}}))})(je,ge,0,0,new WeakSet,ke,nn,E,Et,Be,Ue),rn=((t,e,s,n,i,o,r,a,c,h,l,u,p,d,f,_,m,g,v,y)=>class extends f{constructor(e,s){super(e,s),this._nativeContext=e,this._audioWorklet=void 0===t?void 0:{addModule:(e,s)=>t(this,e,s)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new i(this)}createBuffer(t,e,n){return new s({length:e,numberOfChannels:t,sampleRate:n})}createBufferSource(){return new n(this)}createChannelMerger(t=6){return new o(this,{numberOfInputs:t})}createChannelSplitter(t=6){return new r(this,{numberOfOutputs:t})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(t=1){return new l(this,{maxDelayTime:t})}createDynamicsCompressor(){return new u(this)}createGain(){return new p(this)}createIIRFilter(t,e){return new d(this,{feedback:e,feedforward:t})}createOscillator(){return new _(this)}createPanner(){return new m(this)}createPeriodicWave(t,e,s={disableNormalization:!1}){return new g(this,{...s,imag:e,real:t})}createStereoPanner(){return new v(this)}createWaveShaper(){return new y(this)}decodeAudioData(t,e,s){return h(this._nativeContext,t).then((t=>(\"function\"==typeof e&&e(t),t)),(t=>{throw\"function\"==typeof s&&s(t),t}))}})(sn,Pe,Ge,ts,is,hs,us,_s,vs,on,xs,Ts,ks,Ms,qs,Vs,Bs,Gs,Ys,Hs),an=((t,e,s,n)=>class extends t{constructor(t,e){const i=s(t),o=((t,e)=>t.createMediaElementSource(e.mediaElement))(i,e);if(n(i))throw TypeError();super(t,!0,o,null),this._nativeMediaElementAudioSourceNode=o}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}})(Ve,0,ke,De),cn=((t,e,s,n)=>class extends t{constructor(t,e){const i=s(t);if(n(i))throw new TypeError;const o=((t,e)=>{const s=t.createMediaStreamDestination();return qt(s,e),1===s.numberOfOutputs&&Object.defineProperty(s,\"numberOfOutputs\",{get:()=>0}),s})(i,{...Mt,...e});super(t,!1,o,null),this._nativeMediaStreamAudioDestinationNode=o}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}})(Ve,0,ke,De),hn=((t,e,s,n)=>class extends t{constructor(t,e){const i=s(t),o=((t,{mediaStream:e})=>{const s=e.getAudioTracks();s.sort(((t,e)=>t.id<e.id?-1:t.id>e.id?1:0));const n=s.slice(0,1),i=t.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(i,\"mediaStream\",{value:e}),i})(i,e);if(n(i))throw new TypeError;super(t,!0,o,null),this._nativeMediaStreamAudioSourceNode=o}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}})(Ve,0,ke,De),ln=((t,e)=>(s,{mediaStreamTrack:n})=>{if(\"function\"==typeof s.createMediaStreamTrackSource)return s.createMediaStreamTrackSource(n);const i=new MediaStream([n]),o=s.createMediaStreamSource(i);if(\"audio\"!==n.kind)throw t();if(e(s))throw new TypeError;return o})(At,De),un=((t,e,s)=>class extends t{constructor(t,n){const i=s(t);super(t,!0,e(i,n),null)}})(Ve,ln,ke),pn=((t,e,s,n,i,o,r,a,c)=>class extends t{constructor(t={}){if(null===c)throw new Error(\"Missing the native AudioContext constructor.\");let e;try{e=new c(t)}catch(t){if(12===t.code&&\"sampleRate is not in range\"===t.message)throw s();throw t}if(null===e)throw n();if(!(t=>void 0===t||\"number\"==typeof t||\"string\"==typeof t&&(\"balanced\"===t||\"interactive\"===t||\"playback\"===t))(t.latencyHint))throw new TypeError(`The provided value '${t.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(void 0!==t.sampleRate&&e.sampleRate!==t.sampleRate)throw s();super(e,2);const{latencyHint:i}=t,{sampleRate:o}=e;if(this._baseLatency=\"number\"==typeof e.baseLatency?e.baseLatency:\"balanced\"===i?512/o:\"interactive\"===i||void 0===i?256/o:\"playback\"===i?1024/o:128*Math.max(2,Math.min(128,Math.round(i*o/128)))/o,this._nativeAudioContext=e,\"webkitAudioContext\"===c.name?(this._nativeGainNode=e.createGain(),this._nativeOscillatorNode=e.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(e.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,\"running\"===e.state){this._state=\"suspended\";const t=()=>{\"suspended\"===this._state&&(this._state=null),e.removeEventListener(\"statechange\",t)};e.addEventListener(\"statechange\",t)}}get baseLatency(){return this._baseLatency}get state(){return null!==this._state?this._state:this._nativeAudioContext.state}close(){return\"closed\"===this.state?this._nativeAudioContext.close().then((()=>{throw e()})):(\"suspended\"===this._state&&(this._state=null),this._nativeAudioContext.close().then((()=>{null!==this._nativeGainNode&&null!==this._nativeOscillatorNode&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),W(this)})))}createMediaElementSource(t){return new i(this,{mediaElement:t})}createMediaStreamDestination(){return new o(this)}createMediaStreamSource(t){return new r(this,{mediaStream:t})}createMediaStreamTrackSource(t){return new a(this,{mediaStreamTrack:t})}resume(){return\"suspended\"===this._state?new Promise(((t,e)=>{const s=()=>{this._nativeAudioContext.removeEventListener(\"statechange\",s),\"running\"===this._nativeAudioContext.state?t():this.resume().then(t,e)};this._nativeAudioContext.addEventListener(\"statechange\",s)})):this._nativeAudioContext.resume().catch((t=>{if(void 0===t||15===t.code)throw e();throw t}))}suspend(){return this._nativeAudioContext.suspend().catch((t=>{if(void 0===t)throw e();throw t}))}})(rn,At,Zt,Kt,an,cn,hn,un,Ee),dn=(t=>e=>{const s=t.get(e);if(void 0===s)throw new Error(\"The context has no set of AudioWorkletNodes.\");return s})(Rs),fn=(t=>(e,s)=>{t(e).add(s)})(dn),_n=(t=>(e,s,n=0,i=0)=>{const o=e[n];if(void 0===o)throw t();return rt(s)?o.connect(s,0,i):o.connect(s,0)})(R),mn=(t=>(e,s)=>{t(e).delete(s)})(dn),gn=(t=>(e,s,n,i=0)=>void 0===s?e.forEach((t=>t.disconnect())):\"number\"==typeof s?Tt(t,e,s).disconnect():rt(s)?void 0===n?e.forEach((t=>t.disconnect(s))):void 0===i?Tt(t,e,n).disconnect(s,0):Tt(t,e,n).disconnect(s,0,i):void 0===n?e.forEach((t=>t.disconnect(s))):Tt(t,e,n).disconnect(s,0))(R),vn=new WeakMap,yn=((t,e)=>s=>e(t,s))(vn,w),xn=((t,e,s,n,i,o,r,a,c,h,l,u,p)=>(d,f,m,g)=>{if(0===g.numberOfInputs&&0===g.numberOfOutputs)throw c();const v=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(v.some((t=>t<1)))throw c();if(v.length!==g.numberOfOutputs)throw e();if(\"explicit\"!==g.channelCountMode)throw c();const y=g.channelCount*g.numberOfInputs,x=v.reduce(((t,e)=>t+e),0),w=void 0===m.parameterDescriptors?0:m.parameterDescriptors.length;if(y+w>6||x>6)throw c();const b=new MessageChannel,T=[],S=[];for(let t=0;t<g.numberOfInputs;t+=1)T.push(r(d,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),S.push(i(d,{channelCount:g.channelCount,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",numberOfOutputs:g.channelCount}));const k=[];if(void 0!==m.parameterDescriptors)for(const{defaultValue:t,maxValue:e,minValue:s,name:n}of m.parameterDescriptors){const i=o(d,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",offset:void 0!==g.parameterData[n]?g.parameterData[n]:void 0===t?0:t});Object.defineProperties(i.offset,{defaultValue:{get:()=>void 0===t?0:t},maxValue:{get:()=>void 0===e?V:e},minValue:{get:()=>void 0===s?I:s}}),k.push(i)}const A=n(d,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:Math.max(1,y+w)}),C=Pt(f,d.sampleRate),D=a(d,C,y+w,Math.max(1,x)),O=i(d,{channelCount:Math.max(1,x),channelCountMode:\"explicit\",channelInterpretation:\"discrete\",numberOfOutputs:Math.max(1,x)}),M=[];for(let t=0;t<g.numberOfOutputs;t+=1)M.push(n(d,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:v[t]}));for(let t=0;t<g.numberOfInputs;t+=1){T[t].connect(S[t]);for(let e=0;e<g.channelCount;e+=1)S[t].connect(A,e,t*g.channelCount+e)}const E=new lt(void 0===m.parameterDescriptors?[]:m.parameterDescriptors.map((({name:t},e)=>{const s=k[e];return s.connect(A,0,y+e),s.start(0),[t,s.offset]})));A.connect(D);let R=g.channelInterpretation,q=null;const F=0===g.numberOfOutputs?[D]:M,N={get bufferSize(){return C},get channelCount(){return g.channelCount},set channelCount(t){throw s()},get channelCountMode(){return g.channelCountMode},set channelCountMode(t){throw s()},get channelInterpretation(){return R},set channelInterpretation(t){for(const e of T)e.channelInterpretation=t;R=t},get context(){return D.context},get inputs(){return T},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return q},set onprocessorerror(t){\"function\"==typeof q&&N.removeEventListener(\"processorerror\",q),q=\"function\"==typeof t?t:null,\"function\"==typeof q&&N.addEventListener(\"processorerror\",q)},get parameters(){return E},get port(){return b.port2},addEventListener:(...t)=>D.addEventListener(t[0],t[1],t[2]),connect:t.bind(null,F),disconnect:h.bind(null,F),dispatchEvent:(...t)=>D.dispatchEvent(t[0]),removeEventListener:(...t)=>D.removeEventListener(t[0],t[1],t[2])},P=new Map;var j,L;b.port1.addEventListener=(j=b.port1.addEventListener,(...t)=>{if(\"message\"===t[0]){const e=\"function\"==typeof t[1]?t[1]:\"object\"==typeof t[1]&&null!==t[1]&&\"function\"==typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const s=P.get(t[1]);void 0!==s?t[1]=s:(t[1]=t=>{l(d.currentTime,d.sampleRate,(()=>e(t)))},P.set(e,t[1]))}}return j.call(b.port1,t[0],t[1],t[2])}),b.port1.removeEventListener=(L=b.port1.removeEventListener,(...t)=>{if(\"message\"===t[0]){const e=P.get(t[1]);void 0!==e&&(P.delete(t[1]),t[1]=e)}return L.call(b.port1,t[0],t[1],t[2])});let z=null;Object.defineProperty(b.port1,\"onmessage\",{get:()=>z,set:t=>{\"function\"==typeof z&&b.port1.removeEventListener(\"message\",z),z=\"function\"==typeof t?t:null,\"function\"==typeof z&&(b.port1.addEventListener(\"message\",z),b.port1.start())}}),m.prototype.port=b.port1;let W=null;const B=((t,e,s,n)=>{let i=_.get(t);void 0===i&&(i=new WeakMap,_.set(t,i));const o=(async(t,e)=>{const s=await(t=>new Promise(((e,s)=>{const{port1:n,port2:i}=new MessageChannel;n.onmessage=({data:t})=>{n.close(),i.close(),e(t)},n.onmessageerror=({data:t})=>{n.close(),i.close(),s(t)},i.postMessage(t)})))(e);return new t(s)})(s,n);return i.set(e,o),o})(d,N,m,g);B.then((t=>W=t));const U=ft(g.numberOfInputs,g.channelCount),G=ft(g.numberOfOutputs,v),Q=void 0===m.parameterDescriptors?[]:m.parameterDescriptors.reduce(((t,{name:e})=>({...t,[e]:new Float32Array(128)})),{});let Z=!0;const X=()=>{g.numberOfOutputs>0&&D.disconnect(O);for(let t=0,e=0;t<g.numberOfOutputs;t+=1){const s=M[t];for(let n=0;n<v[t];n+=1)O.disconnect(s,e+n,n);e+=v[t]}},Y=new Map;D.onaudioprocess=({inputBuffer:t,outputBuffer:e})=>{if(null!==W){const s=u(N);for(let n=0;n<C;n+=128){for(let e=0;e<g.numberOfInputs;e+=1)for(let s=0;s<g.channelCount;s+=1)pt(t,U[e],s,s,n);void 0!==m.parameterDescriptors&&m.parameterDescriptors.forEach((({name:e},s)=>{pt(t,Q,e,y+s,n)}));for(let t=0;t<g.numberOfInputs;t+=1)for(let e=0;e<v[t];e+=1)0===G[t][e].byteLength&&(G[t][e]=new Float32Array(128));try{const t=U.map(((t,e)=>{if(s[e].size>0)return Y.set(e,C/128),t;const n=Y.get(e);return void 0===n?[]:(t.every((t=>t.every((t=>0===t))))&&(1===n?Y.delete(e):Y.set(e,n-1)),t)})),i=l(d.currentTime+n/d.sampleRate,d.sampleRate,(()=>W.process(t,G,Q)));Z=i;for(let t=0,s=0;t<g.numberOfOutputs;t+=1){for(let i=0;i<v[t];i+=1)dt(e,G[t],i,s+i,n);s+=v[t]}}catch(t){Z=!1,N.dispatchEvent(new ErrorEvent(\"processorerror\",{colno:t.colno,filename:t.filename,lineno:t.lineno,message:t.message}))}if(!Z){for(let t=0;t<g.numberOfInputs;t+=1){T[t].disconnect(S[t]);for(let e=0;e<g.channelCount;e+=1)S[n].disconnect(A,e,t*g.channelCount+e)}if(void 0!==m.parameterDescriptors){const t=m.parameterDescriptors.length;for(let e=0;e<t;e+=1){const t=k[e];t.disconnect(A,0,y+e),t.stop()}}A.disconnect(D),D.onaudioprocess=null,$?X():K();break}}}};let $=!1;const H=r(d,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",gain:0}),J=()=>D.connect(H).connect(d.destination),K=()=>{D.disconnect(H),H.disconnect()};return J(),p(N,(()=>{if(Z){K(),g.numberOfOutputs>0&&D.connect(O);for(let t=0,e=0;t<g.numberOfOutputs;t+=1){const s=M[t];for(let n=0;n<v[t];n+=1)O.connect(s,e+n,n);e+=v[t]}}$=!0}),(()=>{Z&&(J(),X()),$=!1}))})(_n,R,At,as,Lt,ds,Bt,Qt,Zt,gn,Ks,yn,os),wn=((t,e,s,n,i)=>(o,r,a,c,h,l)=>{if(null!==a)try{const e=new a(o,c,l),n=new Map;let r=null;if(Object.defineProperties(e,{channelCount:{get:()=>l.channelCount,set:()=>{throw t()}},channelCountMode:{get:()=>\"explicit\",set:()=>{throw t()}},onprocessorerror:{get:()=>r,set:t=>{\"function\"==typeof r&&e.removeEventListener(\"processorerror\",r),r=\"function\"==typeof t?t:null,\"function\"==typeof r&&e.addEventListener(\"processorerror\",r)}}}),e.addEventListener=(p=e.addEventListener,(...t)=>{if(\"processorerror\"===t[0]){const e=\"function\"==typeof t[1]?t[1]:\"object\"==typeof t[1]&&null!==t[1]&&\"function\"==typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const s=n.get(t[1]);void 0!==s?t[1]=s:(t[1]=s=>{\"error\"===s.type?(Object.defineProperties(s,{type:{value:\"processorerror\"}}),e(s)):e(new ErrorEvent(t[0],{...s}))},n.set(e,t[1]))}}return p.call(e,\"error\",t[1],t[2]),p.call(e,...t)}),e.removeEventListener=(u=e.removeEventListener,(...t)=>{if(\"processorerror\"===t[0]){const e=n.get(t[1]);void 0!==e&&(n.delete(t[1]),t[1]=e)}return u.call(e,\"error\",t[1],t[2]),u.call(e,t[0],t[1],t[2])}),0!==l.numberOfOutputs){const t=s(o,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",gain:0});return e.connect(t).connect(o.destination),i(e,(()=>t.disconnect()),(()=>t.connect(o.destination)))}return e}catch(t){if(11===t.code)throw n();throw t}var u,p;if(void 0===h)throw n();return(t=>{const{port1:e}=new MessageChannel;try{e.postMessage(t)}finally{e.close()}})(l),e(o,r,h,l)})(At,xn,Bt,Zt,os),bn=((t,e,s,n,i,o,r,a,c,h,l,u,p,d,f,_)=>(m,g,v)=>{const y=new WeakMap;let x=null;return{render(w,b){a(b,w);const T=y.get(b);return void 0!==T?Promise.resolve(T):(async(a,w)=>{let b=l(a),T=null;const S=M(b,w),k=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(null===u){const t=k.reduce(((t,e)=>t+e),0),s=i(w,{channelCount:Math.max(1,t),channelCountMode:\"explicit\",channelInterpretation:\"discrete\",numberOfOutputs:Math.max(1,t)}),o=[];for(let t=0;t<a.numberOfOutputs;t+=1)o.push(n(w,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:k[t]}));const h=r(w,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1});h.connect=e.bind(null,o),h.disconnect=c.bind(null,o),T=[s,o,h]}else S||(b=new u(w,m));if(y.set(w,null===T?b:T[2]),null!==T){if(null===x){if(void 0===v)throw new Error(\"Missing the processor constructor.\");if(null===p)throw new Error(\"Missing the native OfflineAudioContext constructor.\");const t=a.channelCount*a.numberOfInputs,e=void 0===v.parameterDescriptors?0:v.parameterDescriptors.length,s=t+e,c=async()=>{const c=new p(s,128*Math.ceil(a.context.length/128),w.sampleRate),h=[],l=[];for(let t=0;t<g.numberOfInputs;t+=1)h.push(r(c,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),l.push(i(c,{channelCount:g.channelCount,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",numberOfOutputs:g.channelCount}));const u=await Promise.all(Array.from(a.parameters.values()).map((async t=>{const e=o(c,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"discrete\",offset:t.value});return await d(c,t,e.offset),e}))),m=n(c,{channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:Math.max(1,t+e)});for(let t=0;t<g.numberOfInputs;t+=1){h[t].connect(l[t]);for(let e=0;e<g.channelCount;e+=1)l[t].connect(m,e,t*g.channelCount+e)}for(const[e,s]of u.entries())s.connect(m,0,t+e),s.start(0);return m.connect(c.destination),await Promise.all(h.map((t=>f(a,c,t)))),_(c)};x=_t(a,0===s?null:await c(),w,g,k,v,h)}const t=await x,e=s(w,{buffer:null,channelCount:2,channelCountMode:\"max\",channelInterpretation:\"speakers\",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[c,l,u]=T;null!==t&&(e.buffer=t,e.start(0)),e.connect(c);for(let t=0,e=0;t<a.numberOfOutputs;t+=1){const s=l[t];for(let n=0;n<k[t];n+=1)c.connect(s,e+n,n);e+=k[t]}return u}if(S)for(const[e,s]of a.parameters.entries())await t(w,s,b.parameters.get(e));else for(const[t,e]of a.parameters.entries())await d(w,e,b.parameters.get(t));return await f(a,w,b),b})(w,b)}}})(Xe,_n,Ye,as,Lt,ds,Bt,mn,gn,Ks,tt,Ie,Ce,$e,Te,Cs),Tn=(t=>e=>t.get(e))(tn),Sn=(t=>(e,s)=>{t.set(e,s)})(vn),kn=Js?((t,e,s,n,i,o,r,a,c,h,l,u,p,d)=>class extends e{constructor(e,l,p){var d;const _=a(e),m=c(_),g=(t=>({...t,outputChannelCount:void 0!==t.outputChannelCount?t.outputChannelCount:1===t.numberOfInputs&&1===t.numberOfOutputs?[t.channelCount]:Array.from({length:t.numberOfOutputs},(()=>1))}))({...ut,...p});(t=>{const{port1:e,port2:s}=new MessageChannel;try{e.postMessage(t)}finally{e.close(),s.close()}})(g);const v=f.get(_),y=null==v?void 0:v.get(l),x=m||\"closed\"!==_.state?_:null!==(d=r(_))&&void 0!==d?d:_,w=i(x,m?null:e.baseLatency,h,l,y,g);super(e,!0,w,m?n(l,g,y):null);const b=[];w.parameters.forEach(((t,e)=>{const n=s(this,m,t);b.push([e,n])})),this._nativeAudioWorkletNode=w,this._onprocessorerror=null,this._parameters=new lt(b),m&&t(_,this);const{activeInputs:T}=o(this);u(w,T)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(t){const e=\"function\"==typeof t?d(this,t):null;this._nativeAudioWorkletNode.onprocessorerror=e;const s=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=null!==s&&s===e?t:s}get parameters(){return null===this._parameters?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}})(fn,Ve,Je,bn,wn,j,Tn,ke,De,Ie,0,Sn,0,ue):void 0,An=((t,e)=>(s,n,i)=>{if(null===e)throw new Error(\"Missing the native OfflineAudioContext constructor.\");try{return new e(s,n,i)}catch(e){if(\"SyntaxError\"===e.name)throw t();throw e}})(Zt,Ce),Cn=((t,e,s,n,i,o,r,a)=>(c,h)=>s(c).render(c,h).then((()=>Promise.all(Array.from(n(h)).map((t=>s(t).render(t,h)))))).then((()=>i(h))).then((s=>(\"function\"!=typeof s.copyFromChannel?(r(s),q(s)):e(o,(()=>o(s)))||a(s),t.add(s),s))))(je,ge,be,dn,Cs,E,Be,Ue),Dn=((t,e,s,n,i)=>class extends t{constructor(t,s,i){let o;if(\"number\"==typeof t&&void 0!==s&&void 0!==i)o={length:s,numberOfChannels:t,sampleRate:i};else{if(\"object\"!=typeof t)throw new Error(\"The given parameters are not valid.\");o=t}const{length:r,numberOfChannels:a,sampleRate:c}={...Xt,...o},h=n(a,r,c);e(Et,(()=>Et(h)))||h.addEventListener(\"statechange\",(()=>{let t=0;const e=s=>{\"running\"===this._state&&(t>0?(h.removeEventListener(\"statechange\",e),s.stopImmediatePropagation(),this._waitForThePromiseToSettle(s)):t+=1)};return e})()),super(h,a),this._length=r,this._nativeOfflineAudioContext=h,this._state=null}get length(){return void 0===this._nativeOfflineAudioContext.length?this._length:this._nativeOfflineAudioContext.length}get state(){return null===this._state?this._nativeOfflineAudioContext.state:this._state}startRendering(){return\"running\"===this._state?Promise.reject(s()):(this._state=\"running\",i(this.destination,this._nativeOfflineAudioContext).finally((()=>{this._state=null,W(this)})))}_waitForThePromiseToSettle(t){null===this._state?this._nativeOfflineAudioContext.dispatchEvent(t):setTimeout((()=>this._waitForThePromiseToSettle(t)))}})(rn,ge,At,An,Cn),On=((t,e)=>s=>{const n=t.get(s);return e(n)||e(s)})(u,Re),Mn=((t,e)=>s=>t.has(s)||e(s))(c,qe),En=((t,e)=>s=>t.has(s)||e(s))(l,Fe),Rn=((t,e)=>s=>{const n=t.get(s);return e(n)||e(s)})(u,De),qn=()=>(async(t,e,s,n,i,o,r,a,c,h,l,u,p,d,f,_)=>!!(t(e,e)&&t(s,s)&&t(i,i)&&t(o,o)&&t(a,a)&&t(c,c)&&t(h,h)&&t(l,l)&&t(u,u)&&t(p,p)&&t(d,d))&&(await Promise.all([t(n,n),t(r,r),t(f,f),t(_,_)])).every((t=>t)))(ge,(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100).createBuffer(1,1,44100);if(void 0===e.copyToChannel)return!0;const s=new Float32Array(2);try{e.copyFromChannel(s,0,0)}catch{return!1}return!0})(Ce),(t=>()=>{if(null===t)return!1;if(void 0!==t.prototype&&void 0!==t.prototype.close)return!0;const e=new t,s=void 0!==e.close;try{e.close()}catch{}return s})(Ee),(t=>()=>{if(null===t)return Promise.resolve(!1);const e=new t(1,1,44100);return new Promise((t=>{let s=!0;const n=n=>{s&&(s=!1,e.startRendering(),t(n instanceof TypeError))};let i;try{i=e.decodeAudioData(null,(()=>{}),n)}catch(t){n(t)}void 0!==i&&i.catch(n)}))})(Ce),(t=>()=>{if(null===t)return!1;let e;try{e=new t({latencyHint:\"balanced\"})}catch{return!1}return e.close(),!0})(Ee),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100).createGain(),s=e.connect(e)===e;return e.disconnect(e),s})(Ce),((t,e)=>async()=>{if(null===t)return!0;if(null===e)return!1;const s=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor(\"a\",A)'],{type:\"application/javascript; charset=utf-8\"}),n=new MessageChannel,i=new e(1,128,44100),o=URL.createObjectURL(s);let r=!1;try{await i.audioWorklet.addModule(o);const e=new t(i,\"a\",{numberOfOutputs:0}),s=i.createOscillator();await new Promise((t=>{e.port.onmessage=()=>t(),e.port.postMessage(n.port2,[n.port2])})),e.port.onmessage=()=>r=!0,s.connect(e),s.start(0),await i.startRendering(),r=await new Promise((t=>{n.port1.onmessage=({data:e})=>t(1===e),n.port1.postMessage(0)}))}catch{}finally{n.port1.close(),URL.revokeObjectURL(o)}return r})(Ie,Ce),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100).createChannelMerger();if(\"max\"===e.channelCountMode)return!0;try{e.channelCount=2}catch{return!0}return!1})(Ce),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100);return void 0===e.createConstantSource||e.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY})(Ce),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100),s=e.createConvolver();s.buffer=e.createBuffer(1,1,e.sampleRate);try{s.buffer=e.createBuffer(1,1,e.sampleRate)}catch{return!1}return!0})(Ce),(t=>()=>{if(null===t)return!1;const e=new t(1,1,44100).createConvolver();try{e.channelCount=1}catch{return!1}return!0})(Ce),ce,(t=>()=>null!==t&&t.hasOwnProperty(\"isSecureContext\"))(xe),(t=>()=>{if(null===t)return!1;const e=new t;try{return e.createMediaStreamSource(new MediaStream),!1}catch(t){return!0}finally{e.close()}})(Ee),(t=>()=>{if(null===t)return Promise.resolve(!1);const e=new t(1,1,44100);if(void 0===e.createStereoPanner)return Promise.resolve(!0);if(void 0===e.createConstantSource)return Promise.resolve(!0);const s=e.createConstantSource(),n=e.createStereoPanner();return s.channelCount=1,s.offset.value=1,n.channelCount=1,s.start(),s.connect(n).connect(e.destination),e.startRendering().then((t=>1!==t.getChannelData(0)[0]))})(Ce),he);function Fn(t){return void 0===t}function In(t){return void 0!==t}function Vn(t){return\"function\"==typeof t}function Nn(t){return\"number\"==typeof t}function Pn(t){return\"[object Object]\"===Object.prototype.toString.call(t)&&t.constructor===Object}function jn(t){return\"boolean\"==typeof t}function Ln(t){return Array.isArray(t)}function zn(t){return\"string\"==typeof t}function Wn(t){return zn(t)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(t)}function Bn(t,e){if(!t)throw new Error(e)}function Un(t,e,s=1/0){if(!(e<=t&&t<=s))throw new RangeError(`Value must be within [${e}, ${s}], got: ${t}`)}function Gn(t){t.isOffline||\"running\"===t.state||Kn('The AudioContext is \"suspended\". Invoke Tone.start() from a user action to start the audio.')}let Qn=!1,Zn=!1;function Xn(t){Qn=t}function Yn(t){Fn(t)&&Qn&&!Zn&&(Zn=!0,Kn(\"Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing\"))}let $n=console;function Hn(t){$n=t}function Jn(...t){$n.log(...t)}function Kn(...t){$n.warn(...t)}const ti=\"object\"==typeof self?self:null,ei=ti&&(ti.hasOwnProperty(\"AudioContext\")||ti.hasOwnProperty(\"webkitAudioContext\"));function si(t,e,s,n){var i,o=arguments.length,r=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,s):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)r=Reflect.decorate(t,e,s,n);else for(var a=t.length-1;a>=0;a--)(i=t[a])&&(r=(o<3?i(r):o>3?i(e,s,r):i(e,s))||r);return o>3&&r&&Object.defineProperty(e,s,r),r}function ni(t,e,s,n){return new(s||(s=Promise))((function(i,o){function r(t){try{c(n.next(t))}catch(t){o(t)}}function a(t){try{c(n.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?i(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(r,a)}c((n=n.apply(t,e||[])).next())}))}Object.create,Object.create,\"function\"==typeof SuppressedError&&SuppressedError;class ii{constructor(t,e,s,n){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(n||44100),.001),this.updateInterval=s,this._createClock()}_createWorker(){const t=new Blob([`\\n\\t\\t\\t// the initial timeout time\\n\\t\\t\\tlet timeoutTime =  ${(1e3*this._updateInterval).toFixed(1)};\\n\\t\\t\\t// onmessage callback\\n\\t\\t\\tself.onmessage = function(msg){\\n\\t\\t\\t\\ttimeoutTime = parseInt(msg.data);\\n\\t\\t\\t};\\n\\t\\t\\t// the tick function which posts a message\\n\\t\\t\\t// and schedules a new tick\\n\\t\\t\\tfunction tick(){\\n\\t\\t\\t\\tsetTimeout(tick, timeoutTime);\\n\\t\\t\\t\\tself.postMessage('tick');\\n\\t\\t\\t}\\n\\t\\t\\t// call tick initially\\n\\t\\t\\ttick();\\n\\t\\t\\t`],{type:\"text/javascript\"}),e=URL.createObjectURL(t),s=new Worker(e);s.onmessage=this._callback.bind(this),this._worker=s}_createTimeout(){this._timeout=setTimeout((()=>{this._createTimeout(),this._callback()}),1e3*this._updateInterval)}_createClock(){if(\"worker\"===this._type)try{this._createWorker()}catch(t){this._type=\"timeout\",this._createClock()}else\"timeout\"===this._type&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),\"worker\"===this._type&&(null===(e=this._worker)||void 0===e||e.postMessage(1e3*this._updateInterval))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function oi(t){return En(t)}function ri(t){return Mn(t)}function ai(t){return Rn(t)}function ci(t){return On(t)}function hi(t,e){return\"value\"===t||oi(e)||ri(e)||function(t){return t instanceof Ge}(e)}function li(t,...e){if(!e.length)return t;const s=e.shift();if(Pn(t)&&Pn(s))for(const e in s)hi(e,s[e])?t[e]=s[e]:Pn(s[e])?(t[e]||Object.assign(t,{[e]:{}}),li(t[e],s[e])):Object.assign(t,{[e]:s[e]});return li(t,...e)}function ui(t,e,s=[],n){const i={},o=Array.from(e);if(Pn(o[0])&&n&&!Reflect.has(o[0],n)&&(Object.keys(o[0]).some((e=>Reflect.has(t,e)))||(li(i,{[n]:o[0]}),s.splice(s.indexOf(n),1),o.shift())),1===o.length&&Pn(o[0]))li(i,o[0]);else for(let t=0;t<s.length;t++)In(o[t])&&(i[s[t]]=o[t]);return li(t,i)}function pi(t,e){return Fn(t)?e:t}function di(t,e){return e.forEach((e=>{Reflect.has(t,e)&&delete t[e]})),t}class fi{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||ti&&this.toString()===ti.TONE_DEBUG_CLASS)&&Jn(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}fi.version=i;const _i=1e-6;function mi(t,e){return t>e+_i}function gi(t,e){return mi(t,e)||yi(t,e)}function vi(t,e){return t+_i<e}function yi(t,e){return Math.abs(t-e)<_i}function xi(t,e,s){return Math.max(Math.min(t,s),e)}class wi extends fi{constructor(){super(),this.name=\"Timeline\",this._timeline=[];const t=ui(wi.getDefaults(),arguments,[\"memory\"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(Bn(Reflect.has(t,\"time\"),\"Timeline: events must have a time attribute\"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];Bn(gi(t.time,e.time),\"The time must be greater than or equal to the last scheduled time\"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(t){const e=this._timeline.indexOf(t);return-1!==e&&this._timeline.splice(e,1),this}get(t,e=\"time\"){const s=this._search(t,e);return-1!==s?this._timeline[s]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e=\"time\"){const s=this._search(t,e);return s+1<this._timeline.length?this._timeline[s+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const s=this._search(t);return s-1>=0?this._timeline[s-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(yi(this._timeline[e].time,t)){for(let s=e;s>=0&&yi(this._timeline[s].time,t);s--)e=s;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else 1===this._timeline.length&&gi(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e=\"time\"){if(0===this._timeline.length)return-1;let s=0;const n=this._timeline.length;let i=n;if(n>0&&this._timeline[n-1][e]<=t)return n-1;for(;s<i;){let n=Math.floor(s+(i-s)/2);const o=this._timeline[n],r=this._timeline[n+1];if(yi(o[e],t)){for(let s=n;s<this._timeline.length&&yi(this._timeline[s][e],t);s++)n=s;return n}if(vi(o[e],t)&&mi(r[e],t))return n;mi(o[e],t)?i=n:s=n+1}return-1}_iterate(t,e=0,s=this._timeline.length-1){this._timeline.slice(e,s+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const s=this._search(t);return-1!==s&&this._iterate(e,0,s),this}forEachAfter(t,e){const s=this._search(t);return this._iterate(e,s+1),this}forEachBetween(t,e,s){let n=this._search(t),i=this._search(e);return-1!==n&&-1!==i?(this._timeline[n].time!==t&&(n+=1),this._timeline[i].time===e&&(i-=1),this._iterate(s,n,i)):-1===n&&this._iterate(s,0,i),this}forEachFrom(t,e){let s=this._search(t);for(;s>=0&&this._timeline[s].time>=t;)s--;return this._iterate(e,s+1),this}forEachAtTime(t,e){const s=this._search(t);if(-1!==s&&yi(this._timeline[s].time,t)){let n=s;for(let e=s;e>=0&&yi(this._timeline[e].time,t);e--)n=e;this._iterate((t=>{e(t)}),n,s)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const bi=[];function Ti(t){bi.push(t)}const Si=[];function ki(t){Si.push(t)}class Ai extends fi{constructor(){super(...arguments),this.name=\"Emitter\"}on(t,e){return t.split(/\\W+/).forEach((t=>{Fn(this._events)&&(this._events={}),this._events.hasOwnProperty(t)||(this._events[t]=[]),this._events[t].push(e)})),this}once(t,e){const s=(...n)=>{e(...n),this.off(t,s)};return this.on(t,s),this}off(t,e){return t.split(/\\W+/).forEach((t=>{if(Fn(this._events)&&(this._events={}),this._events.hasOwnProperty(t))if(Fn(e))this._events[t]=[];else{const s=this._events[t];for(let t=s.length-1;t>=0;t--)s[t]===e&&s.splice(t,1)}})),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const s=this._events[t].slice(0);for(let t=0,n=s.length;t<n;t++)s[t].apply(this,e)}return this}static mixin(t){[\"on\",\"once\",\"off\",\"emit\"].forEach((e=>{const s=Object.getOwnPropertyDescriptor(Ai.prototype,e);Object.defineProperty(t.prototype,e,s)}))}dispose(){return super.dispose(),this._events=void 0,this}}class Ci extends Ai{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Di extends Ci{constructor(){var t,e;super(),this.name=\"Context\",this._constants=new Map,this._timeouts=new wi,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const s=ui(Di.getDefaults(),arguments,[\"context\"]);s.context?(this._context=s.context,this._latencyHint=(null===(t=arguments[0])||void 0===t?void 0:t.latencyHint)||\"\"):(this._context=function(t){return new pn(t)}({latencyHint:s.latencyHint}),this._latencyHint=s.latencyHint),this._ticker=new ii(this.emit.bind(this,\"tick\"),s.clockSource,s.updateInterval,this._context.sampleRate),this.on(\"tick\",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit(\"statechange\",this.state)},this[(null===(e=arguments[0])||void 0===e?void 0:e.hasOwnProperty(\"updateInterval\"))?\"_lookAhead\":\"lookAhead\"]=s.lookAhead}static getDefaults(){return{clockSource:\"worker\",latencyHint:\"interactive\",lookAhead:.1,updateInterval:.05}}initialize(){var t;return this._initialized||(t=this,bi.forEach((e=>e(t))),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,s){return this._context.createBuffer(t,e,s)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,s){return this._context.createPeriodicWave(t,e,s)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return Bn(ci(this._context),\"Not available if OfflineAudioContext\"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return Bn(ci(this._context),\"Not available if OfflineAudioContext\"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return Bn(ci(this._context),\"Not available if OfflineAudioContext\"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){Bn(!this._initialized,\"The listener cannot be set after initialization.\"),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){Bn(!this._initialized,\"The transport cannot be set after initialization.\"),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){Bn(!this._initialized,\"Draw cannot be set after initialization.\"),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){Bn(!this._initialized,\"The destination cannot be set after initialization.\"),this._destination=t}createAudioWorkletNode(t,e){return function(t,e,s){return Bn(In(kn),\"This node only works in a secure context (https or localhost)\"),new kn(t,e,s)}(this.rawContext,t,e)}addAudioWorkletModule(t){return ni(this,void 0,void 0,(function*(){Bn(In(this.rawContext.audioWorklet),\"AudioWorkletNode is only available in a secure context (https or localhost)\"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise}))}workletsAreReady(){return ni(this,void 0,void 0,(function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()}))}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return ci(this._context)?this._context.resume():Promise.resolve()}close(){return ni(this,void 0,void 0,(function*(){var t;ci(this._context)&&\"closed\"!==this.state&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&(t=this,Si.forEach((e=>e(t))))}))}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),s=e.getChannelData(0);for(let e=0;e<s.length;e++)s[e]=t;const n=this._context.createBufferSource();return n.channelCount=1,n.channelCountMode=\"explicit\",n.buffer=e,n.loop=!0,n.start(0),this._constants.set(t,n),n}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map((t=>this._constants[t].disconnect())),this.close(),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const s=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:s+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach((e=>{e.id===t&&this._timeouts.remove(e)})),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const s=++this._timeoutIds,n=()=>{const i=this.now();this._timeouts.add({callback:()=>{t(),n()},id:s,time:i+e})};return n(),s}}function Oi(t,e){Ln(e)?e.forEach((e=>Oi(t,e))):Object.defineProperty(t,e,{enumerable:!0,writable:!1})}function Mi(t,e){Ln(e)?e.forEach((e=>Mi(t,e))):Object.defineProperty(t,e,{writable:!0})}const Ei=()=>{};class Ri extends fi{constructor(){super(),this.name=\"ToneAudioBuffer\",this.onload=Ei;const t=ui(Ri.getDefaults(),arguments,[\"url\",\"onload\",\"onerror\"]);this.reverse=t.reverse,this.onload=t.onload,zn(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Ei,onload:Ei,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Vi().sampleRate}set(t){return t instanceof Ri?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return ni(this,void 0,void 0,(function*(){const e=Ri.load(t).then((t=>{this.set(t),this.onload(this)}));Ri.downloads.push(e);try{yield e}finally{const t=Ri.downloads.indexOf(e);Ri.downloads.splice(t,1)}return this}))}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Ln(t)&&t[0].length>0,s=e?t.length:1,n=e?t[0].length:t.length,i=Vi(),o=i.createBuffer(s,n,i.sampleRate),r=e||1!==s?t:[t];for(let t=0;t<s;t++)o.copyToChannel(r[t],t);return this._buffer=o,this}toMono(t){if(Nn(t))this.fromArray(this.toArray(t));else{let t=new Float32Array(this.length);const e=this.numberOfChannels;for(let s=0;s<e;s++){const e=this.toArray(s);for(let s=0;s<e.length;s++)t[s]+=e[s]}t=t.map((t=>t/e)),this.fromArray(t)}return this}toArray(t){if(Nn(t))return this.getChannelData(t);if(1===this.numberOfChannels)return this.toArray(0);{const t=[];for(let e=0;e<this.numberOfChannels;e++)t[e]=this.getChannelData(e);return t}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){Bn(this.loaded,\"Buffer is not loaded\");const s=Math.floor(t*this.sampleRate),n=Math.floor(e*this.sampleRate);Bn(s<n,\"The start time must be less than the end time\");const i=n-s,o=Vi().createBuffer(this.numberOfChannels,i,this.sampleRate);for(let t=0;t<this.numberOfChannels;t++)o.copyToChannel(this.getChannelData(t).subarray(s,n),t);return new Ri(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return(new Ri).fromArray(t)}static fromUrl(t){return ni(this,void 0,void 0,(function*(){const e=new Ri;return yield e.load(t)}))}static load(t){return ni(this,void 0,void 0,(function*(){const e=t.match(/\\[([^\\]\\[]+\\|.+)\\]$/);if(e){const s=e[1].split(\"|\");let n=s[0];for(const t of s)if(Ri.supportsType(t)){n=t;break}t=t.replace(e[0],n)}const s=\"\"===Ri.baseUrl||Ri.baseUrl.endsWith(\"/\")?Ri.baseUrl:Ri.baseUrl+\"/\",n=document.createElement(\"a\");n.href=s+t,n.pathname=(n.pathname+n.hash).split(\"/\").map(encodeURIComponent).join(\"/\");const i=yield fetch(n.href);if(!i.ok)throw new Error(`could not load url: ${t}`);const o=yield i.arrayBuffer();return yield Vi().decodeAudioData(o)}))}static supportsType(t){const e=t.split(\".\"),s=e[e.length-1];return\"\"!==document.createElement(\"audio\").canPlayType(\"audio/\"+s)}static loaded(){return ni(this,void 0,void 0,(function*(){for(yield Promise.resolve();Ri.downloads.length;)yield Ri.downloads[0]}))}}Ri.baseUrl=\"\",Ri.downloads=[];class qi extends Di{constructor(){var t,e,s;super({clockSource:\"offline\",context:ai(arguments[0])?arguments[0]:(t=arguments[0],e=arguments[1]*arguments[2],s=arguments[2],new Dn(t,e,s)),lookAhead:0,updateInterval:ai(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name=\"OfflineContext\",this._currentTime=0,this.isOffline=!0,this._duration=ai(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return ni(this,void 0,void 0,(function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit(\"tick\"),this._currentTime+=128/this.sampleRate,e++;const s=Math.floor(this.sampleRate/128);t&&e%s==0&&(yield new Promise((t=>setTimeout(t,1))))}}))}render(t=!0){return ni(this,void 0,void 0,(function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new Ri(e)}))}close(){return Promise.resolve()}}const Fi=new class extends Ci{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,s){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,s){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return ni(this,void 0,void 0,(function*(){return Promise.resolve()}))}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}};let Ii=Fi;function Vi(){return Ii===Fi&&ei&&Ni(new Di),Ii}function Ni(t,e=!1){e&&Ii.dispose(),Ii=ci(t)?new Di(t):ai(t)?new qi(t):t}function Pi(){return Ii.resume()}if(ti&&!ti.TONE_SILENCE_LOGGING){let t=\"v\";\"dev\"===i&&(t=\"\");const e=` * Tone.js ${t}${i} * `;console.log(`%c${e}`,\"background: #000; color: #fff\")}function ji(t){return Math.pow(10,t/20)}function Li(t){return Math.log(t)/Math.LN10*20}function zi(t){return Math.pow(2,t/12)}let Wi=440;function Bi(t){return Math.round(Ui(t))}function Ui(t){return 69+12*Math.log2(t/Wi)}function Gi(t){return Wi*Math.pow(2,(t-69)/12)}class Qi extends fi{constructor(t,e,s){super(),this.defaultUnits=\"s\",this._val=e,this._units=s,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\\d+(?:\\.\\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\\d+)m$/i},n:{method:(t,e)=>{const s=parseInt(t,10),n=\".\"===e?1.5:1;return 1===s?this._beatsToUnits(this._getTimeSignature())*n:this._beatsToUnits(4/s)*n},regexp:/^(\\d+)n(\\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\\d+(?:\\.\\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\\d+(?:\\.\\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(3*Math.floor(e)))},regexp:/^(\\d+)t$/i},tr:{method:(t,e,s)=>{let n=0;return t&&\"0\"!==t&&(n+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&\"0\"!==e&&(n+=this._beatsToUnits(parseFloat(e))),s&&\"0\"!==s&&(n+=this._beatsToUnits(parseFloat(s)/4)),n},regexp:/^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/}}}valueOf(){if(this._val instanceof Qi&&this.fromType(this._val),Fn(this._val))return this._noArg();if(zn(this._val)&&Fn(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(Pn(this._val)){let t=0;for(const e in this._val)if(In(this._val[e])){const s=this._val[e];t+=new this.constructor(this.context,e).valueOf()*s}return t}if(In(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}return zn(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case\"s\":this._val=t.toSeconds();break;case\"i\":this._val=t.toTicks();break;case\"hz\":this._val=t.toFrequency();break;case\"midi\":this._val=t.toMidi()}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return 1e3*this.toSeconds()}}class Zi extends Qi{constructor(){super(...arguments),this.name=\"TimeClass\"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\\+(.+)/},quantize:{method:t=>{const e=new Zi(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const s=new this.constructor(this.context,t).valueOf(),n=this.valueOf();return n+(Math.round(n/s)*s-n)*e}toNotation(){const t=this.toSeconds(),e=[\"1m\"];for(let t=1;t<9;t++){const s=Math.pow(2,t);e.push(s+\"n.\"),e.push(s+\"n\"),e.push(s+\"t\")}e.push(\"0\");let s=e[0],n=new Zi(this.context,e[0]).toSeconds();return e.forEach((e=>{const i=new Zi(this.context,e).toSeconds();Math.abs(i-t)<Math.abs(n-t)&&(s=e,n=i)})),s}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const s=Math.floor(e/this._getTimeSignature());let n=e%1*4;e=Math.floor(e)%this._getTimeSignature();const i=n.toString();return i.length>3&&(n=parseFloat(parseFloat(i).toFixed(3))),[s,e,n].join(\":\")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return Bi(this.toFrequency())}_now(){return this.context.now()}}function Xi(t,e){return new Zi(Vi(),t,e)}class Yi extends Zi{constructor(){super(...arguments),this.name=\"Frequency\",this.defaultUnits=\"hz\"}static get A4(){return Wi}static set A4(t){!function(t){Wi=t}(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\\d+(?:\\.\\d+)?midi)/,method(t){return\"midi\"===this.defaultUnits?t:Yi.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const s=$i[t.toLowerCase()]+12*(parseInt(e,10)+1);return\"midi\"===this.defaultUnits?s:Yi.mtof(s)}},tr:{regexp:/^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,method(t,e,s){let n=1;return t&&\"0\"!==t&&(n*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&\"0\"!==e&&(n*=this._beatsToUnits(parseFloat(e))),s&&\"0\"!==s&&(n*=this._beatsToUnits(parseFloat(s)/4)),n}}})}transpose(t){return new Yi(this.context,this.valueOf()*zi(t))}harmonize(t){return t.map((t=>this.transpose(t)))}toMidi(){return Bi(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/Yi.A4);let s=Math.round(12*e)+57;const n=Math.floor(s/12);return n<0&&(s+=-12*n),Hi[s%12]+n.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(60*t/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return Gi(t)}static ftom(t){return Bi(t)}}const $i={cbbb:-3,cbb:-2,cb:-1,c:0,\"c#\":1,cx:2,\"c##\":2,\"c###\":3,\"cx#\":3,\"c#x\":3,dbbb:-1,dbb:0,db:1,d:2,\"d#\":3,dx:4,\"d##\":4,\"d###\":5,\"dx#\":5,\"d#x\":5,ebbb:1,ebb:2,eb:3,e:4,\"e#\":5,ex:6,\"e##\":6,\"e###\":7,\"ex#\":7,\"e#x\":7,fbbb:2,fbb:3,fb:4,f:5,\"f#\":6,fx:7,\"f##\":7,\"f###\":8,\"fx#\":8,\"f#x\":8,gbbb:4,gbb:5,gb:6,g:7,\"g#\":8,gx:9,\"g##\":9,\"g###\":10,\"gx#\":10,\"g#x\":10,abbb:6,abb:7,ab:8,a:9,\"a#\":10,ax:11,\"a##\":11,\"a###\":12,\"ax#\":12,\"a#x\":12,bbbb:8,bbb:9,bb:10,b:11,\"b#\":12,bx:13,\"b##\":13,\"b###\":14,\"bx#\":14,\"b#x\":14},Hi=[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"];function Ji(t,e){return new Yi(Vi(),t,e)}class Ki extends Zi{constructor(){super(...arguments),this.name=\"TransportTime\"}_now(){return this.context.transport.seconds}}function to(t,e){return new Ki(Vi(),t,e)}class eo extends fi{constructor(){super();const t=ui(eo.getDefaults(),arguments,[\"context\"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:Vi()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return Yn(t),new Zi(this.context,t).toSeconds()}toFrequency(t){return new Yi(this.context,t).toFrequency()}toTicks(t){return new Ki(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach((s=>{Fn(t[s])&&delete e[s]})),e}get(){const t=this.constructor.getDefaults();return Object.keys(t).forEach((e=>{if(Reflect.has(this,e)){const s=this[e];In(s)&&In(s.value)&&In(s.setValueAtTime)?t[e]=s.value:s instanceof eo?t[e]=s._getPartialProperties(t[e]):Ln(s)||Nn(s)||zn(s)||jn(s)?t[e]=s:delete t[e]}})),t}set(t){return Object.keys(t).forEach((e=>{Reflect.has(this,e)&&In(this[e])&&(this[e]&&In(this[e].value)&&In(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof eo?this[e].set(t[e]):this[e]=t[e])})),this}}class so extends wi{constructor(t=\"stopped\"){super(),this.name=\"StateTimeline\",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return null!==e?e.state:this._initial}setStateAtTime(t,e,s){return Un(e,0),this.add(Object.assign({},s,{state:t,time:e})),this}getLastState(t,e){for(let s=this._search(e);s>=0;s--){const e=this._timeline[s];if(e.state===t)return e}}getNextState(t,e){const s=this._search(e);if(-1!==s)for(let e=s;e<this._timeline.length;e++){const s=this._timeline[e];if(s.state===t)return s}}}class no extends eo{constructor(){super(ui(no.getDefaults(),arguments,[\"param\",\"units\",\"convert\"])),this.name=\"Param\",this.overridden=!1,this._minOutput=1e-7;const t=ui(no.getDefaults(),arguments,[\"param\",\"units\",\"convert\"]);for(Bn(In(t.param)&&(oi(t.param)||t.param instanceof no),\"param must be an AudioParam\");!oi(t.param);)t.param=t.param._param;this._swappable=!!In(t.swappable)&&t.swappable,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new wi(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,In(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(eo.getDefaults(),{convert:!0,units:\"number\"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return In(this._minValue)?this._minValue:\"time\"===this.units||\"frequency\"===this.units||\"normalRange\"===this.units||\"positive\"===this.units||\"transportTime\"===this.units||\"ticks\"===this.units||\"bpm\"===this.units||\"hertz\"===this.units||\"samples\"===this.units?0:\"audioRange\"===this.units?-1:\"decibels\"===this.units?-1/0:this._param.minValue}get maxValue(){return In(this._maxValue)?this._maxValue:\"normalRange\"===this.units||\"audioRange\"===this.units?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return In(this.maxValue)&&In(this.minValue)&&Un(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,\"time\")?this.toSeconds(t):this._is(t,\"decibels\")?ji(t):this._is(t,\"frequency\")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&\"decibels\"===this.units?Li(t):t}setValueAtTime(t,e){const s=this.toSeconds(e),n=this._fromType(t);return Bn(isFinite(n)&&isFinite(s),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this.log(this.units,\"setValueAtTime\",t,s),this._events.add({time:s,type:\"setValueAtTime\",value:n}),this._param.setValueAtTime(n,s),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),s=this._events.getAfter(e),n=this._events.get(e);let i=this._initialValue;if(null===n)i=this._initialValue;else if(\"setTargetAtTime\"!==n.type||null!==s&&\"setValueAtTime\"!==s.type)if(null===s)i=n.value;else if(\"linearRampToValueAtTime\"===s.type||\"exponentialRampToValueAtTime\"===s.type){let t=n.value;if(\"setTargetAtTime\"===n.type){const e=this._events.getBefore(n.time);t=null===e?this._initialValue:e.value}i=\"linearRampToValueAtTime\"===s.type?this._linearInterpolate(n.time,t,s.time,s.value,e):this._exponentialInterpolate(n.time,t,s.time,s.value,e)}else i=n.value;else{const t=this._events.getBefore(n.time);let s;s=null===t?this._initialValue:t.value,\"setTargetAtTime\"===n.type&&(i=this._exponentialApproach(n.time,s,n.value,n.constant,e))}return this._toType(i)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),0===this._fromType(e)&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const s=this._fromType(t),n=this.toSeconds(e);return Bn(isFinite(s)&&isFinite(n),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this._events.add({time:n,type:\"linearRampToValueAtTime\",value:s}),this.log(this.units,\"linearRampToValueAtTime\",t,n),this._param.linearRampToValueAtTime(s,n),this}exponentialRampToValueAtTime(t,e){let s=this._fromType(t);s=yi(s,0)?this._minOutput:s,this._assertRange(s);const n=this.toSeconds(e);return Bn(isFinite(s)&&isFinite(n),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:n,type:\"exponentialRampToValueAtTime\",value:s}),this.log(this.units,\"exponentialRampToValueAtTime\",t,n),this._param.exponentialRampToValueAtTime(s,n),this}exponentialRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialRampToValueAtTime(t,s+this.toSeconds(e)),this}linearRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.linearRampToValueAtTime(t,s+this.toSeconds(e)),this}targetRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialApproachValueAtTime(t,s,e),this}exponentialApproachValueAtTime(t,e,s){e=this.toSeconds(e),s=this.toSeconds(s);const n=Math.log(s+1)/Math.log(200);return this.setTargetAtTime(t,e,n),this.cancelAndHoldAtTime(e+.9*s),this.linearRampToValueAtTime(t,e+s),this}setTargetAtTime(t,e,s){const n=this._fromType(t);Bn(isFinite(s)&&s>0,\"timeConstant must be a number greater than 0\");const i=this.toSeconds(e);return this._assertRange(n),Bn(isFinite(n)&&isFinite(i),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:s,time:i,type:\"setTargetAtTime\",value:n}),this.log(this.units,\"setTargetAtTime\",t,i,s),this._param.setTargetAtTime(n,i,s),this}setValueCurveAtTime(t,e,s,n=1){s=this.toSeconds(s),e=this.toSeconds(e);const i=this._fromType(t[0])*n;this.setValueAtTime(this._toType(i),e);const o=s/(t.length-1);for(let s=1;s<t.length;s++){const i=this._fromType(t[s])*n;this.linearRampToValueAtTime(this._toType(i),e+s*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return Bn(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,\"cancelScheduledValues\",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),s=this._fromType(this.getValueAtTime(e));Bn(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,\"cancelAndHoldAtTime\",e,\"value=\"+s);const n=this._events.get(e),i=this._events.getAfter(e);return n&&yi(n.time,e)?i?(this._param.cancelScheduledValues(i.time),this._events.cancel(i.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):i&&(this._param.cancelScheduledValues(i.time),this._events.cancel(i.time),\"linearRampToValueAtTime\"===i.type?this.linearRampToValueAtTime(this._toType(s),e):\"exponentialRampToValueAtTime\"===i.type&&this.exponentialRampToValueAtTime(this._toType(s),e)),this._events.add({time:e,type:\"setValueAtTime\",value:s}),this._param.setValueAtTime(s,e),this}rampTo(t,e=.1,s){return\"frequency\"===this.units||\"bpm\"===this.units||\"decibels\"===this.units?this.exponentialRampTo(t,e,s):this.linearRampTo(t,e,s),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const s=this._events.get(e);if(s&&\"setTargetAtTime\"===s.type){const n=this._events.getAfter(s.time),i=n?n.time:e+2,o=(i-e)/10;for(let s=e;s<i;s+=o)t.linearRampToValueAtTime(this.getValueAtTime(s),s)}return this._events.forEachAfter(this.context.currentTime,(e=>{\"cancelScheduledValues\"===e.type?t.cancelScheduledValues(e.time):\"setTargetAtTime\"===e.type?t.setTargetAtTime(e.value,e.time,e.constant):t[e.type](e.value,e.time)})),this}setParam(t){Bn(this._swappable,\"The Param must be assigned as 'swappable' in the constructor\");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,s,n,i){return s+(e-s)*Math.exp(-(i-t)/n)}_linearInterpolate(t,e,s,n,i){return e+(i-t)/(s-t)*(n-e)}_exponentialInterpolate(t,e,s,n,i){return e*Math.pow(n/e,(i-t)/(s-t))}}class io extends eo{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return In(this.input)?oi(this.input)||this.input instanceof no?1:this.input.numberOfInputs:0}get numberOfOutputs(){return In(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return In(t)&&(t instanceof io||ri(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach((e=>{e.channelCount=t.channelCount,e.channelCountMode=t.channelCountMode,e.channelInterpretation=t.channelInterpretation}))}_getChannelProperties(){const t=this._getInternalNodes();Bn(t.length>0,\"ToneAudioNode does not have any internal nodes\");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,s=0){return ro(this,t,e,s),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Kn(\"toMaster() has been renamed toDestination()\"),this.toDestination()}disconnect(t,e=0,s=0){return ao(this,t,e,s),this}chain(...t){return oo(this,...t),this}fan(...t){return t.forEach((t=>this.connect(t))),this}dispose(){return super.dispose(),In(this.input)&&(this.input instanceof io?this.input.dispose():ri(this.input)&&this.input.disconnect()),In(this.output)&&(this.output instanceof io?this.output.dispose():ri(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function oo(...t){const e=t.shift();t.reduce(((t,e)=>(t instanceof io?t.connect(e):ri(t)&&ro(t,e),e)),e)}function ro(t,e,s=0,n=0){for(Bn(In(t),\"Cannot connect from undefined node\"),Bn(In(e),\"Cannot connect to undefined node\"),(e instanceof io||ri(e))&&Bn(e.numberOfInputs>0,\"Cannot connect to node with no inputs\"),Bn(t.numberOfOutputs>0,\"Cannot connect from node with no outputs\");e instanceof io||e instanceof no;)In(e.input)&&(e=e.input);for(;t instanceof io;)In(t.output)&&(t=t.output);oi(e)?t.connect(e,s):t.connect(e,s,n)}function ao(t,e,s=0,n=0){if(In(e))for(;e instanceof io;)e=e.input;for(;!ri(t);)In(t.output)&&(t=t.output);oi(e)?t.disconnect(e,s):ri(e)?t.disconnect(e,s,n):t.disconnect()}function co(...t){const e=t.pop();In(e)&&t.forEach((t=>ro(t,e)))}class ho extends io{constructor(){super(ui(ho.getDefaults(),arguments,[\"gain\",\"units\"])),this.name=\"Gain\",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=ui(ho.getDefaults(),arguments,[\"gain\",\"units\"]);this.gain=new no({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Oi(this,\"gain\")}static getDefaults(){return Object.assign(io.getDefaults(),{convert:!0,gain:1,units:\"gain\"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class lo extends io{constructor(t){super(t),this.onended=Ei,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new ho({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const e=this.toSeconds(t);return-1!==this._startTime&&e>=this._startTime&&(-1===this._stopTime||e<=this._stopTime)?\"started\":\"stopped\"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(io.getDefaults(),{curve:\"linear\",fadeIn:0,fadeOut:0,onended:Ei})}_startGain(t,e=1){Bn(-1===this._startTime,\"Source cannot be started more than once\");const s=this.toSeconds(this._fadeIn);return this._startTime=t+s,this._startTime=Math.max(this._startTime,this.context.currentTime),s>0?(this._gainNode.gain.setValueAtTime(0,t),\"linear\"===this._curve?this._gainNode.gain.linearRampToValueAtTime(e,t+s):this._gainNode.gain.exponentialApproachValueAtTime(e,t,s)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log(\"stop\",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){Bn(-1!==this._startTime,\"'start' must be called before 'stop'\"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?\"linear\"===this._curve?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout((()=>{const t=\"exponential\"===this._curve?2*e:0;this._stopSource(this.now()+t),this._onended()}),this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Ei&&(this.onended(this),this.onended=Ei,!this.context.isOffline)){const t=()=>this.dispose();void 0!==window.requestIdleCallback?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log(\"cancelStop\"),Bn(-1!==this._startTime,\"Source is not started\"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Ei,this}}class uo extends lo{constructor(){super(ui(uo.getDefaults(),arguments,[\"offset\"])),this.name=\"ToneConstantSource\",this._source=this.context.createConstantSource();const t=ui(uo.getDefaults(),arguments,[\"offset\"]);ro(this._source,this._gainNode),this.offset=new no({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(lo.getDefaults(),{convert:!0,offset:1,units:\"number\"})}start(t){const e=this.toSeconds(t);return this.log(\"start\",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),\"started\"===this.state&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class po extends io{constructor(){super(ui(po.getDefaults(),arguments,[\"value\",\"units\"])),this.name=\"Signal\",this.override=!0;const t=ui(po.getDefaults(),arguments,[\"value\",\"units\"]);this.output=this._constantSource=new uo({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(io.getDefaults(),{convert:!0,units:\"number\",value:0})}connect(t,e=0,s=0){return fo(this,t,e,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,s){return this._param.exponentialRampTo(t,e,s),this}linearRampTo(t,e,s){return this._param.linearRampTo(t,e,s),this}targetRampTo(t,e,s){return this._param.targetRampTo(t,e,s),this}exponentialApproachValueAtTime(t,e,s){return this._param.exponentialApproachValueAtTime(t,e,s),this}setTargetAtTime(t,e,s){return this._param.setTargetAtTime(t,e,s),this}setValueCurveAtTime(t,e,s,n){return this._param.setValueCurveAtTime(t,e,s,n),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,s){return this._param.rampTo(t,e,s),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function fo(t,e,s,n){(e instanceof no||oi(e)||e instanceof po&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof po&&(e.overridden=!0)),ro(t,e,s,n)}class _o extends no{constructor(){super(ui(_o.getDefaults(),arguments,[\"value\"])),this.name=\"TickParam\",this._events=new wi(1/0),this._multiplier=1;const t=ui(_o.getDefaults(),arguments,[\"value\"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:\"setValueAtTime\",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(no.getDefaults(),{multiplier:1,units:\"hertz\",value:1})}setTargetAtTime(t,e,s){e=this.toSeconds(e),this.setRampPoint(e);const n=this._fromType(t),i=this._events.get(e),o=Math.round(Math.max(1/s,1));for(let t=0;t<=o;t++){const o=s*t+e,r=this._exponentialApproach(i.time,i.value,n,s,o);this.linearRampToValueAtTime(this._toType(r),o)}return this}setValueAtTime(t,e){const s=this.toSeconds(e);super.setValueAtTime(t,e);const n=this._events.get(s),i=this._events.previousEvent(n),o=this._getTicksUntilEvent(i,s);return n.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const s=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const n=this._events.get(s),i=this._events.previousEvent(n),o=this._getTicksUntilEvent(i,s);return n.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const s=this._fromType(t),n=this._events.get(e),i=Math.round(Math.max(10*(e-n.time),1)),o=(e-n.time)/i;for(let t=0;t<=i;t++){const i=o*t+n.time,r=this._exponentialInterpolate(n.time,n.value,e,s,i);this.linearRampToValueAtTime(this._toType(r),i)}return this}_getTicksUntilEvent(t,e){if(null===t)t={ticks:0,time:0,type:\"setValueAtTime\",value:0};else if(Fn(t.ticks)){const e=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(e,t.time)}const s=this._fromType(this.getValueAtTime(t.time));let n=this._fromType(this.getValueAtTime(e));const i=this._events.get(e);return i&&i.time===e&&\"setValueAtTime\"===i.type&&(n=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(s+n)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),s=this._events.get(e);return Math.max(this._getTicksUntilEvent(s,e),0)}getDurationOfTicks(t,e){const s=this.toSeconds(e),n=this.getTicksAtTime(e);return this.getTimeOfTick(n+t)-s}getTimeOfTick(t){const e=this._events.get(t,\"ticks\"),s=this._events.getAfter(t,\"ticks\");if(e&&e.ticks===t)return e.time;if(e&&s&&\"linearRampToValueAtTime\"===s.type&&e.value!==s.value){const n=this._fromType(this.getValueAtTime(e.time)),i=(this._fromType(this.getValueAtTime(s.time))-n)/(s.time-e.time),o=Math.sqrt(Math.pow(n,2)-2*i*(e.ticks-t)),r=(-n+o)/i,a=(-n-o)/i;return(r>0?r:a)+e.time}return e?0===e.value?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const s=this.toSeconds(e),n=this.toSeconds(t),i=this.getTicksAtTime(s);return this.getTicksAtTime(s+n)-i}_fromType(t){return\"bpm\"===this.units&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return\"bpm\"===this.units&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class mo extends po{constructor(){super(ui(mo.getDefaults(),arguments,[\"value\"])),this.name=\"TickSignal\";const t=ui(mo.getDefaults(),arguments,[\"value\"]);this.input=this._param=new _o({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(po.getDefaults(),{multiplier:1,units:\"hertz\",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class go extends eo{constructor(){super(ui(go.getDefaults(),arguments,[\"frequency\"])),this.name=\"TickSource\",this._state=new so,this._tickOffset=new wi,this._ticksAtTime=new wi,this._secondsAtTime=new wi;const t=ui(go.getDefaults(),arguments,[\"frequency\"]);this.frequency=new mo({context:this.context,units:t.units,value:t.frequency}),Oi(this,\"frequency\"),this._state.setStateAtTime(\"stopped\",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:\"hertz\"},eo.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const s=this.toSeconds(t);return\"started\"!==this._state.getValueAtTime(s)&&(this._state.setStateAtTime(\"started\",s),In(e)&&this.setTicksAtTime(e,s),this._ticksAtTime.cancel(s),this._secondsAtTime.cancel(s)),this}stop(t){const e=this.toSeconds(t);if(\"stopped\"===this._state.getValueAtTime(e)){const t=this._state.get(e);t&&t.time>0&&(this._tickOffset.cancel(t.time),this._state.cancel(t.time))}return this._state.cancel(e),this._state.setStateAtTime(\"stopped\",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return\"started\"===this._state.getValueAtTime(e)&&(this._state.setStateAtTime(\"paused\",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),s=this._state.getLastState(\"stopped\",e),n=this._ticksAtTime.get(e),i={state:\"paused\",time:e};this._state.add(i);let o=n||s,r=n?n.ticks:0,a=null;return this._state.forEachBetween(o.time,e+this.sampleTime,(t=>{let e=o.time;const s=this._tickOffset.get(t.time);s&&s.time>=o.time&&(r=s.ticks,e=s.time),\"started\"===o.state&&\"started\"!==t.state&&(r+=this.frequency.getTicksAtTime(t.time)-this.frequency.getTicksAtTime(e),t.time!==i.time&&(a={state:t.state,time:t.time,ticks:r})),o=t})),this._state.remove(i),a&&this._ticksAtTime.add(a),r}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),s=this.frequency.timeToTicks(t,e);this.setTicksAtTime(s,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState(\"stopped\",t),s={state:\"paused\",time:t};this._state.add(s);const n=this._secondsAtTime.get(t);let i=n||e,o=n?n.seconds:0,r=null;return this._state.forEachBetween(i.time,t+this.sampleTime,(t=>{let e=i.time;const n=this._tickOffset.get(t.time);n&&n.time>=i.time&&(o=n.seconds,e=n.time),\"started\"===i.state&&\"started\"!==t.state&&(o+=t.time-e,t.time!==s.time&&(r={state:t.state,time:t.time,seconds:o})),i=t})),this._state.remove(s),r&&this._secondsAtTime.add(r),o}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const s=this._tickOffset.get(e),n=this._state.get(e),i=Math.max(s.time,n.time),o=this.frequency.getTicksAtTime(i)+t-s.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,s){let n=this._state.get(t);this._state.forEachBetween(t,e,(e=>{n&&\"started\"===n.state&&\"started\"!==e.state&&this.forEachTickBetween(Math.max(n.time,t),e.time-this.sampleTime,s),n=e}));let i=null;if(n&&\"started\"===n.state){const o=Math.max(n.time,t),r=this.frequency.getTicksAtTime(o),a=r-this.frequency.getTicksAtTime(n.time);let c=Math.ceil(a)-a;c=yi(c,1)?0:c;let h=this.frequency.getTimeOfTick(r+c);for(;h<e;){try{s(h,Math.round(this.getTicksAtTime(h)))}catch(t){i=t;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(i)throw i;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class vo extends eo{constructor(){super(ui(vo.getDefaults(),arguments,[\"callback\",\"frequency\"])),this.name=\"Clock\",this.callback=Ei,this._lastUpdate=0,this._state=new so(\"stopped\"),this._boundLoop=this._loop.bind(this);const t=ui(vo.getDefaults(),arguments,[\"callback\",\"frequency\"]);this.callback=t.callback,this._tickSource=new go({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Oi(this,\"frequency\"),this._state.setStateAtTime(\"stopped\",0),this.context.on(\"tick\",this._boundLoop)}static getDefaults(){return Object.assign(eo.getDefaults(),{callback:Ei,frequency:1,units:\"hertz\"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){Gn(this.context);const s=this.toSeconds(t);return this.log(\"start\",s),\"started\"!==this._state.getValueAtTime(s)&&(this._state.setStateAtTime(\"started\",s),this._tickSource.start(s,e),s<this._lastUpdate&&this.emit(\"start\",s,e)),this}stop(t){const e=this.toSeconds(t);return this.log(\"stop\",e),this._state.cancel(e),this._state.setStateAtTime(\"stopped\",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit(\"stop\",e),this}pause(t){const e=this.toSeconds(t);return\"started\"===this._state.getValueAtTime(e)&&(this._state.setStateAtTime(\"paused\",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit(\"pause\",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const s=this.toSeconds(e),n=this.getTicksAtTime(s);return this._tickSource.getTimeOfTick(n+t,s)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log(\"loop\",t,e),t!==e&&(this._state.forEachBetween(t,e,(t=>{switch(t.state){case\"started\":const e=this._tickSource.getTicksAtTime(t.time);this.emit(\"start\",t.time,e);break;case\"stopped\":0!==t.time&&this.emit(\"stop\",t.time);break;case\"paused\":this.emit(\"pause\",t.time)}})),this._tickSource.forEachTickBetween(t,e,((t,e)=>{this.callback(t,e)})))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off(\"tick\",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Ai.mixin(vo);class yo extends io{constructor(){super(ui(yo.getDefaults(),arguments,[\"delayTime\",\"maxDelay\"])),this.name=\"Delay\";const t=ui(yo.getDefaults(),arguments,[\"delayTime\",\"maxDelay\"]),e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new no({context:this.context,param:this._delayNode.delayTime,units:\"time\",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),Oi(this,\"delayTime\")}static getDefaults(){return Object.assign(io.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function xo(t,e,s=2,n=Vi().sampleRate){return ni(this,void 0,void 0,(function*(){const i=Vi(),o=new qi(s,e,n);Ni(o),yield t(o);const r=o.render();Ni(i);const a=yield r;return new Ri(a)}))}class wo extends fi{constructor(){super(),this.name=\"ToneAudioBuffers\",this._buffers=new Map,this._loadingCount=0;const t=ui(wo.getDefaults(),arguments,[\"urls\",\"onload\",\"baseUrl\"],\"urls\");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach((e=>{this._loadingCount++;const s=t.urls[e];this.add(e,s,this._bufferLoaded.bind(this,t.onload),t.onerror)}))}static getDefaults(){return{baseUrl:\"\",onerror:Ei,onload:Ei,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return Bn(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,0===this._loadingCount&&t&&t()}get loaded(){return Array.from(this._buffers).every((([t,e])=>e.loaded))}add(t,e,s=Ei,n=Ei){return zn(e)?(this.baseUrl&&\"data:audio/\"===e.trim().substring(0,11).toLowerCase()&&(this.baseUrl=\"\"),this._buffers.set(t.toString(),new Ri(this.baseUrl+e,s,n))):this._buffers.set(t.toString(),new Ri(e,s,n)),this}dispose(){return super.dispose(),this._buffers.forEach((t=>t.dispose())),this._buffers.clear(),this}}class bo extends Yi{constructor(){super(...arguments),this.name=\"MidiClass\",this.defaultUnits=\"midi\"}_frequencyToUnits(t){return Bi(super._frequencyToUnits(t))}_ticksToUnits(t){return Bi(super._ticksToUnits(t))}_beatsToUnits(t){return Bi(super._beatsToUnits(t))}_secondsToUnits(t){return Bi(super._secondsToUnits(t))}toMidi(){return this.valueOf()}toFrequency(){return Gi(this.toMidi())}transpose(t){return new bo(this.context,this.toMidi()+t)}}function To(t,e){return new bo(Vi(),t,e)}class So extends Ki{constructor(){super(...arguments),this.name=\"Ticks\",this.defaultUnits=\"i\"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function ko(t,e){return new So(Vi(),t,e)}class Ao extends eo{constructor(){super(...arguments),this.name=\"Draw\",this.expiration=.25,this.anticipation=.008,this._events=new wi,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),1===this._events.length&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}Ti((t=>{t.draw=new Ao({context:t})})),ki((t=>{t.draw.dispose()}));class Co extends fi{constructor(){super(...arguments),this.name=\"IntervalTimeline\",this._root=null,this._length=0}add(t){Bn(In(t.time),\"Events must have a time property\"),Bn(In(t.duration),\"Events must have a duration parameter\"),t.time=t.time.valueOf();let e=new Do(t.time,t.time+t.duration,t);for(null===this._root?this._root=e:this._root.insert(e),this._length++;null!==e;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(null!==this._root){const e=[];this._root.search(t.time,e);for(const s of e)if(s.event===t){this._removeNode(s),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,(t=>this.remove(t))),this}_setRoot(t){this._root=t,null!==this._root&&(this._root.parent=null)}_replaceNodeInParent(t,e){null!==t.parent?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(null===t.left&&null===t.right)this._replaceNodeInParent(t,null);else if(null===t.right)this._replaceNodeInParent(t,t.left);else if(null===t.left)this._replaceNodeInParent(t,t.right);else{let e,s=null;if(t.getBalance()>0)if(null===t.left.right)e=t.left,e.right=t.right,s=e;else{for(e=t.left.right;null!==e.right;)e=e.right;e.parent&&(e.parent.right=e.left,s=e.parent,e.left=t.left,e.right=t.right)}else if(null===t.right.left)e=t.right,e.left=t.left,s=e;else{for(e=t.right.left;null!==e.left;)e=e.left;e.parent&&(e.parent.left=e.right,s=e.parent,e.left=t.left,e.right=t.right)}null!==t.parent?t.isLeftChild()?t.parent.left=e:t.parent.right=e:this._setRoot(e),s&&this._rebalance(s)}t.dispose()}_rotateLeft(t){const e=t.parent,s=t.isLeftChild(),n=t.right;n&&(t.right=n.left,n.left=t),null!==e?s?e.left=n:e.right=n:this._setRoot(n)}_rotateRight(t){const e=t.parent,s=t.isLeftChild(),n=t.left;n&&(t.left=n.right,n.right=t),null!==e?s?e.left=n:e.right=n:this._setRoot(n)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(null!==this._root){const e=[];if(this._root.search(t,e),e.length>0){let t=e[0];for(let s=1;s<e.length;s++)e[s].low>t.low&&(t=e[s]);return t.event}}return null}forEach(t){if(null!==this._root){const e=[];this._root.traverse((t=>e.push(t))),e.forEach((e=>{e.event&&t(e.event)}))}return this}forEachAtTime(t,e){if(null!==this._root){const s=[];this._root.search(t,s),s.forEach((t=>{t.event&&e(t.event)}))}return this}forEachFrom(t,e){if(null!==this._root){const s=[];this._root.searchAfter(t,s),s.forEach((t=>{t.event&&e(t.event)}))}return this}dispose(){return super.dispose(),null!==this._root&&this._root.traverse((t=>t.dispose())),this._root=null,this}}class Do{constructor(t,e,s){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=s,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?null===this.left?this.left=t:this.left.insert(t):null===this.right?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(null!==this.left&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),this.low>t||null!==this.right&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),null!==this.left&&this.left.searchAfter(t,e)),null!==this.right&&this.right.searchAfter(t,e)}traverse(t){t(this),null!==this.left&&this.left.traverse(t),null!==this.right&&this.right.traverse(t)}updateHeight(){null!==this.left&&null!==this.right?this.height=Math.max(this.left.height,this.right.height)+1:null!==this.right?this.height=this.right.height+1:null!==this.left?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,null!==this.left&&(this.max=Math.max(this.max,this.left.max)),null!==this.right&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return null!==this.left&&null!==this.right?t=this.left.height-this.right.height:null!==this.left?t=this.left.height+1:null!==this.right&&(t=-(this.right.height+1)),t}isLeftChild(){return null!==this.parent&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,null!==t&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,null!==t&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class Oo extends io{constructor(){super(ui(Oo.getDefaults(),arguments,[\"volume\"])),this.name=\"Volume\";const t=ui(Oo.getDefaults(),arguments,[\"volume\"]);this.input=this.output=new ho({context:this.context,gain:t.volume,units:\"decibels\"}),this.volume=this.output.gain,Oi(this,\"volume\"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(io.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Mo extends io{constructor(){super(ui(Mo.getDefaults(),arguments)),this.name=\"Destination\",this.input=new Oo({context:this.context}),this.output=new ho({context:this.context}),this.volume=this.input.volume;const t=ui(Mo.getDefaults(),arguments);oo(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(io.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),oo(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}Ti((t=>{t.destination=new Mo({context:t})})),ki((t=>{t.destination.dispose()}));class Eo extends fi{constructor(t){super(),this.name=\"TimelineValue\",this._timeline=new wi({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Ro extends io{constructor(){super(Object.assign(ui(Ro.getDefaults(),arguments,[\"context\"])))}connect(t,e=0,s=0){return fo(this,t,e,s),this}}class qo extends Ro{constructor(){super(Object.assign(ui(qo.getDefaults(),arguments,[\"mapping\",\"length\"]))),this.name=\"WaveShaper\",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=ui(qo.getDefaults(),arguments,[\"mapping\",\"length\"]);Ln(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):Vn(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(po.getDefaults(),{length:1024})}setMap(t,e=1024){const s=new Float32Array(e);for(let n=0,i=e;n<i;n++){const e=n/(i-1)*2-1;s[n]=t(e,n)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){Bn([\"none\",\"2x\",\"4x\"].some((e=>e.includes(t))),\"oversampling must be either 'none', '2x', or '4x'\"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class Fo extends Ro{constructor(){super(Object.assign(ui(Fo.getDefaults(),arguments,[\"value\"]))),this.name=\"Pow\";const t=ui(Fo.getDefaults(),arguments,[\"value\"]);this._exponentScaler=this.input=this.output=new qo({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Ro.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Io{constructor(t,e){this.id=Io._eventId++,this._remainderTime=0;const s=Object.assign(Io.getDefaults(),e);this.transport=t,this.callback=s.callback,this._once=s.once,this.time=Math.floor(s.time),this._remainderTime=s.time-this.time}static getDefaults(){return{callback:Ei,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}Io._eventId=0;class Vo extends Io{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const s=Object.assign(Vo.getDefaults(),e);this.duration=s.duration,this._interval=s.interval,this._nextTick=s.time,this.transport.on(\"start\",this._boundRestart),this.transport.on(\"loopStart\",this._boundRestart),this.transport.on(\"ticks\",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Io.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return vi(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new So(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){vi(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new So(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);mi(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off(\"start\",this._boundRestart),this.transport.off(\"loopStart\",this._boundRestart),this.transport.off(\"ticks\",this._boundRestart),this}}class No extends eo{constructor(){super(ui(No.getDefaults(),arguments)),this.name=\"Transport\",this._loop=new Eo(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new wi,this._repeatedEvents=new Co,this._syncedSignals=[],this._swingAmount=0;const t=ui(No.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new vo({callback:this._processTick.bind(this),context:this.context,frequency:0,units:\"bpm\"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Oi(this,\"bpm\"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(eo.getDefaults(),{bpm:120,loopEnd:\"4m\",loopStart:0,ppq:192,swing:0,swingSubdivision:\"8n\",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit(\"loopEnd\",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit(\"loopStart\",t,this._clock.getSecondsAtTime(t)),this.emit(\"loop\",t)),this._swingAmount>0&&e%this._ppq!=0&&e%(2*this._swingTicks)!=0){const s=e%(2*this._swingTicks)/(2*this._swingTicks),n=Math.sin(s*Math.PI)*this._swingAmount;t+=new So(this.context,2*this._swingTicks/3).toSeconds()*n}Xn(!0),this._timeline.forEachAtTime(e,(e=>e.invoke(t))),Xn(!1)}schedule(t,e){const s=new Io(this,{callback:t,time:new Ki(this.context,e).toTicks()});return this._addEvent(s,this._timeline)}scheduleRepeat(t,e,s,n=1/0){const i=new Vo(this,{callback:t,duration:new Zi(this.context,n).toTicks(),interval:new Zi(this.context,e).toTicks(),time:new Ki(this.context,s).toTicks()});return this._addEvent(i,this._repeatedEvents)}scheduleOnce(t,e){const s=new Io(this,{callback:t,once:!0,time:new Ki(this.context,e).toTicks()});return this._addEvent(s,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,(t=>this.clear(t.id))),this._repeatedEvents.forEachFrom(e,(t=>this.clear(t.id))),this}_bindClockEvents(){this._clock.on(\"start\",((t,e)=>{e=new So(this.context,e).toSeconds(),this.emit(\"start\",t,e)})),this._clock.on(\"stop\",(t=>{this.emit(\"stop\",t)})),this._clock.on(\"pause\",(t=>{this.emit(\"pause\",t)}))}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){let s;return this.context.resume(),In(e)&&(s=this.toTicks(e)),this._clock.start(t,s),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),\"started\"!==this._clock.getStateAtTime(t)?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Ln(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Zi(this.context,this._loopStart,\"i\").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Zi(this.context,this._loopEnd,\"i\").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new So(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new So(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),s=this._clock.frequency.timeToTicks(t,e);this.ticks=s}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(\"started\"===this.state){const s=this._clock.getTicksAtTime(e),n=e+this._clock.frequency.getDurationOfTicks(Math.ceil(s)-s,e);this.emit(\"stop\",n),this._clock.setTicksAtTime(t,n),this.emit(\"start\",n,this._clock.getSecondsAtTime(n))}else this.emit(\"ticks\",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),\"started\"!==this.state)return 0;{const e=this.now(),s=t-this.getTicksAtTime(e)%t;return this._clock.nextTickTime(s,e)}}syncSignal(t,e){const s=this.now();let n=this.bpm,i=1/(60/n.getValueAtTime(s)/this.PPQ),o=[];if(\"time\"===t.units){const t=1/64/i,e=new ho(t),s=new Fo(-1),r=new ho(t);n.chain(e,s,r),n=r,i=1/i,o=[e,s,r]}e||(e=0!==t.getValueAtTime(s)?t.getValueAtTime(s)/i:0);const r=new ho(e);return n.connect(r),r.connect(t._param),o.push(r),this._syncedSignals.push({initial:t.value,nodes:o,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const s=this._syncedSignals[e];s.signal===t&&(s.nodes.forEach((t=>t.dispose())),s.signal.value=s.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Mi(this,\"bpm\"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Ai.mixin(No),Ti((t=>{t.transport=new No({context:t})})),ki((t=>{t.transport.dispose()}));class Po extends io{constructor(t){super(t),this.input=void 0,this._state=new so(\"stopped\"),this._synced=!1,this._scheduled=[],this._syncedStart=Ei,this._syncedStop=Ei,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Oo({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Oi(this,\"volume\"),this.onstop=t.onstop}static getDefaults(){return Object.assign(io.getDefaults(),{mute:!1,onstop:Ei,volume:0})}get state(){return this._synced?\"started\"===this.context.transport.state?this._state.getValueAtTime(this.context.transport.seconds):\"stopped\":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,s){let n=Fn(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(n=this._clampToCurrentTime(n),this._synced||\"started\"!==this._state.getValueAtTime(n))if(this.log(\"start\",n),this._state.setStateAtTime(\"started\",n),this._synced){const t=this._state.get(n);t&&(t.offset=this.toSeconds(pi(e,0)),t.duration=s?this.toSeconds(s):void 0);const i=this.context.transport.schedule((t=>{this._start(t,e,s)}),n);this._scheduled.push(i),\"started\"===this.context.transport.state&&this.context.transport.getSecondsAtTime(this.immediate())>n&&this._syncedStart(this.now(),this.context.transport.seconds)}else Gn(this.context),this._start(n,e,s);else Bn(mi(n,this._state.get(n).time),\"Start time must be strictly greater than previous start time\"),this._state.cancel(n),this._state.setStateAtTime(\"started\",n),this.log(\"restart\",n),this.restart(n,e,s);return this}stop(t){let e=Fn(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),\"started\"===this._state.getValueAtTime(e)||In(this._state.getNextState(\"started\",e))){if(this.log(\"stop\",e),this._synced){const t=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(t)}else this._stop(e);this._state.cancel(e),this._state.setStateAtTime(\"stopped\",e)}return this}restart(t,e,s){return t=this.toSeconds(t),\"started\"===this._state.getValueAtTime(t)&&(this._state.cancel(t),this._restart(t,e,s)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(mi(e,0)){const s=this._state.get(e);if(s&&\"started\"===s.state&&s.time!==e){const n=e-this.toSeconds(s.time);let i;s.duration&&(i=this.toSeconds(s.duration)-n),this._start(t,this.toSeconds(s.offset)+n,i)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));\"started\"===this._state.getValueAtTime(e)&&this._stop(t)},this.context.transport.on(\"start\",this._syncedStart),this.context.transport.on(\"loopStart\",this._syncedStart),this.context.transport.on(\"stop\",this._syncedStop),this.context.transport.on(\"pause\",this._syncedStop),this.context.transport.on(\"loopEnd\",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off(\"stop\",this._syncedStop),this.context.transport.off(\"pause\",this._syncedStop),this.context.transport.off(\"loopEnd\",this._syncedStop),this.context.transport.off(\"start\",this._syncedStart),this.context.transport.off(\"loopStart\",this._syncedStart)),this._synced=!1,this._scheduled.forEach((t=>this.context.transport.clear(t))),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Ei,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class jo extends lo{constructor(){super(ui(jo.getDefaults(),arguments,[\"url\",\"onload\"])),this.name=\"ToneBufferSource\",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=ui(jo.getDefaults(),arguments,[\"url\",\"onload\"]);ro(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new no({context:this.context,param:this._source.playbackRate,units:\"positive\",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new Ri(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(lo.getDefaults(),{url:new Ri,loop:!1,loopEnd:0,loopStart:0,onload:Ei,onerror:Ei,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,s,n=1){Bn(this.buffer.loaded,\"buffer is either not set or not loaded\");const i=this.toSeconds(t);this._startGain(i,n),e=this.loop?pi(e,this.loopStart):pi(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const t=this.toSeconds(this.loopEnd)||this.buffer.duration,e=this.toSeconds(this.loopStart),s=t-e;gi(o,t)&&(o=(o-e)%s+e),yi(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,vi(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(i,o)),In(s)){let t=this.toSeconds(s);t=Math.max(t,0),this.stop(i+t)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Lo extends Po{constructor(){super(ui(Lo.getDefaults(),arguments,[\"type\"])),this.name=\"Noise\",this._source=null;const t=ui(Lo.getDefaults(),arguments,[\"type\"]);this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Po.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:\"white\"})}get type(){return this._type}set type(t){if(Bn(t in Bo,\"Noise: invalid type: \"+t),this._type!==t&&(this._type=t,\"started\"===this.state)){const t=this.now();this._stop(t),this._start(t)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=Bo[this._type];this._source=new jo({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const zo=220500,Wo={brown:null,pink:null,white:null},Bo={get brown(){if(!Wo.brown){const t=[];for(let e=0;e<2;e++){const s=new Float32Array(zo);t[e]=s;let n=0;for(let t=0;t<zo;t++){const e=2*Math.random()-1;s[t]=(n+.02*e)/1.02,n=s[t],s[t]*=3.5}}Wo.brown=(new Ri).fromArray(t)}return Wo.brown},get pink(){if(!Wo.pink){const t=[];for(let e=0;e<2;e++){const s=new Float32Array(zo);let n,i,o,r,a,c,h;t[e]=s,n=i=o=r=a=c=h=0;for(let t=0;t<zo;t++){const e=2*Math.random()-1;n=.99886*n+.0555179*e,i=.99332*i+.0750759*e,o=.969*o+.153852*e,r=.8665*r+.3104856*e,a=.55*a+.5329522*e,c=-.7616*c-.016898*e,s[t]=n+i+o+r+a+c+h+.5362*e,s[t]*=.11,h=.115926*e}}Wo.pink=(new Ri).fromArray(t)}return Wo.pink},get white(){if(!Wo.white){const t=[];for(let e=0;e<2;e++){const s=new Float32Array(zo);t[e]=s;for(let t=0;t<zo;t++)s[t]=2*Math.random()-1}Wo.white=(new Ri).fromArray(t)}return Wo.white}};class Uo extends io{constructor(){super(ui(Uo.getDefaults(),arguments,[\"volume\"])),this.name=\"UserMedia\";const t=ui(Uo.getDefaults(),arguments,[\"volume\"]);this._volume=this.output=new Oo({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Oi(this,\"volume\"),this.mute=t.mute}static getDefaults(){return Object.assign(io.getDefaults(),{mute:!1,volume:0})}open(t){return ni(this,void 0,void 0,(function*(){Bn(Uo.supported,\"UserMedia is not supported\"),\"started\"===this.state&&this.close();const e=yield Uo.enumerateDevices();Nn(t)?this._device=e[t]:(this._device=e.find((e=>e.label===t||e.deviceId===t)),!this._device&&e.length>0&&(this._device=e[0]),Bn(In(this._device),`No matching device ${t}`));const s={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(s.audio.deviceId=this._device.deviceId);const n=yield navigator.mediaDevices.getUserMedia(s);if(!this._stream){this._stream=n;const t=this.context.createMediaStreamSource(n);ro(t,this.output),this._mediaStream=t}return this}))}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach((t=>{t.stop()})),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return ni(this,void 0,void 0,(function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter((t=>\"audioinput\"===t.kind))}))}get state(){return this._stream&&this._stream.active?\"started\":\"stopped\"}get deviceId(){return this._device?this._device.deviceId:void 0}get groupId(){return this._device?this._device.groupId:void 0}get label(){return this._device?this._device.label:void 0}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return In(navigator.mediaDevices)&&In(navigator.mediaDevices.getUserMedia)}}function Go(t,e){return ni(this,void 0,void 0,(function*(){const s=e/t.context.sampleRate,n=new qi(1,s,t.context.sampleRate);return new t.constructor(Object.assign(t.get(),{frequency:2/s,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)}))}class Qo extends lo{constructor(){super(ui(Qo.getDefaults(),arguments,[\"frequency\",\"type\"])),this.name=\"ToneOscillatorNode\",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=ui(Qo.getDefaults(),arguments,[\"frequency\",\"type\"]);ro(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new no({context:this.context,param:this._oscillator.frequency,units:\"frequency\",value:t.frequency}),this.detune=new no({context:this.context,param:this._oscillator.detune,units:\"cents\",value:t.detune}),Oi(this,[\"frequency\",\"detune\"])}static getDefaults(){return Object.assign(lo.getDefaults(),{detune:0,frequency:440,type:\"sine\"})}start(t){const e=this.toSeconds(t);return this.log(\"start\",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),\"started\"===this.state&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class Zo extends Po{constructor(){super(ui(Zo.getDefaults(),arguments,[\"frequency\",\"type\"])),this.name=\"Oscillator\",this._oscillator=null;const t=ui(Zo.getDefaults(),arguments,[\"frequency\",\"type\"]);this.frequency=new po({context:this.context,units:\"frequency\",value:t.frequency}),Oi(this,\"frequency\"),this.detune=new po({context:this.context,units:\"cents\",value:t.detune}),Oi(this,\"detune\"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&\"custom\"!==t.type&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(Po.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:\"sine\"})}_start(t){const e=this.toSeconds(t),s=new Qo({context:this.context,onended:()=>this.onstop(this)});this._oscillator=s,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log(\"restart\",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(\"custom\"===this._type)return Zo._periodicWaveCache.find((t=>{return t.phase===this._phase&&(e=t.partials,s=this._partials,e.length===s.length&&e.every(((t,e)=>s[e]===t)));var e,s}));{const t=Zo._periodicWaveCache.find((t=>t.type===this._type&&t.phase===this._phase));return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=-1!==[\"sine\",\"square\",\"sawtooth\",\"triangle\"].indexOf(t);if(0===this._phase&&e)this._wave=void 0,this._partialCount=0,null!==this._oscillator&&(this._oscillator.type=t);else{const e=this._getCachedPeriodicWave();if(In(e)){const{partials:t,wave:s}=e;this._wave=s,this._partials=t,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave)}else{const[e,s]=this._getRealImaginary(t,this._phase),n=this.context.createPeriodicWave(e,s);this._wave=n,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave),Zo._periodicWaveCache.push({imag:s,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:e,type:this._type,wave:this._wave}),Zo._periodicWaveCache.length>100&&Zo._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),\"\")}set baseType(t){this.partialCount&&\"custom\"!==this._type&&\"custom\"!==t?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Un(t,0);let e=this._type;const s=/^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);if(s&&(e=s[1]),\"custom\"!==this._type)this.type=0===t?e:e+t.toString();else{const e=new Float32Array(t);this._partials.forEach(((t,s)=>e[s]=t)),this._partials=Array.from(e),this.type=this._type}}_getRealImaginary(t,e){let s=2048;const n=new Float32Array(s),i=new Float32Array(s);let o=1;if(\"custom\"===t){if(o=this._partials.length+1,this._partialCount=this._partials.length,s=o,0===this._partials.length)return[n,i]}else{const e=/^(sine|triangle|square|sawtooth)(\\d+)$/.exec(t);e?(o=parseInt(e[2],10)+1,this._partialCount=parseInt(e[2],10),t=e[1],o=Math.max(o,2),s=o):this._partialCount=0,this._partials=[]}for(let r=1;r<s;++r){const s=2/(r*Math.PI);let a;switch(t){case\"sine\":a=r<=o?1:0,this._partials[r-1]=a;break;case\"square\":a=1&r?2*s:0,this._partials[r-1]=a;break;case\"sawtooth\":a=s*(1&r?1:-1),this._partials[r-1]=a;break;case\"triangle\":a=1&r?s*s*2*(r-1>>1&1?-1:1):0,this._partials[r-1]=a;break;case\"custom\":a=this._partials[r-1];break;default:throw new TypeError(\"Oscillator: invalid type: \"+t)}0!==a?(n[r]=-a*Math.sin(e*r),i[r]=a*Math.cos(e*r)):(n[r]=0,i[r]=0)}return[n,i]}_inverseFFT(t,e,s){let n=0;const i=t.length;for(let o=0;o<i;o++)n+=t[o]*Math.cos(o*s)+e[o]*Math.sin(o*s);return n}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let s=0;const n=2*Math.PI;for(let i=0;i<32;i++)s=Math.max(this._inverseFFT(t,e,i/32*n),s);return xi(-this._inverseFFT(t,e,this._phase)/s,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type=\"custom\")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return ni(this,void 0,void 0,(function*(){return Go(this,t)}))}dispose(){return super.dispose(),null!==this._oscillator&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}Zo._periodicWaveCache=[];class Xo extends Ro{constructor(){super(...arguments),this.name=\"AudioToGain\",this._norm=new qo({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Yo extends po{constructor(){super(Object.assign(ui(Yo.getDefaults(),arguments,[\"value\"]))),this.name=\"Multiply\",this.override=!1;const t=ui(Yo.getDefaults(),arguments,[\"value\"]);this._mult=this.input=this.output=new ho({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(po.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class $o extends Po{constructor(){super(ui($o.getDefaults(),arguments,[\"frequency\",\"type\",\"modulationType\"])),this.name=\"AMOscillator\",this._modulationScale=new Xo({context:this.context}),this._modulationNode=new ho({context:this.context});const t=ui($o.getDefaults(),arguments,[\"frequency\",\"type\",\"modulationType\"]);this._carrier=new Zo({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new Zo({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Yo({context:this.context,units:\"positive\",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Oi(this,[\"frequency\",\"detune\",\"harmonicity\"])}static getDefaults(){return Object.assign(Zo.getDefaults(),{harmonicity:1,modulationType:\"square\"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return ni(this,void 0,void 0,(function*(){return Go(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Ho extends Po{constructor(){super(ui(Ho.getDefaults(),arguments,[\"frequency\",\"type\",\"modulationType\"])),this.name=\"FMOscillator\",this._modulationNode=new ho({context:this.context,gain:0});const t=ui(Ho.getDefaults(),arguments,[\"frequency\",\"type\",\"modulationType\"]);this._carrier=new Zo({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new po({context:this.context,units:\"frequency\",value:t.frequency}),this._modulator=new Zo({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Yo({context:this.context,units:\"positive\",value:t.harmonicity}),this.modulationIndex=new Yo({context:this.context,units:\"positive\",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Oi(this,[\"modulationIndex\",\"frequency\",\"detune\",\"harmonicity\"])}static getDefaults(){return Object.assign(Zo.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:\"square\"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return ni(this,void 0,void 0,(function*(){return Go(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Jo extends Po{constructor(){super(ui(Jo.getDefaults(),arguments,[\"frequency\",\"width\"])),this.name=\"PulseOscillator\",this._widthGate=new ho({context:this.context,gain:0}),this._thresh=new qo({context:this.context,mapping:t=>t<=0?-1:1});const t=ui(Jo.getDefaults(),arguments,[\"frequency\",\"width\"]);this.width=new po({context:this.context,units:\"audioRange\",value:t.width}),this._triangle=new Zo({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:\"triangle\"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Oi(this,[\"width\",\"frequency\",\"detune\"])}static getDefaults(){return Object.assign(Po.getDefaults(),{detune:0,frequency:440,phase:0,type:\"pulse\",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return\"pulse\"}get baseType(){return\"pulse\"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return ni(this,void 0,void 0,(function*(){return Go(this,t)}))}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Ko extends Po{constructor(){super(ui(Ko.getDefaults(),arguments,[\"frequency\",\"type\",\"spread\"])),this.name=\"FatOscillator\",this._oscillators=[];const t=ui(Ko.getDefaults(),arguments,[\"frequency\",\"type\",\"spread\"]);this.frequency=new po({context:this.context,units:\"frequency\",value:t.frequency}),this.detune=new po({context:this.context,units:\"cents\",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Oi(this,[\"frequency\",\"detune\"])}static getDefaults(){return Object.assign(Zo.getDefaults(),{count:3,spread:20,type:\"sawtooth\"})}_start(t){t=this.toSeconds(t),this._forEach((e=>e.start(t)))}_stop(t){t=this.toSeconds(t),this._forEach((e=>e.stop(t)))}_restart(t){this._forEach((e=>e.restart(t)))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach((e=>e.type=t))}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,s=t/(this._oscillators.length-1);this._forEach(((t,n)=>t.detune.value=e+s*n))}}get count(){return this._oscillators.length}set count(t){if(Un(t,1),this._oscillators.length!==t){this._forEach((t=>t.dispose())),this._oscillators=[];for(let e=0;e<t;e++){const s=new Zo({context:this.context,volume:-6-1.1*t,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:0===e?()=>this.onstop(this):Ei});\"custom\"===this.type&&(s.partials=this._partials),this.frequency.connect(s.frequency),this.detune.connect(s.detune),s.detune.overridden=!1,s.connect(this.output),this._oscillators[e]=s}this.spread=this._spread,\"started\"===this.state&&this._forEach((t=>t.start()))}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach(((t,e)=>t.phase=this._phase+e/this.count*360))}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach((e=>e.baseType=t)),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type=\"custom\",this._forEach((e=>e.partials=t)))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach((e=>e.partialCount=t)),this._type=this._oscillators[0].type}asArray(t=1024){return ni(this,void 0,void 0,(function*(){return Go(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach((t=>t.dispose())),this}}class tr extends Po{constructor(){super(ui(tr.getDefaults(),arguments,[\"frequency\",\"modulationFrequency\"])),this.name=\"PWMOscillator\",this.sourceType=\"pwm\",this._scale=new Yo({context:this.context,value:2});const t=ui(tr.getDefaults(),arguments,[\"frequency\",\"modulationFrequency\"]);this._pulse=new Jo({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType=\"sine\",this.modulationFrequency=this._pulse.frequency,this._modulator=new Zo({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Oi(this,[\"modulationFrequency\",\"frequency\",\"detune\"])}static getDefaults(){return Object.assign(Po.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:\"pwm\"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return\"pwm\"}get baseType(){return\"pwm\"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return ni(this,void 0,void 0,(function*(){return Go(this,t)}))}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const er={am:$o,fat:Ko,fm:Ho,oscillator:Zo,pulse:Jo,pwm:tr};class sr extends Po{constructor(){super(ui(sr.getDefaults(),arguments,[\"frequency\",\"type\"])),this.name=\"OmniOscillator\";const t=ui(sr.getDefaults(),arguments,[\"frequency\",\"type\"]);this.frequency=new po({context:this.context,units:\"frequency\",value:t.frequency}),this.detune=new po({context:this.context,units:\"cents\",value:t.detune}),Oi(this,[\"frequency\",\"detune\"]),this.set(t)}static getDefaults(){return Object.assign(Zo.getDefaults(),Ho.getDefaults(),$o.getDefaults(),Ko.getDefaults(),Jo.getDefaults(),tr.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t=\"\";return[\"am\",\"fm\",\"fat\"].some((t=>this._sourceType===t))&&(t=this._sourceType),t+this._oscillator.type}set type(t){\"fm\"===t.substr(0,2)?(this._createNewOscillator(\"fm\"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):\"am\"===t.substr(0,2)?(this._createNewOscillator(\"am\"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):\"fat\"===t.substr(0,3)?(this._createNewOscillator(\"fat\"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):\"pwm\"===t?(this._createNewOscillator(\"pwm\"),this._oscillator=this._oscillator):\"pulse\"===t?this._createNewOscillator(\"pulse\"):(this._createNewOscillator(\"oscillator\"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){this._getOscType(this._oscillator,\"pulse\")||this._getOscType(this._oscillator,\"pwm\")||(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){this._getOscType(this._oscillator,\"pulse\")||this._getOscType(this._oscillator,\"pwm\")||(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,\"type\")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=er[t],s=this.now();if(this._oscillator){const t=this._oscillator;t.stop(s),this.context.setTimeout((()=>t.dispose()),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),\"started\"===this.state&&this._oscillator.start(s)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e=\"sine\";\"pwm\"!==this._oscillator.type&&\"pulse\"!==this._oscillator.type&&(e=this._oscillator.type),\"fm\"===t?this.type=\"fm\"+e:\"am\"===t?this.type=\"am\"+e:\"fat\"===t?this.type=\"fat\"+e:\"oscillator\"===t?this.type=e:\"pulse\"===t?this.type=\"pulse\":\"pwm\"===t&&(this.type=\"pwm\")}_getOscType(t,e){return t instanceof er[e]}get baseType(){return this._oscillator.baseType}set baseType(t){this._getOscType(this._oscillator,\"pulse\")||this._getOscType(this._oscillator,\"pwm\")||\"pulse\"===t||\"pwm\"===t||(this._oscillator.baseType=t)}get width(){return this._getOscType(this._oscillator,\"pulse\")?this._oscillator.width:void 0}get count(){return this._getOscType(this._oscillator,\"fat\")?this._oscillator.count:void 0}set count(t){this._getOscType(this._oscillator,\"fat\")&&Nn(t)&&(this._oscillator.count=t)}get spread(){return this._getOscType(this._oscillator,\"fat\")?this._oscillator.spread:void 0}set spread(t){this._getOscType(this._oscillator,\"fat\")&&Nn(t)&&(this._oscillator.spread=t)}get modulationType(){return this._getOscType(this._oscillator,\"fm\")||this._getOscType(this._oscillator,\"am\")?this._oscillator.modulationType:void 0}set modulationType(t){(this._getOscType(this._oscillator,\"fm\")||this._getOscType(this._oscillator,\"am\"))&&zn(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){return this._getOscType(this._oscillator,\"fm\")?this._oscillator.modulationIndex:void 0}get harmonicity(){return this._getOscType(this._oscillator,\"fm\")||this._getOscType(this._oscillator,\"am\")?this._oscillator.harmonicity:void 0}get modulationFrequency(){return this._getOscType(this._oscillator,\"pwm\")?this._oscillator.modulationFrequency:void 0}asArray(t=1024){return ni(this,void 0,void 0,(function*(){return Go(this,t)}))}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class nr extends po{constructor(){super(Object.assign(ui(nr.getDefaults(),arguments,[\"value\"]))),this.override=!1,this.name=\"Add\",this._sum=new ho({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,oo(this._constantSource,this._sum)}static getDefaults(){return Object.assign(po.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class ir extends Ro{constructor(){super(Object.assign(ui(ir.getDefaults(),arguments,[\"min\",\"max\"]))),this.name=\"Scale\";const t=ui(ir.getDefaults(),arguments,[\"min\",\"max\"]);this._mult=this.input=new Yo({context:this.context,value:t.max-t.min}),this._add=this.output=new nr({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Ro.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class or extends Ro{constructor(){super(Object.assign(ui(or.getDefaults(),arguments))),this.name=\"Zero\",this._gain=new ho({context:this.context}),this.output=this._gain,this.input=void 0,ro(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),ao(this.context.getConstant(0),this._gain),this}}class rr extends io{constructor(){super(ui(rr.getDefaults(),arguments,[\"frequency\",\"min\",\"max\"])),this.name=\"LFO\",this._stoppedValue=0,this._units=\"number\",this.convert=!0,this._fromType=no.prototype._fromType,this._toType=no.prototype._toType,this._is=no.prototype._is,this._clampValue=no.prototype._clampValue;const t=ui(rr.getDefaults(),arguments,[\"frequency\",\"min\",\"max\"]);this._oscillator=new Zo(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new ho({context:this.context,gain:t.amplitude,units:\"normalRange\"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new po({context:this.context,units:\"audioRange\",value:0}),this._zeros=new or({context:this.context}),this._a2g=new Xo({context:this.context}),this._scaler=this.output=new ir({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),Oi(this,[\"amplitude\",\"frequency\"]),this.phase=t.phase}static getDefaults(){return Object.assign(Zo.getDefaults(),{amplitude:1,frequency:\"4n\",max:1,min:0,type:\"sine\",units:\"number\"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,s=this.max;this._units=t,this.min=e,this.max=s}get state(){return this._oscillator.state}connect(t,e,s){return(t instanceof no||t instanceof po)&&(this.convert=t.convert,this.units=t.units),fo(this,t,e,s),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function ar(t,e=1/0){const s=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return s.get(this)},set:function(n){Un(n,t,e),s.set(this,n)}})}}function cr(t,e=1/0){const s=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return s.get(this)},set:function(n){Un(this.toSeconds(n),t,e),s.set(this,n)}})}}class hr extends Po{constructor(){super(ui(hr.getDefaults(),arguments,[\"url\",\"onload\"])),this.name=\"Player\",this._activeSources=new Set;const t=ui(hr.getDefaults(),arguments,[\"url\",\"onload\"]);this._buffer=new Ri({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Po.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Ei,onerror:Ei,playbackRate:1,reverse:!1})}load(t){return ni(this,void 0,void 0,(function*(){return yield this._buffer.load(t),this._onload(),this}))}_onload(t=Ei){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),0!==this._activeSources.size||this._synced||\"started\"!==this._state.getValueAtTime(this.now())||(this._state.cancel(this.now()),this._state.setStateAtTime(\"stopped\",this.now()))}start(t,e,s){return super.start(t,e,s),this}_start(t,e,s){e=this._loop?pi(e,this._loopStart):pi(e,0);const n=this.toSeconds(e),i=s;s=pi(s,Math.max(this._buffer.duration-n,0));let o=this.toSeconds(s);o/=this._playbackRate,t=this.toSeconds(t);const r=new jo({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);this._loop||this._synced||(this._state.cancel(t+o),this._state.setStateAtTime(\"stopped\",t+o,{implicitEnd:!0})),this._activeSources.add(r),this._loop&&Fn(i)?r.start(t,n):r.start(t,n,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach((t=>t.stop(e)))}restart(t,e,s){return super.restart(t,e,s),this}_restart(t,e,s){var n;null===(n=[...this._activeSources].pop())||void 0===n||n.stop(t),this._start(t,e,s)}seek(t,e){const s=this.toSeconds(e);if(\"started\"===this._state.getValueAtTime(s)){const e=this.toSeconds(t);this._stop(s),this._start(s,e)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Un(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach((e=>{e.loopStart=t}))}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Un(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach((e=>{e.loopEnd=t}))}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach((e=>{e.loop=t})),t)){const t=this._state.getNextState(\"stopped\",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),s=this._state.getNextState(\"stopped\",e);s&&s.implicitEnd&&(this._state.cancel(s.time),this._activeSources.forEach((t=>t.cancelStop()))),this._activeSources.forEach((s=>{s.playbackRate.setValueAtTime(t,e)}))}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach((t=>t.dispose())),this._activeSources.clear(),this._buffer.dispose(),this}}si([cr(0)],hr.prototype,\"fadeIn\",void 0),si([cr(0)],hr.prototype,\"fadeOut\",void 0);class lr extends io{constructor(){super(ui(lr.getDefaults(),arguments,[\"urls\",\"onload\"],\"urls\")),this.name=\"Players\",this.input=void 0,this._players=new Map;const t=ui(lr.getDefaults(),arguments,[\"urls\",\"onload\"],\"urls\");this._volume=this.output=new Oo({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Oi(this,\"volume\"),this._buffers=new wo({urls:t.urls,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.mute=t.mute,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Po.getDefaults(),{baseUrl:\"\",fadeIn:0,fadeOut:0,mute:!1,onload:Ei,onerror:Ei,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._players.forEach((e=>{e.fadeIn=t}))}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._players.forEach((e=>{e.fadeOut=t}))}get state(){return Array.from(this._players).some((([t,e])=>\"started\"===e.state))?\"started\":\"stopped\"}has(t){return this._buffers.has(t)}player(t){if(Bn(this.has(t),`No Player with the name ${t} exists on this object`),!this._players.has(t)){const e=new hr({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(t)}).connect(this.output);this._players.set(t,e)}return this._players.get(t)}get loaded(){return this._buffers.loaded}add(t,e,s){return Bn(!this._buffers.has(t),\"A buffer with that name already exists on this object\"),this._buffers.add(t,e,s),this}stopAll(t){return this._players.forEach((e=>e.stop(t))),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach((t=>t.dispose())),this._buffers.dispose(),this}}class ur extends Po{constructor(){super(ui(ur.getDefaults(),arguments,[\"url\",\"onload\"])),this.name=\"GrainPlayer\",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const t=ui(ur.getDefaults(),arguments,[\"url\",\"onload\"]);this.buffer=new Ri({onload:t.onload,onerror:t.onerror,reverse:t.reverse,url:t.url}),this._clock=new vo({context:this.context,callback:this._tick.bind(this),frequency:1/t.grainSize}),this._playbackRate=t.playbackRate,this._grainSize=t.grainSize,this._overlap=t.overlap,this.detune=t.detune,this.overlap=t.overlap,this.loop=t.loop,this.playbackRate=t.playbackRate,this.grainSize=t.grainSize,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.reverse=t.reverse,this._clock.on(\"stop\",this._onstop.bind(this))}static getDefaults(){return Object.assign(Po.getDefaults(),{onload:Ei,onerror:Ei,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(t,e,s){e=pi(e,0),e=this.toSeconds(e),t=this.toSeconds(t);const n=1/this._clock.frequency.getValueAtTime(t);this._clock.start(t,e/n),s&&this.stop(t+this.toSeconds(s))}restart(t,e,s){return super.restart(t,e,s),this}_restart(t,e,s){this._stop(t),this._start(t,e,s)}_stop(t){this._clock.stop(t)}_onstop(t){this._activeSources.forEach((e=>{e.fadeOut=0,e.stop(t)})),this.onstop(this)}_tick(t){const e=this._clock.getTicksAtTime(t),s=e*this._grainSize;if(this.log(\"offset\",s),!this.loop&&s>this.buffer.duration)return void this.stop(t);const n=s<this._overlap?0:this._overlap,i=new jo({context:this.context,url:this.buffer,fadeIn:n,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:zi(this.detune/100)}).connect(this.output);i.start(t,this._grainSize*e),i.stop(t+this._grainSize/this.playbackRate),this._activeSources.push(i),i.onended=()=>{const t=this._activeSources.indexOf(i);-1!==t&&this._activeSources.splice(t,1)}}get playbackRate(){return this._playbackRate}set playbackRate(t){Un(t,.001),this._playbackRate=t,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(t){this.buffer.loaded&&Un(this.toSeconds(t),0,this.buffer.duration),this._loopStart=this.toSeconds(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this.buffer.loaded&&Un(this.toSeconds(t),0,this.buffer.duration),this._loopEnd=this.toSeconds(t)}get reverse(){return this.buffer.reverse}set reverse(t){this.buffer.reverse=t}get grainSize(){return this._grainSize}set grainSize(t){this._grainSize=this.toSeconds(t),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(t){const e=this.toSeconds(t);Un(e,0),this._overlap=e}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach((t=>t.dispose())),this}}class pr extends Ro{constructor(){super(...arguments),this.name=\"Abs\",this._abs=new qo({context:this.context,mapping:t=>Math.abs(t)<.001?0:Math.abs(t)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class dr extends Ro{constructor(){super(...arguments),this.name=\"GainToAudio\",this._norm=new qo({context:this.context,mapping:t=>2*Math.abs(t)-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class fr extends Ro{constructor(){super(...arguments),this.name=\"Negate\",this._multiply=new Yo({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class _r extends po{constructor(){super(Object.assign(ui(_r.getDefaults(),arguments,[\"value\"]))),this.override=!1,this.name=\"Subtract\",this._sum=new ho({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new fr({context:this.context}),this.subtrahend=this._param,oo(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(po.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class mr extends Ro{constructor(){super(Object.assign(ui(mr.getDefaults(),arguments))),this.name=\"GreaterThanZero\",this._thresh=this.output=new qo({context:this.context,length:127,mapping:t=>t<=0?0:1}),this._scale=this.input=new Yo({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class gr extends po{constructor(){super(Object.assign(ui(gr.getDefaults(),arguments,[\"value\"]))),this.name=\"GreaterThan\",this.override=!1;const t=ui(gr.getDefaults(),arguments,[\"value\"]);this._subtract=this.input=new _r({context:this.context,value:t.value}),this._gtz=this.output=new mr({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,Oi(this,\"comparator\"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(po.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class vr extends ir{constructor(){super(Object.assign(ui(vr.getDefaults(),arguments,[\"min\",\"max\",\"exponent\"]))),this.name=\"ScaleExp\";const t=ui(vr.getDefaults(),arguments,[\"min\",\"max\",\"exponent\"]);this.input=this._exp=new Fo({context:this.context,value:t.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(ir.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(t){this._exp.value=t}dispose(){return super.dispose(),this._exp.dispose(),this}}class yr extends po{constructor(){super(ui(po.getDefaults(),arguments,[\"value\",\"units\"])),this.name=\"SyncedSignal\",this.override=!1;const t=ui(po.getDefaults(),arguments,[\"value\",\"units\"]);this._lastVal=t.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),\"1i\"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on(\"start\",this._syncedCallback),this.context.transport.on(\"pause\",this._syncedCallback),this.context.transport.on(\"stop\",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new uo({context:this.context,offset:t.value,units:t.units}).start(0),this.setValueAtTime(t.value,0)}_onTick(t){const e=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==e&&(this._lastVal=e,this._constantSource.offset.setValueAtTime(e,t))}_anchorValue(t){const e=super.getValueAtTime(this.context.transport.seconds);this._lastVal=e,this._constantSource.offset.cancelAndHoldAtTime(t),this._constantSource.offset.setValueAtTime(e,t)}getValueAtTime(t){const e=new Ki(this.context,t).toSeconds();return super.getValueAtTime(e)}setValueAtTime(t,e){const s=new Ki(this.context,e).toSeconds();return super.setValueAtTime(t,s),this}linearRampToValueAtTime(t,e){const s=new Ki(this.context,e).toSeconds();return super.linearRampToValueAtTime(t,s),this}exponentialRampToValueAtTime(t,e){const s=new Ki(this.context,e).toSeconds();return super.exponentialRampToValueAtTime(t,s),this}setTargetAtTime(t,e,s){const n=new Ki(this.context,e).toSeconds();return super.setTargetAtTime(t,n,s),this}cancelScheduledValues(t){const e=new Ki(this.context,t).toSeconds();return super.cancelScheduledValues(e),this}setValueCurveAtTime(t,e,s,n){const i=new Ki(this.context,e).toSeconds();return s=this.toSeconds(s),super.setValueCurveAtTime(t,i,s,n),this}cancelAndHoldAtTime(t){const e=new Ki(this.context,t).toSeconds();return super.cancelAndHoldAtTime(e),this}setRampPoint(t){const e=new Ki(this.context,t).toSeconds();return super.setRampPoint(e),this}exponentialRampTo(t,e,s){const n=new Ki(this.context,s).toSeconds();return super.exponentialRampTo(t,e,n),this}linearRampTo(t,e,s){const n=new Ki(this.context,s).toSeconds();return super.linearRampTo(t,e,n),this}targetRampTo(t,e,s){const n=new Ki(this.context,s).toSeconds();return super.targetRampTo(t,e,n),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off(\"start\",this._syncedCallback),this.context.transport.off(\"pause\",this._syncedCallback),this.context.transport.off(\"stop\",this._syncedCallback),this._constantSource.dispose(),this}}class xr extends io{constructor(){super(ui(xr.getDefaults(),arguments,[\"attack\",\"decay\",\"sustain\",\"release\"])),this.name=\"Envelope\",this._sig=new po({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=ui(xr.getDefaults(),arguments,[\"attack\",\"decay\",\"sustain\",\"release\"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(io.getDefaults(),{attack:.01,attackCurve:\"linear\",decay:.1,decayCurve:\"exponential\",release:1,releaseCurve:\"exponential\",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(zn(t))return t;{let s;for(s in wr)if(wr[s][e]===t)return s;return t}}_setCurve(t,e,s){if(zn(s)&&Reflect.has(wr,s)){const n=wr[s];Pn(n)?\"_decayCurve\"!==t&&(this[t]=n[e]):this[t]=n}else{if(!Ln(s)||\"_decayCurve\"===t)throw new Error(\"Envelope: invalid curve: \"+s);this[t]=s}}get attackCurve(){return this._getCurve(this._attackCurve,\"In\")}set attackCurve(t){this._setCurve(\"_attackCurve\",\"In\",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,\"Out\")}set releaseCurve(t){this._setCurve(\"_releaseCurve\",\"Out\",t)}get decayCurve(){return this._getCurve(this._decayCurve,\"Out\")}set decayCurve(t){this._setCurve(\"_decayCurve\",\"Out\",t)}triggerAttack(t,e=1){this.log(\"triggerAttack\",t,e),t=this.toSeconds(t);let s=this.toSeconds(this.attack);const n=this.toSeconds(this.decay),i=this.getValueAtTime(t);if(i>0&&(s=(1-i)/(1/s)),s<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(\"linear\"===this._attackCurve)this._sig.linearRampTo(e,s,t);else if(\"exponential\"===this._attackCurve)this._sig.targetRampTo(e,s,t);else{this._sig.cancelAndHoldAtTime(t);let n=this._attackCurve;for(let t=1;t<n.length;t++)if(n[t-1]<=i&&i<=n[t]){n=this._attackCurve.slice(t),n[0]=i;break}this._sig.setValueCurveAtTime(n,t,s,e)}if(n&&this.sustain<1){const i=e*this.sustain,o=t+s;this.log(\"decay\",o),\"linear\"===this._decayCurve?this._sig.linearRampToValueAtTime(i,n+o):this._sig.exponentialApproachValueAtTime(i,o,n)}return this}triggerRelease(t){this.log(\"triggerRelease\",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const s=this.toSeconds(this.release);s<this.sampleTime?this._sig.setValueAtTime(0,t):\"linear\"===this._releaseCurve?this._sig.linearRampTo(0,s,t):\"exponential\"===this._releaseCurve?this._sig.targetRampTo(0,s,t):(Bn(Ln(this._releaseCurve),\"releaseCurve must be either 'linear', 'exponential' or an array\"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,s,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,s=1){return e=this.toSeconds(e),this.triggerAttack(e,s),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,s=0){return fo(this,t,e,s),this}asArray(t=1024){return ni(this,void 0,void 0,(function*(){const e=t/this.context.sampleRate,s=new qi(1,e,this.context.sampleRate),n=this.toSeconds(this.attack)+this.toSeconds(this.decay),i=n+this.toSeconds(this.release),o=.1*i,r=i+o,a=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/r,decay:e*this.toSeconds(this.decay)/r,release:e*this.toSeconds(this.release)/r,context:s}));return a._sig.toDestination(),a.triggerAttackRelease(e*(n+o)/r,0),(yield s.render()).getChannelData(0)}))}dispose(){return super.dispose(),this._sig.dispose(),this}}si([cr(0)],xr.prototype,\"attack\",void 0),si([cr(0)],xr.prototype,\"decay\",void 0),si([ar(0,1)],xr.prototype,\"sustain\",void 0),si([cr(0)],xr.prototype,\"release\",void 0);const wr=(()=>{const t=128;let e,s;const n=[];for(e=0;e<t;e++)n[e]=Math.sin(e/127*(Math.PI/2));const i=[];for(e=0;e<127;e++){s=e/127;const t=Math.sin(s*(2*Math.PI)*6.4-Math.PI/2)+1;i[e]=t/10+.83*s}i[127]=1;const o=[];for(e=0;e<t;e++)o[e]=Math.ceil(e/127*5)/5;const r=[];for(e=0;e<t;e++)s=e/127,r[e]=.5*(1-Math.cos(Math.PI*s));const a=[];for(e=0;e<t;e++){s=e/127;const t=4*Math.pow(s,3)+.2,n=Math.cos(t*Math.PI*2*s);a[e]=Math.abs(n*(1-s))}function c(t){const e=new Array(t.length);for(let s=0;s<t.length;s++)e[s]=1-t[s];return e}return{bounce:{In:c(a),Out:a},cosine:{In:n,Out:(h=n,h.slice(0).reverse())},exponential:\"exponential\",linear:\"linear\",ripple:{In:i,Out:c(i)},sine:{In:r,Out:c(r)},step:{In:o,Out:c(o)}};var h})();class br extends io{constructor(){super(ui(br.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=t=>this._original_triggerRelease(t);const t=ui(br.getDefaults(),arguments);this._volume=this.output=new Oo({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Oi(this,\"volume\")}static getDefaults(){return Object.assign(io.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod(\"triggerAttack\",1),this._syncMethod(\"triggerRelease\",0),this.context.transport.on(\"stop\",this._syncedRelease),this.context.transport.on(\"pause\",this._syncedRelease),this.context.transport.on(\"loopEnd\",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const s=this[\"_original_\"+t]=this[t];this[t]=(...t)=>{const n=t[e],i=this.context.transport.schedule((n=>{t[e]=n,s.apply(this,t)}),n);this._scheduledEvents.push(i)}}unsync(){return this._scheduledEvents.forEach((t=>this.context.transport.clear(t))),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off(\"stop\",this._syncedRelease),this.context.transport.off(\"pause\",this._syncedRelease),this.context.transport.off(\"loopEnd\",this._syncedRelease)),this}triggerAttackRelease(t,e,s,n){const i=this.toSeconds(s),o=this.toSeconds(e);return this.triggerAttack(t,i,n),this.triggerRelease(i+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Tr extends br{constructor(){super(ui(Tr.getDefaults(),arguments));const t=ui(Tr.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(br.getDefaults(),{detune:0,onsilence:Ei,portamento:0})}triggerAttack(t,e,s=1){this.log(\"triggerAttack\",t,e,s);const n=this.toSeconds(e);return this._triggerEnvelopeAttack(n,s),this.setNote(t,n),this}triggerRelease(t){this.log(\"triggerRelease\",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const s=this.toSeconds(e),n=t instanceof Yi?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const t=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(n,t,s)}else this.frequency.setValueAtTime(n,s);return this}}si([cr(0)],Tr.prototype,\"portamento\",void 0);class Sr extends xr{constructor(){super(ui(Sr.getDefaults(),arguments,[\"attack\",\"decay\",\"sustain\",\"release\"])),this.name=\"AmplitudeEnvelope\",this._gainNode=new ho({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class kr extends Tr{constructor(){super(ui(kr.getDefaults(),arguments)),this.name=\"Synth\";const t=ui(kr.getDefaults(),arguments);this.oscillator=new sr(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new Sr(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Oi(this,[\"oscillator\",\"frequency\",\"detune\",\"envelope\"])}static getDefaults(){return Object.assign(Tr.getDefaults(),{envelope:Object.assign(di(xr.getDefaults(),Object.keys(io.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(di(sr.getDefaults(),[...Object.keys(Po.getDefaults()),\"frequency\",\"detune\"]),{type:\"triangle\"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),0===this.envelope.sustain){const e=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+e+s)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class Ar extends Tr{constructor(){super(ui(Ar.getDefaults(),arguments)),this.name=\"ModulationSynth\";const t=ui(Ar.getDefaults(),arguments);this._carrier=new kr({context:this.context,oscillator:t.oscillator,envelope:t.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new kr({context:this.context,oscillator:t.modulation,envelope:t.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new po({context:this.context,units:\"frequency\"}),this.detune=new po({context:this.context,value:t.detune,units:\"cents\"}),this.harmonicity=new Yo({context:this.context,value:t.harmonicity,minValue:0}),this._modulationNode=new ho({context:this.context,gain:0}),Oi(this,[\"frequency\",\"harmonicity\",\"oscillator\",\"envelope\",\"modulation\",\"modulationEnvelope\",\"detune\"])}static getDefaults(){return Object.assign(Tr.getDefaults(),{harmonicity:3,oscillator:Object.assign(di(sr.getDefaults(),[...Object.keys(Po.getDefaults()),\"frequency\",\"detune\"]),{type:\"sine\"}),envelope:Object.assign(di(xr.getDefaults(),Object.keys(io.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(di(sr.getDefaults(),[...Object.keys(Po.getDefaults()),\"frequency\",\"detune\"]),{type:\"square\"}),modulationEnvelope:Object.assign(di(xr.getDefaults(),Object.keys(io.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(t,e){this._carrier._triggerEnvelopeAttack(t,e),this._modulator._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this._carrier._triggerEnvelopeRelease(t),this._modulator._triggerEnvelopeRelease(t),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class Cr extends Ar{constructor(){super(ui(Cr.getDefaults(),arguments)),this.name=\"AMSynth\",this._modulationScale=new Xo({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class Dr extends io{constructor(){super(ui(Dr.getDefaults(),arguments,[\"frequency\",\"type\"])),this.name=\"BiquadFilter\";const t=ui(Dr.getDefaults(),arguments,[\"frequency\",\"type\"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new no({context:this.context,units:\"number\",value:t.Q,param:this._filter.Q}),this.frequency=new no({context:this.context,units:\"frequency\",value:t.frequency,param:this._filter.frequency}),this.detune=new no({context:this.context,units:\"cents\",value:t.detune,param:this._filter.detune}),this.gain=new no({context:this.context,units:\"decibels\",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(io.getDefaults(),{Q:1,type:\"lowpass\",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){Bn(-1!==[\"lowpass\",\"highpass\",\"bandpass\",\"lowshelf\",\"highshelf\",\"notch\",\"allpass\",\"peaking\"].indexOf(t),`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let s=0;s<t;s++){const n=19980*Math.pow(s/t,2)+20;e[s]=n}const s=new Float32Array(t),n=new Float32Array(t),i=this.context.createBiquadFilter();return i.type=this.type,i.Q.value=this.Q.value,i.frequency.value=this.frequency.value,i.gain.value=this.gain.value,i.getFrequencyResponse(e,s,n),s}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class Or extends io{constructor(){super(ui(Or.getDefaults(),arguments,[\"frequency\",\"type\",\"rolloff\"])),this.name=\"Filter\",this.input=new ho({context:this.context}),this.output=new ho({context:this.context}),this._filters=[];const t=ui(Or.getDefaults(),arguments,[\"frequency\",\"type\",\"rolloff\"]);this._filters=[],this.Q=new po({context:this.context,units:\"positive\",value:t.Q}),this.frequency=new po({context:this.context,units:\"frequency\",value:t.frequency}),this.detune=new po({context:this.context,units:\"cents\",value:t.detune}),this.gain=new po({context:this.context,units:\"decibels\",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,Oi(this,[\"detune\",\"frequency\",\"gain\",\"Q\"])}static getDefaults(){return Object.assign(io.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:\"lowpass\"})}get type(){return this._type}set type(t){Bn(-1!==[\"lowpass\",\"highpass\",\"bandpass\",\"lowshelf\",\"highshelf\",\"notch\",\"allpass\",\"peaking\"].indexOf(t),`Invalid filter type: ${t}`),this._type=t,this._filters.forEach((e=>e.type=t))}get rolloff(){return this._rolloff}set rolloff(t){const e=Nn(t)?t:parseInt(t,10),s=[-12,-24,-48,-96];let n=s.indexOf(e);Bn(-1!==n,`rolloff can only be ${s.join(\", \")}`),n+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach((t=>t.disconnect())),this._filters=new Array(n);for(let t=0;t<n;t++){const e=new Dr({context:this.context});e.type=this._type,this.frequency.connect(e.frequency),this.detune.connect(e.detune),this.Q.connect(e.Q),this.gain.connect(e.gain),this._filters[t]=e}this._internalChannels=this._filters,oo(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new Dr({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),s=new Float32Array(t).map((()=>1));return this._filters.forEach((()=>{e.getFrequencyResponse(t).forEach(((t,e)=>s[e]*=t))})),e.dispose(),s}dispose(){return super.dispose(),this._filters.forEach((t=>{t.dispose()})),Mi(this,[\"detune\",\"frequency\",\"gain\",\"Q\"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class Mr extends xr{constructor(){super(ui(Mr.getDefaults(),arguments,[\"attack\",\"decay\",\"sustain\",\"release\"])),this.name=\"FrequencyEnvelope\";const t=ui(Mr.getDefaults(),arguments,[\"attack\",\"decay\",\"sustain\",\"release\"]);this._octaves=t.octaves,this._baseFrequency=this.toFrequency(t.baseFrequency),this._exponent=this.input=new Fo({context:this.context,value:t.exponent}),this._scale=this.output=new ir({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(xr.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){const e=this.toFrequency(t);Un(e,0),this._baseFrequency=e,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._scale.max=this._baseFrequency*Math.pow(2,t)}get exponent(){return this._exponent.value}set exponent(t){this._exponent.value=t}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class Er extends Tr{constructor(){super(ui(Er.getDefaults(),arguments)),this.name=\"MonoSynth\";const t=ui(Er.getDefaults(),arguments);this.oscillator=new sr(Object.assign(t.oscillator,{context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new Or(Object.assign(t.filter,{context:this.context})),this.filterEnvelope=new Mr(Object.assign(t.filterEnvelope,{context:this.context})),this.envelope=new Sr(Object.assign(t.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),Oi(this,[\"oscillator\",\"frequency\",\"detune\",\"filter\",\"filterEnvelope\",\"envelope\"])}static getDefaults(){return Object.assign(Tr.getDefaults(),{envelope:Object.assign(di(xr.getDefaults(),Object.keys(io.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(di(Or.getDefaults(),Object.keys(io.getDefaults())),{Q:1,rolloff:-12,type:\"lowpass\"}),filterEnvelope:Object.assign(di(Mr.getDefaults(),Object.keys(io.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(di(sr.getDefaults(),Object.keys(Po.getDefaults())),{type:\"sawtooth\"})})}_triggerEnvelopeAttack(t,e=1){if(this.envelope.triggerAttack(t,e),this.filterEnvelope.triggerAttack(t),this.oscillator.start(t),0===this.envelope.sustain){const e=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+e+s)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.filterEnvelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class Rr extends Tr{constructor(){super(ui(Rr.getDefaults(),arguments)),this.name=\"DuoSynth\";const t=ui(Rr.getDefaults(),arguments);this.voice0=new Er(Object.assign(t.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new Er(Object.assign(t.voice1,{context:this.context})),this.harmonicity=new Yo({context:this.context,units:\"positive\",value:t.harmonicity}),this._vibrato=new rr({frequency:t.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new ho({context:this.context,units:\"normalRange\",gain:t.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new po({context:this.context,units:\"frequency\",value:440}),this.detune=new po({context:this.context,units:\"cents\",value:t.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),Oi(this,[\"voice0\",\"voice1\",\"frequency\",\"vibratoAmount\",\"vibratoRate\"])}getLevelAtTime(t){return t=this.toSeconds(t),this.voice0.envelope.getValueAtTime(t)+this.voice1.envelope.getValueAtTime(t)}static getDefaults(){return li(Tr.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:li(di(Er.getDefaults(),Object.keys(Tr.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:li(di(Er.getDefaults(),Object.keys(Tr.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(t,e){this.voice0._triggerEnvelopeAttack(t,e),this.voice1._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this.voice0._triggerEnvelopeRelease(t),this.voice1._triggerEnvelopeRelease(t),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class qr extends Ar{constructor(){super(ui(qr.getDefaults(),arguments)),this.name=\"FMSynth\";const t=ui(qr.getDefaults(),arguments);this.modulationIndex=new Yo({context:this.context,value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(Ar.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const Fr=[1,1.483,1.932,2.546,2.63,3.897];class Ir extends Tr{constructor(){super(ui(Ir.getDefaults(),arguments)),this.name=\"MetalSynth\",this._oscillators=[],this._freqMultipliers=[];const t=ui(Ir.getDefaults(),arguments);this.detune=new po({context:this.context,units:\"cents\",value:t.detune}),this.frequency=new po({context:this.context,units:\"frequency\"}),this._amplitude=new ho({context:this.context,gain:0}).connect(this.output),this._highpass=new Or({Q:0,context:this.context,type:\"highpass\"}).connect(this._amplitude);for(let e=0;e<Fr.length;e++){const s=new Ho({context:this.context,harmonicity:t.harmonicity,modulationIndex:t.modulationIndex,modulationType:\"square\",onstop:0===e?()=>this.onsilence(this):Ei,type:\"square\"});s.connect(this._highpass),this._oscillators[e]=s;const n=new Yo({context:this.context,value:Fr[e]});this._freqMultipliers[e]=n,this.frequency.chain(n,s.frequency),this.detune.connect(s.detune)}this._filterFreqScaler=new ir({context:this.context,max:7e3,min:this.toFrequency(t.resonance)}),this.envelope=new xr({attack:t.envelope.attack,attackCurve:\"linear\",context:this.context,decay:t.envelope.decay,release:t.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=t.octaves,this.octaves=t.octaves}static getDefaults(){return li(Tr.getDefaults(),{envelope:Object.assign(di(xr.getDefaults(),Object.keys(io.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(t,e=1){return this.envelope.triggerAttack(t,e),this._oscillators.forEach((e=>e.start(t))),0===this.envelope.sustain&&this._oscillators.forEach((e=>{e.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))})),this}_triggerEnvelopeRelease(t){return this.envelope.triggerRelease(t),this._oscillators.forEach((e=>e.stop(t+this.toSeconds(this.envelope.release)))),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(t){this._oscillators.forEach((e=>e.modulationIndex.value=t))}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(t){this._oscillators.forEach((e=>e.harmonicity.value=t))}get resonance(){return this._filterFreqScaler.min}set resonance(t){this._filterFreqScaler.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,t)}dispose(){return super.dispose(),this._oscillators.forEach((t=>t.dispose())),this._freqMultipliers.forEach((t=>t.dispose())),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class Vr extends kr{constructor(){super(ui(Vr.getDefaults(),arguments)),this.name=\"MembraneSynth\",this.portamento=0;const t=ui(Vr.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Oi(this,[\"oscillator\",\"envelope\"])}static getDefaults(){return li(Tr.getDefaults(),kr.getDefaults(),{envelope:{attack:.001,attackCurve:\"exponential\",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:\"sine\"},pitchDecay:.05})}setNote(t,e){const s=this.toSeconds(e),n=this.toFrequency(t instanceof Yi?t.toFrequency():t),i=n*this.octaves;return this.oscillator.frequency.setValueAtTime(i,s),this.oscillator.frequency.exponentialRampToValueAtTime(n,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}si([ar(0)],Vr.prototype,\"octaves\",void 0),si([cr(0)],Vr.prototype,\"pitchDecay\",void 0);class Nr extends br{constructor(){super(ui(Nr.getDefaults(),arguments)),this.name=\"NoiseSynth\";const t=ui(Nr.getDefaults(),arguments);this.noise=new Lo(Object.assign({context:this.context},t.noise)),this.envelope=new Sr(Object.assign({context:this.context},t.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(br.getDefaults(),{envelope:Object.assign(di(xr.getDefaults(),Object.keys(io.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(di(Lo.getDefaults(),Object.keys(Po.getDefaults())),{type:\"white\"})})}triggerAttack(t,e=1){return t=this.toSeconds(t),this.envelope.triggerAttack(t,e),this.noise.start(t),0===this.envelope.sustain&&this.noise.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(t){return t=this.toSeconds(t),this.envelope.triggerRelease(t),this.noise.stop(t+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod(\"triggerAttack\",0),this._syncMethod(\"triggerRelease\",0)),this}triggerAttackRelease(t,e,s=1){return e=this.toSeconds(e),t=this.toSeconds(t),this.triggerAttack(e,s),this.triggerRelease(e+t),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const Pr=new Set;function jr(t){Pr.add(t)}function Lr(t,e){const s=`registerProcessor(\"${t}\", ${e})`;Pr.add(s)}class zr extends io{constructor(t){super(t),this.name=\"ToneAudioWorklet\",this.workletOptions={},this.onprocessorerror=Ei;const e=URL.createObjectURL(new Blob([Array.from(Pr).join(\"\\n\")],{type:\"text/javascript\"})),s=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(e).then((()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(s,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))}))}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage(\"dispose\"),this._worklet.disconnect()),this}}jr('\\n\\t/**\\n\\t * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. \\n\\t */\\n\\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\\n\\n\\t\\tconstructor(options) {\\n\\t\\t\\t\\n\\t\\t\\tsuper(options);\\n\\t\\t\\t/**\\n\\t\\t\\t * If the processor was disposed or not. Keep alive until it\\'s disposed.\\n\\t\\t\\t */\\n\\t\\t\\tthis.disposed = false;\\n\\t\\t   \\t/** \\n\\t\\t\\t * The number of samples in the processing block\\n\\t\\t\\t */\\n\\t\\t\\tthis.blockSize = 128;\\n\\t\\t\\t/**\\n\\t\\t\\t * the sample rate\\n\\t\\t\\t */\\n\\t\\t\\tthis.sampleRate = sampleRate;\\n\\n\\t\\t\\tthis.port.onmessage = (event) => {\\n\\t\\t\\t\\t// when it receives a dispose \\n\\t\\t\\t\\tif (event.data === \"dispose\") {\\n\\t\\t\\t\\t\\tthis.disposed = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t}\\n\\t}\\n'),jr(\"\\n\\t/**\\n\\t * Abstract class for a single input/output processor. \\n\\t * has a 'generate' function which processes one sample at a time\\n\\t */\\n\\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\\n\\n\\t\\tconstructor(options) {\\n\\t\\t\\tsuper(Object.assign(options, {\\n\\t\\t\\t\\tnumberOfInputs: 1,\\n\\t\\t\\t\\tnumberOfOutputs: 1\\n\\t\\t\\t}));\\n\\t\\t\\t/**\\n\\t\\t\\t * Holds the name of the parameter and a single value of that\\n\\t\\t\\t * parameter at the current sample\\n\\t\\t\\t * @type { [name: string]: number }\\n\\t\\t\\t */\\n\\t\\t\\tthis.params = {}\\n\\t\\t}\\n\\n\\t\\t/**\\n\\t\\t * Generate an output sample from the input sample and parameters\\n\\t\\t * @abstract\\n\\t\\t * @param input number\\n\\t\\t * @param channel number\\n\\t\\t * @param parameters { [name: string]: number }\\n\\t\\t * @returns number\\n\\t\\t */\\n\\t\\tgenerate(){}\\n\\n\\t\\t/**\\n\\t\\t * Update the private params object with the \\n\\t\\t * values of the parameters at the given index\\n\\t\\t * @param parameters { [name: string]: Float32Array },\\n\\t\\t * @param index number\\n\\t\\t */\\n\\t\\tupdateParams(parameters, index) {\\n\\t\\t\\tfor (const paramName in parameters) {\\n\\t\\t\\t\\tconst param = parameters[paramName];\\n\\t\\t\\t\\tif (param.length > 1) {\\n\\t\\t\\t\\t\\tthis.params[paramName] = parameters[paramName][index];\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tthis.params[paramName] = parameters[paramName][0];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t/**\\n\\t\\t * Process a single frame of the audio\\n\\t\\t * @param inputs Float32Array[][]\\n\\t\\t * @param outputs Float32Array[][]\\n\\t\\t */\\n\\t\\tprocess(inputs, outputs, parameters) {\\n\\t\\t\\tconst input = inputs[0];\\n\\t\\t\\tconst output = outputs[0];\\n\\t\\t\\t// get the parameter values\\n\\t\\t\\tconst channelCount = Math.max(input && input.length || 0, output.length);\\n\\t\\t\\tfor (let sample = 0; sample < this.blockSize; sample++) {\\n\\t\\t\\t\\tthis.updateParams(parameters, sample);\\n\\t\\t\\t\\tfor (let channel = 0; channel < channelCount; channel++) {\\n\\t\\t\\t\\t\\tconst inputSample = input && input.length ? input[channel][sample] : 0;\\n\\t\\t\\t\\t\\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn !this.disposed;\\n\\t\\t}\\n\\t};\\n\"),jr(\"\\n\\t/**\\n\\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\\n\\t */\\n\\tclass DelayLine {\\n\\t\\t\\n\\t\\tconstructor(size, channels) {\\n\\t\\t\\tthis.buffer = [];\\n\\t\\t\\tthis.writeHead = []\\n\\t\\t\\tthis.size = size;\\n\\n\\t\\t\\t// create the empty channels\\n\\t\\t\\tfor (let i = 0; i < channels; i++) {\\n\\t\\t\\t\\tthis.buffer[i] = new Float32Array(this.size);\\n\\t\\t\\t\\tthis.writeHead[i] = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t/**\\n\\t\\t * Push a value onto the end\\n\\t\\t * @param channel number\\n\\t\\t * @param value number\\n\\t\\t */\\n\\t\\tpush(channel, value) {\\n\\t\\t\\tthis.writeHead[channel] += 1;\\n\\t\\t\\tif (this.writeHead[channel] > this.size) {\\n\\t\\t\\t\\tthis.writeHead[channel] = 0;\\n\\t\\t\\t}\\n\\t\\t\\tthis.buffer[channel][this.writeHead[channel]] = value;\\n\\t\\t}\\n\\n\\t\\t/**\\n\\t\\t * Get the recorded value of the channel given the delay\\n\\t\\t * @param channel number\\n\\t\\t * @param delay number delay samples\\n\\t\\t */\\n\\t\\tget(channel, delay) {\\n\\t\\t\\tlet readHead = this.writeHead[channel] - Math.floor(delay);\\n\\t\\t\\tif (readHead < 0) {\\n\\t\\t\\t\\treadHead += this.size;\\n\\t\\t\\t}\\n\\t\\t\\treturn this.buffer[channel][readHead];\\n\\t\\t}\\n\\t}\\n\");const Wr=\"feedback-comb-filter\";Lr(Wr,'\\n\\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\\n\\n\\t\\tconstructor(options) {\\n\\t\\t\\tsuper(options);\\n\\t\\t\\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\\n\\t\\t}\\n\\n\\t\\tstatic get parameterDescriptors() {\\n\\t\\t\\treturn [{\\n\\t\\t\\t\\tname: \"delayTime\",\\n\\t\\t\\t\\tdefaultValue: 0.1,\\n\\t\\t\\t\\tminValue: 0,\\n\\t\\t\\t\\tmaxValue: 1,\\n\\t\\t\\t\\tautomationRate: \"k-rate\"\\n\\t\\t\\t}, {\\n\\t\\t\\t\\tname: \"feedback\",\\n\\t\\t\\t\\tdefaultValue: 0.5,\\n\\t\\t\\t\\tminValue: 0,\\n\\t\\t\\t\\tmaxValue: 0.9999,\\n\\t\\t\\t\\tautomationRate: \"k-rate\"\\n\\t\\t\\t}];\\n\\t\\t}\\n\\n\\t\\tgenerate(input, channel, parameters) {\\n\\t\\t\\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\\n\\t\\t\\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\\n\\t\\t\\treturn delayedSample;\\n\\t\\t}\\n\\t}\\n');class Br extends zr{constructor(){super(ui(Br.getDefaults(),arguments,[\"delayTime\",\"resonance\"])),this.name=\"FeedbackCombFilter\";const t=ui(Br.getDefaults(),arguments,[\"delayTime\",\"resonance\"]);this.input=new ho({context:this.context}),this.output=new ho({context:this.context}),this.delayTime=new no({context:this.context,value:t.delayTime,units:\"time\",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new no({context:this.context,value:t.resonance,units:\"normalRange\",param:this._dummyParam,swappable:!0}),Oi(this,[\"resonance\",\"delayTime\"])}_audioWorkletName(){return Wr}static getDefaults(){return Object.assign(io.getDefaults(),{delayTime:.1,resonance:.5})}onReady(t){oo(this.input,t,this.output);const e=t.parameters.get(\"delayTime\");this.delayTime.setParam(e);const s=t.parameters.get(\"feedback\");this.resonance.setParam(s)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class Ur extends io{constructor(){super(ui(Ur.getDefaults(),arguments,[\"frequency\",\"type\"])),this.name=\"OnePoleFilter\";const t=ui(Ur.getDefaults(),arguments,[\"frequency\",\"type\"]);this._frequency=t.frequency,this._type=t.type,this.input=new ho({context:this.context}),this.output=new ho({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(io.getDefaults(),{frequency:880,type:\"lowpass\"})}_createFilter(){const t=this._filter,e=this.toFrequency(this._frequency),s=1/(2*Math.PI*e);if(\"lowpass\"===this._type){const t=1/(s*this.context.sampleRate),e=t-1;this._filter=this.context.createIIRFilter([t,0],[1,e])}else{const t=1/(s*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,t])}this.input.chain(this._filter,this.output),t&&this.context.setTimeout((()=>{this.disposed||(this.input.disconnect(t),t.disconnect())}),this.blockTime)}get frequency(){return this._frequency}set frequency(t){this._frequency=t,this._createFilter()}get type(){return this._type}set type(t){this._type=t,this._createFilter()}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let s=0;s<t;s++){const n=19980*Math.pow(s/t,2)+20;e[s]=n}const s=new Float32Array(t),n=new Float32Array(t);return this._filter.getFrequencyResponse(e,s,n),s}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class Gr extends io{constructor(){super(ui(Gr.getDefaults(),arguments,[\"delayTime\",\"resonance\",\"dampening\"])),this.name=\"LowpassCombFilter\";const t=ui(Gr.getDefaults(),arguments,[\"delayTime\",\"resonance\",\"dampening\"]);this._combFilter=this.output=new Br({context:this.context,delayTime:t.delayTime,resonance:t.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new Ur({context:this.context,frequency:t.dampening,type:\"lowpass\"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(io.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(t){this._lowpass.frequency=t}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class Qr extends br{constructor(){super(ui(Qr.getDefaults(),arguments)),this.name=\"PluckSynth\";const t=ui(Qr.getDefaults(),arguments);this._noise=new Lo({context:this.context,type:\"pink\"}),this.attackNoise=t.attackNoise,this._lfcf=new Gr({context:this.context,dampening:t.dampening,resonance:t.resonance}),this.resonance=t.resonance,this.release=t.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return li(br.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(t){this._lfcf.dampening=t}triggerAttack(t,e){const s=this.toFrequency(t);e=this.toSeconds(e);const n=1/s;return this._lfcf.delayTime.setValueAtTime(n,e),this._noise.start(e),this._noise.stop(e+n*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(e),this._lfcf.resonance.setValueAtTime(this.resonance,e),this}triggerRelease(t){return this._lfcf.resonance.linearRampTo(0,this.release,t),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class Zr extends br{constructor(){super(ui(Zr.getDefaults(),arguments,[\"voice\",\"options\"])),this.name=\"PolySynth\",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=t=>this.releaseAll(t);const t=ui(Zr.getDefaults(),arguments,[\"voice\",\"options\"]);Bn(!Nn(t.voice),\"DEPRECATED: The polyphony count is no longer the first argument.\");const e=t.voice.getDefaults();this.options=Object.assign(e,t.options),this.voice=t.voice,this.maxPolyphony=t.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const s=this._voices.indexOf(this._dummyVoice);this._voices.splice(s,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(br.getDefaults(),{maxPolyphony:32,options:{},voice:kr})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(t){this._availableVoices.push(t);const e=this._activeVoices.findIndex((e=>e.voice===t));this._activeVoices.splice(e,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const t=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return Bn(t instanceof Tr,\"Voice must extend Monophonic class\"),t.connect(this.output),this._voices.push(t),t}Kn(\"Max polyphony exceeded. Note dropped.\")}_collectGarbage(){if(this._averageActiveVoices=Math.max(.95*this._averageActiveVoices,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const t=this._availableVoices.shift(),e=this._voices.indexOf(t);this._voices.splice(e,1),this.context.isOffline||t.dispose()}}_triggerAttack(t,e,s){t.forEach((t=>{const n=new bo(this.context,t).toMidi(),i=this._getNextAvailableVoice();i&&(i.triggerAttack(t,e,s),this._activeVoices.push({midi:n,voice:i,released:!1}),this.log(\"triggerAttack\",t,e))}))}_triggerRelease(t,e){t.forEach((t=>{const s=new bo(this.context,t).toMidi(),n=this._activeVoices.find((({midi:t,released:e})=>t===s&&!e));n&&(n.voice.triggerRelease(e),n.released=!0,this.log(\"triggerRelease\",t,e))}))}_scheduleEvent(t,e,s,n){Bn(!this.disposed,\"Synth was already disposed\"),s<=this.now()?\"attack\"===t?this._triggerAttack(e,s,n):this._triggerRelease(e,s):this.context.setTimeout((()=>{this.disposed||this._scheduleEvent(t,e,s,n)}),s-this.now())}triggerAttack(t,e,s){Array.isArray(t)||(t=[t]);const n=this.toSeconds(e);return this._scheduleEvent(\"attack\",t,n,s),this}triggerRelease(t,e){Array.isArray(t)||(t=[t]);const s=this.toSeconds(e);return this._scheduleEvent(\"release\",t,s),this}triggerAttackRelease(t,e,s,n){const i=this.toSeconds(s);if(this.triggerAttack(t,i,n),Ln(e)){Bn(Ln(t),\"If the duration is an array, the notes must also be an array\");for(let s=0;s<t.length;s++){const n=e[Math.min(s,e.length-1)],o=this.toSeconds(n);Bn(o>0,\"The duration must be greater than 0\"),this.triggerRelease(t[s],i+o)}}else{const s=this.toSeconds(e);Bn(s>0,\"The duration must be greater than 0\"),this.triggerRelease(t,i+s)}return this}sync(){return this._syncState()&&(this._syncMethod(\"triggerAttack\",1),this._syncMethod(\"triggerRelease\",1),this.context.transport.on(\"stop\",this._syncedRelease),this.context.transport.on(\"pause\",this._syncedRelease),this.context.transport.on(\"loopEnd\",this._syncedRelease)),this}set(t){const e=di(t,[\"onsilence\",\"context\"]);return this.options=li(this.options,e),this._voices.forEach((t=>t.set(e))),this._dummyVoice.set(e),this}get(){return this._dummyVoice.get()}releaseAll(t){const e=this.toSeconds(t);return this._activeVoices.forEach((({voice:t})=>{t.triggerRelease(e)})),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach((t=>t.dispose())),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Xr extends br{constructor(){super(ui(Xr.getDefaults(),arguments,[\"urls\",\"onload\",\"baseUrl\"],\"urls\")),this.name=\"Sampler\",this._activeSources=new Map;const t=ui(Xr.getDefaults(),arguments,[\"urls\",\"onload\",\"baseUrl\"],\"urls\"),e={};Object.keys(t.urls).forEach((s=>{const n=parseInt(s,10);if(Bn(Wn(s)||Nn(n)&&isFinite(n),`url key is neither a note or midi pitch: ${s}`),Wn(s)){const n=new Yi(this.context,s).toMidi();e[n]=t.urls[s]}else Nn(n)&&isFinite(n)&&(e[n]=t.urls[n])})),this._buffers=new wo({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(br.getDefaults(),{attack:0,baseUrl:\"\",curve:\"exponential\",onload:Ei,onerror:Ei,release:.1,urls:{}})}_findClosest(t){let e=0;for(;e<96;){if(this._buffers.has(t+e))return-e;if(this._buffers.has(t-e))return e;e++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,s=1){return this.log(\"triggerAttack\",t,e,s),Array.isArray(t)||(t=[t]),t.forEach((t=>{const n=Ui(new Yi(this.context,t).toFrequency()),i=Math.round(n),o=n-i,r=this._findClosest(i),a=i-r,c=this._buffers.get(a),h=zi(r+o),l=new jo({url:c,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);l.start(e,0,c.duration/h,s),Ln(this._activeSources.get(i))||this._activeSources.set(i,[]),this._activeSources.get(i).push(l),l.onended=()=>{if(this._activeSources&&this._activeSources.has(i)){const t=this._activeSources.get(i),e=t.indexOf(l);-1!==e&&t.splice(e,1)}}})),this}triggerRelease(t,e){return this.log(\"triggerRelease\",t,e),Array.isArray(t)||(t=[t]),t.forEach((t=>{const s=new Yi(this.context,t).toMidi();if(this._activeSources.has(s)&&this._activeSources.get(s).length){const t=this._activeSources.get(s);e=this.toSeconds(e),t.forEach((t=>{t.stop(e)})),this._activeSources.set(s,[])}})),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach((t=>{for(;t.length;)t.shift().stop(e)})),this}sync(){return this._syncState()&&(this._syncMethod(\"triggerAttack\",1),this._syncMethod(\"triggerRelease\",1)),this}triggerAttackRelease(t,e,s,n=1){const i=this.toSeconds(s);return this.triggerAttack(t,i,n),Ln(e)?(Bn(Ln(t),\"notes must be an array when duration is array\"),t.forEach(((t,s)=>{const n=e[Math.min(s,e.length-1)];this.triggerRelease(t,i+this.toSeconds(n))}))):this.triggerRelease(t,i+this.toSeconds(e)),this}add(t,e,s){if(Bn(Wn(t)||isFinite(t),`note must be a pitch or midi: ${t}`),Wn(t)){const n=new Yi(this.context,t).toMidi();this._buffers.add(n,e,s)}else this._buffers.add(t,e,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach((t=>{t.forEach((t=>t.dispose()))})),this._activeSources.clear(),this}}si([cr(0)],Xr.prototype,\"attack\",void 0),si([cr(0)],Xr.prototype,\"release\",void 0);class Yr extends eo{constructor(){super(ui(Yr.getDefaults(),arguments,[\"callback\",\"value\"])),this.name=\"ToneEvent\",this._state=new so(\"stopped\"),this._startOffset=0;const t=ui(Yr.getDefaults(),arguments,[\"callback\",\"value\"]);this._loop=t.loop,this.callback=t.callback,this.value=t.value,this._loopStart=this.toTicks(t.loopStart),this._loopEnd=this.toTicks(t.loopEnd),this._playbackRate=t.playbackRate,this._probability=t.probability,this._humanize=t.humanize,this.mute=t.mute,this._playbackRate=t.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(eo.getDefaults(),{callback:Ei,humanize:!1,loop:!1,loopEnd:\"1m\",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(t=-1){this._state.forEachFrom(t,(t=>{let e;if(\"started\"===t.state){-1!==t.id&&this.context.transport.clear(t.id);const s=t.time+Math.round(this.startOffset/this._playbackRate);if(!0===this._loop||Nn(this._loop)&&this._loop>1){e=1/0,Nn(this._loop)&&(e=this._loop*this._getLoopDuration());const n=this._state.getAfter(s);null!==n&&(e=Math.min(e,n.time-s)),e!==1/0&&(e=new So(this.context,e));const i=new So(this.context,this._getLoopDuration());t.id=this.context.transport.scheduleRepeat(this._tick.bind(this),i,new So(this.context,s),e)}else t.id=this.context.transport.schedule(this._tick.bind(this),new So(this.context,s))}}))}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t}get probability(){return this._probability}set probability(t){this._probability=t}get humanize(){return this._humanize}set humanize(t){this._humanize=t}start(t){const e=this.toTicks(t);return\"stopped\"===this._state.getValueAtTime(e)&&(this._state.add({id:-1,state:\"started\",time:e}),this._rescheduleEvents(e)),this}stop(t){this.cancel(t);const e=this.toTicks(t);if(\"started\"===this._state.getValueAtTime(e)){this._state.setStateAtTime(\"stopped\",e,{id:-1});const t=this._state.getBefore(e);let s=e;null!==t&&(s=t.time),this._rescheduleEvents(s)}return this}cancel(t){t=pi(t,-1/0);const e=this.toTicks(t);return this._state.forEachFrom(e,(t=>{this.context.transport.clear(t.id)})),this._state.cancel(e),this}_tick(t){const e=this.context.transport.getTicksAtTime(t);if(!this.mute&&\"started\"===this._state.getValueAtTime(e)){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let e=.02;jn(this.humanize)||(e=this.toSeconds(this.humanize)),t+=(2*Math.random()-1)*e}this.callback(t,this.value)}}_getLoopDuration(){return(this._loopEnd-this._loopStart)/this._playbackRate}get loop(){return this._loop}set loop(t){this._loop=t,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._rescheduleEvents()}get loopEnd(){return new So(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._rescheduleEvents()}get loopStart(){return new So(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const t=this.context.transport.ticks,e=this._state.get(t);if(null!==e&&\"started\"===e.state){const s=this._getLoopDuration();return(t-e.time)%s/s}return 0}return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class $r extends eo{constructor(){super(ui($r.getDefaults(),arguments,[\"callback\",\"interval\"])),this.name=\"Loop\";const t=ui($r.getDefaults(),arguments,[\"callback\",\"interval\"]);this._event=new Yr({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:t.interval,playbackRate:t.playbackRate,probability:t.probability,humanize:t.humanize}),this.callback=t.callback,this.iterations=t.iterations}static getDefaults(){return Object.assign(eo.getDefaults(),{interval:\"4n\",callback:Ei,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(t){return this._event.start(t),this}stop(t){return this._event.stop(t),this}cancel(t){return this._event.cancel(t),this}_tick(t){this.callback(t)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(t){this._event.loopEnd=t}get playbackRate(){return this._event.playbackRate}set playbackRate(t){this._event.playbackRate=t}get humanize(){return this._event.humanize}set humanize(t){this._event.humanize=t}get probability(){return this._event.probability}set probability(t){this._event.probability=t}get mute(){return this._event.mute}set mute(t){this._event.mute=t}get iterations(){return!0===this._event.loop?1/0:this._event.loop}set iterations(t){this._event.loop=t===1/0||t}dispose(){return super.dispose(),this._event.dispose(),this}}class Hr extends Yr{constructor(){super(ui(Hr.getDefaults(),arguments,[\"callback\",\"events\"])),this.name=\"Part\",this._state=new so(\"stopped\"),this._events=new Set;const t=ui(Hr.getDefaults(),arguments,[\"callback\",\"events\"]);this._state.increasing=!0,t.events.forEach((t=>{Ln(t)?this.add(t[0],t[1]):this.add(t)}))}static getDefaults(){return Object.assign(Yr.getDefaults(),{events:[]})}start(t,e){const s=this.toTicks(t);if(\"started\"!==this._state.getValueAtTime(s)){e=pi(e,this._loop?this._loopStart:0),e=this._loop?pi(e,this._loopStart):pi(e,0);const t=this.toTicks(e);this._state.add({id:-1,offset:t,state:\"started\",time:s}),this._forEach((e=>{this._startNote(e,s,t)}))}return this}_startNote(t,e,s){e-=s,this._loop?t.startOffset>=this._loopStart&&t.startOffset<this._loopEnd?(t.startOffset<s&&(e+=this._getLoopDuration()),t.start(new So(this.context,e))):t.startOffset<this._loopStart&&t.startOffset>=s&&(t.loop=!1,t.start(new So(this.context,e))):t.startOffset>=s&&t.start(new So(this.context,e))}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t,this._forEach((t=>{t.startOffset+=this._startOffset}))}stop(t){const e=this.toTicks(t);return this._state.cancel(e),this._state.setStateAtTime(\"stopped\",e),this._forEach((e=>{e.stop(t)})),this}at(t,e){const s=new Ki(this.context,t).toTicks(),n=new So(this.context,1).toSeconds(),i=this._events.values();let o=i.next();for(;!o.done;){const t=o.value;if(Math.abs(s-t.startOffset)<n)return In(e)&&(t.value=e),t;o=i.next()}return In(e)?(this.add(t,e),this.at(t)):null}add(t,e){t instanceof Object&&Reflect.has(t,\"time\")&&(t=(e=t).time);const s=this.toTicks(t);let n;return e instanceof Yr?(n=e,n.callback=this._tick.bind(this)):n=new Yr({callback:this._tick.bind(this),context:this.context,value:e}),n.startOffset=s,n.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(n),this._restartEvent(n),this}_restartEvent(t){this._state.forEach((e=>{\"started\"===e.state?this._startNote(t,e.time,e.offset):t.stop(new So(this.context,e.time))}))}remove(t,e){return Pn(t)&&t.hasOwnProperty(\"time\")&&(t=(e=t).time),t=this.toTicks(t),this._events.forEach((s=>{s.startOffset===t&&(Fn(e)||In(e)&&s.value===e)&&(this._events.delete(s),s.dispose())})),this}clear(){return this._forEach((t=>t.dispose())),this._events.clear(),this}cancel(t){return this._forEach((e=>e.cancel(t))),this._state.cancel(this.toTicks(t)),this}_forEach(t){return this._events&&this._events.forEach((e=>{e instanceof Hr?e._forEach(t):t(e)})),this}_setAll(t,e){this._forEach((s=>{s[t]=e}))}_tick(t,e){this.mute||this.callback(t,e)}_testLoopBoundries(t){this._loop&&(t.startOffset<this._loopStart||t.startOffset>=this._loopEnd)?t.cancel(0):\"stopped\"===t.state&&this._restartEvent(t)}get probability(){return this._probability}set probability(t){this._probability=t,this._setAll(\"probability\",t)}get humanize(){return this._humanize}set humanize(t){this._humanize=t,this._setAll(\"humanize\",t)}get loop(){return this._loop}set loop(t){this._loop=t,this._forEach((e=>{e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.loop=t,this._testLoopBoundries(e)}))}get loopEnd(){return new So(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._forEach((e=>{e.loopEnd=t,this._testLoopBoundries(e)}))}get loopStart(){return new So(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._forEach((t=>{t.loopStart=this.loopStart,this._testLoopBoundries(t)}))}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._setAll(\"playbackRate\",t)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*Jr(t){let e=0;for(;e<t;)e=xi(e,0,t-1),yield e,e++}function*Kr(t){let e=t-1;for(;e>=0;)e=xi(e,0,t-1),yield e,e--}function*ta(t,e){for(;;)yield*e(t)}function*ea(t,e){let s=e?0:t-1;for(;;)s=xi(s,0,t-1),yield s,e?(s++,s>=t-1&&(e=!1)):(s--,s<=0&&(e=!0))}function*sa(t){let e=0,s=0;for(;e<t;)e=xi(e,0,t-1),yield e,s++,e+=s%2?2:-1}function*na(t){let e=t-1,s=0;for(;e>=0;)e=xi(e,0,t-1),yield e,s++,e+=s%2?-2:1}function*ia(t){const e=[];for(let s=0;s<t;s++)e.push(s);for(;e.length>0;){const s=xi(e.splice(Math.floor(e.length*Math.random()),1)[0],0,t-1);yield s}}function*oa(t,e=\"up\",s=0){switch(Bn(t>=1,\"The number of values must be at least one\"),e){case\"up\":yield*ta(t,Jr);case\"down\":yield*ta(t,Kr);case\"upDown\":yield*ea(t,!0);case\"downUp\":yield*ea(t,!1);case\"alternateUp\":yield*ta(t,sa);case\"alternateDown\":yield*ta(t,na);case\"random\":yield*function*(t){for(;;){const e=Math.floor(Math.random()*t);yield e}}(t);case\"randomOnce\":yield*ta(t,ia);case\"randomWalk\":yield*function*(t){let e=Math.floor(Math.random()*t);for(;;)0===e?e++:e===t-1||Math.random()<.5?e--:e++,yield e}(t)}}class ra extends $r{constructor(){super(ui(ra.getDefaults(),arguments,[\"callback\",\"values\",\"pattern\"])),this.name=\"Pattern\";const t=ui(ra.getDefaults(),arguments,[\"callback\",\"values\",\"pattern\"]);this.callback=t.callback,this._values=t.values,this._pattern=oa(t.values.length,t.pattern),this._type=t.pattern}static getDefaults(){return Object.assign($r.getDefaults(),{pattern:\"up\",values:[],callback:Ei})}_tick(t){const e=this._pattern.next();this._index=e.value,this._value=this._values[e.value],this.callback(t,this._value)}get values(){return this._values}set values(t){this._values=t,this.pattern=this._type}get value(){return this._value}get index(){return this._index}get pattern(){return this._type}set pattern(t){this._type=t,this._pattern=oa(this._values.length,this._type)}}class aa extends Yr{constructor(){super(ui(aa.getDefaults(),arguments,[\"callback\",\"events\",\"subdivision\"])),this.name=\"Sequence\",this._part=new Hr({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const t=ui(aa.getDefaults(),arguments,[\"callback\",\"events\",\"subdivision\"]);this._subdivision=this.toTicks(t.subdivision),this.events=t.events,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.playbackRate=t.playbackRate,this.probability=t.probability,this.humanize=t.humanize,this.mute=t.mute,this.playbackRate=t.playbackRate}static getDefaults(){return Object.assign(di(Yr.getDefaults(),[\"value\"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:\"8n\"})}_seqCallback(t,e){null===e||this.mute||this.callback(t,e)}get events(){return this._events}set events(t){this.clear(),this._eventsArray=t,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(t,e){return this._part.start(t,e?this._indexTime(e):e),this}stop(t){return this._part.stop(t),this}get subdivision(){return new So(this.context,this._subdivision).toSeconds()}_createSequence(t){return new Proxy(t,{get:(t,e)=>t[e],set:(t,e,s)=>(zn(e)&&isFinite(parseInt(e,10))&&Ln(s)?t[e]=this._createSequence(s):t[e]=s,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(t,e,s){t.forEach(((t,n)=>{const i=n*e+s;if(Ln(t))this._rescheduleSequence(t,e/t.length,i);else{const e=new So(this.context,i,\"i\").toSeconds();this._part.add(e,t)}}))}_indexTime(t){return new So(this.context,t*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(t){this._part.loop=t}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this._part.loopStart=this._indexTime(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this._part.loopEnd=0===t?this._indexTime(this._eventsArray.length):this._indexTime(t)}get startOffset(){return this._part.startOffset}set startOffset(t){this._part.startOffset=t}get playbackRate(){return this._part.playbackRate}set playbackRate(t){this._part.playbackRate=t}get probability(){return this._part.probability}set probability(t){this._part.probability=t}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(t){this._part.humanize=t}get length(){return this._part.length}}class ca extends io{constructor(){super(Object.assign(ui(ca.getDefaults(),arguments,[\"fade\"]))),this.name=\"CrossFade\",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new dr({context:this.context}),this.a=new ho({context:this.context,gain:0}),this.b=new ho({context:this.context,gain:0}),this.output=new ho({context:this.context}),this._internalChannels=[this.a,this.b];const t=ui(ca.getDefaults(),arguments,[\"fade\"]);this.fade=new po({context:this.context,units:\"normalRange\",value:t.fade}),Oi(this,\"fade\"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode=\"explicit\",ro(this._split,this.a.gain,0),ro(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(io.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class ha extends io{constructor(t){super(t),this.name=\"Effect\",this._dryWet=new ca({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new ho({context:this.context}),this.effectReturn=new ho({context:this.context}),this.input=new ho({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Oi(this,\"wet\")}static getDefaults(){return Object.assign(io.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class la extends ha{constructor(t){super(t),this.name=\"LFOEffect\",this._lfo=new rr({context:this.context,frequency:t.frequency,amplitude:t.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=t.type,Oi(this,[\"frequency\",\"depth\"])}static getDefaults(){return Object.assign(ha.getDefaults(),{frequency:1,type:\"sine\",depth:1})}start(t){return this._lfo.start(t),this}stop(t){return this._lfo.stop(t),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class ua extends la{constructor(){super(ui(ua.getDefaults(),arguments,[\"frequency\",\"baseFrequency\",\"octaves\"])),this.name=\"AutoFilter\";const t=ui(ua.getDefaults(),arguments,[\"frequency\",\"baseFrequency\",\"octaves\"]);this.filter=new Or(Object.assign(t.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=t.octaves,this.baseFrequency=t.baseFrequency}static getDefaults(){return Object.assign(la.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:\"lowpass\",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(t){this._lfo.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._lfo.max=this._lfo.min*Math.pow(2,t)}dispose(){return super.dispose(),this.filter.dispose(),this}}class pa extends io{constructor(){super(Object.assign(ui(pa.getDefaults(),arguments,[\"pan\"]))),this.name=\"Panner\",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=ui(pa.getDefaults(),arguments,[\"pan\"]);this.pan=new no({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode=\"explicit\",Oi(this,\"pan\")}static getDefaults(){return Object.assign(io.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class da extends la{constructor(){super(ui(da.getDefaults(),arguments,[\"frequency\"])),this.name=\"AutoPanner\";const t=ui(da.getDefaults(),arguments,[\"frequency\"]);this._panner=new pa({context:this.context,channelCount:t.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(la.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class fa extends io{constructor(){super(ui(fa.getDefaults(),arguments,[\"smoothing\"])),this.name=\"Follower\";const t=ui(fa.getDefaults(),arguments,[\"smoothing\"]);this._abs=this.input=new pr({context:this.context}),this._lowpass=this.output=new Ur({context:this.context,frequency:1/this.toSeconds(t.smoothing),type:\"lowpass\"}),this._abs.connect(this._lowpass),this._smoothing=t.smoothing}static getDefaults(){return Object.assign(io.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(t){this._smoothing=t,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class _a extends ha{constructor(){super(ui(_a.getDefaults(),arguments,[\"baseFrequency\",\"octaves\",\"sensitivity\"])),this.name=\"AutoWah\";const t=ui(_a.getDefaults(),arguments,[\"baseFrequency\",\"octaves\",\"sensitivity\"]);this._follower=new fa({context:this.context,smoothing:t.follower}),this._sweepRange=new vr({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this._inputBoost=new ho({context:this.context}),this._bandpass=new Or({context:this.context,rolloff:-48,frequency:0,Q:t.Q}),this._peaking=new Or({context:this.context,type:\"peaking\"}),this._peaking.gain.value=t.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=t.sensitivity,Oi(this,[\"gain\",\"Q\"])}static getDefaults(){return Object.assign(ha.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(t){this._follower.smoothing=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._setSweepRange()}get sensitivity(){return Li(1/this._inputBoost.gain.value)}set sensitivity(t){this._inputBoost.gain.value=1/ji(t)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const ma=\"bit-crusher\";Lr(ma,\"\\n\\tclass BitCrusherWorklet extends SingleIOProcessor {\\n\\n\\t\\tstatic get parameterDescriptors() {\\n\\t\\t\\treturn [{\\n\\t\\t\\t\\tname: \\\"bits\\\",\\n\\t\\t\\t\\tdefaultValue: 12,\\n\\t\\t\\t\\tminValue: 1,\\n\\t\\t\\t\\tmaxValue: 16,\\n\\t\\t\\t\\tautomationRate: 'k-rate'\\n\\t\\t\\t}];\\n\\t\\t}\\n\\n\\t\\tgenerate(input, _channel, parameters) {\\n\\t\\t\\tconst step = Math.pow(0.5, parameters.bits - 1);\\n\\t\\t\\tconst val = step * Math.floor(input / step + 0.5);\\n\\t\\t\\treturn val;\\n\\t\\t}\\n\\t}\\n\");class ga extends ha{constructor(){super(ui(ga.getDefaults(),arguments,[\"bits\"])),this.name=\"BitCrusher\";const t=ui(ga.getDefaults(),arguments,[\"bits\"]);this._bitCrusherWorklet=new va({context:this.context,bits:t.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(ha.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class va extends zr{constructor(){super(ui(va.getDefaults(),arguments)),this.name=\"BitCrusherWorklet\";const t=ui(va.getDefaults(),arguments);this.input=new ho({context:this.context}),this.output=new ho({context:this.context}),this.bits=new no({context:this.context,value:t.bits,units:\"positive\",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(zr.getDefaults(),{bits:12})}_audioWorkletName(){return ma}onReady(t){oo(this.input,t,this.output);const e=t.parameters.get(\"bits\");this.bits.setParam(e)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class ya extends ha{constructor(){super(ui(ya.getDefaults(),arguments,[\"order\"])),this.name=\"Chebyshev\";const t=ui(ya.getDefaults(),arguments,[\"order\"]);this._shaper=new qo({context:this.context,length:4096}),this._order=t.order,this.connectEffect(this._shaper),this.order=t.order,this.oversample=t.oversample}static getDefaults(){return Object.assign(ha.getDefaults(),{order:1,oversample:\"none\"})}_getCoefficient(t,e,s){return s.has(e)||(0===e?s.set(e,0):1===e?s.set(e,t):s.set(e,2*t*this._getCoefficient(t,e-1,s)-this._getCoefficient(t,e-2,s))),s.get(e)}get order(){return this._order}set order(t){Bn(Number.isInteger(t),\"'order' must be an integer\"),this._order=t,this._shaper.setMap((e=>this._getCoefficient(e,t,new Map)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class xa extends io{constructor(){super(ui(xa.getDefaults(),arguments,[\"channels\"])),this.name=\"Split\";const t=ui(xa.getDefaults(),arguments,[\"channels\"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(io.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class wa extends io{constructor(){super(ui(wa.getDefaults(),arguments,[\"channels\"])),this.name=\"Merge\";const t=ui(wa.getDefaults(),arguments,[\"channels\"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(io.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class ba extends io{constructor(t){super(t),this.name=\"StereoEffect\",this.input=new ho({context:this.context}),this.input.channelCount=2,this.input.channelCountMode=\"explicit\",this._dryWet=this.output=new ca({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new xa({context:this.context,channels:2}),this._merge=new wa({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),Oi(this,[\"wet\"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),oo(...t),ro(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),oo(...t),ro(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(io.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class Ta extends ba{constructor(t){super(t),this.feedback=new po({context:this.context,value:t.feedback,units:\"normalRange\"}),this._feedbackL=new ho({context:this.context}),this._feedbackR=new ho({context:this.context}),this._feedbackSplit=new xa({context:this.context,channels:2}),this._feedbackMerge=new wa({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),Oi(this,[\"feedback\"])}static getDefaults(){return Object.assign(ba.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Sa extends Ta{constructor(){super(ui(Sa.getDefaults(),arguments,[\"frequency\",\"delayTime\",\"depth\"])),this.name=\"Chorus\";const t=ui(Sa.getDefaults(),arguments,[\"frequency\",\"delayTime\",\"depth\"]);this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new rr({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new rr({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new yo({context:this.context}),this._delayNodeR=new yo({context:this.context}),this.frequency=this._lfoL.frequency,Oi(this,[\"frequency\"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(Ta.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:\"sine\",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const e=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-e,0),this._lfoL.max=this._delayTime+e,this._lfoR.min=Math.max(this._delayTime-e,0),this._lfoR.max=this._delayTime+e}get delayTime(){return 1e3*this._delayTime}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class ka extends ha{constructor(){super(ui(ka.getDefaults(),arguments,[\"distortion\"])),this.name=\"Distortion\";const t=ui(ka.getDefaults(),arguments,[\"distortion\"]);this._shaper=new qo({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(ha.getDefaults(),{distortion:.4,oversample:\"none\"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const e=100*t,s=Math.PI/180;this._shaper.setMap((t=>Math.abs(t)<.001?0:(3+e)*t*20*s/(Math.PI+e*Math.abs(t))))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Aa extends ha{constructor(t){super(t),this.name=\"FeedbackEffect\",this._feedbackGain=new ho({context:this.context,gain:t.feedback,units:\"normalRange\"}),this.feedback=this._feedbackGain.gain,Oi(this,\"feedback\"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(ha.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class Ca extends Aa{constructor(){super(ui(Ca.getDefaults(),arguments,[\"delayTime\",\"feedback\"])),this.name=\"FeedbackDelay\";const t=ui(Ca.getDefaults(),arguments,[\"delayTime\",\"feedback\"]);this._delayNode=new yo({context:this.context,delayTime:t.delayTime,maxDelay:t.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),Oi(this,\"delayTime\")}static getDefaults(){return Object.assign(Aa.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class Da extends io{constructor(t){super(t),this.name=\"PhaseShiftAllpass\",this.input=new ho({context:this.context}),this.output=new ho({context:this.context}),this.offset90=new ho({context:this.context}),this._bank0=this._createAllPassFilterBank([.6923878,.9360654322959,.988229522686,.9987488452737]),this._bank1=this._createAllPassFilterBank([.4021921162426,.856171088242,.9722909545651,.9952884791278]),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),oo(this.input,...this._bank0,this._oneSampleDelay,this.output),oo(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(t){return t.map((t=>{const e=[[t*t,0,-1],[1,0,-t*t]];return this.context.createIIRFilter(e[0],e[1])}))}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach((t=>t.disconnect())),this._bank1.forEach((t=>t.disconnect())),this._oneSampleDelay.disconnect(),this}}class Oa extends ha{constructor(){super(ui(Oa.getDefaults(),arguments,[\"frequency\"])),this.name=\"FrequencyShifter\";const t=ui(Oa.getDefaults(),arguments,[\"frequency\"]);this.frequency=new po({context:this.context,units:\"frequency\",value:t.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new Qo({context:this.context,type:\"sine\"}),this._cosine=new Zo({context:this.context,phase:-90,type:\"sine\"}),this._sineMultiply=new Yo({context:this.context}),this._cosineMultiply=new Yo({context:this.context}),this._negate=new fr({context:this.context}),this._add=new nr({context:this.context}),this._phaseShifter=new Da({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const e=this.immediate();this._sine.start(e),this._cosine.start(e)}static getDefaults(){return Object.assign(ha.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const Ma=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],Ea=[225,556,441,341];class Ra extends ba{constructor(){super(ui(Ra.getDefaults(),arguments,[\"roomSize\",\"dampening\"])),this.name=\"Freeverb\",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const t=ui(Ra.getDefaults(),arguments,[\"roomSize\",\"dampening\"]);this.roomSize=new po({context:this.context,value:t.roomSize,units:\"normalRange\"}),this._allpassFiltersL=Ea.map((t=>{const e=this.context.createBiquadFilter();return e.type=\"allpass\",e.frequency.value=t,e})),this._allpassFiltersR=Ea.map((t=>{const e=this.context.createBiquadFilter();return e.type=\"allpass\",e.frequency.value=t,e})),this._combFilters=Ma.map(((e,s)=>{const n=new Gr({context:this.context,dampening:t.dampening,delayTime:e});return s<Ma.length/2?this.connectEffectLeft(n,...this._allpassFiltersL):this.connectEffectRight(n,...this._allpassFiltersR),this.roomSize.connect(n.resonance),n})),Oi(this,[\"roomSize\"])}static getDefaults(){return Object.assign(ba.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(t){this._combFilters.forEach((e=>e.dampening=t))}dispose(){return super.dispose(),this._allpassFiltersL.forEach((t=>t.disconnect())),this._allpassFiltersR.forEach((t=>t.disconnect())),this._combFilters.forEach((t=>t.dispose())),this.roomSize.dispose(),this}}const qa=[.06748,.06404,.08212,.09004],Fa=[.773,.802,.753,.733],Ia=[347,113,37];class Va extends ba{constructor(){super(ui(Va.getDefaults(),arguments,[\"roomSize\"])),this.name=\"JCReverb\",this._allpassFilters=[],this._feedbackCombFilters=[];const t=ui(Va.getDefaults(),arguments,[\"roomSize\"]);this.roomSize=new po({context:this.context,value:t.roomSize,units:\"normalRange\"}),this._scaleRoomSize=new ir({context:this.context,min:-.733,max:.197}),this._allpassFilters=Ia.map((t=>{const e=this.context.createBiquadFilter();return e.type=\"allpass\",e.frequency.value=t,e})),this._feedbackCombFilters=qa.map(((t,e)=>{const s=new Br({context:this.context,delayTime:t});return this._scaleRoomSize.connect(s.resonance),s.resonance.value=Fa[e],e<qa.length/2?this.connectEffectLeft(...this._allpassFilters,s):this.connectEffectRight(...this._allpassFilters,s),s})),this.roomSize.connect(this._scaleRoomSize),Oi(this,[\"roomSize\"])}static getDefaults(){return Object.assign(ba.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach((t=>t.disconnect())),this._feedbackCombFilters.forEach((t=>t.dispose())),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class Na extends Ta{constructor(t){super(t),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),Oi(this,[\"feedback\"])}}class Pa extends Na{constructor(){super(ui(Pa.getDefaults(),arguments,[\"delayTime\",\"feedback\"])),this.name=\"PingPongDelay\";const t=ui(Pa.getDefaults(),arguments,[\"delayTime\",\"feedback\"]);this._leftDelay=new yo({context:this.context,maxDelay:t.maxDelay}),this._rightDelay=new yo({context:this.context,maxDelay:t.maxDelay}),this._rightPreDelay=new yo({context:this.context,maxDelay:t.maxDelay}),this.delayTime=new po({context:this.context,units:\"time\",value:t.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),Oi(this,[\"delayTime\"])}static getDefaults(){return Object.assign(Na.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class ja extends Aa{constructor(){super(ui(ja.getDefaults(),arguments,[\"pitch\"])),this.name=\"PitchShift\";const t=ui(ja.getDefaults(),arguments,[\"pitch\"]);this._frequency=new po({context:this.context}),this._delayA=new yo({maxDelay:1,context:this.context}),this._lfoA=new rr({context:this.context,min:0,max:.1,type:\"sawtooth\"}).connect(this._delayA.delayTime),this._delayB=new yo({maxDelay:1,context:this.context}),this._lfoB=new rr({context:this.context,min:0,max:.1,type:\"sawtooth\",phase:180}).connect(this._delayB.delayTime),this._crossFade=new ca({context:this.context}),this._crossFadeLFO=new rr({context:this.context,min:0,max:1,type:\"triangle\",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new yo({delayTime:t.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,Oi(this,\"delayTime\"),this._pitch=t.pitch,this._windowSize=t.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const e=this.now();this._lfoA.start(e),this._lfoB.start(e),this._crossFadeLFO.start(e),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(Aa.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(t){this._pitch=t;let e=0;t<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,e=zi(t-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,e=zi(t)-1),this._frequency.value=e*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(t){this._windowSize=this.toSeconds(t),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class La extends ba{constructor(){super(ui(La.getDefaults(),arguments,[\"frequency\",\"octaves\",\"baseFrequency\"])),this.name=\"Phaser\";const t=ui(La.getDefaults(),arguments,[\"frequency\",\"octaves\",\"baseFrequency\"]);this._lfoL=new rr({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new rr({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this.Q=new po({context:this.context,value:t.Q,units:\"positive\"}),this._filtersL=this._makeFilters(t.stages,this._lfoL),this._filtersR=this._makeFilters(t.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=t.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=t.baseFrequency,this.octaves=t.octaves,this._lfoL.start(),this._lfoR.start(),Oi(this,[\"frequency\",\"Q\"])}static getDefaults(){return Object.assign(ba.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(t,e){const s=[];for(let n=0;n<t;n++){const t=this.context.createBiquadFilter();t.type=\"allpass\",this.Q.connect(t.Q),e.connect(t.frequency),s.push(t)}return s}get octaves(){return this._octaves}set octaves(t){this._octaves=t;const e=this._baseFrequency*Math.pow(2,t);this._lfoL.max=e,this._lfoR.max=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach((t=>t.disconnect())),this._filtersR.forEach((t=>t.disconnect())),this.frequency.dispose(),this}}class za extends ha{constructor(){super(ui(za.getDefaults(),arguments,[\"decay\"])),this.name=\"Reverb\",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const t=ui(za.getDefaults(),arguments,[\"decay\"]);this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(ha.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){Un(t=this.toSeconds(t),.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){Un(t=this.toSeconds(t),0),this._preDelay=t,this.generate()}generate(){return ni(this,void 0,void 0,(function*(){const t=this.ready,e=new qi(2,this._decay+this._preDelay,this.context.sampleRate),s=new Lo({context:e}),n=new Lo({context:e}),i=new wa({context:e});s.connect(i,0,0),n.connect(i,0,1);const o=new ho({context:e}).toDestination();i.connect(o),s.start(0),n.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const r=e.render();return this.ready=r.then(Ei),yield t,this._convolver.buffer=(yield r).get(),this}))}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class Wa extends io{constructor(){super(ui(Wa.getDefaults(),arguments)),this.name=\"MidSideSplit\",this._split=this.input=new xa({channels:2,context:this.context}),this._midAdd=new nr({context:this.context}),this.mid=new Yo({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new _r({context:this.context}),this.side=new Yo({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class Ba extends io{constructor(){super(ui(Ba.getDefaults(),arguments)),this.name=\"MidSideMerge\",this.mid=new ho({context:this.context}),this.side=new ho({context:this.context}),this._left=new nr({context:this.context}),this._leftMult=new Yo({context:this.context,value:Math.SQRT1_2}),this._right=new _r({context:this.context}),this._rightMult=new Yo({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new wa({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class Ua extends ha{constructor(t){super(t),this.name=\"MidSideEffect\",this._midSideMerge=new Ba({context:this.context}),this._midSideSplit=new Wa({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...t){this._midSend.chain(...t,this._midReturn)}connectEffectSide(...t){this._sideSend.chain(...t,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class Ga extends Ua{constructor(){super(ui(Ga.getDefaults(),arguments,[\"width\"])),this.name=\"StereoWidener\";const t=ui(Ga.getDefaults(),arguments,[\"width\"]);this.width=new po({context:this.context,value:t.width,units:\"normalRange\"}),Oi(this,[\"width\"]),this._twoTimesWidthMid=new Yo({context:this.context,value:2}),this._twoTimesWidthSide=new Yo({context:this.context,value:2}),this._midMult=new Yo({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new _r({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),ro(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new Yo({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(Ua.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class Qa extends ba{constructor(){super(ui(Qa.getDefaults(),arguments,[\"frequency\",\"depth\"])),this.name=\"Tremolo\";const t=ui(Qa.getDefaults(),arguments,[\"frequency\",\"depth\"]);this._lfoL=new rr({context:this.context,type:t.type,min:1,max:0}),this._lfoR=new rr({context:this.context,type:t.type,min:1,max:0}),this._amplitudeL=new ho({context:this.context}),this._amplitudeR=new ho({context:this.context}),this.frequency=new po({context:this.context,value:t.frequency,units:\"frequency\"}),this.depth=new po({context:this.context,value:t.depth,units:\"normalRange\"}),Oi(this,[\"frequency\",\"depth\"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=t.spread}static getDefaults(){return Object.assign(ba.getDefaults(),{frequency:10,type:\"sine\",depth:.5,spread:180})}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Za extends ha{constructor(){super(ui(Za.getDefaults(),arguments,[\"frequency\",\"depth\"])),this.name=\"Vibrato\";const t=ui(Za.getDefaults(),arguments,[\"frequency\",\"depth\"]);this._delayNode=new yo({context:this.context,delayTime:0,maxDelay:t.maxDelay}),this._lfo=new rr({context:this.context,type:t.type,min:0,max:t.maxDelay,frequency:t.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=t.depth,Oi(this,[\"frequency\",\"depth\"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(ha.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:\"sine\"})}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Xa extends io{constructor(){super(ui(Xa.getDefaults(),arguments,[\"type\",\"size\"])),this.name=\"Analyser\",this._analysers=[],this._buffers=[];const t=ui(Xa.getDefaults(),arguments,[\"type\",\"size\"]);this.input=this.output=this._gain=new ho({context:this.context}),this._split=new xa({context:this.context,channels:t.channels}),this.input.connect(this._split),Un(t.channels,1);for(let e=0;e<t.channels;e++)this._analysers[e]=this.context.createAnalyser(),this._split.connect(this._analysers[e],e,0);this.size=t.size,this.type=t.type,this.smoothing=t.smoothing}static getDefaults(){return Object.assign(io.getDefaults(),{size:1024,smoothing:.8,type:\"fft\",channels:1})}getValue(){return this._analysers.forEach(((t,e)=>{const s=this._buffers[e];\"fft\"===this._type?t.getFloatFrequencyData(s):\"waveform\"===this._type&&t.getFloatTimeDomainData(s)})),1===this.channels?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(t){this._analysers.forEach(((e,s)=>{e.fftSize=2*t,this._buffers[s]=new Float32Array(t)}))}get channels(){return this._analysers.length}get type(){return this._type}set type(t){Bn(\"waveform\"===t||\"fft\"===t,`Analyser: invalid type: ${t}`),this._type=t}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(t){this._analysers.forEach((e=>e.smoothingTimeConstant=t))}dispose(){return super.dispose(),this._analysers.forEach((t=>t.disconnect())),this._split.dispose(),this._gain.dispose(),this}}class Ya extends io{constructor(){super(ui(Ya.getDefaults(),arguments)),this.name=\"MeterBase\",this.input=this.output=this._analyser=new Xa({context:this.context,size:256,type:\"waveform\"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class $a extends Ya{constructor(){super(ui($a.getDefaults(),arguments,[\"smoothing\"])),this.name=\"Meter\";const t=ui($a.getDefaults(),arguments,[\"smoothing\"]);this.input=this.output=this._analyser=new Xa({context:this.context,size:256,type:\"waveform\",channels:t.channelCount}),this.smoothing=t.smoothing,this.normalRange=t.normalRange,this._rms=new Array(t.channelCount),this._rms.fill(0)}static getDefaults(){return Object.assign(Ya.getDefaults(),{smoothing:.8,normalRange:!1,channelCount:1})}getLevel(){return Kn(\"'getLevel' has been changed to 'getValue'\"),this.getValue()}getValue(){const t=this._analyser.getValue(),e=(1===this.channels?[t]:t).map(((t,e)=>{const s=t.reduce(((t,e)=>t+e*e),0),n=Math.sqrt(s/t.length);return this._rms[e]=Math.max(n,this._rms[e]*this.smoothing),this.normalRange?this._rms[e]:Li(this._rms[e])}));return 1===this.channels?e[0]:e}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Ha extends Ya{constructor(){super(ui(Ha.getDefaults(),arguments,[\"size\"])),this.name=\"FFT\";const t=ui(Ha.getDefaults(),arguments,[\"size\"]);this.normalRange=t.normalRange,this._analyser.type=\"fft\",this.size=t.size}static getDefaults(){return Object.assign(io.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map((t=>this.normalRange?ji(t):t))}get size(){return this._analyser.size}set size(t){this._analyser.size=t}get smoothing(){return this._analyser.smoothing}set smoothing(t){this._analyser.smoothing=t}getFrequencyOfIndex(t){return Bn(0<=t&&t<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),t*this.context.sampleRate/(2*this.size)}}class Ja extends Ya{constructor(){super(ui(Ja.getDefaults(),arguments)),this.name=\"DCMeter\",this._analyser.type=\"waveform\",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Ka extends Ya{constructor(){super(ui(Ka.getDefaults(),arguments,[\"size\"])),this.name=\"Waveform\";const t=ui(Ka.getDefaults(),arguments,[\"size\"]);this._analyser.type=\"waveform\",this.size=t.size}static getDefaults(){return Object.assign(Ya.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(t){this._analyser.size=t}}class tc extends io{constructor(){super(ui(tc.getDefaults(),arguments,[\"solo\"])),this.name=\"Solo\";const t=ui(tc.getDefaults(),arguments,[\"solo\"]);this.input=this.output=new ho({context:this.context}),tc._allSolos.has(this.context)||tc._allSolos.set(this.context,new Set),tc._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(io.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),tc._allSolos.get(this.context).forEach((t=>t._updateSolo()))}get muted(){return 0===this.input.gain.value}_addSolo(){tc._soloed.has(this.context)||tc._soloed.set(this.context,new Set),tc._soloed.get(this.context).add(this)}_removeSolo(){tc._soloed.has(this.context)&&tc._soloed.get(this.context).delete(this)}_isSoloed(){return tc._soloed.has(this.context)&&tc._soloed.get(this.context).has(this)}_noSolos(){return!tc._soloed.has(this.context)||tc._soloed.has(this.context)&&0===tc._soloed.get(this.context).size}_updateSolo(){this._isSoloed()||this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),tc._allSolos.get(this.context).delete(this),this._removeSolo(),this}}tc._allSolos=new Map,tc._soloed=new Map;class ec extends io{constructor(){super(ui(ec.getDefaults(),arguments,[\"pan\",\"volume\"])),this.name=\"PanVol\";const t=ui(ec.getDefaults(),arguments,[\"pan\",\"volume\"]);this._panner=this.input=new pa({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Oo({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Oi(this,[\"pan\",\"volume\"])}static getDefaults(){return Object.assign(io.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class sc extends io{constructor(){super(ui(sc.getDefaults(),arguments,[\"volume\",\"pan\"])),this.name=\"Channel\";const t=ui(sc.getDefaults(),arguments,[\"volume\",\"pan\"]);this._solo=this.input=new tc({solo:t.solo,context:this.context}),this._panVol=this.output=new ec({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Oi(this,[\"pan\",\"volume\"])}static getDefaults(){return Object.assign(io.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return sc.buses.has(t)||sc.buses.set(t,new ho({context:this.context})),sc.buses.get(t)}send(t,e=0){const s=this._getBus(t),n=new ho({context:this.context,units:\"decibels\",gain:e});return this.connect(n),n.connect(s),n}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}sc.buses=new Map;class nc extends io{constructor(){super(ui(nc.getDefaults(),arguments)),this.name=\"Mono\",this.input=new ho({context:this.context}),this._merge=this.output=new wa({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class ic extends io{constructor(){super(ui(ic.getDefaults(),arguments,[\"lowFrequency\",\"highFrequency\"])),this.name=\"MultibandSplit\",this.input=new ho({context:this.context}),this.output=void 0,this.low=new Or({context:this.context,frequency:0,type:\"lowpass\"}),this._lowMidFilter=new Or({context:this.context,frequency:0,type:\"highpass\"}),this.mid=new Or({context:this.context,frequency:0,type:\"lowpass\"}),this.high=new Or({context:this.context,frequency:0,type:\"highpass\"}),this._internalChannels=[this.low,this.mid,this.high];const t=ui(ic.getDefaults(),arguments,[\"lowFrequency\",\"highFrequency\"]);this.lowFrequency=new po({context:this.context,units:\"frequency\",value:t.lowFrequency}),this.highFrequency=new po({context:this.context,units:\"frequency\",value:t.highFrequency}),this.Q=new po({context:this.context,units:\"positive\",value:t.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),Oi(this,[\"high\",\"mid\",\"low\",\"highFrequency\",\"lowFrequency\"])}static getDefaults(){return Object.assign(io.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),Mi(this,[\"high\",\"mid\",\"low\",\"highFrequency\",\"lowFrequency\"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}class oc extends io{constructor(){super(...arguments),this.name=\"Listener\",this.positionX=new no({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new no({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new no({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new no({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new no({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new no({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new no({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new no({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new no({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(io.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}Ti((t=>{t.listener=new oc({context:t})})),ki((t=>{t.listener.dispose()}));class rc extends io{constructor(){super(ui(rc.getDefaults(),arguments,[\"positionX\",\"positionY\",\"positionZ\"])),this.name=\"Panner3D\";const t=ui(rc.getDefaults(),arguments,[\"positionX\",\"positionY\",\"positionZ\"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=t.panningModel,this.maxDistance=t.maxDistance,this.distanceModel=t.distanceModel,this.coneOuterGain=t.coneOuterGain,this.coneOuterAngle=t.coneOuterAngle,this.coneInnerAngle=t.coneInnerAngle,this.refDistance=t.refDistance,this.rolloffFactor=t.rolloffFactor,this.positionX=new no({context:this.context,param:this._panner.positionX,value:t.positionX}),this.positionY=new no({context:this.context,param:this._panner.positionY,value:t.positionY}),this.positionZ=new no({context:this.context,param:this._panner.positionZ,value:t.positionZ}),this.orientationX=new no({context:this.context,param:this._panner.orientationX,value:t.orientationX}),this.orientationY=new no({context:this.context,param:this._panner.orientationY,value:t.orientationY}),this.orientationZ=new no({context:this.context,param:this._panner.orientationZ,value:t.orientationZ})}static getDefaults(){return Object.assign(io.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:\"inverse\",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:\"equalpower\",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(t,e,s){return this.positionX.value=t,this.positionY.value=e,this.positionZ.value=s,this}setOrientation(t,e,s){return this.orientationX.value=t,this.orientationY.value=e,this.orientationZ.value=s,this}get panningModel(){return this._panner.panningModel}set panningModel(t){this._panner.panningModel=t}get refDistance(){return this._panner.refDistance}set refDistance(t){this._panner.refDistance=t}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(t){this._panner.rolloffFactor=t}get distanceModel(){return this._panner.distanceModel}set distanceModel(t){this._panner.distanceModel=t}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(t){this._panner.coneInnerAngle=t}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(t){this._panner.coneOuterAngle=t}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(t){this._panner.coneOuterGain=t}get maxDistance(){return this._panner.maxDistance}set maxDistance(t){this._panner.maxDistance=t}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class ac extends io{constructor(){super(ui(ac.getDefaults(),arguments)),this.name=\"Recorder\";const t=ui(ac.getDefaults(),arguments);this.input=new ho({context:this.context}),Bn(ac.supported,\"Media Recorder API is not available\"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:t.mimeType})}static getDefaults(){return io.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return null!==ti&&Reflect.has(ti,\"MediaRecorder\")}get state(){return\"inactive\"===this._recorder.state?\"stopped\":\"paused\"===this._recorder.state?\"paused\":\"started\"}start(){return ni(this,void 0,void 0,(function*(){Bn(\"started\"!==this.state,\"Recorder is already started\");const t=new Promise((t=>{const e=()=>{this._recorder.removeEventListener(\"start\",e,!1),t()};this._recorder.addEventListener(\"start\",e,!1)}));return this._recorder.start(),yield t}))}stop(){return ni(this,void 0,void 0,(function*(){Bn(\"stopped\"!==this.state,\"Recorder is not started\");const t=new Promise((t=>{const e=s=>{this._recorder.removeEventListener(\"dataavailable\",e,!1),t(s.data)};this._recorder.addEventListener(\"dataavailable\",e,!1)}));return this._recorder.stop(),yield t}))}pause(){return Bn(\"started\"===this.state,\"Recorder must be started\"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class cc extends io{constructor(){super(ui(cc.getDefaults(),arguments,[\"threshold\",\"ratio\"])),this.name=\"Compressor\",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const t=ui(cc.getDefaults(),arguments,[\"threshold\",\"ratio\"]);this.threshold=new no({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:\"decibels\",value:t.threshold}),this.attack=new no({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:\"time\",value:t.attack}),this.release=new no({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:\"time\",value:t.release}),this.knee=new no({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:\"decibels\",value:t.knee}),this.ratio=new no({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:\"positive\",value:t.ratio}),Oi(this,[\"knee\",\"release\",\"attack\",\"ratio\",\"threshold\"])}static getDefaults(){return Object.assign(io.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class hc extends io{constructor(){super(Object.assign(ui(hc.getDefaults(),arguments,[\"threshold\",\"smoothing\"]))),this.name=\"Gate\";const t=ui(hc.getDefaults(),arguments,[\"threshold\",\"smoothing\"]);this._follower=new fa({context:this.context,smoothing:t.smoothing}),this._gt=new gr({context:this.context,value:ji(t.threshold)}),this.input=new ho({context:this.context}),this._gate=this.output=new ho({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(io.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return Li(this._gt.value)}set threshold(t){this._gt.value=ji(t)}get smoothing(){return this._follower.smoothing}set smoothing(t){this._follower.smoothing=t}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class lc extends io{constructor(){super(Object.assign(ui(lc.getDefaults(),arguments,[\"threshold\"]))),this.name=\"Limiter\";const t=ui(lc.getDefaults(),arguments,[\"threshold\"]);this._compressor=this.input=this.output=new cc({context:this.context,ratio:20,attack:.003,release:.01,threshold:t.threshold}),this.threshold=this._compressor.threshold,Oi(this,\"threshold\")}static getDefaults(){return Object.assign(io.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class uc extends io{constructor(){super(Object.assign(ui(uc.getDefaults(),arguments))),this.name=\"MidSideCompressor\";const t=ui(uc.getDefaults(),arguments);this._midSideSplit=this.input=new Wa({context:this.context}),this._midSideMerge=this.output=new Ba({context:this.context}),this.mid=new cc(Object.assign(t.mid,{context:this.context})),this.side=new cc(Object.assign(t.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),Oi(this,[\"mid\",\"side\"])}static getDefaults(){return Object.assign(io.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class pc extends io{constructor(){super(Object.assign(ui(pc.getDefaults(),arguments))),this.name=\"MultibandCompressor\";const t=ui(pc.getDefaults(),arguments);this._splitter=this.input=new ic({context:this.context,lowFrequency:t.lowFrequency,highFrequency:t.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new ho({context:this.context}),this.low=new cc(Object.assign(t.low,{context:this.context})),this.mid=new cc(Object.assign(t.mid,{context:this.context})),this.high=new cc(Object.assign(t.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),Oi(this,[\"high\",\"mid\",\"low\",\"highFrequency\",\"lowFrequency\"])}static getDefaults(){return Object.assign(io.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class dc extends io{constructor(){super(ui(dc.getDefaults(),arguments,[\"low\",\"mid\",\"high\"])),this.name=\"EQ3\",this.output=new ho({context:this.context}),this._internalChannels=[];const t=ui(dc.getDefaults(),arguments,[\"low\",\"mid\",\"high\"]);this.input=this._multibandSplit=new ic({context:this.context,highFrequency:t.highFrequency,lowFrequency:t.lowFrequency}),this._lowGain=new ho({context:this.context,gain:t.low,units:\"decibels\"}),this._midGain=new ho({context:this.context,gain:t.mid,units:\"decibels\"}),this._highGain=new ho({context:this.context,gain:t.high,units:\"decibels\"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),Oi(this,[\"low\",\"mid\",\"high\",\"lowFrequency\",\"highFrequency\"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(io.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),Mi(this,[\"low\",\"mid\",\"high\",\"lowFrequency\",\"highFrequency\"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class fc extends io{constructor(){super(ui(fc.getDefaults(),arguments,[\"url\",\"onload\"])),this.name=\"Convolver\",this._convolver=this.context.createConvolver();const t=ui(fc.getDefaults(),arguments,[\"url\",\"onload\"]);this._buffer=new Ri(t.url,(e=>{this.buffer=e,t.onload()})),this.input=new ho({context:this.context}),this.output=new ho({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=t.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(io.getDefaults(),{normalize:!0,onload:Ei})}load(t){return ni(this,void 0,void 0,(function*(){this.buffer=yield this._buffer.load(t)}))}get buffer(){return this._buffer.length?this._buffer:null}set buffer(t){t&&this._buffer.set(t),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const e=this._buffer.get();this._convolver.buffer=e||null}get normalize(){return this._convolver.normalize}set normalize(t){this._convolver.normalize=t}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function _c(){return Vi().now()}function mc(){return Vi().immediate()}const gc=Vi().transport;function vc(){return Vi().transport}const yc=Vi().destination,xc=Vi().destination;function wc(){return Vi().destination}const bc=Vi().listener;function Tc(){return Vi().listener}const Sc=Vi().draw;function kc(){return Vi().draw}const Ac=Vi();function Cc(){return Ri.loaded()}const Dc=Ri,Oc=wo,Mc=jo})(),n})()));\n//# sourceMappingURL=Tone.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90b25lL2J1aWxkL1RvbmUuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0EsZUFBZSw2S0FBNkssK0JBQStCLFNBQUksWUFBWSxPQUFPLG9CQUFvQixtQkFBbUIsYUFBYSxzQkFBc0IsT0FBTyw4REFBOEQsbUJBQW1CLE9BQU8seURBQXlELGlCQUFpQixPQUFPLHFDQUFxQyxtQkFBbUIsT0FBTyxzREFBc0QsbUJBQW1CLDhDQUE4QyxpQ0FBaUMsZUFBZSx3Q0FBd0MsZUFBZSxtQ0FBbUMsZUFBZSxrQkFBa0IsZUFBZSwwQkFBMEIsZUFBZSwrQkFBK0IsdUJBQXVCLFdBQVcsc0dBQXNHLHVCQUF1QixzTEFBc0wsZUFBZSwrQkFBK0IsZUFBZSx1Q0FBdUMsZUFBZSxnRUFBZ0UscUJBQXFCLDBCQUEwQixnRUFBZ0UscUJBQXFCLHlDQUF5QyxpQkFBaUIsMENBQTBDLHFCQUFxQixtQ0FBbUMsZ0RBQWdELHlCQUF5QixlQUFlLDJCQUEyQixjQUFjLHdCQUF3Qiw0RUFBNEUsSUFBSSxxQ0FBcUMsa0RBQWtELEVBQUUsNEJBQTRCLFdBQVcsZUFBZSxvREFBb0Qsb0RBQW9ELCtCQUErQiw0RUFBNEUsOERBQThELHFCQUFxQix1RUFBdUUsNE5BQTROLCtCQUErQixvSEFBb0gsc0hBQXNILG1CQUFtQixJQUFJLE1BQU0sWUFBWSx1Q0FBdUMsNkVBQTZFLEtBQUssb0RBQW9ELGNBQWMsZ0dBQWdHLGdEQUFnRCxzRkFBc0YseUNBQXlDLEtBQUssNERBQTRELHNDQUFzQyxVQUFVLEVBQUUsOEJBQThCLG9EQUFvRCxjQUFjLEdBQUcsUUFBUSwrQ0FBK0Msd0hBQXdILEVBQUUsaUNBQWlDLCtEQUErRCxvREFBb0QsY0FBYyx3R0FBd0csb0lBQW9JLHdEQUF3RCxzSUFBc0ksd0RBQXdELHFCQUFxQixnRkFBZ0Ysa0JBQWtCLHFCQUFxQixnRkFBZ0Ysa0JBQWtCLDJCQUEyQixHQUFHLEdBQUcseUVBQXlFLE9BQU8sbUNBQW1DLDBEQUEwRCxPQUFPLDJDQUEyQyw2REFBNkQsT0FBTyxpREFBaUQsd0RBQXdELE9BQU8sNENBQTRDLGtEQUFrRCxPQUFPLHNEQUFzRCwwRUFBMEUseUJBQXlCLFNBQVMsd0JBQXdCLG9DQUFvQywyQkFBMkIsSUFBSSxjQUFjLFNBQVMscURBQXFELFNBQVMsc0JBQXNCLDZCQUE2QixxREFBcUQsU0FBUyx3QkFBd0IsOEVBQThFLHFEQUFxRCxlQUFlLFlBQVksZ0JBQWdCLFlBQVksV0FBVyxLQUFLLFdBQVcsa0hBQWtILDBCQUEwQiwwRUFBMEUsWUFBWSxJQUFJLHFEQUFxRCxTQUFTLHdCQUF3QixtRkFBbUYsWUFBWSwyQkFBMkIsSUFBSSwrQkFBK0Isd0JBQXdCLEtBQUssVUFBVSx3REFBd0QsT0FBTyxTQUFTLFNBQVMsUUFBUSxJQUFJLDJEQUEyRCxRQUFRLGNBQWMsVUFBVSxxREFBcUQsU0FBUyxxQkFBcUIsaUtBQWlLLHFEQUFxRCxlQUFlLHdDQUF3Qyx3QkFBd0IsaUNBQWlDLHFEQUFxRCxjQUFjLHFCQUFxQix3QkFBd0IsK0JBQStCLDRCQUE0QixlQUFlLDZCQUE2QiwyQkFBMkIsb0VBQW9FLHNDQUFzQyxxREFBcUQsY0FBYyw2QkFBNkIsc0JBQXNCLG9CQUFvQiw0QkFBNEIscURBQXFELFNBQVMsY0FBYywyRkFBMkYsZ0JBQWdCLGFBQWEsb0dBQW9HLDBEQUEwRCxnRUFBZ0UsZUFBZSxhQUFhLHdCQUF3QixNQUFNLG9DQUFvQyxvREFBb0QsZ0xBQWdMLHNEQUFzRCxNQUFNLGNBQWMsV0FBVywrQkFBK0IsWUFBWSxZQUFZLG9EQUFvRCxZQUFZLCtEQUErRCx1QkFBdUIsRUFBRSw4REFBOEQsNEZBQTRGLGVBQWUsd0NBQXdDLFNBQVMsR0FBRyxTQUFTLFlBQVksYUFBYSxjQUFjLDR6RkFBNHpGLEVBQUUsU0FBUyxjQUFjLGlLQUFpSyxFQUFFLFNBQVMsT0FBTyxrQkFBa0IsYUFBYSxxSkFBcUosZ0JBQWdCLHdEQUF3RCxpRkFBaUYsOEdBQThHLGFBQWEsV0FBVywwQ0FBMEMsS0FBSyxTQUFTLEVBQUUsa0RBQWtELDJDQUEyQyxtRUFBbUUsZ0JBQWdCLE1BQU0sT0FBTyw0SUFBNEksT0FBTyxTQUFTLElBQUksbUJBQW1CLE1BQU0sU0FBUyxTQUFTLHVGQUF1RixzSUFBc0ksV0FBVyxpQkFBaUIsZ0ZBQWdGLFNBQVMsV0FBVyxnQ0FBZ0MsOERBQThELHFEQUFxRCxXQUFXLHFCQUFxQixlQUFlLDhDQUE4QyxpQ0FBaUMsbUJBQW1CLGdFQUFnRSxrQ0FBa0MsdUJBQXVCLDZEQUE2RCxxQ0FBcUMsV0FBVyxzQ0FBc0MsSUFBSSw4SUFBOEksOEJBQThCLElBQUksMENBQTBDLE1BQU0sU0FBUyxTQUFTLG1EQUFtRCxNQUFNLHlDQUF5QyxJQUFJLG1CQUFtQixTQUFTLHlCQUF5QixTQUFTLEVBQUUsSUFBSSxtQkFBbUIsK0NBQStDLGdJQUFnSSxtQ0FBbUMsTUFBTSxlQUFlLE1BQU0saUNBQWlDLDZCQUE2QixLQUFLLDJVQUEyVSxrQkFBa0IsYUFBYSxvREFBb0QsV0FBVyxPQUFPLG9CQUFvQiwrQ0FBK0MsMEJBQTBCLGNBQWMsOERBQThELG1CQUFtQixtQkFBbUIsdUNBQXVDLG1CQUFtQixpQkFBaUIsZ0VBQWdFLGlDQUFpQyxTQUFTLG9CQUFvQixnQ0FBZ0MsZ0NBQWdDLGFBQWEsNERBQTRELFlBQVksV0FBVywyRUFBMkUsYUFBYSxvQ0FBb0MsaUNBQWlDLGVBQWUsdURBQXVELHFGQUFxRixrQkFBa0IsS0FBSyw0R0FBNEcsY0FBYywrQkFBK0IsMkdBQTJHLHdDQUF3QywrSEFBK0gsWUFBWSxjQUFjLGdCQUFnQixtQ0FBbUMsaUJBQWlCLDBCQUEwQiwyQkFBMkIsNEJBQTRCLGdCQUFnQiw0QkFBNEIseUNBQXlDLDRCQUE0QixpQkFBaUIsb0RBQW9ELGlCQUFpQixJQUFJLGdEQUFnRCxtQ0FBbUMsK0NBQStDLG9DQUFvQyxvQ0FBb0MsMkNBQTJDLEtBQUssaUJBQWlCLGVBQWUsK0RBQStELHFDQUFxQyxrQ0FBa0MsMERBQTBELEdBQUcsZ0JBQWdCLGtCQUFrQix3QkFBd0IsTUFBTSwrQkFBK0Isb0JBQW9CLDZDQUE2QyxXQUFXLDZEQUE2RCxNQUFNLGVBQWUsTUFBTSxRQUFRLGdCQUFnQixzQkFBc0IsTUFBTSwrQkFBK0IsaUJBQWlCLDJDQUEyQyxTQUFTLDREQUE0RCxTQUFTLGVBQWUscUJBQXFCLFdBQVcsc0JBQXNCLFVBQVUsMkJBQTJCLGtCQUFrQixzREFBc0QsT0FBTyx3QkFBd0IsT0FBTyx3QkFBd0IsT0FBTyx3QkFBd0IsU0FBUywyQkFBMkIsVUFBVSwrSEFBK0gsc0JBQXNCLHVCQUF1QixzSEFBc0gsS0FBSyw0QkFBNEIsNkNBQTZDLEtBQUssd0VBQXdFLGNBQWMsdUJBQXVCLHVJQUF1SSxZQUFZLFdBQVcsWUFBWSxJQUFJLE1BQU0sdUNBQXVDLFlBQVksSUFBSSxtQ0FBbUMsVUFBVSxTQUFTLDJCQUEyQix5S0FBeUssb0VBQW9FLDZCQUE2Qix1QkFBdUIsY0FBYywwSEFBMEgsK0JBQStCLEtBQUssRUFBRSxZQUFZLElBQUksUUFBUSw0Q0FBNEMsbUJBQW1CLGlCQUFpQixpQkFBaUIsc0JBQXNCLDZFQUE2RSxPQUFPLE1BQU0sZ0JBQWdCLEdBQUcsWUFBWSxtQkFBbUIsaUJBQWlCLE9BQU8sNkRBQTZELElBQUksZ0hBQWdILDRCQUE0QixvQkFBb0IsTUFBTSxZQUFZLE9BQU8sd0JBQXdCLFFBQVEsWUFBWSxTQUFTLGlEQUFpRCxvRUFBb0UsR0FBRyxPQUFPLFNBQVMsS0FBSyx3SEFBd0gsS0FBSyw2RkFBNkYsS0FBSyw4RkFBOEYsS0FBSyxnRkFBZ0YsS0FBSyxtSEFBbUgsUUFBUSxNQUFNLGdCQUFnQixvQkFBb0Isd0JBQXdCLGFBQWEsMENBQTBDLG9CQUFvQixJQUFJLHFCQUFxQixPQUFPLFFBQVEsS0FBSyxHQUFHLEtBQUssa0dBQWtHLGNBQWMsYUFBYSx3QkFBd0IsU0FBUyxLQUFLLHNJQUFzSSxLQUFLLDhFQUE4RSxzR0FBc0csdUVBQXVFLDhCQUE4QixpQkFBaUIsUUFBUSxZQUFZLElBQUksTUFBTSxnQkFBZ0IsWUFBWSxJQUFJLE1BQU0sZ0JBQWdCLDBCQUEwQixZQUFZLElBQUksd0JBQXdCLFlBQVksSUFBSSx3QkFBd0Isa0NBQWtDLFNBQVMsS0FBSyw0RUFBNEUsUUFBUSw0R0FBNEcsSUFBSSwwQ0FBMEMsR0FBRyxtQ0FBbUMsT0FBTyxPQUFPLFNBQVMsY0FBYyxhQUFhLCtCQUErQixZQUFZLGtGQUFrRixnRUFBZ0UsYUFBYSwyQ0FBMkMsUUFBUSwwQkFBMEIsK0ZBQStGLGdCQUFnQixXQUFXLFFBQVEsTUFBTSx5QkFBeUIsZ0VBQWdFLFlBQVksRUFBRSx3R0FBd0csK0JBQStCLGdHQUFnRyxZQUFZLG1EQUFtRCxvQkFBb0IsMEJBQTBCLHdDQUF3QyxrQkFBa0IscUJBQXFCLDhDQUE4QywyQkFBMkIsOEJBQThCLG1EQUFtRCwyQkFBMkIsOEJBQThCLEVBQUUsT0FBTyx3RkFBd0Ysc0NBQXNDLHFDQUFxQyxZQUFZLHVCQUF1QixpQ0FBaUMsaUJBQWlCLDRCQUE0Qix3REFBd0QsaUJBQWlCLFlBQVkscUJBQXFCLEtBQUssb0VBQW9FLFFBQVEsU0FBUyx1R0FBdUcsbUJBQW1CLEtBQUssOEhBQThILEtBQUssc1RBQXNULEtBQUssd0JBQXdCLEtBQUssa0ZBQWtGLGdEQUFnRCxvR0FBb0csb0dBQW9HLHFCQUFxQixpQkFBaUIseURBQXlELGdCQUFnQixRQUFRLEtBQUsscUJBQXFCLDRCQUE0QixNQUFNLFlBQVksc0NBQXNDLDJCQUEyQixrQkFBa0IsRUFBRSxjQUFjLElBQUksc0JBQXNCLFNBQVMsc0JBQXNCLGdCQUFnQixRQUFRLDZCQUE2QixJQUFJLFlBQVksU0FBUywrQkFBK0IsU0FBUyxRQUFRLDJEQUEyRCw4QkFBOEIsSUFBSSxtQkFBbUIsTUFBTSxVQUFVLFFBQVEsNkJBQTZCLElBQUksV0FBVyxTQUFTLCtCQUErQixTQUFTLFNBQVMsSUFBSSxpQkFBaUIsTUFBTSxTQUFTLFNBQVMseUJBQXlCLDRCQUE0QixnQkFBZ0Isb0JBQW9CLGNBQWMsT0FBTyxvQ0FBb0MsY0FBYyx1QkFBdUIsYUFBYSxpQkFBaUIsNkNBQTZDLGdCQUFnQixrREFBa0QsU0FBUyxjQUFjLFNBQVMsWUFBWSxNQUFNLDJCQUEyQix1QkFBdUIsVUFBVSxlQUFlLFNBQVMsU0FBUyxrQ0FBa0MseUJBQXlCLDJEQUEyRCwwQkFBMEIsMENBQTBDLDhCQUE4QixpQkFBaUIsOEVBQThFLHFGQUFxRixNQUFNLDJDQUEyQyw0Q0FBNEMsa0JBQWtCLHVCQUF1QixrQkFBa0IsdUJBQXVCLElBQUksWUFBWSxvSEFBb0gsTUFBTSx3QkFBd0IsRUFBRSxVQUFVLG1FQUFtRSwyQkFBMkIsb0RBQW9ELDZIQUE2SCw2QkFBNkIsaUNBQWlDLDJCQUEyQixxQ0FBcUMsWUFBWSxJQUFJLDhCQUE4QixVQUFVLE9BQU8sbUJBQW1CLGFBQWEsd0dBQXdHLGtCQUFrQixpQ0FBaUMsYUFBYSwrRUFBK0UsMkRBQTJELG9DQUFvQyxzQ0FBc0MsNkJBQTZCLG9CQUFvQixPQUFPLFlBQVksaUJBQWlCLG1EQUFtRCxXQUFXLFlBQVksU0FBUyxtT0FBbU8sU0FBUyxtQ0FBbUMsU0FBUyx5QkFBeUIsa0JBQWtCLHlCQUF5QixTQUFTLEVBQUUsT0FBTyxpUEFBaVAsZUFBZSxzREFBc0Qsd0JBQXdCLGFBQWEsNkJBQTZCLDBIQUEwSCxpQkFBaUIsZ0RBQWdELDJCQUEyQiwrQ0FBK0Msb0VBQW9FLDZlQUE2ZSxxQkFBcUIsaURBQWlELGFBQWEsbUhBQW1ILG1CQUFtQiwwQ0FBMEMsb0JBQW9CLHFDQUFxQyx1QkFBdUIsOENBQThDLHdCQUF3Qix5Q0FBeUMsNEJBQTRCLG1EQUFtRCw2QkFBNkIsOENBQThDLGNBQWMscUJBQXFCLHFCQUFxQiw0Q0FBNEMsc0JBQXNCLDZDQUE2QyxtQkFBbUIsMkRBQTJELGdDQUFnQyx3QkFBd0IsU0FBUyxjQUFjLElBQUksa0RBQWtELDhGQUE4RixTQUFTLHlCQUF5QixRQUFRLG9CQUFvQixvQkFBb0IsV0FBVyxTQUFTLGNBQWMsd0RBQXdELElBQUksd0ZBQXdGLFNBQVMseUJBQXlCLFFBQVEsZ0JBQWdCLE1BQU0sK0JBQStCLE9BQU8sVUFBVSxtQkFBbUIsc0JBQXNCLE1BQU0saUJBQWlCLHFDQUFxQyxLQUFLLHVEQUF1RCx3Q0FBd0Msa0dBQWtHLGVBQWUsb0JBQW9CLFlBQVksa0JBQWtCLE1BQU0sZ0NBQWdDLHlCQUF5QixrQkFBa0IscUVBQXFFLDJCQUEyQixVQUFVLDRCQUE0QiwwQ0FBMEMsYUFBYSxrQkFBa0IscUdBQXFHLFNBQVMsWUFBWSxLQUFLLHdEQUF3RCwwREFBMEQsb0JBQW9CLGFBQWEsc0tBQXNLLHVDQUF1QyxrQkFBa0Isb0JBQW9CLFVBQVUsa0JBQWtCLFdBQVcsWUFBWSxtQkFBbUIscUJBQXFCLFVBQVUsb0VBQW9FLEVBQUUsaUNBQWlDLG9CQUFvQixvQkFBb0IsTUFBTSwrQkFBK0IsT0FBTyxVQUFVLG1CQUFtQixvQkFBb0IsTUFBTSxtQkFBbUIsMkNBQTJDLEtBQUssbUJBQW1CLGdDQUFnQyxhQUFhLHNCQUFzQixLQUFLLGlCQUFpQixxREFBcUQsYUFBYSxhQUFhLG1IQUFtSCxrRUFBa0UsaUJBQWlCLGVBQWUsYUFBYSxjQUFjLFVBQVUsTUFBTSwwQkFBMEIsZ0JBQWdCLGlCQUFpQixLQUFLLGdCQUFnQixzQkFBc0IsV0FBVyxrQkFBa0IscURBQXFELGlCQUFpQixtRUFBbUUsNEJBQTRCLFVBQVUseUJBQXlCLGNBQWMsVUFBVSxNQUFNLDBCQUEwQixnQkFBZ0IsaUJBQWlCLEtBQUssZ0JBQWdCLG9CQUFvQixrQkFBa0IsaURBQWlELHNCQUFzQixvQ0FBb0Msc0JBQXNCLDBCQUEwQixNQUFNLFVBQVUsTUFBTSxnRkFBZ0YsZ0NBQWdDLE9BQU8seUNBQXlDLGlCQUFpQixnQkFBZ0IsVUFBVSxVQUFVLHVEQUF1RCxjQUFjLHdDQUF3QyxlQUFlLG1DQUFtQyx3QkFBd0Isa0RBQWtELGtCQUFrQiw0Q0FBNEMsbUJBQW1CLDZDQUE2QyxxSUFBcUksa0JBQWtCLDRDQUE0QyxtQkFBbUIsNkNBQTZDLHFJQUFxSSw0QkFBNEIsc0RBQXNELDZCQUE2QixpREFBaUQsd0JBQXdCLGlEQUFpRCx5QkFBeUIsa0RBQWtELHlCQUF5QixrREFBa0QsMEJBQTBCLG9EQUFvRCw4SkFBOEosT0FBTyxxQkFBcUIsOEJBQThCLG9CQUFvQixtQ0FBbUMsa0RBQWtELG1CQUFtQixXQUFXLGlCQUFpQiw2QkFBNkIsb0JBQW9CLG1DQUFtQyxrREFBa0QsbUJBQW1CLFdBQVcsa0JBQWtCLG1CQUFtQixrQ0FBa0Msb0JBQW9CLHFDQUFxQyxxREFBcUQsb0JBQW9CLHFDQUFxQyxtQkFBbUIsOEJBQThCLFdBQVcsZUFBZSxlQUFlLG1GQUFtRixNQUFNLHlDQUF5QyxFQUFFLFdBQVcsK0JBQStCLGdDQUFnQyx5Q0FBeUMsd0JBQXdCLG9DQUFvQyx3RkFBd0YsOEJBQThCLHdGQUF3RiwwQkFBMEIscUJBQXFCLElBQUksT0FBTywwQkFBMEIsRUFBRSxNQUFNLFNBQVMsU0FBUyw0QkFBNEIsYUFBYSxtRkFBbUYsRUFBRSxvQ0FBb0MsYUFBYSxpRUFBaUUsOEJBQThCLGtDQUFrQyxhQUFhLGlFQUFpRSxtQ0FBbUMscUJBQXFCLElBQUksOEVBQThFLCtCQUErQixrSUFBa0ksYUFBYSxTQUFTLG9CQUFvQixnQkFBZ0Isc0JBQXNCLFdBQVcsMkJBQTJCLDBCQUEwQixxREFBcUQsK0VBQStFLFdBQVcsNEdBQTRHLGFBQWEsK0JBQStCLFVBQVUsSUFBSSxVQUFVLE1BQU0sU0FBUyxTQUFTLE9BQU8sMkRBQTJELFdBQVcsSUFBSSxhQUFhLE1BQU0sU0FBUyxTQUFTLE9BQU8sK0JBQStCLFVBQVUsSUFBSSxTQUFTLE1BQU0sU0FBUyxTQUFTLHlCQUF5QixrQ0FBa0Msb0RBQW9ELGtCQUFrQixvQkFBb0Isa0NBQWtDLGlFQUFpRSxhQUFhLHlHQUF5RyxrQkFBa0IsK0JBQStCLG9CQUFvQixrQkFBa0IsT0FBTyxhQUFhLElBQUksYUFBYSxJQUFJLGFBQWEsaUJBQWlCLG1EQUFtRCxXQUFXLGVBQWUsT0FBTyxTQUFTLHFOQUFxTixxREFBcUQsdUhBQXVILFNBQVMsMkVBQTJFLHlEQUF5RCxVQUFVLHVEQUF1RCxNQUFNLGtCQUFrQixHQUFHLG9DQUFvQyxzQ0FBc0MsTUFBTSxrQkFBa0IsR0FBRywrQkFBK0IsOEJBQThCLE1BQU0sb0NBQW9DLEdBQUcseUJBQXlCLDZCQUE2QixNQUFNLG9CQUFvQixHQUFHLHNCQUFzQixLQUFLLG1GQUFtRixNQUFNLGdDQUFnQyxHQUFHLGdDQUFnQyxjQUFjLG1CQUFtQixTQUFTLGdCQUFnQiw2QkFBNkIsZ0JBQWdCLDZCQUE2QixhQUFhLGVBQWUsY0FBYyxvREFBb0Qsd0JBQXdCLDBIQUEwSCxLQUFLLDRCQUE0QixxREFBcUQsNEJBQTRCLHlWQUF5VixTQUFTLGdKQUFnSiw4QkFBOEIsaURBQWlELDhCQUE4QixnSkFBZ0osOEJBQThCLDhCQUE4QiwySUFBMkksa1BBQWtQLHdEQUF3RCw0Q0FBNEMsa0dBQWtHLFlBQVksSUFBSSxNQUFNLGtFQUFrRSw4Q0FBOEMsc0ZBQXNGLFlBQVksK0NBQStDLDJGQUEyRixXQUFXLHNDQUFzQyxnQkFBZ0IsVUFBVSwwREFBMEQsRUFBRSwrUkFBK1IsT0FBTyw2Q0FBNkMsaUJBQWlCLGdCQUFnQixVQUFVLDhCQUE4QiwwTkFBME4sYUFBYSw2RUFBNkUsY0FBYyx3REFBd0QsK0JBQStCLHNCQUFzQixXQUFXLDhDQUE4QyxZQUFZLHlDQUF5QyxjQUFjLGlEQUFpRCxlQUFlLDRDQUE0QyxnQkFBZ0IsbURBQW1ELGlCQUFpQiw4Q0FBOEMsY0FBYyxxQkFBcUIsZUFBZSw0Q0FBNEMsNENBQTRDLGtEQUFrRCxrQ0FBa0MsbUJBQW1CLDBCQUEwQixpQkFBaUIsa01BQWtNLFFBQVEsYUFBYSxtRkFBbUYsK0RBQStELFVBQVUsb0lBQW9JLGtFQUFrRSxpQkFBaUIsK0JBQStCLG9CQUFvQixvQkFBb0IsT0FBTyxZQUFZLGlCQUFpQixtREFBbUQsc0JBQXNCLG1DQUFtQyxTQUFTLHdGQUF3RixtQkFBbUIscURBQXFELG9CQUFvQixxREFBcUQsZ0VBQWdFLGdEQUFnRCx1QkFBdUIseURBQXlELHdCQUF3QixxREFBcUQsb0RBQW9ELHNCQUFzQix5REFBeUQsOEJBQThCLHNCQUFzQiwwQkFBMEIsaUJBQWlCLE9BQU8sc0lBQXNJLFFBQVEsRUFBRSxhQUFhLHdHQUF3RyxFQUFFLHFEQUFxRCxZQUFZLElBQUksaUJBQWlCLFNBQVMsZ0NBQWdDLHFEQUFxRCxpQ0FBaUMsMERBQTBELHNDQUFzQyw4Q0FBOEMsMEJBQTBCLGlCQUFpQix5Q0FBeUMsb0JBQW9CLE9BQU8sWUFBWSxpQkFBaUIsbURBQW1ELFdBQVcsZUFBZSxPQUFPLFNBQVMsMk1BQTJNLFNBQVMsaVFBQWlRLFNBQVMsdUZBQXVGLGlCQUFpQixnQkFBZ0IsV0FBVyxpQkFBaUIsdVFBQXVRLGFBQWEsb0JBQW9CLGdCQUFnQix1QkFBdUIsV0FBVyxrQkFBa0IsUUFBUSxlQUFlLFdBQVcseUNBQXlDLFlBQVksb0NBQW9DLDRCQUE0QixJQUFJLHlEQUF5RCxTQUFTLHlCQUF5QixRQUFRLHVEQUF1RCxnREFBZ0QsZ0JBQWdCLG1DQUFtQyxtQkFBbUIsMEZBQTBGLDJEQUEyRCx3Q0FBd0MsaUJBQWlCLG1DQUFtQyw0QkFBNEIsWUFBWSx1Q0FBdUMsS0FBSyxtQ0FBbUMsbUZBQW1GLG1CQUFtQixVQUFVLGtCQUFrQiwyQkFBMkIsdUZBQXVGLG1CQUFtQixXQUFXLDhDQUE4Qyw0QkFBNEIsV0FBVyxFQUFFLCtCQUErQixVQUFVLHlCQUF5QixZQUFZLElBQUksc0JBQXNCLHlCQUF5Qiw0QkFBNEIsZ0RBQWdELGlFQUFpRSwyQkFBMkIsb0JBQW9CLE9BQU8sWUFBWSxpQkFBaUIsbURBQW1ELFdBQVcsWUFBWSxTQUFTLCtJQUErSSxTQUFTLG1DQUFtQyxTQUFTLDZDQUE2QyxpQkFBaUIsZ0JBQWdCLFlBQVksa0NBQWtDLG9DQUFvQyxvQkFBb0IsT0FBTyxZQUFZLGlCQUFpQixtREFBbUQsV0FBVyxZQUFZLFNBQVMsaUpBQWlKLFNBQVMsbUNBQW1DLFNBQVMsK0NBQStDLGlCQUFpQixxQkFBcUIsb0NBQW9DLElBQUksV0FBVyxFQUFFLGtDQUFrQyxxQ0FBcUMsY0FBYyxJQUFJLHlDQUF5QyxnSUFBZ0ksU0FBUyxZQUFZLHdCQUF3QixtQ0FBbUMsU0FBUyxrQkFBa0Isb0JBQW9CLHNCQUFzQixxQkFBcUIsaUJBQWlCLHdCQUF3QiwwQkFBMEIseUJBQXlCLHFCQUFxQiw2QkFBNkIsK0JBQStCLDhCQUE4QiwwQkFBMEIsZUFBZSxpQkFBaUIsY0FBYyxTQUFTLHNCQUFzQix3QkFBd0IsdUJBQXVCLHlCQUF5QixjQUFjLGNBQWMsZUFBZSxpQkFBaUIsZ0JBQWdCLFlBQVksc0xBQXNMLGtCQUFrQixXQUFXLG1CQUFtQixrRUFBa0Usd0NBQXdDLGlEQUFpRCxpQ0FBaUMsdUZBQXVGLHdDQUF3QyxvQkFBb0Isa0JBQWtCLE9BQU8sYUFBYSxJQUFJLGFBQWEsSUFBSSxhQUFhLGlCQUFpQixtREFBbUQsV0FBVyxlQUFlLE9BQU8sU0FBUyxxSUFBcUksa0RBQWtELCtGQUErRixTQUFTLHVEQUF1RCxpQkFBaUIsZ0JBQWdCLFdBQVcsOEJBQThCLDJJQUEySSxhQUFhLG9CQUFvQixjQUFjLHFCQUFxQixlQUFlLDRDQUE0Qyx5Q0FBeUMsK0NBQStDLGtDQUFrQyxXQUFXLDhKQUE4SixRQUFRLGFBQWEsZ0ZBQWdGLDREQUE0RCxVQUFVLDJIQUEySCwyQ0FBMkMsNEJBQTRCLG1JQUFtSSxpREFBaUQsaUJBQWlCLG1CQUFtQix3Q0FBd0MseURBQXlELHVCQUF1QixtQkFBbUIsS0FBSywyQkFBMkIsb0JBQW9CLE9BQU8sWUFBWSxpQkFBaUIsbURBQW1ELFdBQVcsWUFBWSxTQUFTLGlLQUFpSyxTQUFTLGlFQUFpRSxTQUFTLCtDQUErQyxpQkFBaUIsZ0JBQWdCLFdBQVcsVUFBVSw4SEFBOEgsYUFBYSxxRUFBcUUsY0FBYyx5RkFBeUYsMENBQTBDLHVHQUF1Ryw0SEFBNEgsZ0JBQWdCLDJDQUEyQyxpQkFBaUIsdUNBQXVDLDBDQUEwQyxvQkFBb0IsT0FBTyxZQUFZLGlCQUFpQixtREFBbUQsV0FBVyxlQUFlLE9BQU8sU0FBUywwSkFBMEosU0FBUywyR0FBMkcsU0FBUyx1REFBdUQsaUJBQWlCLGdCQUFnQixXQUFXLGlCQUFpQixvR0FBb0csZ0JBQWdCLHdCQUF3Qix1Q0FBdUMscUNBQXFDLHNDQUFzQyx3Q0FBd0MsK0ZBQStGLDRCQUE0QixvQkFBb0IsT0FBTyxZQUFZLGlCQUFpQixtREFBbUQsV0FBVyxlQUFlLE9BQU8sU0FBUywrTkFBK04sU0FBUywrVUFBK1UsU0FBUyx5REFBeUQsaUJBQWlCLGdCQUFnQixXQUFXLGlCQUFpQiw2T0FBNk8sYUFBYSxvQkFBb0IsbUJBQW1CLHVEQUF1RCxvQkFBb0Isd0RBQXdELHFIQUFxSCx1QkFBdUIsMkRBQTJELHdCQUF3Qiw0REFBNEQsbUlBQW1JLFdBQVcsa0JBQWtCLFlBQVksbUJBQW1CLGdCQUFnQiwwS0FBMEssY0FBYyxxQkFBcUIsZ0JBQWdCLHdCQUF3QixpREFBaUQsb0JBQW9CLE9BQU8sWUFBWSxpQkFBaUIsbURBQW1ELFdBQVcsZUFBZSxPQUFPLFNBQVMsaUlBQWlJLFNBQVMsdUZBQXVGLFNBQVMscURBQXFELGlCQUFpQixnQkFBZ0IsV0FBVyxpQkFBaUIseURBQXlELFdBQVcsbUJBQW1CLDBDQUEwQyxtRkFBbUYsSUFBSSxxS0FBcUsseUJBQXlCLHNCQUFzQix5QkFBeUIsc0JBQXNCLGFBQWEsWUFBWSxJQUFJLGdCQUFnQixZQUFZLElBQUksZ0JBQWdCLG1CQUFtQixnRUFBZ0UscUJBQXFCLFlBQVksSUFBSSxNQUFNLFVBQVUsb0RBQW9ELHdDQUF3QyxxQkFBcUIsNERBQTRELFlBQVksSUFBSSxNQUFNLGtEQUFrRCwyQ0FBMkMsdUJBQXVCLFdBQVcsaUJBQWlCLFNBQVMsb0JBQW9CLHNCQUFzQixxQkFBcUIsaUJBQWlCLHdCQUF3QiwwQkFBMEIseUJBQXlCLHFCQUFxQiw2QkFBNkIsK0JBQStCLDhCQUE4QiwwQkFBMEIsZUFBZSxpQkFBaUIsY0FBYyxVQUFVLHNCQUFzQix3QkFBd0IsdUJBQXVCLHlCQUF5QixxSUFBcUksc0RBQXNELGlCQUFpQixZQUFZLElBQUksTUFBTSw0RUFBNEUsZ0VBQWdFLG1FQUFtRSxJQUFJLHFGQUFxRixPQUFPLHFCQUFxQixrQkFBa0IscUNBQXFDLDZEQUE2RCwwQkFBMEIsb0JBQW9CLGFBQWEsbUZBQW1GLEVBQUUsaUJBQWlCLG1DQUFtQyw2Q0FBNkMsMEJBQTBCLHVDQUF1QyxnQ0FBZ0MsbUZBQW1GLEVBQUUsd0JBQXdCLGtCQUFrQixvQ0FBb0Msb0JBQW9CLEdBQUcsbUNBQW1DLG9CQUFvQixXQUFXLE9BQU8sWUFBWSxpQkFBaUIsbURBQW1ELGtCQUFrQixlQUFlLHFDQUFxQyxnSUFBZ0ksZ0VBQWdFLGFBQWEsbUZBQW1GLGdGQUFnRixxREFBcUQsZ0pBQWdKLGFBQWEsWUFBWSxJQUFJLGdCQUFnQixZQUFZLElBQUksZ0JBQWdCLG9JQUFvSSxZQUFZLElBQUksTUFBTSxrREFBa0QsK0NBQStDLFNBQVMsd0JBQXdCLGdCQUFnQiwrQkFBK0Isd0JBQXdCLFNBQVMsbUNBQW1DLDhDQUE4QyxvREFBb0QsaUJBQWlCLHlDQUF5QyxpQkFBaUIsdUJBQXVCLFdBQVcsK0JBQStCLHNEQUFzRCxNQUFNLDJEQUEyRCx1REFBdUQsdUJBQXVCLEVBQUUsMkNBQTJDLDRCQUE0Qiw4REFBOEQsb0RBQW9ELG9CQUFvQix1RkFBdUYsMkJBQTJCLG1DQUFtQyw2RkFBNkYsU0FBUyxvQ0FBb0MsYUFBYSxZQUFZLEtBQUsscUJBQXFCLG1CQUFtQixjQUFjLElBQUksZ0VBQWdFLHdEQUF3RCxxQ0FBcUMscURBQXFELGNBQWMsVUFBVSwwQ0FBMEMsVUFBVSx1Q0FBdUMsYUFBYSxhQUFhLHFGQUFxRixFQUFFLDBFQUEwRSxVQUFVLEVBQUUsV0FBVyxVQUFVLGlCQUFpQixrQkFBa0IsOENBQThDLElBQUksWUFBWSxTQUFTLHNCQUFzQixZQUFZLHlEQUF5RCxVQUFVLFVBQVUscUJBQXFCLGFBQWEsNERBQTRELFVBQVUsVUFBVSxxQkFBcUIsYUFBYSwwRUFBMEUsVUFBVSxVQUFVLHFCQUFxQixhQUFhLGdFQUFnRSxVQUFVLFVBQVUscUJBQXFCLGFBQWEsZ0RBQWdELFVBQVUsVUFBVSxxQkFBcUIsYUFBYSw4Q0FBOEMsVUFBVSxVQUFVLHFCQUFxQixhQUFhLHdEQUF3RCxVQUFVLFVBQVUscUJBQXFCLGFBQWEsS0FBSyxPQUFPLG1MQUFtTCxNQUFNLE9BQU8sZUFBZSxTQUFTLGdCQUFnQixTQUFTLGdCQUFnQixTQUFTLGlCQUFpQixTQUFTLGlCQUFpQixTQUFTLGlCQUFpQixTQUFTLFdBQVcsU0FBUyxXQUFXLFNBQVMsV0FBVyxXQUFXLDZFQUE2RSxpQkFBaUIsc0pBQXNKLGtCQUFrQix1Q0FBdUMsa0JBQWtCLHlCQUF5QixlQUFlLHNCQUFzQixvQkFBb0IsMkJBQTJCLHFCQUFxQiw0Q0FBNEMsb0NBQW9DLDBDQUEwQyx3Q0FBd0MsaUJBQWlCLHNDQUFzQyxZQUFZLGtDQUFrQyxnREFBZ0QsNkJBQTZCLDRNQUE0TSwyQ0FBMkMsb0JBQW9CLHlCQUF5QixPQUFPLG9CQUFvQixJQUFJLGNBQWMsSUFBSSxhQUFhLElBQUksYUFBYSxpQkFBaUIsbURBQW1ELFdBQVcsZUFBZSxPQUFPLFNBQVMsNE1BQTRNLGtEQUFrRCx5S0FBeUssU0FBUyx1REFBdUQsaUJBQWlCLGdCQUFnQixXQUFXLCtDQUErQyxrVEFBa1QsYUFBYSxvQkFBb0IsZ0JBQWdCLHVCQUF1QixjQUFjLHFCQUFxQixlQUFlLDRDQUE0QyxxQ0FBcUMsMkNBQTJDLGtDQUFrQyxXQUFXLHVDQUF1QyxZQUFZLHdIQUF3SCxtQkFBbUIsaUlBQWlJLFdBQVcsa0pBQWtKLFFBQVEsYUFBYSw0RUFBNEUsd0RBQXdELFVBQVUsK0dBQStHLHVDQUF1QyxhQUFhLGdJQUFnSSw4QkFBOEIsd0RBQXdELDBCQUEwQiwyQkFBMkIsMEJBQTBCLElBQUksb0RBQW9ELGdCQUFnQixhQUFhLFlBQVksU0FBUyxhQUFhLFNBQVMsWUFBWSxTQUFTLGFBQWEsRUFBRSx1QkFBdUIsU0FBUyxrQkFBa0Isb0JBQW9CLHNCQUFzQixxQkFBcUIsc0dBQXNHLHdCQUF3QiwwQkFBMEIseUJBQXlCLDhIQUE4SCw2QkFBNkIsK0JBQStCLDhCQUE4Qiw0SkFBNEosZUFBZSxpQkFBaUIsYUFBYSxTQUFTLGNBQWMsa0NBQWtDLGdDQUFnQyxLQUFLLHlFQUF5RSx1QkFBdUIsdUNBQXVDLFlBQVksSUFBSSxNQUFNLDZDQUE2QywwR0FBMEcseURBQXlELHdEQUF3RCxjQUFjLFVBQVUsc0JBQXNCLHdCQUF3Qix1QkFBdUIseUJBQXlCLGtCQUFrQixvQkFBb0IsbUJBQW1CLDhCQUE4Qiw0S0FBNEssOEhBQThILDRGQUE0RixRQUFRLDRIQUE0SCxHQUFHLCtDQUErQyw2QkFBNkIsc0dBQXNHLFFBQVEsMEZBQTBGLGtDQUFrQyxNQUFNLFFBQVEsK0JBQStCLGdCQUFnQixtSUFBbUksNEJBQTRCLFFBQVEsNEJBQTRCLEdBQUcsdURBQXVELG1OQUFtTixJQUFJLHlCQUF5Qiw4QkFBOEIsd0NBQXdDLFFBQVEsU0FBUyw0RUFBNEUsUUFBUSx1REFBdUQsU0FBUyxZQUFZLFNBQVMsWUFBWSxTQUFTLFlBQVksU0FBUyxZQUFZLFNBQVMsWUFBWSxTQUFTLFlBQVksU0FBUyxZQUFZLHdCQUF3QixxREFBcUQsRUFBRSx3QkFBd0IsNEJBQTRCLG1CQUFtQixjQUFjLElBQUkscUNBQXFDLHdEQUF3RCxxQ0FBcUMscURBQXFELDhDQUE4QyxVQUFVLCtDQUErQyxVQUFVLCtDQUErQyxVQUFVLCtDQUErQyxVQUFVLCtDQUErQyxVQUFVLEVBQUUsU0FBUyxrQkFBa0Isb0JBQW9CLHNCQUFzQixxQkFBcUIsaUJBQWlCLGtDQUFrQyx3QkFBd0IsMEJBQTBCLHlCQUF5Qix1QkFBdUIsMENBQTBDLDZCQUE2QiwrQkFBK0IsOEJBQThCLG9EQUFvRCxzQkFBc0Isd0JBQXdCLHVCQUF1QixtQkFBbUIsc0JBQXNCLHdCQUF3Qix1QkFBdUIsbUJBQW1CLHFCQUFxQix1QkFBdUIsc0JBQXNCLHNCQUFzQixrQkFBa0IsZUFBZSxpQkFBaUIscUJBQXFCLHVCQUF1QixzQkFBc0Isa0JBQWtCLGNBQWMsVUFBVSxtQkFBbUIscUJBQXFCLG9CQUFvQiw0QkFBNEIsZ0JBQWdCLHNCQUFzQix3QkFBd0IsdUJBQXVCLHlCQUF5QixvQkFBb0IsY0FBYyxvQkFBb0IsY0FBYyxvQkFBb0IsY0FBYyxvQkFBb0Isc0JBQXNCLHFCQUFxQixpQkFBaUIsaUJBQWlCLGNBQWMsaUJBQWlCLGNBQWMsaUJBQWlCLGNBQWMsbUJBQW1CLHFCQUFxQixvQkFBb0IsNEJBQTRCLGdCQUFnQixxQkFBcUIsdUJBQXVCLHNCQUFzQiw0QkFBNEIsa0JBQWtCLDRLQUE0SyxndUJBQWd1QixvT0FBb08sUUFBUSx1UUFBdVEsR0FBRyw4Q0FBOEMseUJBQXlCLGdYQUFnWCxzQ0FBc0Msb0JBQW9CLFdBQVcsT0FBTyxZQUFZLGlCQUFpQixtREFBbUQsa0JBQWtCLFNBQVMsOEdBQThHLElBQUksK09BQStPLFVBQVUsMkJBQTJCLFlBQVksRUFBRSxZQUFZLFNBQVMsZ01BQWdNLFNBQVMsbUNBQW1DLGFBQWEsbUZBQW1GLHNEQUFzRCw2RkFBNkYsRUFBRSxzQ0FBc0MsK0hBQStILGFBQWEsNkZBQTZGLEVBQUUsK0JBQStCLElBQUksWUFBWSxJQUFJLHVDQUF1QyxZQUFZLElBQUksdUJBQXVCLFlBQVksRUFBRSxlQUFlLFdBQVcsWUFBWSxxQkFBcUIsaUNBQWlDLG1FQUFtRSxZQUFZLFNBQVMsd0dBQXdHLEVBQUUsK0NBQStDLGNBQWMsV0FBVyxRQUFRLDhEQUE4RCx5REFBeUQsUUFBUSx1QkFBdUIsa0NBQWtDLFlBQVksU0FBUyx3R0FBd0csNkVBQTZFLFNBQVMsb2dCQUFvZ0IsU0FBUyxzRUFBc0UsaUJBQWlCLGdCQUFnQixXQUFXLGlCQUFpQiwwVUFBMFUscUJBQXFCLDZDQUE2QyxzQkFBc0Isd0NBQXdDLHFCQUFxQiw2Q0FBNkMsc0JBQXNCLHdDQUF3QyxvQkFBb0IsNENBQTRDLHFCQUFxQix1Q0FBdUMsb0JBQW9CLDRDQUE0QyxxQkFBcUIsdUNBQXVDLGtCQUFrQiwwQ0FBMEMsbUJBQW1CLHFDQUFxQyxtQkFBbUIsMEJBQTBCLG1CQUFtQiwwQkFBMEIsbUJBQW1CLDBCQUEwQixtQkFBbUIsMkNBQTJDLG9CQUFvQixzQ0FBc0MsZ0JBQWdCLHVCQUF1QixnQkFBZ0IsdUJBQXVCLGdCQUFnQix1QkFBdUIsa0JBQWtCLDBDQUEwQyxtQkFBbUIscUNBQXFDLG9CQUFvQiw0Q0FBNEMscUJBQXFCLHdDQUF3QyxtQ0FBbUMscUNBQXFDLElBQUksc0lBQXNJLHVCQUF1QixFQUFFLG9DQUFvQyxTQUFTLDRCQUE0QixpQkFBaUIsb0JBQW9CLE1BQU0sY0FBYyxHQUFHLDhCQUE4QiwyQkFBMkIsRUFBRSx1Q0FBdUMsYUFBYSx1Q0FBdUMsRUFBRSxvQkFBb0IsR0FBRyxXQUFXLFdBQVcsa0JBQWtCLDhCQUE4Qix1RkFBdUYseUNBQXlDLHVEQUF1RCw0RUFBNEUsSUFBSSx1QkFBdUIsaUJBQWlCLDRCQUE0QixrREFBa0QsWUFBWSxJQUFJLE1BQU0sa0JBQWtCLGtDQUFrQyxhQUFhLFlBQVksU0FBUyxhQUFhLFNBQVMsYUFBYSxTQUFTLFlBQVksU0FBUyxhQUFhLEVBQUUsT0FBTyxlQUFlLDhPQUE4TyxtQkFBbUIsOFFBQThRLFdBQVcsNEJBQTRCLG1IQUFtSCxZQUFZLElBQUksYUFBYSwwQkFBMEIsZ0RBQWdELEtBQUssc0JBQXNCLGdEQUFnRCxhQUFhLDhGQUE4RixTQUFTLFlBQVksU0FBUyxhQUFhLFNBQVMsWUFBWSxTQUFTLGFBQWEsU0FBUyxhQUFhLFNBQVMsWUFBWSxTQUFTLGFBQWEsU0FBUyxZQUFZLFNBQVMsYUFBYSxFQUFFLE9BQU8sZUFBZSx5YkFBeWIsbUJBQW1CLG9mQUFvZixXQUFXLFdBQVcsVUFBVSw2Q0FBNkMsSUFBSSx1QkFBdUIsYUFBYSx3REFBd0QsU0FBUyw4Q0FBOEMsU0FBUyxtRkFBbUYsRUFBRSxJQUFJLGlDQUFpQyxjQUFjLDZDQUE2QyxVQUFVLDJDQUEyQyxVQUFVLDJDQUEyQyxXQUFXLEVBQUUsU0FBUyxrQkFBa0Isb0JBQW9CLHNCQUFzQixxQkFBcUIsOEJBQThCLGlDQUFpQyx3Q0FBd0Msd0JBQXdCLDBCQUEwQix5QkFBeUIsMENBQTBDLHFCQUFxQiw2QkFBNkIsK0JBQStCLDhCQUE4QiwwQkFBMEIsZUFBZSxpQkFBaUIsY0FBYyxVQUFVLHNCQUFzQix3QkFBd0IsdUJBQXVCLHlCQUF5QixXQUFXLGNBQWMsNEtBQTRLLFNBQVMsdUJBQXVCLFNBQVMsUUFBUSxTQUFTLElBQUksd0NBQXdDLDJCQUEyQiwrQkFBK0IsK0NBQStDLCtCQUErQix5RUFBeUUsa0JBQWtCLG9CQUFvQixJQUFJLCtCQUErQixvQkFBb0IsT0FBTyxZQUFZLGlCQUFpQixtREFBbUQsV0FBVyxlQUFlLE9BQU8sU0FBUywrSEFBK0gsU0FBUyxpSEFBaUgsU0FBUyxxREFBcUQsaUJBQWlCLGdCQUFnQixXQUFXLGlCQUFpQixtREFBbUQsVUFBVSxrQkFBa0IsdUNBQXVDLG9CQUFvQixPQUFPLFlBQVksaUJBQWlCLG1EQUFtRCxXQUFXLFlBQVksU0FBUyxxSkFBcUosU0FBUyxpRUFBaUUsU0FBUyxpREFBaUQsaUJBQWlCLGdCQUFnQixXQUFXLFVBQVUsNkZBQTZGLFlBQVksb0VBQW9FLGFBQWEsK0ZBQStGLEtBQUssd0JBQXdCLDhEQUE4RCxpQkFBaUIsNkNBQTZDLGtCQUFrQix5Q0FBeUMsaUZBQWlGLDJCQUEyQixjQUFjLHdDQUF3QyxjQUFjLDJCQUEyQixFQUFFLElBQUksV0FBVyxRQUFRLHdEQUF3RCxvQ0FBb0MsZUFBZSx1QkFBdUIsbUZBQW1GLHVDQUF1Qyw4Q0FBOEMsUUFBUSxjQUFjLG1CQUFtQixJQUFJLGlCQUFpQixpREFBaUQsaUJBQWlCLGVBQWUsaUJBQWlCLHVCQUF1Qiw0REFBNEQsa0JBQWtCLFlBQVksR0FBRyxTQUFTLCtGQUErRixFQUFFLEVBQUUsR0FBRyxFQUFFLG9CQUFvQixjQUFjLHNCQUFzQixvQ0FBb0MsMkNBQTJDLGlCQUFpQiwyQkFBMkIsaUJBQWlCLGVBQWUsc0JBQXNCLDBDQUEwQyw4REFBOEQsZ0NBQWdDLG1FQUFtRSxZQUFZLElBQUksaUNBQWlDLEdBQUcsNkNBQTZDLEVBQUUsRUFBRSxHQUFHLElBQUksZ0VBQWdFLGtCQUFrQixjQUFjLFFBQVEsd0dBQXdHLEVBQUUsNENBQTRDLEVBQUUsd0RBQXdELEVBQUUsZUFBZSxFQUFFLDBCQUEwQixvQkFBb0IsMkJBQTJCLEVBQUUsa0VBQWtFLEdBQUcsMEJBQTBCLEVBQUUsc0NBQXNDLFVBQVUsV0FBVyxLQUFLLDhCQUE4QixlQUFlLDJCQUEyQixnREFBZ0QsaUJBQWlCLGFBQWEsbURBQW1ELGFBQWEsa0NBQWtDLElBQUksZ0JBQWdCLEVBQUUsR0FBRyxNQUFNLHVCQUF1Qix5Q0FBeUMsR0FBRyxvRUFBb0UsaUJBQWlCLDBDQUEwQyxpQkFBaUIsaUJBQWlCLHdCQUF3QixNQUFNLG9DQUFvQywyQ0FBMkMsd0JBQXdCLCtCQUErQixLQUFLLDJEQUEyRCw4QkFBOEIsOENBQThDLG9DQUFvQywwSEFBMEgsdUJBQXVCLGVBQWUsUUFBUSwyQ0FBMkMsc0JBQXNCLElBQUksdUJBQXVCLHFDQUFxQyxPQUFPLHdDQUF3Qyx3REFBd0QscUJBQXFCLHFCQUFxQix5REFBeUQsV0FBVywyQ0FBMkMsNEJBQTRCLDhCQUE4QixlQUFlLGdEQUFnRCxjQUFjLElBQUksa0NBQWtDLHFCQUFxQixrQkFBa0IseUJBQXlCLDZJQUE2SSxPQUFPLFFBQVEsdUJBQXVCLGFBQWEsMEZBQTBGLG9CQUFvQixhQUFhLDhDQUE4Qyx5QkFBeUIsSUFBSSxTQUFTLE9BQU8seUVBQXlFLDREQUE0RCxrQkFBa0IsSUFBSSxZQUFZLFFBQVEsT0FBTyxVQUFVLElBQUkseUJBQXlCLGdGQUFnRixPQUFPLG1EQUFtRCxHQUFHLFNBQVMsTUFBTSxHQUFHLHlHQUF5RyxpQkFBaUIsdUVBQXVFLDhCQUE4QixtQkFBbUIsMEJBQTBCLGlCQUFpQixtQkFBbUIscUJBQXFCLG1CQUFtQixvQkFBb0IsY0FBYyx5Q0FBeUMsRUFBRSxxQkFBcUIsbUJBQW1CLHlCQUF5QixtQkFBbUIsaUJBQWlCLEVBQUUsMkJBQTJCLG1CQUFtQixrQkFBa0IsRUFBRSx1QkFBdUIsbUJBQW1CLGtCQUFrQixtQkFBbUIsaUJBQWlCLG1CQUFtQixlQUFlLEVBQUUsMkJBQTJCLG1CQUFtQixhQUFhLG1CQUFtQixxQkFBcUIsbUJBQW1CLHlCQUF5QixFQUFFLG1CQUFtQixtQkFBbUIsZUFBZSxtQkFBbUIsMEJBQTBCLHdCQUF3QixFQUFFLG1CQUFtQixtQkFBbUIsRUFBRSxxQkFBcUIsbUJBQW1CLG1CQUFtQixtQkFBbUIsdUJBQXVCLDhFQUE4RSxrQ0FBa0MsSUFBSSw4RkFBOEYsaUJBQWlCLHdFQUF3RSwwQkFBMEIsNkRBQTZELG1CQUFtQiw2REFBNkQsNkNBQTZDLGlCQUFpQixhQUFhLDRCQUE0QixpQkFBaUIseUNBQXlDLGlGQUFpRixVQUFVLElBQUksS0FBSyxXQUFXLEVBQUUsaUVBQWlFLGFBQWEsMkRBQTJELDZDQUE2QyxpQkFBaUIsb0JBQW9CLGNBQWMsSUFBSSwyQkFBMkIsNENBQTRDLHFFQUFxRSw4Q0FBOEMsUUFBUSxJQUFJLE9BQU8sNEJBQTRCLDREQUE0RCxrQkFBa0IsMkRBQTJELDZCQUE2QixtQkFBbUIsSUFBSSw4RkFBOEYsNERBQTRELDhCQUE4Qiw0QkFBNEIsU0FBUyxzQ0FBc0MsaUJBQWlCLGFBQWEseUJBQXlCLHFEQUFxRCxnQkFBZ0IsRUFBRSw0RUFBNEUsTUFBTSxJQUFJLFdBQVcsU0FBUyxtRUFBbUUsUUFBUSxzQkFBc0IsMktBQTJLLGNBQWMsbUVBQW1FLGdFQUFnRSxXQUFXLE1BQU0sY0FBYyxJQUFJLGFBQWEsR0FBRywra0JBQStrQix3QkFBd0IsYUFBYSxzRkFBc0YscUNBQXFDLGtCQUFrQix5QkFBeUIsWUFBWSxxRUFBcUUsUUFBUSx3RUFBd0UsVUFBVSw4RkFBOEYsc0xBQXNMLElBQUksNEJBQTRCLG1CQUFtQixlQUFlLEVBQUUsK0JBQStCLG1CQUFtQiwyQkFBMkIsbUJBQW1CLGNBQWMsRUFBRSxnQ0FBZ0MsbUJBQW1CLG1CQUFtQixFQUFFLFNBQVMscURBQXFELGFBQWEsc0lBQXNJLDJEQUEyRCxnREFBZ0QscUNBQXFDLFFBQVEsR0FBRyxVQUFVLHFEQUFxRCx3QkFBd0IsUUFBUSxJQUFJLHlDQUF5QyxpQkFBaUIsOEVBQThFLFNBQVMscUJBQXFCLFlBQVksNkJBQTZCLGFBQWEsd0JBQXdCLDZDQUE2QyxvQkFBb0IsZUFBZSxpWUFBaVkseURBQXlELGtHQUFrRyw4QkFBOEIsMENBQTBDLDZDQUE2QyxxSUFBcUksd0JBQXdCLHFDQUFxQyxZQUFZLG1CQUFtQixpQkFBaUIscUhBQXFILGVBQWUsd0hBQXdILEdBQUcsV0FBVyw2Q0FBNkMsNENBQTRDLDJCQUEyQixhQUFhLGlKQUFpSixFQUFFLGtDQUFrQyxjQUFjLHVCQUF1QixXQUFXLHVCQUF1QixXQUFXLHdCQUF3QixZQUFZLGFBQWEsMkdBQTJHLHlEQUF5RCxzSEFBc0gsT0FBTyxZQUFZLG9CQUFvQixpQkFBaUIsZ0dBQWdHLEdBQUcsWUFBWSxtQkFBbUIsTUFBTSxtQkFBbUIsWUFBWSxpQkFBaUIsMENBQTBDLGdGQUFnRixPQUFPLE1BQU0sYUFBYSxrREFBa0QsSUFBSSxhQUFhLHFDQUFxQyx1Q0FBdUMsaUJBQWlCLFNBQVMsb0JBQW9CLHNCQUFzQixxQkFBcUIsVUFBVSx3QkFBd0IsMEJBQTBCLHlCQUF5QixVQUFVLDZCQUE2QixTQUFTLDhCQUE4QiwyQ0FBMkMsSUFBSSxlQUFlLGlCQUFpQixjQUFjLFNBQVMsc0JBQXNCLHdCQUF3Qix1QkFBdUIseUJBQXlCLHdCQUF3QixTQUFTLHlCQUF5QiwySkFBMkosa0JBQWtCLFNBQVMsWUFBWSxlQUFlLDROQUE0TixXQUFXLFFBQVEsOERBQThELHFCQUFxQixtSUFBbUksYUFBYSxvQkFBb0IsNEJBQTRCLHlDQUF5QyxpQkFBaUIsc0NBQXNDLHNFQUFzRSxxQkFBcUIsb0JBQW9CLG9DQUFvQyxzQ0FBc0MsRUFBRSxXQUFXLDJDQUEyQyxrQkFBa0IsNEtBQTRLLDJCQUEyQixXQUFXLHFCQUFxQixlQUFlLHVDQUF1QyxzQkFBc0Isc0NBQXNDLE1BQU0sZ0JBQWdCLG9CQUFvQixjQUFjLE9BQU8sSUFBSSx5QkFBeUIsb0JBQW9CLE9BQU8sSUFBSSx5QkFBeUIsa0JBQWtCLE9BQU8sZ0JBQWdCLE9BQU8sb0JBQW9CLFdBQVcsaUJBQWlCLDhJQUE4SSxPQUFPLEtBQUssK0JBQStCLEtBQUssRUFBRSxTQUFTLGFBQWEscUNBQXFDLGdCQUFnQixvQkFBb0IsTUFBTSxhQUFhLFlBQVksT0FBTywyQkFBMkIsU0FBUyxXQUFXLG1CQUFtQiw2QkFBNkIsSUFBSSxhQUFhLGFBQWEsWUFBWSxJQUFJLFFBQVEsWUFBWSxtQkFBbUIsaUJBQWlCLGlCQUFpQixzQkFBc0IsbUVBQW1FLE9BQU8sTUFBTSxnQkFBZ0IsR0FBRyxZQUFZLG1CQUFtQixpQkFBaUIsT0FBTyw2REFBNkQsSUFBSSx1QkFBdUIsdUNBQXVDLGlCQUFpQiw2RkFBNkYseUVBQXlFLElBQUksZ0JBQWdCLG9CQUFvQixNQUFNLFlBQVksT0FBTyx3QkFBd0IsU0FBUyxTQUFTLHNEQUFzRCxvRUFBb0UsR0FBRyxPQUFPLFlBQVksbUJBQW1CLE1BQU0sc0JBQXNCLFlBQVksaUJBQWlCLDZDQUE2QyxvQ0FBb0Msc0NBQXNDLFlBQVksSUFBSSxNQUFNLGFBQWEsZ0NBQWdDLGdEQUFnRCxVQUFVLFNBQVMsYUFBYSxtRkFBbUYsbURBQW1ELGdDQUFnQyxxQkFBcUIsTUFBTSxzQ0FBc0MsZ0JBQWdCLG9CQUFvQixNQUFNLGFBQWEsWUFBWSxPQUFPLHdCQUF3QixTQUFTLEtBQUssUUFBUSxrQkFBa0IsR0FBRywwRUFBMEUsZ0JBQWdCLCtCQUErQixXQUFXLDhCQUE4QixjQUFjLGdDQUFnQyxXQUFXLG1CQUFtQiw0QkFBNEIsV0FBVyxtQkFBbUIsa0JBQWtCLDZKQUE2SixvREFBb0QsNEJBQTRCLG1JQUFtSSxhQUFhLG9CQUFvQiw0QkFBNEIsNkNBQTZDLE1BQU0sd0JBQXdCLCtCQUErQixLQUFLLEdBQUcsaUJBQWlCLGtEQUFrRCwwREFBMEQsNEJBQTRCLG9CQUFvQixvQ0FBb0MsNERBQTRELHlCQUF5QixhQUFhLG1GQUFtRixFQUFFLG9HQUFvRyxTQUFTLFNBQVMseUJBQXlCLFFBQVEsUUFBUSx3QkFBd0IsV0FBVyxNQUFNLFFBQVEsb0JBQW9CLElBQUksaUJBQWlCLFFBQVEsV0FBVyxnQkFBZ0IsbUVBQW1FLG9CQUFvQixXQUFXLE9BQU8sWUFBWSxPQUFPLGlCQUFpQixtREFBbUQsa0JBQWtCLDJHQUEyRyxhQUFhLHdDQUF3QyxzSEFBc0gsT0FBTyxZQUFZLG9CQUFvQixpQkFBaUIsZ0dBQWdHLEdBQUcsYUFBYSxxSEFBcUgsRUFBRSwrREFBK0QsdUJBQXVCLHNDQUFzQyxhQUFhLG9FQUFvRSxtRkFBbUYsNEhBQTRILDRFQUE0RSxZQUFZLG1CQUFtQixpQkFBaUIscUhBQXFILGVBQWUsd0hBQXdILEdBQUcsMkVBQTJFLGFBQWEsMkZBQTJGLEVBQUUsK0JBQStCLFdBQVcsMkdBQTJHLEVBQUUsWUFBWSxtQkFBbUIsTUFBTSxtQkFBbUIsWUFBWSxpQkFBaUIsMENBQTBDLDJEQUEyRCw4RUFBOEUsdUNBQXVDLHVCQUF1QixnSUFBZ0ksWUFBWSwrQ0FBK0MsZ0JBQWdCLG9CQUFvQixNQUFNLGFBQWEsWUFBWSxPQUFPLHdCQUF3QixRQUFRLFNBQVMsOEVBQThFLDhFQUE4RSx3QkFBd0IsU0FBUywwRkFBMEYsV0FBVyw0REFBNEQsbUJBQW1CLE1BQU0sNEJBQTRCLG9KQUFvSix5QkFBeUIsVUFBVSxJQUFJLFdBQVcsRUFBRSxLQUFLLE1BQU0sZ0JBQWdCLG9CQUFvQixJQUFJLGlCQUFpQixRQUFRLHFCQUFxQixLQUFLLHlJQUF5SSw4QkFBOEIsV0FBVyw4QkFBOEIsb0JBQW9CLGNBQWMsc0dBQXNHLE1BQU0sZUFBZSxTQUFTLE9BQU8sdUJBQXVCLDhCQUE4Qix3QkFBd0IsNENBQTRDLGdEQUFnRCxzREFBc0QsMkNBQTJDLGlCQUFpQix3RkFBd0YsV0FBVywwQ0FBMEMsc0VBQXNFLG1GQUFtRixJQUFJLG9CQUFvQixTQUFTLG9DQUFvQyxTQUFTLHVTQUF1UyxtQkFBbUIsTUFBTSxpREFBaUQsMENBQTBDLEtBQUssNkVBQTZFLElBQUksTUFBTSx5Q0FBeUMsRUFBRSxXQUFXLFlBQVksMERBQTBELFFBQVEsWUFBWSw4SUFBOEksU0FBUyxrRkFBa0YsYUFBYSwyR0FBMkcsWUFBWSw0RUFBNEUsaUJBQWlCLDJJQUEySSx5QkFBeUIsSUFBSSw4QkFBOEIsMEhBQTBILGlDQUFpQyxpQkFBaUIsa0JBQWtCLCtGQUErRixpQkFBaUIsa0JBQWtCLGtPQUFrTyxxQkFBcUIsaURBQWlELHFDQUFxQyw0QkFBNEIsSUFBSSx5QkFBeUIsTUFBTSxTQUFTLFNBQVMsZUFBZSxxQkFBcUIsNkRBQTZELGlDQUFpQyxJQUFJLFVBQVUsT0FBTyxTQUFTLGVBQWUsdUNBQXVDLHlCQUF5Qix3QkFBd0IsU0FBUyxZQUFZLHdEQUF3RCxNQUFNLElBQUksZ0NBQWdDLEtBQUssU0FBUyxLQUFLLHVCQUF1QixHQUFHLGVBQWUscUJBQXFCLE1BQU0sSUFBSSxTQUFTLHVCQUF1QixFQUFFLE1BQU0sU0FBUyxvQkFBb0IsZUFBZSxxQkFBcUIseURBQXlELHlCQUF5Qix3QkFBd0IscUJBQXFCLHFCQUFxQiwyQkFBMkIsc0NBQXNDLGNBQWMsUUFBUSwwQkFBMEIsU0FBUyxpQkFBaUIsaUJBQWlCLFdBQVcsMEJBQTBCLFVBQVUsS0FBSyw0QkFBNEIsOEJBQThCLGVBQWUscUVBQXFFLFNBQVMsSUFBSSxrQ0FBa0MscUJBQXFCLGtCQUFrQix5QkFBeUIsdUJBQXVCLCtEQUErRCx1R0FBdUcsb0JBQW9CLE9BQU8sbUNBQW1DLEdBQUcsT0FBTyxRQUFRLHVDQUF1QyxTQUFTLGtCQUFrQixxQkFBcUIsK0NBQStDLHVDQUF1QyxJQUFJLGlCQUFpQixNQUFNLFNBQVMsU0FBUyxlQUFlLHFCQUFxQix5QkFBeUIsNEdBQTRHLGVBQWUscUJBQXFCLCtDQUErQywwQ0FBMEMsSUFBSSwwQ0FBMEMsTUFBTSxTQUFTLFNBQVMsZUFBZSxxQkFBcUIsMkNBQTJDLElBQUksaUJBQWlCLE1BQU0sU0FBUyxTQUFTLDZFQUE2RSxxQkFBcUIsY0FBYyxJQUFJLHFEQUFxRCxTQUFTLFNBQVMsUUFBUSxXQUFXLGVBQWUsdUNBQXVDLHlCQUF5Qiw0REFBNEQsOERBQThELDBEQUEwRCxpS0FBaUssVUFBVSxlQUFlLGtCQUFrQixlQUFlLGtCQUFrQixlQUFlLDJCQUEyQixlQUFlLHlCQUF5QixlQUFlLG9GQUFvRixlQUFlLDBCQUEwQixlQUFlLHdCQUF3QixlQUFlLHlCQUF5QixlQUFlLHVCQUF1QixFQUFFLG1DQUFtQyxpQkFBaUIseUJBQXlCLHVCQUF1QiwrREFBK0QsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEdBQUcsZUFBZSxvSUFBb0ksZ0JBQWdCLGVBQWUsS0FBSyxlQUFlLGtMQUFrTCxlQUFlLGVBQWUsS0FBSyxrQkFBa0IsYUFBYSxrQkFBa0IsY0FBYyw2SEFBNkgscUJBQXFCLG1GQUFtRiw2RkFBNkYsMEJBQTBCLEtBQUssb0RBQW9ELDhDQUE4QyxxQkFBcUIsMENBQTBDLGNBQWMsSUFBSSxhQUFhLFNBQVMsTUFBTSxjQUFjLElBQUksY0FBYyxTQUFTLE1BQU0sY0FBYyxNQUFNLGlFQUFpRSxLQUFLLGNBQWMsK0JBQStCLEdBQUcsZ0ZBQWdGLFNBQVMscUJBQXFCLGtJQUFrSSxnQkFBZ0IsbUZBQW1GLHVDQUF1QyxvRUFBb0UsMkNBQTJDLFVBQVUsNkdBQTZHLHdDQUF3QyxtQ0FBbUMsU0FBUyw2Q0FBNkMsWUFBWSx1QkFBdUIsMkNBQTJDLHFEQUFxRCxpQkFBaUIsK0JBQStCLHVDQUF1Qyw0QkFBNEIsZUFBZSw2QkFBNkIscUJBQXFCLFNBQVMseUNBQXlDLGtEQUFrRCxnQkFBZ0IsZ0hBQWdILHFCQUFxQiw0QkFBNEIsc0JBQXNCLE1BQU0sbUtBQW1LLFdBQVcsa0JBQWtCLFlBQVksc0RBQXNELFVBQVUsc0JBQXNCLGVBQWUsYUFBYSxlQUFlLGFBQWEsZUFBZSxhQUFhLGVBQWUsYUFBYSxpQkFBaUIsNkNBQTZDLHVCQUF1QixJQUFJLG9CQUFvQixzQkFBc0Isa0JBQWtCLHVGQUF1RixPQUFPLGtDQUFrQyxTQUFTLEVBQUUsa0JBQWtCLHdCQUF3QixVQUFVLGlCQUFpQiw2RkFBNkYsU0FBUyx5RUFBeUUsaUJBQWlCLFdBQVcsNkJBQTZCLGVBQWUsaUJBQWlCLGlCQUFpQixpQkFBaUIsc0JBQXNCLDhCQUE4QixLQUFLLFNBQVMsY0FBYyxtQ0FBbUMscUJBQXFCLFNBQVMsVUFBVSx1RUFBdUUsVUFBVSxpQ0FBaUMsZUFBZSx5QkFBeUIsV0FBVyxrQkFBa0IsYUFBYSxjQUFjLGlCQUFpQixjQUFjLGlCQUFpQix3QkFBd0IsaUJBQWlCLGNBQWMsaUJBQWlCLHdCQUF3QixtQkFBbUIsaUNBQWlDLG9CQUFvQixjQUFjLCtDQUErQyxrREFBa0Qsa0RBQWtELHFCQUFxQixPQUFPLDBCQUEwQixhQUFhLDZCQUE2QixPQUFPLGlJQUFpSSxzQ0FBc0MsaUhBQWlILEtBQUssNkJBQTZCLCtCQUErQiw0QkFBNEIsZ0NBQWdDLDJCQUEyQixZQUFZLFVBQVUsa0NBQWtDLDhDQUE4QyxnQkFBZ0IsMEJBQTBCLG9DQUFvQyxPQUFPLHlCQUF5QixRQUFRLDhCQUE4QixxQkFBcUIsMEJBQTBCLDBEQUEwRCxhQUFhLDhCQUE4Qiw4REFBOEQsd0JBQXdCLHVDQUF1QyxVQUFVLDRCQUE0QixzQkFBc0IseUNBQXlDLFlBQVksbUNBQW1DLFFBQVEseUNBQXlDLGdEQUFnRCx1QkFBdUIsa0ZBQWtGLFlBQVksZ0JBQWdCLHdCQUF3Qiw2REFBNkQsaUJBQWlCLGtDQUFrQyxvQ0FBb0Msb0JBQW9CLHNDQUFzQyxRQUFRLDhCQUE4QixRQUFRLDZDQUE2QyxLQUFLLElBQUksRUFBRSw0QkFBNEIsZ0RBQWdELGVBQWUsWUFBWSxvREFBb0QsUUFBUSxTQUFTLG1DQUFtQyxxQkFBcUIsU0FBUywwQ0FBMEMsdUNBQXVDLFdBQVcsNkJBQTZCLG1CQUFtQix3QkFBd0Isd0NBQXdDLGtCQUFrQix3QkFBd0IsaUNBQWlDLHNCQUFzQix3Q0FBd0Msb0pBQW9KLGlCQUFpQixzQkFBc0IsS0FBSyxnQ0FBZ0MsS0FBSyxpQ0FBaUMsbUJBQW1CLHdCQUF3Qix5Q0FBeUMsUUFBUSxZQUFZLG1DQUFtQyxRQUFRLG1CQUFtQixLQUFLLE9BQU8sWUFBWSxVQUFVLCtDQUErQyxZQUFZLGVBQWUsV0FBVyxZQUFZLGVBQWUsV0FBVyxvQkFBb0IsY0FBYyx3Q0FBd0MsUUFBUSxtQ0FBbUMsa0NBQWtDLCtFQUErRSxRQUFRLFVBQVUsaUJBQWlCLHVCQUF1Qix5QkFBeUIsU0FBUyxtQ0FBbUMscUNBQXFDLDZEQUE2RCxLQUFLLHdCQUF3QixxQkFBcUIsS0FBSyw2QkFBNkIsUUFBUSxhQUFhLGlEQUFpRCxpQ0FBaUMsdUJBQXVCLElBQUksdUJBQXVCLFlBQVksZ0JBQWdCLHdDQUF3Qyx3REFBd0QsdUNBQXVDLEdBQUcsVUFBVSxpREFBaUQsb0JBQW9CLGNBQWMsc0NBQXNDLFNBQVMsVUFBVSxvQkFBb0IsY0FBYyxRQUFRLG9MQUFvTCxtREFBbUQsZ0pBQWdKLGlCQUFpQixFQUFFLDBCQUEwQiwwTkFBME4sb0NBQW9DLDRIQUE0SCxxQkFBcUIsT0FBTyxnRkFBZ0YsYUFBYSxNQUFNLG1GQUFtRixpQkFBaUIsc0NBQXNDLG1CQUFtQix3Q0FBd0MscUJBQXFCLDBDQUEwQyxxQkFBcUIsMENBQTBDLG9CQUFvQix5Q0FBeUMsdUJBQXVCLDRDQUE0Qyx5QkFBeUIsOENBQThDLHVCQUF1Qiw0Q0FBNEMsa0JBQWtCLHVDQUF1QyxlQUFlLG9DQUFvQywyQkFBMkIsZ0RBQWdELGFBQWEsa0NBQWtDLHFCQUFxQiwwQ0FBMEMsZUFBZSxvQ0FBb0MsMEJBQTBCLCtDQUErQyxxQkFBcUIsMENBQTBDLG1CQUFtQix3Q0FBd0MsMkJBQTJCLDZHQUE2Ryw0QkFBNEIsOEdBQThHLCtCQUErQixpSEFBaUgsbUJBQW1CLHdDQUF3QyxrQkFBa0IsaUNBQWlDLFlBQVksMkJBQTJCLGlCQUFpQixnQ0FBZ0MsZUFBZSx3Q0FBd0MsZ0JBQWdCLDJGQUEyRixnQkFBZ0IseUNBQXlDLGlCQUFpQiw2RkFBNkYsV0FBVyxvQ0FBb0MsWUFBWSwrRUFBK0Usa0JBQWtCLDJDQUEyQyxtQkFBbUIsaUdBQWlHLDRCQUE0Qix1QkFBdUIsZ0dBQWdHLHNCQUFzQix5QkFBeUIsMENBQTBDLHFPQUFxTyxHQUFHLG1CQUFtQiwwQ0FBMEMsb0VBQW9FLEdBQUcscUJBQXFCLG1DQUFtQyxzQkFBc0IsOEJBQThCLGtCQUFrQix5QkFBeUIsbUJBQW1CLG9CQUFvQixnQkFBZ0IsdUJBQXVCLGlCQUFpQixnREFBZ0Qsa0JBQWtCLHlCQUF5QixpQkFBaUIscUJBQXFCLE1BQU0saURBQWlELFlBQVksaUNBQWlDLFNBQVMsa0VBQWtFLFFBQVEsMENBQTBDLE1BQU0scUtBQXFLLEdBQUcsZUFBZSx5REFBeUQseUZBQXlGLFlBQVksV0FBVyxXQUFXLDJDQUEyQyxrSEFBa0gsVUFBVSxnS0FBZ0ssZUFBZSxtQkFBbUIsNEJBQTRCLEtBQUssb0NBQW9DLDZEQUE2RCxnQkFBZ0IsbUJBQW1CLG1CQUFtQiwyQkFBMkIsd0NBQXdDLG1CQUFtQixnQkFBZ0IsbUNBQW1DLG1DQUFtQyxRQUFRLGlCQUFpQiw0QkFBNEIsaUJBQWlCLGtDQUFrQyxtQkFBbUIsb0JBQW9CLGNBQWMsUUFBUSxlQUFlLEdBQUcsY0FBYyxpQkFBaUIseURBQXlELDBCQUEwQixFQUFFLGlCQUFpQix5REFBeUQsWUFBWSxFQUFFLGdCQUFnQixvQkFBb0IsY0FBYyxtREFBbUQsa0VBQWtFLCtHQUErRyxxQkFBcUIsT0FBTyxpQ0FBaUMsaUJBQWlCLDREQUE0RCxPQUFPLG1FQUFtRSw4QkFBOEIscURBQXFELE1BQU0sb0JBQW9CLFFBQVEsMENBQTBDLDZCQUE2Qiw4QkFBOEIsR0FBRyxxQkFBcUIsSUFBSSxRQUFRLFFBQVEsZ0NBQWdDLHlCQUF5QixZQUFZLEdBQUcsVUFBVSxnREFBZ0QsYUFBYSxnSUFBZ0ksWUFBWSxJQUFJLDRCQUE0QiwyQkFBMkIsVUFBVSx5Q0FBeUMsS0FBSyxvQ0FBb0MsOEJBQThCLFlBQVksSUFBSSxLQUFLLHdCQUF3QixZQUFZLFdBQVcsZUFBZSxvQ0FBb0MsWUFBWSxXQUFXLHVDQUF1QyxxREFBcUQsV0FBVyxZQUFZLHdCQUF3QixnQ0FBZ0MsVUFBVSxrQkFBa0IsdUVBQXVFLHlCQUF5Qix1Q0FBdUMsc0VBQXNFLHdEQUF3RCx5RUFBeUUsWUFBWSx3QkFBd0IsNERBQTRELGlCQUFpQixXQUFXLDJCQUEyQix3QkFBd0IscUNBQXFDLFlBQVksYUFBYSxxQkFBcUIsZUFBZSw0Q0FBNEMsYUFBYSwwQ0FBMEMsdUJBQXVCLG9EQUFvRCxjQUFjLHNCQUFzQixlQUFlLHVEQUF1RCxvQkFBb0IsNEJBQTRCLGtCQUFrQiwwQ0FBMEMsZUFBZSx1QkFBdUIsR0FBRyxlQUFlLDBDQUEwQyx1Q0FBdUMsTUFBTSx3QkFBd0IsV0FBVyx3Q0FBd0MsSUFBSSxNQUFNLG9CQUFvQiwwR0FBMEcsdUZBQXVGLDRCQUE0QixnREFBZ0QsRUFBRSxHQUFHLDhCQUE4QixxQ0FBcUMsR0FBRyx1QkFBdUIscUNBQXFDLG1FQUFtRSxnQkFBZ0IsMENBQTBDLDRCQUE0QixvQkFBb0IsdUJBQXVCLElBQUksOEJBQThCLG9CQUFvQixjQUFjLFVBQVUsT0FBTywrTkFBK04sNEpBQTRKLE1BQU0seUJBQXlCLGtCQUFrQix5QkFBeUIsZ0JBQWdCLDBDQUEwQyxRQUFRLEtBQUssb0NBQW9DLEVBQUUsNkRBQTZELHdDQUF3QyxzREFBc0QsR0FBRyxhQUFhLDBDQUEwQyx5REFBeUQsNkNBQTZDLGlCQUFpQixHQUFHLFFBQVEsMEJBQTBCLDhCQUE4QixjQUFjLDBFQUEwRSxpQkFBaUIsU0FBUyxtQkFBbUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxvQkFBb0IsU0FBUyx1QkFBdUIsU0FBUyx5QkFBeUIsU0FBUyx1QkFBdUIsU0FBUyxrQkFBa0IsU0FBUyxlQUFlLFNBQVMsMkJBQTJCLFNBQVMsYUFBYSxTQUFTLHFCQUFxQixTQUFTLGVBQWUsU0FBUywwQkFBMEIsU0FBUyxxQkFBcUIsU0FBUyxtQkFBbUIsU0FBUywyQkFBMkIsU0FBUyw0QkFBNEIsU0FBUywrQkFBK0IsU0FBUyxtQkFBbUIseUJBQXlCLEVBQUUsNEJBQTRCLFNBQVMsaUJBQWlCLFNBQVMseUJBQXlCLDBDQUEwQyx5QkFBeUIsR0FBRyxTQUFTLHlCQUF5QixnQkFBZ0IsU0FBUyxnQkFBZ0IsWUFBWSxpQkFBaUIsU0FBUyxpQkFBaUIsWUFBWSxlQUFlLFNBQVMsa0JBQWtCLFNBQVMsWUFBWSxTQUFTLGlCQUFpQixTQUFTLGVBQWUsU0FBUyxnQkFBZ0IsU0FBUyxXQUFXLFNBQVMsYUFBYSxrQkFBa0IsU0FBUyxvQkFBb0IsTUFBTSxTQUFTLFlBQVksV0FBVyxVQUFVLGNBQWMsa0NBQWtDLG9CQUFvQixxREFBcUQsY0FBYyxtQkFBbUIsaUNBQWlDLFVBQVUsa0JBQWtCLHNCQUFzQixFQUFFLEVBQUUsR0FBRyxJQUFJLGlCQUFpQixFQUFFLHFCQUFxQixjQUFjLGVBQWUseUJBQXlCLGVBQWUsZ0NBQWdDLGVBQWUsd0JBQXdCLFdBQVcsZUFBZSx5QkFBeUIsZUFBZSw2QkFBNkIsZUFBZSxnQ0FBZ0Msb0JBQW9CLG1CQUFtQixnSEFBZ0gsa0JBQWtCLE9BQU8sSUFBSSw4RUFBOEUsSUFBSSxnRUFBZ0UsSUFBSSx5RkFBeUYsSUFBSSxlQUFlLHVDQUF1QyxzRkFBc0YseUJBQXlCLFNBQVMsOEZBQThGLElBQUksMEVBQTBFLFVBQVUseUVBQXlFLElBQUksV0FBVyx1QkFBdUIsK0NBQStDLG9CQUFvQixLQUFLLGlCQUFpQixRQUFRLDZMQUE2TCxnRUFBZ0UsVUFBVSx3RkFBd0YsbUNBQW1DLHdGQUF3RixjQUFjLE9BQU8sdUJBQXVCLFFBQVEsOENBQThDLHFCQUFxQixvREFBb0QsU0FBUyxvQkFBb0IscUZBQXFGLHVFQUF1RSxxREFBcUQscUJBQXFCLFdBQVcsaUJBQWlCLDJCQUEyQixtQkFBbUIsU0FBUyxpQkFBaUIsOENBQThDLFNBQVMsbUJBQW1CLFVBQVUsd0NBQXdDLG9CQUFvQiw0Q0FBNEMsVUFBVSxrQ0FBa0MsWUFBWSw2Q0FBNkMsZ0NBQWdDLE1BQU0sOEJBQThCLE1BQU0sbUNBQW1DLE1BQU0sZ0NBQWdDLFlBQVksY0FBYywwQkFBMEIsWUFBWSxnREFBZ0QsaUJBQWlCLDZCQUE2QixvQkFBb0IsY0FBYywwQ0FBMEMsa0JBQWtCLDhDQUE4QyxLQUFLLHNGQUFzRixXQUFXLFdBQVcseUNBQXlDLHVFQUF1RSxrQkFBa0IsRUFBRSxnQkFBZ0Isd0VBQXdFLGlDQUFpQyxhQUFhLGtDQUFrQyxZQUFZLElBQUksS0FBSyxzQkFBc0IsMkNBQTJDLFlBQVksbURBQW1ELHNCQUFzQiwyQ0FBMkMsdUNBQXVDLEtBQUssd0JBQXdCLDhCQUE4Qix1QkFBdUIsMkJBQTJCLCtDQUErQyxZQUFZLHlDQUF5QyxxQkFBcUIsOEVBQThFLFVBQVUsOEJBQThCLHVDQUF1QyxZQUFZLHNCQUFzQixTQUFTLDhCQUE4QixPQUFPLDJCQUEyQixpQkFBaUIsd0JBQXdCLG9CQUFvQixjQUFjLGlFQUFpRSxnQkFBZ0IsVUFBVSxpQkFBaUIsYUFBYSxLQUFLLElBQUksa0JBQWtCLHVCQUF1QiwwQkFBMEIsTUFBTSx3Q0FBd0MsK0NBQStDLE9BQU8sZ0JBQWdCLEVBQUUsd0RBQXdELGtEQUFrRCwrQ0FBK0MsS0FBSywwRUFBMEUsUUFBUSwrTEFBK0wsRUFBRSxhQUFhLGlEQUFpRCxhQUFhLHFDQUFxQyxTQUFTLDBCQUEwQixTQUFTLGdEQUFnRCwwQkFBMEIseUJBQXlCLDZDQUE2QyxZQUFZLDJCQUEyQixVQUFVLGlEQUFpRCxvQ0FBb0MsU0FBUyxTQUFTLHFCQUFxQixTQUFTLGlCQUFpQixnREFBZ0QsaUJBQWlCLGdDQUFnQyxtQkFBbUIsV0FBVyxlQUFlLGFBQWEsZUFBZSxjQUFjLFVBQVUsMGVBQTBlLDJEQUEyRCxpQkFBaUIsd0JBQXdCLG9CQUFvQixjQUFjLDhDQUE4QyxPQUFPLHVDQUF1QyxpQkFBaUIsd0JBQXdCLG9CQUFvQixjQUFjLFFBQVEsbURBQW1ELDRFQUE0RSxxQkFBcUIsT0FBTyxjQUFjLE1BQU0sdURBQXVELFlBQVksZ0NBQWdDLGlCQUFpQixpQ0FBaUMsZ0JBQWdCLG1DQUFtQyxhQUFhLGdEQUFnRCxlQUFlLDRDQUE0QyxXQUFXLHdDQUF3Qyx5QkFBeUIsbUJBQW1CLG1DQUFtQyxzQkFBc0IsS0FBSyxNQUFNLHVDQUF1QyxtQ0FBbUMsd0JBQXdCLGdCQUFnQix3SkFBd0osS0FBSyxPQUFPLG1DQUFtQywwTEFBMEwsU0FBUyxvQkFBb0IseUJBQXlCLHVGQUF1RixrQkFBa0Isb0JBQW9CLHNDQUFzQyxzQkFBc0Isd0NBQXdDLElBQUksZUFBZSxRQUFRLGtCQUFrQiwwQkFBMEIsS0FBSyxLQUFLLDBCQUEwQix5QkFBeUIsa0JBQWtCLHdCQUF3QixzQkFBc0Isd0JBQXdCLEtBQUssMEJBQTBCLDBCQUEwQixvQkFBb0IsY0FBYyw0SEFBNEgsbUVBQW1FLHdGQUF3RixhQUFhLHdCQUF3QixvYkFBb2IscUJBQXFCLHVDQUF1QywwQkFBMEIsRUFBRSxZQUFZLG1CQUFtQiw4QkFBOEIsYUFBYSx5RUFBeUUsZUFBZSxtVkFBbVYsZUFBZSxzSEFBc0gsU0FBUyxzQkFBc0IsZ0JBQWdCLGlIQUFpSCxhQUFhLDBLQUEwSyxXQUFXLHFEQUFxRCxvQkFBb0IsOENBQThDLDZFQUE2RSxrQkFBa0IsSUFBSSxrQkFBa0Isb0ZBQW9GLHFDQUFxQyx1Q0FBdUMsa0JBQWtCLHVGQUF1Rix5QkFBeUIsaUNBQWlDLDhGQUE4RixxRkFBcUYsY0FBYywrQkFBK0IsdUNBQXVDLHNDQUFzQyxnSkFBZ0osZUFBZSxLQUFLLHVDQUF1QyxNQUFNLCtIQUErSCx1QkFBdUIsZ0JBQWdCLG9CQUFvQiw2QkFBNkIsMEhBQTBILDZCQUE2Qiw4Q0FBOEMsc0ZBQXNGLGtCQUFrQixJQUFJLGtCQUFrQiwwQ0FBMEMsOENBQThDLG1HQUFtRyxrQ0FBa0Msd0JBQXdCLGlEQUFpRCwwQkFBMEIsMkZBQTJGLGtCQUFrQixJQUFJLGtCQUFrQixxQkFBcUIsbURBQW1ELDZHQUE2Ryx5QkFBeUIsOEdBQThHLG9CQUFvQix5R0FBeUcsb0JBQW9CLGdHQUFnRyxzQ0FBc0Msd0NBQXdDLG9DQUFvQyw2R0FBNkcsdUJBQXVCLDBCQUEwQixvRUFBb0UsMEJBQTBCLG1HQUFtRyxrQkFBa0IsSUFBSSxrQkFBa0IscUJBQXFCLGlEQUFpRCx1RkFBdUYsK0JBQStCLHdDQUF3QywrQkFBK0IsdUNBQXVDLHVCQUF1QixZQUFZLFdBQVcsS0FBSywrQkFBK0Isb0RBQW9ELFlBQVkseUJBQXlCLDBCQUEwQixvRUFBb0Usa0JBQWtCLG1IQUFtSCx1QkFBdUIsbUVBQW1FLDJEQUEyRCxrQkFBa0IsMkRBQTJELHVEQUF1RCwyYkFBMmIscUNBQXFDLHVDQUF1QyxpQkFBaUIsd0lBQXdJLFNBQVMsaUNBQWlDLDJDQUEyQyw0QkFBNEIsa0NBQWtDLGdFQUFnRSxZQUFZLElBQUkseURBQXlELCtEQUErRCxtS0FBbUssUUFBUSxZQUFZLG1GQUFtRixtQkFBbUIseUZBQXlGLFVBQVUsbURBQW1ELG1CQUFtQiw4Q0FBOEMsZ0NBQWdDLGtDQUFrQyw4QkFBOEIsMkJBQTJCLG1DQUFtQyxvQ0FBb0Msb0JBQW9CLGNBQWMsOENBQThDLHFCQUFxQiw2RkFBNkYsc0JBQXNCLHFEQUFxRCxnQkFBZ0IsdUNBQXVDLG9CQUFvQix3Q0FBd0MseUlBQXlJLHlCQUF5QixzQ0FBc0Msb0hBQW9ILEdBQUcsd0JBQXdCLGlDQUFpQyxnRUFBZ0UsYUFBYSxPQUFPLCtHQUErRyxtQkFBbUIsaURBQWlELG9CQUFvQixxQ0FBcUMsNENBQTRDLGVBQWUsR0FBRyx1QkFBdUIscURBQXFELHdCQUF3QixxQ0FBcUMsNENBQTRDLG1CQUFtQixHQUFHLDRCQUE0QiwwREFBMEQsNkJBQTZCLHFDQUFxQyw0Q0FBNEMsd0JBQXdCLEdBQUcsbUJBQW1CLDJCQUEyQixnQkFBZ0IsbURBQW1ELFdBQVcsOEVBQThFLHNCQUFzQiwyQkFBMkIsWUFBWSwwQkFBMEIsVUFBVSw0Q0FBNEMsVUFBVSw0UUFBNFEsa0JBQWtCLGtCQUFrQixxRUFBcUUseUJBQXlCLDRQQUE0UCxpQ0FBaUMsMEJBQTBCLEtBQUssZ0JBQWdCLDRCQUE0QixzQ0FBc0MseUJBQXlCLGNBQWMsZ0JBQWdCLFdBQVcsS0FBSyxPQUFPLDRCQUE0QixpRUFBaUUsa0JBQWtCLGdCQUFnQiwrQkFBK0Isb0JBQW9CLGNBQWMsc0tBQXNLLHdEQUF3RCxrQkFBa0Isb0lBQW9JLGtCQUFrQixxQkFBcUIsdUNBQXVDLCtCQUErQixFQUFFLFVBQVUsNkVBQTZFLG9CQUFvQixlQUFlLG1HQUFtRyw0QkFBNEIsNkRBQTZELDBCQUEwQiw2R0FBNkcsMEZBQTBGLHFCQUFxQix1Q0FBdUMsNkNBQTZDLEVBQUUsa0JBQWtCLG1FQUFtRSxxQ0FBcUMsNlRBQTZULFFBQVEsaUVBQWlFLGFBQWEsa0ZBQWtGLHNDQUFzQyxrWEFBa1gsMENBQTBDLCtDQUErQyxnREFBZ0QsV0FBVyxvRkFBb0YsMkJBQTJCLHFGQUFxRixZQUFZLHVDQUF1QyxhQUFhLDBOQUEwTixVQUFVLHNFQUFzRSxvQkFBb0IsY0FBYyxpSUFBaUksa0RBQWtELG9EQUFvRCxzSUFBc0ksRUFBRSxxQkFBcUIsdUNBQXVDLG1DQUFtQyxFQUFFLFNBQVMsMEJBQTBCLHlFQUF5RSxlQUFlLHFCQUFxQixVQUFVLGlIQUFpSCxvQkFBb0IsY0FBYyw0RkFBNEYseURBQXlELHlDQUF5Qyw0R0FBNEcsbUZBQW1GLHFCQUFxQix1Q0FBdUMsa0NBQWtDLEVBQUUsbUJBQW1CLDJCQUEyQixVQUFVLGlGQUFpRixvQkFBb0IsNENBQTRDLGtCQUFrQixxQ0FBcUMsZ0JBQWdCLHdDQUF3Qyw2QkFBNkIscURBQXFELGtDQUFrQywwREFBMEQseUJBQXlCLGlEQUFpRCxvQkFBb0IsNENBQTRDLG9CQUFvQiw0Q0FBNEMsc0NBQXNDLDhEQUE4RCx1QkFBdUIsK0NBQStDLDZCQUE2QixxREFBcUQseUJBQXlCLGlEQUFpRCx1QkFBdUIsK0NBQStDLGNBQWMsc0NBQXNDLFlBQVkseUJBQXlCLGFBQWEsb0JBQW9CLGNBQWMsMkJBQTJCLGVBQWUsc0JBQXNCLFlBQVkseUJBQXlCLGlCQUFpQiw4QkFBOEIsa0JBQWtCLHlCQUF5QixlQUFlLDRCQUE0QixlQUFlLDRCQUE0QixTQUFTLGtDQUFrQyxxQkFBcUIseUpBQXlKLG9CQUFvQixjQUFjLGtIQUFrSCxpREFBaUQsdUVBQXVFLG1FQUFtRSxpQ0FBaUMscUJBQXFCLHVDQUF1QyxtQ0FBbUMsRUFBRSx1QkFBdUIseUNBQXlDLDhFQUE4RSxZQUFZLEtBQUssS0FBSyxnRUFBZ0UsZ0RBQWdELFlBQVksb0JBQW9CLDBCQUEwQiwwQkFBMEIsNEZBQTRGLGtDQUFrQyw2QkFBNkIsMEJBQTBCLG1DQUFtQyw0RkFBNEYsa0NBQWtDLGtDQUFrQyxvQkFBb0IsdUdBQXVHLFlBQVksS0FBSyxLQUFLLHdFQUF3RSxnREFBZ0QsWUFBWSx5QkFBeUIsZUFBZSw4Q0FBOEMscUJBQXFCLHNDQUFzQywyQ0FBMkMsb0RBQW9ELDZDQUE2Qyw0QkFBNEIsd0lBQXdJLGtCQUFrQixnREFBZ0QsaURBQWlELHdCQUF3QixtREFBbUQsaUNBQWlDLGlCQUFpQix1RUFBdUUsZ0NBQWdDLGdFQUFnRSx1TEFBdUwsdUJBQXVCLHlFQUF5RSxpQkFBaUIsb0NBQW9DLGlCQUFpQix1RUFBdUUsa0NBQWtDLGFBQWEsc0ZBQXNGLFdBQVcsZ0ZBQWdGLGlCQUFpQix3QkFBd0Isa0JBQWtCLG1CQUFtQiwyRUFBMkUsb0JBQW9CLGNBQWMsdUVBQXVFLGlEQUFpRCwrQkFBK0IsNkhBQTZILEVBQUUscUJBQXFCLHVDQUF1QyxtQ0FBbUMsRUFBRSxpQkFBaUIsb0NBQW9DLGlCQUFpQixvQ0FBb0MsaUJBQWlCLG9DQUFvQyx3QkFBd0IsMkNBQTJDLGtCQUFrQixxQ0FBcUMsaUJBQWlCLDhCQUE4QixrQkFBa0IseUJBQXlCLFVBQVUsbURBQW1ELG9CQUFvQixjQUFjLDBLQUEwSyxxREFBcUQsdUJBQXVCLHFEQUFxRCx3RkFBd0YscUJBQXFCLHNCQUFzQiwwQkFBMEIsbUJBQW1CLFlBQVksdUNBQXVDLFdBQVcsMEJBQTBCLDBMQUEwTCxRQUFRLDBCQUEwQiw4Q0FBOEMsMkJBQTJCLDBFQUEwRSw2SkFBNkosU0FBUywwQkFBMEIseUpBQXlKLFVBQVUsMklBQTJJLGtCQUFrQixnR0FBZ0csdUJBQXVCLG1CQUFtQixnQ0FBZ0MsZ0VBQWdFLGFBQWEscUNBQXFDLGtMQUFrTCxrQ0FBa0MsT0FBTyx1REFBdUQsWUFBWSx1Q0FBdUMsYUFBYSxrQ0FBa0MsY0FBYyx5Q0FBeUMsZUFBZSxxREFBcUQseUJBQXlCLG9CQUFvQixvQkFBb0IsaURBQWlELHVCQUF1QixtQkFBbUIsbUNBQW1DLGtDQUFrQyxnRUFBZ0UsYUFBYSxxQ0FBcUMsc0hBQXNILG9DQUFvQyxPQUFPLHlEQUF5RCxvQkFBb0IsNEVBQTRFLDhEQUE4RCxpRUFBaUUsa0JBQWtCLHlEQUF5RCw4QkFBOEIsNEhBQTRILHVDQUF1QywwQkFBMEIseUJBQXlCLG9DQUFvQyxzSEFBc0gsR0FBRyxXQUFXLDJCQUEyQix3R0FBd0cscUJBQXFCLGNBQWMsd0NBQXdDLEtBQUssSUFBSSxFQUFFLElBQUksd0NBQXdDLFNBQVMsSUFBSSxNQUFNLDJDQUEyQyxhQUFhLFlBQVksVUFBVSxpS0FBaUssb0JBQW9CLGNBQWMseUxBQXlMLGdFQUFnRSxrREFBa0QseURBQXlELG9LQUFvSyxxQkFBcUIsdUNBQXVDLHNDQUFzQyxFQUFFLFlBQVksOENBQThDLFdBQVcsaUJBQWlCLDBCQUEwQiw0TEFBNEwsUUFBUSwwQkFBMEIsOEpBQThKLFNBQVMsMEJBQTBCLGtLQUFrSyxZQUFZLGtEQUFrRCxhQUFhLHlCQUF5QixjQUFjLGdDQUFnQyxlQUFlLDJCQUEyQixvQkFBb0IsNENBQTRDLG9CQUFvQixpREFBaUQsOEJBQThCLDJDQUEyQyxrQkFBa0IsMENBQTBDLGtCQUFrQixtREFBbUQsNkNBQTZDLFFBQVEsc0NBQXNDLG9GQUFvRixnQkFBZ0IsOERBQThELDRCQUE0QixNQUFNLG1EQUFtRCxNQUFNLHdDQUF3QyxvREFBb0QsbUJBQW1CLElBQUksa0JBQWtCLDBCQUEwQixxQ0FBcUMsVUFBVSx1SEFBdUgsYUFBYSxvQkFBb0IsY0FBYyxpRkFBaUYsNkZBQTZGLGlKQUFpSixzSEFBc0gsdUJBQXVCLHFCQUFxQix1Q0FBdUMsdUJBQXVCLEVBQUUsZUFBZSxzQkFBc0IsVUFBVSxtRkFBbUYsdUNBQXVDLDBDQUEwQyw2QkFBNkIsaUJBQWlCLG1CQUFtQixNQUFNLGdCQUFnQixpQkFBaUIsR0FBRyxvQkFBb0IsY0FBYyxnRkFBZ0YsMEVBQTBFLHdEQUF3RCxxQkFBcUIsa0JBQWtCLCtEQUErRCxHQUFHLHFCQUFxQixPQUFPLHlDQUF5QyxPQUFPLHVDQUF1QyxPQUFPLCtEQUErRCxFQUFFLG1DQUFtQyxpQkFBaUIsb0RBQW9ELGFBQWEsNERBQTRELG1CQUFtQixxTkFBcU4sVUFBVSwyRkFBMkYsb0JBQW9CLGNBQWMsbUVBQW1FLHFCQUFxQixzQ0FBc0MsaUJBQWlCLGtDQUFrQyxpQkFBaUIsa0NBQWtDLG1CQUFtQixvQ0FBb0MsU0FBUyxzQkFBc0IsY0FBYyx5QkFBeUIsYUFBYSw2Q0FBNkMsaUJBQWlCLHdCQUF3QixvQkFBb0IsY0FBYyw0REFBNEQsT0FBTyxvQ0FBb0MsaUJBQWlCLHdCQUF3QixtQkFBbUIsd0RBQXdELGlCQUFpQixTQUFTLFVBQVUsc0JBQXNCLFlBQVksMERBQTBELGlCQUFpQix3QkFBd0Isb0JBQW9CLGNBQWMsMEtBQTBLLGNBQWMseUJBQXlCLGtDQUFrQyxrR0FBa0csVUFBVSxtREFBbUQsWUFBWSxpQ0FBaUMsS0FBSyxtRUFBbUUsRUFBRSw2QkFBNkIsMkNBQTJDLHlGQUF5RixVQUFVLCtGQUErRixRQUFRLGVBQWUsVUFBVSxFQUFFLFdBQVcsaUJBQWlCLEdBQUcsb0JBQW9CLGNBQWMsZ0ZBQWdGLE9BQU8scUlBQXFJLHlDQUF5Qyx1RUFBdUUsU0FBUyw4REFBOEQsWUFBWSxVQUFVLHNCQUFzQixXQUFXLDRCQUE0QixpQ0FBaUMsbUNBQW1DLE9BQU8sWUFBWSxhQUFhLG9CQUFvQixVQUFVLG9EQUFvRCxZQUFZLHlEQUF5RCwwQkFBMEIsOEdBQThHLGVBQWUsbUVBQW1FLDJEQUEyRCwyREFBMkQsS0FBSyxhQUFhLHdFQUF3RSxLQUFLLG1CQUFtQixlQUFlLFdBQVcsMkVBQTJFLHdEQUF3RCxLQUFLLG1CQUFtQixjQUFjLFVBQVUsMkVBQTJFLHdHQUF3RyxZQUFZLGVBQWUsNkNBQTZDLDRFQUE0RSxnQkFBZ0IsNENBQTRDLDZFQUE2RSxjQUFjLHVCQUF1Qix1S0FBdUssT0FBTyxzQkFBc0IsV0FBVyxzQ0FBc0MsV0FBVyxZQUFZLFdBQVcsNkJBQTZCLGdCQUFnQixZQUFZLFdBQVcsc0JBQXNCLFdBQVcsbURBQW1ELG9CQUFvQixHQUFHLFlBQVksbUJBQW1CLHNCQUFzQixXQUFXLHNDQUFzQyxvQkFBb0IsR0FBRyxZQUFZLGlCQUFpQixzQkFBc0IsV0FBVywyQ0FBMkMsb0JBQW9CLEdBQUcsWUFBWSxVQUFVLHNHQUFzRyxTQUFTLG1CQUFtQix1SEFBdUgsVUFBVSxxSEFBcUgsWUFBWSxtSkFBbUosaUJBQWlCLHdIQUF3SCxZQUFZLDBGQUEwRixlQUFlLCtNQUErTSxZQUFZLGlKQUFpSixhQUFhLFFBQVEsc0tBQXNLLGNBQWMsbURBQW1ELFdBQVcsa0JBQWtCLFlBQVksNEVBQTRFLFlBQVksbUJBQW1CLGFBQWEsNkVBQTZFLFVBQVUsbUVBQW1FLG9CQUFvQixjQUFjLG9FQUFvRSxrREFBa0QsK0JBQStCLG9EQUFvRCwrRkFBK0YscUJBQXFCLHVDQUF1QyxpQkFBaUIsRUFBRSxXQUFXLGdDQUFnQyxZQUFZLG9JQUFvSSxVQUFVLHdFQUF3RSxvQkFBb0IsY0FBYyxpRkFBaUYscUJBQXFCLHNCQUFzQixxQkFBcUIsZ0NBQWdDLHVDQUF1QyxvS0FBb0sscUJBQXFCLHVDQUF1QyxpQkFBaUIsRUFBRSxXQUFXLHVCQUF1QixZQUFZLGtCQUFrQixZQUFZLHVGQUF1RixzQkFBc0IsMkRBQTJELFVBQVUsbURBQW1ELFFBQVEsc0JBQXNCLFVBQVUsRUFBRSxXQUFXLHdCQUF3QixHQUFHLG9CQUFvQixlQUFlLHlEQUF5RCxVQUFVLHVCQUF1QixTQUFTLDJCQUEyQixlQUFlLE9BQU8sT0FBTyw4QkFBOEIscUNBQXFDLG9CQUFvQixjQUFjLGlFQUFpRSxtQkFBbUIsNEJBQTRCLG9CQUFvQixjQUFjLCtMQUErTCw0REFBNEQsd0lBQXdJLHFCQUFxQix1Q0FBdUMsWUFBWSxFQUFFLGlCQUFpQiw0QkFBNEIsZ0JBQWdCLElBQUksS0FBSyxvQkFBb0IsWUFBWSx5QkFBeUIsWUFBWSwwQkFBMEIsYUFBYSxxQkFBcUIsaUJBQWlCLCtCQUErQixrQkFBa0IsOEhBQThILFVBQVUsdURBQXVELG9CQUFvQixjQUFjLCtFQUErRSxpREFBaUQsb0RBQW9ELGdFQUFnRSx5QkFBeUIscUJBQXFCLHVDQUF1QyxRQUFRLEVBQUUsWUFBWSxrQ0FBa0MsWUFBWSxzQkFBc0IsYUFBYSw0RUFBNEUsVUFBVSw0REFBNEQsU0FBUyxpQkFBaUIsNENBQTRDLDBDQUEwQyw4SEFBOEgscUJBQXFCLE9BQU8sNEJBQTRCLGdCQUFnQixxQ0FBcUMsVUFBVSxrQkFBa0IsbURBQW1ELGtGQUFrRixVQUFVLGtDQUFrQyxjQUFjLG9CQUFvQixpQkFBaUIsbUhBQW1ILDBDQUEwQywyUUFBMlEscUJBQXFCLHVCQUF1QixtQkFBbUIsZ0NBQWdDLEVBQUUsVUFBVSxzQ0FBc0MsZUFBZSw4SkFBOEosaUJBQWlCLCtPQUErTyxZQUFZLHVHQUF1Ryx5Q0FBeUMsaU5BQWlOLFVBQVUsdVBBQXVQLG9CQUFvQixjQUFjLDRJQUE0SSw4RkFBOEYsdUNBQXVDLG9DQUFvQyxtRkFBbUYsNk1BQTZNLHFCQUFxQix1Q0FBdUMsdUZBQXVGLEVBQUUsa0JBQWtCLDhRQUE4USw0RkFBNEYsMkRBQTJELCtEQUErRCxjQUFjLHFCQUFxQixpREFBaUQsRUFBRSx3Q0FBd0MsNEJBQTRCLHFCQUFxQixxSUFBcUksRUFBRSw4Q0FBOEMsa0JBQWtCLHFCQUFxQix5REFBeUQsRUFBRSx3Q0FBd0MsU0FBUyw0Q0FBNEMsNENBQTRDLHdGQUF3RixZQUFZLGVBQWUsK0NBQStDLG1CQUFtQixlQUFlLFlBQVksd0JBQXdCLDBIQUEwSCxtQkFBbUIsZ0NBQWdDLDREQUE0RCw4QkFBOEIsb0JBQW9CLCtCQUErQixxQkFBcUIsR0FBRyxZQUFZLDhDQUE4QyxXQUFXLE1BQU0sb0ZBQW9GLFFBQVEsZ0NBQWdDLFNBQVMsaUNBQWlDLFVBQVUscUdBQXFHLG9CQUFvQiwyQkFBMkIscUJBQXFCLDZDQUE2QyxnQkFBZ0IsNERBQTRELGlCQUFpQixnQ0FBZ0MsY0FBYywwREFBMEQsZUFBZSw4QkFBOEIsV0FBVyxrQ0FBa0MsWUFBWSw2QkFBNkIsbUJBQW1CLDRDQUE0QyxZQUFZLHlCQUF5QixhQUFhLG9CQUFvQix1QkFBdUIsMERBQTBELHdCQUF3QixpQ0FBaUMsZUFBZSxtREFBbUQsc0RBQXNELGdCQUFnQix3QkFBd0IsYUFBYSxjQUFjLDJCQUEyQixlQUFlLDREQUE0RCxhQUFhLGVBQWUsY0FBYyxtQkFBbUIsc0ZBQXNGLFNBQVMsWUFBWSx5QkFBeUIsYUFBYSwwQkFBMEIsbUJBQW1CLDJCQUEyQixxR0FBcUcseUdBQXlHLDJEQUEyRCxrQkFBa0IscUNBQXFDLG9CQUFvQix1Q0FBdUMsVUFBVSx3Q0FBd0MsV0FBVyxtQ0FBbUMsbUJBQW1CLHNEQUFzRCxnREFBZ0Qsc0NBQXNDLGdCQUFnQixtQkFBbUIsMERBQTBELHFCQUFxQixvREFBb0QsbUNBQW1DLHVEQUF1RCxrQkFBa0IsNEVBQTRFLGlDQUFpQyxpQkFBaUIsZ0JBQWdCLHVDQUF1QyxLQUFLLEtBQUssK0JBQStCLDJHQUEyRyxZQUFZLFVBQVUsMEhBQTBILHFCQUFxQixvQkFBb0IsVUFBVSxFQUFFLFdBQVcsc0JBQXNCLEdBQUcsb0JBQW9CLGVBQWUsdU5BQXVOLGlEQUFpRCx5RUFBeUUscUJBQXFCLHVDQUF1QywyQkFBMkIsRUFBRSxZQUFZLHlLQUF5SyxXQUFXLHlCQUF5QixZQUFZLG9CQUFvQix1QkFBdUIsMkRBQTJELGFBQWEsMkVBQTJFLHNLQUFzSywyQkFBMkIsNEVBQTRFLDZDQUE2QyxtQkFBbUIsS0FBSyw0TEFBNEwseUNBQXlDLDhNQUE4TSxZQUFZLFFBQVEsMkVBQTJFLHVIQUF1SCxvQ0FBb0MsaUVBQWlFLHdCQUF3QixtQkFBbUIsOERBQThELFlBQVksZUFBZSx3SEFBd0gsT0FBTyxnRUFBZ0UsWUFBWSwyQkFBMkIsdUNBQXVDLGlDQUFpQyxNQUFNLDJGQUEyRixzQkFBc0IsK0VBQStFLHlEQUF5RCxrUkFBa1IsU0FBUyxpYkFBaWIsVUFBVSx1R0FBdUcsb0JBQW9CLGNBQWMsdU5BQXVOLHdEQUF3RCxzR0FBc0csMkZBQTJGLDZKQUE2SixxQkFBcUIsdUNBQXVDLDZFQUE2RSxFQUFFLGFBQWEsb0JBQW9CLGNBQWMsZUFBZSxjQUFjLHFCQUFxQixlQUFlLGdCQUFnQixZQUFZLG1CQUFtQixhQUFhLGNBQWMsaUJBQWlCLGdFQUFnRSwwQkFBMEIsOERBQThELG9DQUFvQyxjQUFjLGtHQUFrRyx5REFBeUQscU1BQXFNLHdCQUF3QiwrQkFBK0IsWUFBWSxlQUFlLHlIQUF5SCxnQkFBZ0IsOEJBQThCLGlCQUFpQix5Q0FBeUMsY0FBYyw0QkFBNEIsZUFBZSx1Q0FBdUMsYUFBYSxvQkFBb0IsY0FBYyxvQkFBb0IsV0FBVyx5QkFBeUIsWUFBWSwyREFBMkQsVUFBVSxvSUFBb0ksb0JBQW9CLGNBQWMsbUZBQW1GLGdEQUFnRCxpR0FBaUcscUJBQXFCLHVDQUF1QywrQ0FBK0MsRUFBRSxXQUFXLGtCQUFrQixZQUFZLGdHQUFnRyxtQkFBbUIsOEJBQThCLG1CQUFtQiwwQkFBMEIsb0JBQW9CLHVFQUF1RSxVQUFVLHVCQUF1QixxQkFBcUIsMklBQTJJLDZGQUE2RixTQUFTLHVFQUF1RSxhQUFhLG9CQUFvQixjQUFjLGdFQUFnRSxjQUFjLHFCQUFxQixlQUFlLG1FQUFtRSxZQUFZLDZCQUE2QixVQUFVLHFFQUFxRSxvQkFBb0IsZ0NBQWdDLEtBQUssWUFBWSxjQUFjLFdBQVcsWUFBWSxJQUFJLEtBQUssNkJBQTZCLE9BQU8sUUFBUSxZQUFZLEtBQUssS0FBSywwQkFBMEIsc0NBQXNDLCtCQUErQixnQkFBZ0IsWUFBWSxhQUFhLFdBQVcsWUFBWSxJQUFJLEtBQUssNkJBQTZCLGtCQUFrQix1QkFBdUIsWUFBWSxLQUFLLEtBQUssMEJBQTBCLDhLQUE4Syw4QkFBOEIsZUFBZSxhQUFhLGNBQWMsV0FBVyxZQUFZLElBQUksS0FBSyw2QkFBNkIsT0FBTyxZQUFZLEtBQUssMkJBQTJCLCtCQUErQixrQkFBa0Isb0JBQW9CLGNBQWMsdUVBQXVFLGtEQUFrRCxpQ0FBaUMscUNBQXFDLHFFQUFxRSxxQkFBcUIsdUNBQXVDLGlCQUFpQixFQUFFLFFBQVEsMENBQTBDLG1GQUFtRixvQ0FBb0Msd0tBQXdLLEVBQUUsSUFBSSxTQUFTLE9BQU8sb0dBQW9HLHVEQUF1RCxxREFBcUQsa0JBQWtCLGVBQWUsZ0RBQWdELHNDQUFzQyxZQUFZLEdBQUcsUUFBUSxvRkFBb0YsU0FBUyx5R0FBeUcsMEJBQTBCLDBDQUEwQywyRkFBMkYsR0FBRyxZQUFZLDZEQUE2RCxlQUFlLGlEQUFpRCxjQUFjLGdEQUFnRCxZQUFZLDhDQUE4QyxXQUFXLHlCQUF5QixZQUFZLG9CQUFvQixVQUFVLHNGQUFzRix1QkFBdUIsNEVBQTRFLGlCQUFpQiwwQ0FBMEMsa0VBQWtFLGdEQUFnRCxpQ0FBaUMsaUVBQWlFLEdBQUcsb0JBQW9CLGNBQWMscUxBQXFMLDREQUE0RCw0RUFBNEUsMEZBQTBGLHNCQUFzQixnRkFBZ0Ysa0NBQWtDLHFCQUFxQix1Q0FBdUMsbUNBQW1DLEVBQUUsU0FBUywwQkFBMEIsNkVBQTZFLGVBQWUseUJBQXlCLG1CQUFtQixnREFBZ0QsV0FBVyw2QkFBNkIsWUFBWSx3QkFBd0IsVUFBVSw4SUFBOEksb0JBQW9CLGNBQWMsd0dBQXdHLDREQUE0RCx1QkFBdUIseURBQXlELDJDQUEyQyxrREFBa0QsNk1BQTZNLHFCQUFxQix1Q0FBdUMsc0VBQXNFLEVBQUUsVUFBVSxvQ0FBb0MsbURBQW1ELEVBQUUsNFFBQTRRLFNBQVMsMEJBQTBCLDJDQUEyQyxZQUFZLDBCQUEwQix3R0FBd0csZ0JBQWdCLDhEQUE4RCxrQkFBa0IsZ0VBQWdFLHlCQUF5QixnRUFBZ0UsOEdBQThHLFFBQVEsSUFBSSxvRkFBb0YsaUVBQWlFLFdBQVcsa0JBQWtCLFlBQVksYUFBYSxnRUFBZ0UsZ0hBQWdILEtBQUssc0NBQXNDLFVBQVUsTUFBTSxrQkFBa0IsR0FBRyxvR0FBb0csS0FBSyx3RkFBd0YsK0dBQStHLHdIQUF3SCxvRUFBb0UsZUFBZSwyREFBMkQsZ0JBQWdCLGlHQUFpRyxtQkFBbUIsMEJBQTBCLG9CQUFvQixRQUFRLGlCQUFpQixrRUFBa0Usc0VBQXNFLEtBQUssNEJBQTRCLDJGQUEyRix1QkFBdUIsV0FBVyxrREFBa0QsUUFBUSxpQkFBaUIsZ0hBQWdILEtBQUsseURBQXlELGlJQUFpSSxZQUFZLElBQUksS0FBSyxzQkFBc0IsTUFBTSxVQUFVLDRDQUE0QyxNQUFNLCtDQUErQyxNQUFNLG9EQUFvRCxNQUFNLG1FQUFtRSxNQUFNLG1DQUFtQyxNQUFNLDREQUE0RCxtRUFBbUUsWUFBWSxtQkFBbUIsUUFBUSxpQkFBaUIsWUFBWSxJQUFJLDZDQUE2QyxTQUFTLGtCQUFrQixnREFBZ0QsUUFBUSxrQkFBa0IsWUFBWSxLQUFLLCtDQUErQyxxREFBcUQsZUFBZSxpREFBaUQsZ0JBQWdCLHlGQUF5RixZQUFZLGlDQUFpQyxhQUFhLCtDQUErQyxnQkFBZ0IsMENBQTBDLGtCQUFrQixHQUFHLFVBQVUsa0pBQWtKLHlCQUF5QixvQkFBb0IsY0FBYywrREFBK0Qsd0NBQXdDLCtDQUErQyxVQUFVLGtEQUFrRCxvQkFBb0IsY0FBYyxxR0FBcUcsaURBQWlELDBDQUEwQyw2REFBNkQsZ0ZBQWdGLHFCQUFxQix1Q0FBdUMsUUFBUSxFQUFFLFVBQVUsa0RBQWtELG9CQUFvQixjQUFjLG1JQUFtSSxxQkFBcUIsK0JBQStCLHFCQUFxQixFQUFFLDZFQUE2RSxzQkFBc0Isa0hBQWtILGtHQUFrRyx5REFBeUQsMkJBQTJCLDBEQUEwRCw4T0FBOE8scUJBQXFCLHVDQUF1QyxzQ0FBc0MsRUFBRSxVQUFVLGdEQUFnRCxTQUFTLDhDQUE4QyxZQUFZLG9EQUFvRCxXQUFXLDBCQUEwQixZQUFZLHFCQUFxQixlQUFlLDhCQUE4QixnQkFBZ0IseUJBQXlCLG1CQUFtQixrQ0FBa0Msb0JBQW9CLDZCQUE2QixxQkFBcUIsNEJBQTRCLHNCQUFzQix1QkFBdUIsWUFBWSwyQkFBMkIsYUFBYSw4Q0FBOEMsZUFBZSw4QkFBOEIsZ0JBQWdCLHlCQUF5QixnQkFBZ0IsMENBQTBDLGtCQUFrQixHQUFHLFVBQVUsd05BQXdOLG9CQUFvQixjQUFjLGtJQUFrSSw0QkFBNEIsRUFBRSw2RUFBNkUsc0JBQXNCLHdHQUF3RywwREFBMEQseURBQXlELDBCQUEwQix5REFBeUQsMkJBQTJCLDBEQUEwRCwrQkFBK0IsOERBQThELDJhQUEyYSxxQkFBcUIsdUNBQXVDLHdEQUF3RCxFQUFFLFVBQVUsZ0RBQWdELFNBQVMsOENBQThDLFlBQVksZ0VBQWdFLFdBQVcsMEJBQTBCLFlBQVkscUJBQXFCLGVBQWUsOEJBQThCLGdCQUFnQix5QkFBeUIsbUJBQW1CLGtDQUFrQyxvQkFBb0IsNkJBQTZCLHFCQUFxQiw0QkFBNEIsc0JBQXNCLHVCQUF1QixZQUFZLDJCQUEyQixhQUFhLDhDQUE4QyxlQUFlLDhCQUE4QixnQkFBZ0IseUJBQXlCLGdCQUFnQiwwQ0FBMEMsa0JBQWtCLEdBQUcsVUFBVSxpTUFBaU0sb0JBQW9CLGNBQWMsZ0hBQWdILDRCQUE0Qix1QkFBdUIsMENBQTBDLEVBQUUsNkRBQTZELG1CQUFtQixzREFBc0QseUJBQXlCLHNIQUFzSCxrTkFBa04scUJBQXFCLHVDQUF1QyxxREFBcUQsRUFBRSxVQUFVLHFGQUFxRixTQUFTLGtJQUFrSSxZQUFZLGlIQUFpSCxZQUFZLDRCQUE0QixhQUFhLHVCQUF1QixXQUFXLGNBQWMsZUFBZSxjQUFjLGVBQWUsU0FBUyxtQkFBbUIsU0FBUyxtQkFBbUIsc0JBQXNCLGdCQUFnQiwwQ0FBMEMsa0JBQWtCLEdBQUcsVUFBVSw0SEFBNEgsb0JBQW9CLGNBQWMsbUhBQW1ILHFFQUFxRSx1QkFBdUIseURBQXlELHNCQUFzQixrREFBa0QsNktBQTZLLHFCQUFxQix1Q0FBdUMsa0NBQWtDLEVBQUUsVUFBVSxtREFBbUQsU0FBUyxrREFBa0QsWUFBWSxpQ0FBaUMsWUFBWSxZQUFZLDJCQUEyQiw4QkFBOEIsV0FBVyxrQkFBa0IsWUFBWSwwQ0FBMEMsYUFBYSxvQkFBb0IsY0FBYyw4Q0FBOEMsOENBQThDLDhDQUE4QyxZQUFZLGdDQUFnQyxhQUFhLHlDQUF5QyxxREFBcUQsWUFBWSxJQUFJLEtBQUssZ0JBQWdCLHFKQUFxSixFQUFFLHlMQUF5TCxnRkFBZ0YsWUFBWSxtQkFBbUIsYUFBYSwyRUFBMkUsZUFBZSxxQ0FBcUMsZ0JBQWdCLHNFQUFzRSxlQUFlLHFDQUFxQyxnQkFBZ0IsMkhBQTJILG1CQUFtQix5Q0FBeUMsb0JBQW9CLCtGQUErRixnQkFBZ0IsMENBQTBDLGtCQUFrQixHQUFHLFVBQVUsNEdBQTRHLG9CQUFvQixjQUFjLDhJQUE4SSw2QkFBNkIsRUFBRSwyRUFBMkUsb0JBQW9CLHFEQUFxRCx3R0FBd0csc0dBQXNHLDBOQUEwTixxQkFBcUIsdUNBQXVDLGlFQUFpRSxFQUFFLFVBQVUsa0VBQWtFLFNBQVMsZ0VBQWdFLFlBQVksa0RBQWtELFdBQVcsWUFBWSxlQUFlLFlBQVksZUFBZSxTQUFTLG1CQUFtQixTQUFTLFlBQVksNkJBQTZCLGFBQWEsd0JBQXdCLGdCQUFnQiwwQ0FBMEMsa0JBQWtCLEdBQUcsVUFBVSxtR0FBbUcsVUFBVSxrREFBa0Qsb0JBQW9CLGNBQWMsc0ZBQXNGLDREQUE0RCx1QkFBdUIseURBQXlELHNCQUFzQixrREFBa0QsOENBQThDLHFCQUFxQiw0SEFBNEgsVUFBVSwwQkFBMEIsU0FBUyx5QkFBeUIsWUFBWSx3Q0FBd0MsV0FBVyxTQUFTLHNHQUFzRyxZQUFZLHFsQkFBcWxCLGVBQWUsaUNBQWlDLGdCQUFnQixvSEFBb0gsbUJBQW1CLHFDQUFxQyxvQkFBb0Isd0hBQXdILE9BQU8sMkVBQTJFLHdCQUF3Qix5QkFBeUIsbUJBQW1CLDJCQUEyQixxQkFBcUIseUJBQXlCLG9FQUFvRSx3QkFBd0IscUJBQXFCLHlPQUF5TyxZQUFZLDhCQUE4QixhQUFhLHlCQUF5QixpQkFBaUIsd0JBQXdCLGtCQUFrQixhQUFhLGtRQUFrUSxpQkFBaUIsMEJBQTBCLGVBQWUsaUNBQWlDLGdCQUFnQiw0SUFBNEksWUFBWSxnRkFBZ0YsWUFBWSw4RUFBOEUsYUFBYSw0RUFBNEUsYUFBYSwrRUFBK0UsY0FBYyw2RUFBNkUscUJBQXFCLCtIQUErSCxzQkFBc0IsK0hBQStILHNCQUFzQix1RkFBdUYsa0JBQWtCLDRIQUE0SCwwQkFBMEIsNEZBQTRGLGdCQUFnQiwwQ0FBMEMsa0JBQWtCLEdBQUcsVUFBVSx1R0FBdUcsb0JBQW9CLGNBQWMsa0hBQWtILHFCQUFxQix3R0FBd0cscUJBQXFCLHVDQUF1QyxRQUFRLEVBQUUsVUFBVSxpREFBaUQsb0JBQW9CLGNBQWMscUZBQXFGLHFEQUFxRCw4QkFBOEIsdUNBQXVDLGdDQUFnQyxpQ0FBaUMsa0VBQWtFLHFCQUFxQix1Q0FBdUMsWUFBWSxFQUFFLFVBQVUsaUJBQWlCLFdBQVcsNkJBQTZCLFVBQVUsaUJBQWlCLFdBQVcsNkJBQTZCLFlBQVksK0RBQStELFVBQVUsc0VBQXNFLG9CQUFvQixjQUFjLHlGQUF5RixxQkFBcUIsc0ZBQXNGLFVBQVUsd0VBQXdFLG9CQUFvQixjQUFjLHNSQUFzUixpRUFBaUUsaUdBQWlHLDBEQUEwRCxzRUFBc0UsZ0RBQWdELHNCQUFzQixxQkFBcUIsb0JBQW9CLHFCQUFxQixtQ0FBbUMseUNBQXlDLGtQQUFrUCxxQkFBcUIsdUNBQXVDLGtFQUFrRSxFQUFFLFNBQVMsa0dBQWtHLFFBQVEsa0hBQWtILE9BQU8scUVBQXFFLFNBQVMseUVBQXlFLG1CQUFtQixtR0FBbUcsVUFBVSxzQ0FBc0MsV0FBVyx1Q0FBdUMsVUFBVSxzQ0FBc0MsV0FBVyx1Q0FBdUMsV0FBVyw2QkFBNkIsWUFBWSxnREFBZ0QsZUFBZSxpQ0FBaUMsZ0JBQWdCLG9EQUFvRCxZQUFZLDhCQUE4QixhQUFhLGlEQUFpRCxZQUFZLG1CQUFtQixhQUFhLDRCQUE0QixvQ0FBb0MsWUFBWSw4QkFBOEIsZUFBZSwwR0FBMEcsVUFBVSw4TUFBOE0scUJBQXFCLG9CQUFvQixxQkFBcUIsNEJBQTRCLDZDQUE2QyxtQkFBbUIsaUJBQWlCLHlCQUF5QixHQUFHLHFCQUFxQixvQkFBb0IscUJBQXFCLDRCQUE0Qiw2Q0FBNkMsbUJBQW1CLGlCQUFpQix5Q0FBeUMsR0FBRyxvQkFBb0IsY0FBYyxzR0FBc0csd0RBQXdELHFCQUFxQixzRkFBc0YsaUxBQWlMLHFCQUFxQix1Q0FBdUMsNkdBQTZHLEVBQUUsUUFBUSwwQ0FBMEMsc0RBQXNELEdBQUcsY0FBYyxpQ0FBaUMsZ0JBQWdCLGtPQUFrTyxhQUFhLCtCQUErQixjQUFjLDJDQUEyQyw4QkFBOEIsNENBQTRDLHdCQUF3QiwwQ0FBMEMsZ0JBQWdCLG1OQUFtTix1QkFBdUIsNkZBQTZGLGVBQWUseUdBQXlHLFNBQVMsMEJBQTBCLDRDQUE0QyxlQUFlLGlDQUFpQyxnQkFBZ0IsTUFBTSxvRkFBb0YsVUFBVSwwQkFBMEIsOENBQThDLDBCQUEwQiwrQkFBK0IsWUFBWSxtQkFBbUIsNENBQTRDLGdCQUFnQix1QkFBdUIsaUJBQWlCLG9IQUFvSCxjQUFjLEdBQUcsY0FBYyxxQkFBcUIsZUFBZSxrSEFBa0gsWUFBWSxHQUFHLGFBQWEsb0JBQW9CLGNBQWMsb0JBQW9CLFdBQVcsa0JBQWtCLFlBQVksa0VBQWtFLFNBQVMsT0FBTyx1REFBdUQsK0JBQStCLG1CQUFtQiwwQkFBMEIsb0JBQW9CLHFCQUFxQiwyREFBMkQsaUlBQWlJLG1DQUFtQyxHQUFHLGNBQWMsNEJBQTRCLGVBQWUsdUJBQXVCLGFBQWEsMkJBQTJCLFVBQVUsOEhBQThILG1GQUFtRixvQkFBb0IsY0FBYywySEFBMkgsZ0VBQWdFLGlDQUFpQyxxQ0FBcUMsMEVBQTBFLGdFQUFnRSxpRUFBaUUscUJBQXFCLHVDQUF1QyxrRUFBa0UsVUFBVSxFQUFFLFdBQVcseUJBQXlCLFlBQVksb0JBQW9CLGFBQWEsb0JBQW9CLGNBQWMsMENBQTBDLFdBQVcsR0FBRyxjQUFjLHFCQUFxQixlQUFlLDJDQUEyQyxZQUFZLEdBQUcsWUFBWSwwRkFBMEYsT0FBTyw0QkFBNEIsVUFBVSw2Q0FBNkMsR0FBRywrQ0FBK0MsZ0JBQWdCLHdGQUF3Rix1QkFBdUIsdUJBQXVCLDRCQUE0QixhQUFhLDRCQUE0QixXQUFXLHVIQUF1SCxXQUFXLGtEQUFrRCxVQUFVLDBJQUEwSSxvQkFBb0IsY0FBYyx3SUFBd0ksd0RBQXdELG9CQUFvQiw4REFBOEQsc0JBQXNCLDRFQUE0RSx5VUFBeVUscUJBQXFCLHVDQUF1Qyw4R0FBOEcsRUFBRSxjQUFjLGtEQUFrRCxrREFBa0QsMkRBQTJELGVBQWUsaUNBQWlDLGdCQUFnQixpQ0FBaUMsU0FBUyxvQkFBb0IsV0FBVyxpQ0FBaUMsc0JBQXNCLHFCQUFxQixTQUFTLDBEQUEwRCxvRkFBb0Ysa0RBQWtELG9LQUFvSyx1QkFBdUIsb0hBQW9ILHVDQUF1Qyx5Q0FBeUMsbUJBQW1CLDBCQUEwQixvQkFBb0IsK0RBQStELGdCQUFnQix1QkFBdUIsaUJBQWlCLG1HQUFtRyxjQUFjLHFCQUFxQixlQUFlLGlHQUFpRyxjQUFjLDJCQUEyQixlQUFlLHNCQUFzQixnQkFBZ0IsdUJBQXVCLGlCQUFpQixzSEFBc0gsY0FBYyxxQkFBcUIsZUFBZSwwQkFBMEIsd0JBQXdCLGFBQWEsMEJBQTBCLFVBQVUsdUhBQXVILG9CQUFvQixjQUFjLHNEQUFzRCwrREFBK0QsNkNBQTZDLFVBQVUsaURBQWlELG9CQUFvQixjQUFjLCtEQUErRCxnREFBZ0QsK0NBQStDLFVBQVUsa0RBQWtELG9CQUFvQixjQUFjLDhEQUE4RCw4QkFBOEIsdURBQXVELFVBQVUsc0RBQXNELG9CQUFvQixjQUFjLHVIQUF1SCxxQkFBcUIsK0RBQStELHFCQUFxQiwyRUFBMkUscUJBQXFCLHVDQUF1QyxRQUFRLEVBQUUsVUFBVSxxRUFBcUUsb0JBQW9CLGNBQWMsa0hBQWtILG9EQUFvRCxpQ0FBaUMsK0JBQStCLG9DQUFvQyxVQUFVLDBFQUEwRSxvQkFBb0IsY0FBYyx3R0FBd0csaURBQWlELGtDQUFrQyxtQ0FBbUMsZ0NBQWdDLHFCQUFxQixnSEFBZ0gscUJBQXFCLHVDQUF1QyxRQUFRLEVBQUUsVUFBVSxvR0FBb0csb0JBQW9CLGNBQWMsbUdBQW1HLGdFQUFnRSw2QkFBNkIsc0NBQXNDLGdDQUFnQyxxQkFBcUIsdUNBQXVDLFdBQVcsRUFBRSxlQUFlLHVCQUF1QixnQkFBZ0Isa0JBQWtCLFVBQVUsaURBQWlELG9CQUFvQixjQUFjLGtHQUFrRyx5REFBeUQsd2FBQXdhLGtEQUFrRCwwQ0FBMEMsV0FBVyw2REFBNkQscUZBQXFGLGdCQUFnQiw2REFBNkQsbUhBQW1ILGtCQUFrQiwyQ0FBMkMsK0JBQStCLG9CQUFvQiwyQ0FBMkMsc0NBQXNDLDZCQUE2QiwyQ0FBMkMsK0NBQStDLGtDQUFrQywyQ0FBMkMsb0RBQW9ELHVCQUF1QiwyQ0FBMkMseUNBQXlDLHlCQUF5QiwyQ0FBMkMsMkNBQTJDLDZCQUE2QiwyQ0FBMkMsbUVBQW1FLHVCQUF1QiwyQ0FBMkMseUNBQXlDLGdCQUFnQiwyQ0FBMkMsa0NBQWtDLHlCQUF5QiwyQ0FBMkMsMkNBQTJDLG9CQUFvQiwyQ0FBMkMsc0NBQXNDLG9CQUFvQiwyQ0FBMkMsc0NBQXNDLFVBQVUsaVJBQWlSLG9CQUFvQixjQUFjLG9IQUFvSCw2QkFBNkIsMENBQTBDLDhFQUE4RSxtTEFBbUwscUJBQXFCLHVDQUF1QyxrSEFBa0gsRUFBRSxZQUFZLHVDQUF1QyxlQUFlLG1CQUFtQixNQUFNLHFDQUFxQyxVQUFVLGlCQUFpQiw2QkFBNkIsY0FBYyxrREFBa0QsS0FBSyw0RUFBNEUsV0FBVyxrQkFBa0IsOENBQThDLG1CQUFtQixzQ0FBc0MsbUJBQW1CLGdEQUFnRCxvQkFBb0Isd0NBQXdDLGlCQUFpQiw4Q0FBOEMsa0JBQWtCLHNDQUFzQyxxQkFBcUIsa0RBQWtELGtDQUFrQyw0REFBNEQsMkdBQTJHLG1FQUFtRSx3RUFBd0UsS0FBSyxpQ0FBaUMsd0JBQXdCLFlBQVksV0FBVywyQkFBMkIsb0NBQW9DLE1BQU0sdUNBQXVDLHNCQUFzQiw2QkFBNkIseUlBQXlJLFlBQVksa0JBQWtCLGlEQUFpRCwrQkFBK0IsUUFBUSxxQ0FBcUMscVdBQXFXLFlBQVksa0JBQWtCLG1DQUFtQyw4QkFBOEIsaUdBQWlHLFVBQVUsK0RBQStELG1CQUFtQiwyQkFBMkIsZ0JBQWdCLDBDQUEwQyxnT0FBZ08sK0hBQStILEdBQUcsdUdBQXVHLEdBQUcsVUFBVSxpREFBaUQsdUtBQXVLLGVBQWUsWUFBWSxRQUFRLFdBQVcsUUFBUSxJQUFJLHFDQUFxQyxXQUFXLFFBQVEsTUFBTSxLQUFLLFFBQVEsZ0RBQWdELGdCQUFnQixTQUFTLFdBQVcsUUFBUSxJQUFJLDhCQUE4QixXQUFXLFFBQVEsSUFBSSw0Q0FBNEMsV0FBVyxRQUFRLElBQUksS0FBSyxRQUFRLHFEQUFxRCx1QkFBdUIsY0FBYyw0QkFBNEIsWUFBWSxXQUFXLGdCQUFnQixTQUFTLE9BQU8sUUFBUSxjQUFjLFNBQVMsb0NBQW9DLG1EQUFtRCxjQUFjLE9BQU8sY0FBYyxPQUFPLGdCQUFnQixNQUFNLElBQUksb0JBQW9CLGNBQWMseU9BQXlPLHVDQUF1QyxpQ0FBaUMscUNBQXFDLG9EQUFvRCxxQkFBcUIsdUNBQXVDLFNBQVMsRUFBRSxPQUFPLGdSQUFnUixhQUFhLFNBQVMsOENBQThDLGlCQUFpQixxQ0FBcUMsaUJBQWlCLG9EQUFvRCx1QkFBdUIsS0FBSywrQkFBK0IsU0FBUyxvWkFBb1osOEJBQThCLDhDQUE4QywrREFBK0QsVUFBVSwyRkFBMkYsb0JBQW9CLGNBQWMsc0NBQXNDLHVDQUF1Qyx3REFBd0QscUJBQXFCLHVDQUF1QyxtQ0FBbUMsRUFBRSx1QkFBdUIsZ0NBQWdDLDBCQUEwQiwrREFBK0Qsa0JBQWtCLDZCQUE2QiwwQkFBMEIsNENBQTRDLGFBQWEsOERBQThELGtEQUFrRCx3Q0FBd0Msd0NBQXdDLHdDQUF3QyxhQUFhLDZDQUE2QyxvQkFBb0IsY0FBYyxrSUFBa0ksNEJBQTRCLG1KQUFtSixVQUFVLHNEQUFzRCxvQkFBb0IsY0FBYyx3REFBd0QsdUNBQXVDLHNDQUFzQyxxRUFBcUUsZ0lBQWdJLHFCQUFxQix1SEFBdUgscUJBQXFCLHVDQUF1QywyRUFBMkUsMENBQTBDLHlHQUF5RyxnQkFBZ0IsRUFBRSxFQUFFLDRCQUE0Qix3RkFBd0YsbUZBQW1GLDZCQUE2QiwyQkFBMkIsOEZBQThGLGtCQUFrQiwyREFBMkQsVUFBVSwrRUFBK0Usb0JBQW9CLGNBQWMsa0VBQWtFLHVDQUF1QyxzQkFBc0IsK0dBQStHLDBCQUEwQixzRkFBc0YsbU1BQW1NLHVDQUF1QyxzQkFBc0Isa0RBQWtELDJCQUEyQixvREFBb0QsK0JBQStCLDRCQUE0QiwwR0FBMEcscUJBQXFCLHVDQUF1QyxxSEFBcUgsWUFBWSw2RUFBNkUsMENBQTBDLHlHQUF5RyxjQUFjLHVGQUF1Rix1Q0FBdUMsRUFBRSxFQUFFLDRCQUE0QixzRkFBc0YsMkJBQTJCLGdHQUFnRyxrQkFBa0IsMkRBQTJELFVBQVUsd0xBQXdMLG9CQUFvQixjQUFjLHdGQUF3RixxQkFBcUIsNlNBQTZTLFVBQVUsNkRBQTZELG9CQUFvQixjQUFjLG9GQUFvRiw0REFBNEQsa0dBQWtHLG1FQUFtRSx5QkFBeUIsc0ZBQXNGLHNCQUFzQiw0RUFBNEUsb0JBQW9CLHNGQUFzRixtQkFBbUIscUJBQXFCLHVDQUF1QyxpREFBaUQsRUFBRSxXQUFXLHlCQUF5QixZQUFZLGdJQUFnSSxFQUFFLHVCQUF1Qiw0QkFBNEIsNEJBQTRCLFlBQVksSUFBSSxLQUFLLGlDQUFpQyxPQUFPLHNGQUFzRixtSkFBbUosVUFBVSwySUFBMkksb0JBQW9CLGNBQWMsMkdBQTJHLHFCQUFxQixzQkFBc0IscUJBQXFCLG1CQUFtQixzRUFBc0UsZ0NBQWdDLGdEQUFnRCx5QkFBeUIseURBQXlELHNCQUFzQixrREFBa0Qsb0JBQW9CLDhEQUE4RCxzRkFBc0YscUJBQXFCLHVDQUF1Qyw2REFBNkQsRUFBRSxXQUFXLGtCQUFrQixZQUFZLGdJQUFnSSxFQUFFLHFEQUFxRCxjQUFjLHFCQUFxQixlQUFlLG1EQUFtRCxtQkFBbUIsaUNBQWlDLGFBQWEsc0hBQXNILFlBQVksSUFBSSxLQUFLLGdCQUFnQixxQkFBcUIsRUFBRSxxSkFBcUosMEZBQTBGLDRCQUE0QixnQkFBZ0IsNEdBQTRHLHFDQUFxQyxtQ0FBbUMsb0RBQW9ELGlCQUFpQixVQUFVLGtEQUFrRCxZQUFZLHdJQUF3SSxvQkFBb0IsY0FBYywyR0FBMkcsOEVBQThFLGdIQUFnSCxzQ0FBc0Msa0NBQWtDLCtGQUErRiw4Q0FBOEMscUJBQXFCLHVDQUF1Qyx1Q0FBdUMsRUFBRSxvQkFBb0IsMkJBQTJCLHFCQUFxQiw0QkFBNEIsNkZBQTZGLGNBQWMscUJBQXFCLGVBQWUsa0VBQWtFLGVBQWUsNEJBQTRCLGdCQUFnQix1QkFBdUIsVUFBVSw0RUFBNEUsb0JBQW9CLGNBQWMsNERBQTRELHVDQUF1QyxtREFBbUQscUVBQXFFLDBIQUEwSCxxQkFBcUIsOERBQThELHFCQUFxQixrREFBa0QscUJBQXFCLHFNQUFxTSxxQkFBcUIsdUNBQXVDLDJFQUEyRSwwQ0FBMEMsMkVBQTJFLCtCQUErQixtRkFBbUYsK0VBQStFLCtFQUErRSxnQkFBZ0IsRUFBRSxFQUFFLDhCQUE4Qiw2SEFBNkgsbUZBQW1GLDZCQUE2QiwyQkFBMkIsb0lBQW9JLGtCQUFrQiwyREFBMkQsVUFBVSxtSUFBbUksb0JBQW9CLGNBQWMsMkRBQTJELHVDQUF1QywyQ0FBMkMsd0RBQXdELDhDQUE4QyxxQkFBcUIsNEJBQTRCLDBEQUEwRCx3QkFBd0IsNERBQTRELDJGQUEyRiw4REFBOEQsbUVBQW1FLGlEQUFpRCxzQkFBc0Isa0RBQWtELG1aQUFtWixrQkFBa0IseUdBQXlHLHFCQUFxQiw0QkFBNEIsNkdBQTZHLGdCQUFnQix3Q0FBd0MsV0FBVyx5Q0FBeUMsZ0VBQWdFLGdCQUFnQix3Q0FBd0MsV0FBVyx5Q0FBeUMsRUFBRSxFQUFFLDRCQUE0QixnRkFBZ0YsMkJBQTJCLDBGQUEwRixVQUFVLGtPQUFrTyxvQkFBb0IsY0FBYywwREFBMEQsdUNBQXVDLDZCQUE2Qiw2Q0FBNkMsNFhBQTRYLHFCQUFxQix1Q0FBdUMsbUJBQW1CLEVBQUUsVUFBVSw0REFBNEQsMENBQTBDLG9CQUFvQixjQUFjLDJHQUEyRyx1Q0FBdUMsb0JBQW9CLGtEQUFrRCx5QkFBeUIsdUNBQXVDLDBCQUEwQiw0QkFBNEIsOENBQThDLHlDQUF5QywyQkFBMkIsWUFBWSxZQUFZLEtBQUssZ0JBQWdCLGdLQUFnSyxFQUFFLGlEQUFpRCxnQkFBZ0IsaUNBQWlDLEVBQUUsNkZBQTZGLCtCQUErQiwrREFBK0Qsd0JBQXdCLCtIQUErSCxrS0FBa0sscUJBQXFCLDRCQUE0QiwyRUFBMkUsaUNBQWlDLCtEQUErRCxFQUFFLDhCQUE4Qiw2SUFBNkksbUZBQW1GLFFBQVEsMkJBQTJCLDRIQUE0SCxrQkFBa0IsMkRBQTJELHNCQUFzQixrREFBa0QsdUJBQXVCLDBEQUEwRCxrQkFBa0IsOENBQThDLG1CQUFtQixzREFBc0QsZ0JBQWdCLGtDQUFrQyxpQkFBaUIsMEVBQTBFLGNBQWMscUJBQXFCLGVBQWUsb0ZBQW9GLFVBQVUsb1JBQW9SLG9CQUFvQixjQUFjLGtGQUFrRix1Q0FBdUMsdUZBQXVGLHFCQUFxQiw2Q0FBNkMsVUFBVSx1RUFBdUUsd0JBQXdCLFlBQVksZ0JBQWdCLEVBQUUsYUFBYSxpR0FBaUcsc0pBQXNKLFVBQVUsNkJBQTZCLHVGQUF1RixvQkFBb0IsY0FBYyw2REFBNkQsdUNBQXVDLGlDQUFpQyxxQkFBcUIsK0NBQStDLHFCQUFxQiwwREFBMEQscUJBQXFCLHVDQUF1QywyRUFBMkUsbUJBQW1CLDBFQUEwRSxhQUFhLEVBQUUsRUFBRSxxQkFBcUIsNE1BQTRNLGtCQUFrQix5SEFBeUgsT0FBTywwR0FBMEcsOEJBQThCLHFHQUFxRyxVQUFVLDBFQUEwRSxpQkFBaUIsZUFBZSxVQUFVLGlCQUFpQiw4QkFBOEIsRUFBRSxLQUFLLEVBQUUsR0FBRyxVQUFVLG9CQUFvQixlQUFlLDREQUE0RCwwQkFBMEIsa0VBQWtFLHVCQUF1Qiw4QkFBOEIsaUlBQWlJLHNMQUFzTCxHQUFHLFVBQVUsZ0pBQWdKLHFGQUFxRix1QkFBdUIsNEVBQTRFLDhCQUE4QiwrQkFBK0IscUlBQXFJLCtHQUErRyxxRkFBcUYsNENBQTRDLGlGQUFpRixpQ0FBaUMsV0FBVyxVQUFVLE9BQU8sS0FBSyxzTkFBc04sOEJBQThCLHNDQUFzQyxpRUFBaUUsR0FBRyw2SUFBNkksd0JBQXdCLG1DQUFtQyxPQUFPLDJMQUEyTCx3QkFBd0IsbURBQW1ELCtJQUErSSw4QkFBOEIsNkVBQTZFLDZDQUE2Qyw4Q0FBOEMsaUNBQWlDLGtFQUFrRSxZQUFZLE1BQU0sOERBQThELFdBQVcsU0FBUyxPQUFPLDJMQUEyTCxnQ0FBZ0Msa0NBQWtDLG9IQUFvSCw2QkFBNkIseUJBQXlCLFdBQVcsZ0RBQWdELGdDQUFnQyx3QkFBd0IsWUFBWSxtRkFBbUYsdUZBQXVGLFdBQVcsU0FBUyw4QkFBOEIsT0FBTyxNQUFNLGdJQUFnSSx5Q0FBeUMseUJBQXlCLG9EQUFvRCw4REFBOEQsY0FBYyxNQUFNLHVEQUF1RCxnQ0FBZ0MsU0FBUyxPQUFPLDRJQUE0SSxxQ0FBcUMsa0RBQWtELHNDQUFzQyxTQUFTLDhEQUE4RCxPQUFPLHFMQUFxTCxtRUFBbUUsMkJBQTJCLGdDQUFnQyxTQUFTLDhDQUE4QyxPQUFPLEtBQUssS0FBSyxnQ0FBZ0Msc0VBQXNFLDhCQUE4Qix1QkFBdUIsbUZBQW1GLE9BQU8sMkNBQTJDLGlCQUFpQiwrSUFBK0ksR0FBRyxtSkFBbUosRUFBRSxPQUFPLDhDQUE4QyxrR0FBa0csa0ZBQWtGLDZCQUE2QixPQUFPLEtBQUssS0FBSyxvQkFBb0IsY0FBYywrRkFBK0YsaUVBQWlFLG1CQUFtQixxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsOEdBQThHLHlCQUF5QiwrRkFBK0YscUNBQXFDLG9CQUFvQixVQUFVLHFCQUFxQix1Q0FBdUMsMEJBQTBCLEVBQUUsV0FBVyw2QkFBNkIsc0NBQXNDLDJCQUEyQixxQ0FBcUMsMkJBQTJCLFVBQVUsMEhBQTBILG9CQUFvQixjQUFjLHFGQUFxRiw0REFBNEQsaUVBQWlFLHFCQUFxQixzQkFBc0IscUJBQXFCLHVCQUF1QixxQkFBcUIsdUNBQXVDLDZCQUE2QixFQUFFLGdCQUFnQiwyRUFBMkUsMkJBQTJCLDRDQUE0Qyx1REFBdUQsS0FBSyx3Q0FBd0Msd0RBQXdELDRFQUE0RSx5REFBeUQsa0JBQWtCLGdCQUFnQix1QkFBdUIsaUJBQWlCLHVDQUF1QyxXQUFXLGtCQUFrQixZQUFZLGtDQUFrQyw0QkFBNEIsNEJBQTRCLFlBQVksSUFBSSxLQUFLLGlDQUFpQyxPQUFPLGtEQUFrRCxrREFBa0QsVUFBVSxrR0FBa0csb0JBQW9CLGNBQWMsMEdBQTBHLDZFQUE2RSxxQ0FBcUMsaUVBQWlFLHVIQUF1SCwwREFBMEQsMENBQTBDLHFCQUFxQix1Q0FBdUMsd0NBQXdDLEVBQUUsZ0JBQWdCLCtCQUErQixpQkFBaUIsMEJBQTBCLFVBQVUsZ0ZBQWdGLG9CQUFvQixjQUFjLDZEQUE2RCx1Q0FBdUMsb0JBQW9CLGlDQUFpQyxvREFBb0QsaUVBQWlFLG9IQUFvSCxxQkFBcUIsNEJBQTRCLG1EQUFtRCxFQUFFLGdCQUFnQiw0QkFBNEIsaUJBQWlCLHVCQUF1QixtQkFBbUIsNEJBQTRCLG9CQUFvQixZQUFZLHFOQUFxTixrQkFBa0IsZ0VBQWdFLFVBQVUsd0VBQXdFLG9CQUFvQixjQUFjLHdPQUF3TywyREFBMkQsb0ZBQW9GLDhCQUE4QiwySUFBMkksK0NBQStDLHFHQUFxRyxxQkFBcUIsdUNBQXVDLDBCQUEwQixVQUFVLEVBQUUsbUJBQW1CLGlDQUFpQyx1QkFBdUIsOEJBQThCLHVEQUF1RCwrQkFBK0IseUJBQXlCLHFFQUFxRSwwQ0FBMEMsbURBQW1ELG1FQUFtRSxHQUFHLDhHQUE4Ryw0Q0FBNEMsa0JBQWtCLGlMQUFpTCxnRUFBZ0UsOERBQThELHNCQUFzQixlQUFlLHdFQUF3RSxvREFBb0QsMkJBQTJCLGlDQUFpQyxHQUFHLHFCQUFxQixlQUFlLHFFQUFxRSxrQkFBa0IsZUFBZSw0RUFBNEUsR0FBRyx3QkFBd0IsOEpBQThKLDRDQUE0QyxnQkFBZ0IscUJBQXFCLDBCQUEwQiwwQkFBMEIsZ0RBQWdELG9CQUFvQiwwQkFBMEIsMEJBQTBCLCtDQUErQyw4QkFBOEIsMEJBQTBCLG9DQUFvQyx5RUFBeUUsWUFBWSxXQUFXLEtBQUssc0RBQXNELDZFQUE2RSxLQUFLLDBCQUEwQix5RUFBeUUsWUFBWSxPQUFPLGdSQUFnUixPQUFPLHNDQUFzQyx3R0FBd0csTUFBTSw4QkFBOEIsY0FBYywwQkFBMEIscUNBQXFDLFFBQVEsSUFBSSxvQkFBb0IsUUFBUSxVQUFVLDBMQUEwTCxvQkFBb0IsY0FBYyx5SEFBeUgsK0VBQStFLGlDQUFpQyx1QkFBdUIsNEVBQTRFLEVBQUUsVUFBVSx3Q0FBd0MsZUFBZSwwQ0FBMEMseUJBQXlCLDJEQUEyRCx3SEFBd0gscUJBQXFCLHVDQUF1QyxnRkFBZ0YsRUFBRSxnQkFBZ0IsUUFBUSxLQUFLLEtBQUssRUFBRSxtQ0FBbUMsbUNBQW1DLElBQUksa0RBQWtELEVBQUUsR0FBRyx1QkFBdUIsZ0ZBQWdGLCtJQUErSSxtR0FBbUcsdUJBQXVCLDRJQUE0SSxvREFBb0Qsa0RBQWtELHdCQUF3QixRQUFRLG9CQUFvQiwrRUFBK0Usd0NBQXdDLGtFQUFrRSxtQ0FBbUMsbUNBQW1DLFVBQVUsa0NBQWtDLFFBQVEsY0FBYywwQkFBMEIsd0NBQXdDLEtBQUssU0FBUyxtQkFBbUIsUUFBUSxPQUFPLDBHQUEwRyxnQ0FBZ0MsMEJBQTBCLHFIQUFxSCxrQ0FBa0MsMkNBQTJDLG9EQUFvRCxXQUFXLDBEQUEwRCxFQUFFLFVBQVUsd0NBQXdDLHlCQUF5Qiw4QkFBOEIsWUFBWSxhQUFhLDRCQUE0QixVQUFVLGdGQUFnRiw0QkFBNEIscUNBQXFDLG1GQUFtRixvQkFBb0IsY0FBYyxtSUFBbUksNERBQTRELGdWQUFnVixxQkFBcUIsdUNBQXVDLHlHQUF5RyxFQUFFLHdCQUF3QiwrQkFBK0IsTUFBTSx3QkFBd0IsOENBQThDLCtEQUErRCxrREFBa0QsNkRBQTZELGdDQUFnQyx1RUFBdUUscURBQXFELDZGQUE2Rix5RkFBeUYsR0FBRyxZQUFZLGdFQUFnRSxrQkFBa0IseUJBQXlCLG1CQUFtQixvQkFBb0Isa0JBQWtCLHlCQUF5QixtQkFBbUIsb0JBQW9CLGVBQWUsc0JBQXNCLGdCQUFnQixpQkFBaUIsU0FBUyx3QkFBd0IsbUVBQW1FLDZCQUE2QixrQ0FBa0MsUUFBUSxlQUFlLHdCQUF3Qiw4Q0FBOEMsd0NBQXdDLE1BQU0sRUFBRSxpQ0FBaUMsUUFBUSwrQ0FBK0MsWUFBWSxVQUFVLGFBQWEsd0JBQXdCLHNDQUFzQyxtQ0FBbUMsOEJBQThCLFNBQVMsaURBQWlELDBEQUEwRCw2REFBNkQsa0JBQWtCLFVBQVUsOEVBQThFLDZCQUE2QixtQkFBbUIseURBQXlELFdBQVcsa0JBQWtCLFlBQVksc0NBQXNDLG1CQUFtQiwwQkFBMEIsb0JBQW9CLDhDQUE4QyxjQUFjLHNEQUFzRCxlQUFlLG1FQUFtRSxnQkFBZ0Isd0RBQXdELGlCQUFpQixxRUFBcUUsZUFBZSxlQUFlLDBEQUEwRCxrQ0FBa0MsZ0NBQWdDLHFCQUFxQixTQUFTLFNBQVMsVUFBVSxpRUFBaUUsb0JBQW9CLGNBQWMsK0VBQStFLCtEQUErRCxvQkFBb0IseUpBQXlKLHdEQUF3RCxxQkFBcUIsdUNBQXVDLDBGQUEwRixFQUFFLFNBQVMsaUNBQWlDLFFBQVEsZ0NBQWdDLFVBQVUsa0NBQWtDLFNBQVMsaUJBQWlCLFlBQVkseUJBQXlCLGVBQWUsNEJBQTRCLGVBQWUsMkJBQTJCLGdCQUFnQixzQkFBc0IsbUJBQW1CLGdDQUFnQyxvQkFBb0IsMkJBQTJCLGVBQWUsNEJBQTRCLGdCQUFnQix1QkFBdUIsa0JBQWtCLCtCQUErQixtQkFBbUIsMEJBQTBCLFdBQVcsd0JBQXdCLFlBQVksbUJBQW1CLGlCQUFpQixpREFBaUQsa0JBQWtCLDRCQUE0QixVQUFVLG1EQUFtRCxvQkFBb0IsY0FBYyxnSUFBZ0ksNkRBQTZELGdEQUFnRCxzQ0FBc0MsR0FBRyxxQkFBcUIsdUNBQXVDLFVBQVUsRUFBRSxXQUFXLHdCQUF3Qiw4Q0FBOEMsZ0ZBQWdGLHdCQUF3QixpQkFBaUIsc0NBQXNDLHFCQUFxQix1QkFBdUIsR0FBRyxZQUFZLGtCQUFrQiwyU0FBMlMsa0JBQWtCLHlCQUF5QixtQkFBbUIsdUNBQXVDLGlDQUFpQyxHQUFHLFFBQVEsd0JBQXdCLHdGQUF3RixVQUFVLFFBQVEsUUFBUSxzR0FBc0csZUFBZSxLQUFLLFFBQVEsRUFBRSxnQkFBZ0IsMkRBQTJELFdBQVcsNkNBQTZDLFNBQVMsMkRBQTJELHdCQUF3QixNQUFNLHdFQUF3RSw0REFBNEQseUJBQXlCLGdKQUFnSixpREFBaUQsaUJBQWlCLHlCQUF5QiwyRkFBMkYsR0FBRyxZQUFZLG1HQUFtRyxxRkFBcUYsUUFBUSxRQUFRLGlFQUFpRSxVQUFVLGdGQUFnRixZQUFZLCtDQUErQyxtQ0FBbUMsUUFBUSxhQUFhLG1CQUFtQixPQUFPLEdBQUcsV0FBVyw4QkFBOEIsc0JBQXNCLGlJQUFpSSxrQkFBa0IseUJBQXlCLG1CQUFtQixrREFBa0QsZUFBZSxzQkFBc0IsZ0JBQWdCLDRDQUE0QyxXQUFXLGtCQUFrQixZQUFZLGdDQUFnQyxzRkFBc0YsR0FBRyxjQUFjLHNEQUFzRCxlQUFlLDZEQUE2RCx1Q0FBdUMsR0FBRyxnQkFBZ0Isd0RBQXdELGlCQUFpQiwrREFBK0Qsc0RBQXNELEdBQUcsbUJBQW1CLDBCQUEwQixvQkFBb0Isb0RBQW9ELGFBQWEseUJBQXlCLFVBQVUsMENBQTBDLGVBQWUsUUFBUSxLQUFLLElBQUksMkJBQTJCLGVBQWUsVUFBVSxLQUFLLEtBQUssMkJBQTJCLGlCQUFpQixNQUFNLFlBQVksaUJBQWlCLGNBQWMsTUFBTSxpRUFBaUUsZUFBZSxZQUFZLEtBQUssSUFBSSx1Q0FBdUMsZUFBZSxjQUFjLEtBQUssS0FBSyx1Q0FBdUMsZUFBZSxXQUFXLFlBQVksSUFBSSxjQUFjLEtBQUssV0FBVyxFQUFFLG9FQUFvRSxTQUFTLDBCQUEwQiwrREFBK0Qsd0JBQXdCLDBCQUEwQiw0QkFBNEIsNEJBQTRCLGlDQUFpQyxtQ0FBbUMsZ0NBQWdDLE1BQU0sRUFBRSxvQ0FBb0MsU0FBUyxJQUFJLGdDQUFnQyxvQ0FBb0Msa0NBQWtDLE1BQU0scURBQXFELEtBQUssb0JBQW9CLGNBQWMsMEZBQTBGLHVFQUF1RSxnSEFBZ0gscUJBQXFCLHVDQUF1QyxtQ0FBbUMsRUFBRSxTQUFTLDZCQUE2QixtRkFBbUYsYUFBYSxvQkFBb0IsY0FBYyx1Q0FBdUMsWUFBWSxtQkFBbUIsWUFBWSxtQkFBbUIsY0FBYyxrQkFBa0IsZUFBZSwrREFBK0Qsb0JBQW9CLGNBQWMsa0hBQWtILDJEQUEyRCx1Q0FBdUMsMkVBQTJFLGlSQUFpUixxQkFBcUIscURBQXFELHlEQUF5RCxFQUFFLGtCQUFrQix3Q0FBd0MsYUFBYSxvQkFBb0IsY0FBYyw0R0FBNEcsV0FBVyx1REFBdUQsUUFBUSwrQkFBK0Isa0JBQWtCLDBEQUEwRCxtQkFBbUIsb0JBQW9CLG1JQUFtSSxFQUFFLGlCQUFpQiw0SEFBNEgsMkJBQTJCLG1CQUFtQixjQUFjLGtEQUFrRCxLQUFLLCtDQUErQyxxQkFBcUIsR0FBRyxjQUFjLDZFQUE2RSxRQUFRLCtCQUErQixVQUFVLGlEQUFpRCxXQUFXLHVCQUF1QixZQUFZLGtCQUFrQixnQkFBZ0IsdUJBQXVCLGlCQUFpQiwwREFBMEQsY0FBYyxxQkFBcUIsZUFBZSxzR0FBc0csa0JBQWtCLDhCQUE4QixtQkFBbUIseUJBQXlCLG1CQUFtQiwrQkFBK0Isb0JBQW9CLDBCQUEwQixrQkFBa0IsOEJBQThCLG1CQUFtQix5QkFBeUIsZUFBZSwyQkFBMkIsZUFBZSwyQkFBMkIsZ0JBQWdCLHNCQUFzQixhQUFhLDBCQUEwQixvQkFBb0IsY0FBYyx1TUFBdU0scUJBQXFCLGlCQUFpQiw0QkFBNEIsaUJBQWlCLDRCQUE0QixzQkFBc0IscUJBQXFCLHlDQUF5QyxnREFBZ0Qsa0JBQWtCLHNEQUFzRCwyVUFBMlUscUJBQXFCLHVDQUF1QyxRQUFRLEVBQUUsVUFBVSxnTEFBZ0wsb0JBQW9CLGVBQWUsaURBQWlELHFCQUFxQixxREFBcUQscUJBQXFCLDRCQUE0QixxQkFBcUIscUJBQXFCLHFCQUFxQiwrTkFBK04scUJBQXFCLHVDQUF1QyxNQUFNLEVBQUUsaUJBQWlCLHNGQUFzRixVQUFVLDZIQUE2SCxvQkFBb0IsZUFBZSxpREFBaUQsNkRBQTZELG9IQUFvSCxxQkFBcUIsdUNBQXVDLGdDQUFnQyxFQUFFLFNBQVMsK0JBQStCLFFBQVEsOEJBQThCLE9BQU8sNkJBQTZCLFNBQVMsK0JBQStCLFdBQVcsc0JBQXNCLFlBQVksaUJBQWlCLFVBQVUsK0ZBQStGLG9CQUFvQixjQUFjLHFHQUFxRywrRUFBK0UsMkNBQTJDLHFCQUFxQixzSUFBc0kscUJBQXFCLHVDQUF1QyxzQ0FBc0MsZ0NBQWdDLEVBQUUsb0JBQW9CLHFCQUFxQixxQkFBcUIsNkRBQTZELGNBQWMscUJBQXFCLGVBQWUsMERBQTBELFVBQVUsbURBQW1ELG9CQUFvQixjQUFjLGdMQUFnTCwrQ0FBK0MsaUJBQWlCLCtFQUErRSxtR0FBbUcscUJBQXFCLHVDQUF1QyxxQkFBcUIsRUFBRSxVQUFVLDBFQUEwRSxvQkFBb0IsY0FBYywyRUFBMkUscURBQXFELHFCQUFxQixpREFBaUQsd0dBQXdHLHFCQUFxQix1Q0FBdUMsZUFBZSxFQUFFLFVBQVUsb0RBQW9ELG9CQUFvQixjQUFjLHlFQUF5RSxxREFBcUQsNkJBQTZCLHFCQUFxQixvQ0FBb0MsNEVBQTRFLCtEQUErRCxxQkFBcUIsdUNBQXVDLGNBQWMsRUFBRSxnQkFBZ0IsdUJBQXVCLGlCQUFpQiwyRUFBMkUsVUFBVSx5RUFBeUUsb0JBQW9CLGNBQWMsb0dBQW9HLGlGQUFpRix1QkFBdUIsMENBQTBDLDJCQUEyQiw2Q0FBNkMseUdBQXlHLHFCQUFxQix5QkFBeUIsbURBQW1ELHdCQUF3QixvQ0FBb0MscVpBQXFaLHFCQUFxQix1Q0FBdUMsaUVBQWlFLEVBQUUsY0FBYyxxQkFBcUIsZUFBZSxzQ0FBc0MsZUFBZSxnQ0FBZ0MsZ0JBQWdCLDJCQUEyQixvQkFBb0IsMkJBQTJCLHFCQUFxQiw4REFBOEQsa0JBQWtCLHlDQUF5QyxtQkFBbUIsb0NBQW9DLGlCQUFpQixnSkFBZ0osVUFBVSw2SkFBNkosdUJBQXVCLDhEQUE4RCwyQ0FBMkMsaUJBQWlCLDRJQUE0SSxFQUFFLE9BQU8sK0NBQStDLHdEQUF3RCwwREFBMEQsbUJBQW1CLE9BQU8sS0FBSyxLQUFLLG9CQUFvQixjQUFjLHNFQUFzRSxnREFBZ0QsZ0NBQWdDLGlDQUFpQyxxRkFBcUYscUJBQXFCLHVDQUF1QyxPQUFPLEVBQUUsVUFBVSwrREFBK0Qsb0JBQW9CLGNBQWMsb0VBQW9FLHVDQUF1QyxtQkFBbUIscUJBQXFCLHNCQUFzQixxQkFBcUIsb0JBQW9CLDhHQUE4RyxFQUFFLHFCQUFxQix1Q0FBdUMsUUFBUSxFQUFFLG9CQUFvQixVQUFVLFdBQVcsNkJBQTZCLGlDQUFpQyxzQkFBc0IsVUFBVSw0RkFBNEYsb0JBQW9CLGNBQWMsc0VBQXNFLGlEQUFpRCxxQkFBcUIsaUNBQWlDLHVHQUF1RyxxQkFBcUIsdUNBQXVDLDBCQUEwQixFQUFFLHVCQUF1Qix1SUFBdUksWUFBWSxtQkFBbUIsYUFBYSwrSEFBK0gsaUJBQWlCLCtCQUErQixrQkFBa0IsMEJBQTBCLFVBQVUsb0RBQW9ELG9CQUFvQixjQUFjLHFFQUFxRSxvREFBb0QsNkhBQTZILHFCQUFxQix1Q0FBdUMsV0FBVyxFQUFFLFVBQVUseURBQXlELG9CQUFvQixjQUFjLHFFQUFxRSxvREFBb0QsaUZBQWlGLHFCQUFxQix1Q0FBdUMsV0FBVyxFQUFFLFVBQVUsdURBQXVELG9CQUFvQixlQUFlLHFEQUFxRCxxQkFBcUIsb0dBQW9HLGdDQUFnQyxpREFBaUQsZ0NBQWdDLHNCQUFzQixnQ0FBZ0MsMEhBQTBILHdCQUF3Qix5RUFBeUUseUJBQXlCLHlFQUF5RSxxQkFBcUIsdUNBQXVDLE1BQU0sRUFBRSxVQUFVLGdHQUFnRyxvQkFBb0IsZUFBZSwrQkFBK0IsMERBQTBELDBCQUEwQixxQkFBcUIsMEJBQTBCLHFCQUFxQiw4QkFBOEIsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsMldBQTJXLHFCQUFxQix1Q0FBdUMsWUFBWSxFQUFFLFVBQVUscUtBQXFLLG9CQUFvQixjQUFjLDJGQUEyRix5RUFBeUUsdUVBQXVFLHVEQUF1RCxxQkFBcUIsaUVBQWlFLDJCQUEyQixxQkFBcUIsMkJBQTJCLHFCQUFxQiw4VkFBOFYscUJBQXFCLHVDQUF1Qyw4RUFBOEUsRUFBRSxZQUFZLG1CQUFtQixhQUFhLGNBQWMsMEJBQTBCLDRKQUE0SixnQkFBZ0IsMkJBQTJCLGlCQUFpQiw2Q0FBNkMsV0FBVyx1QkFBdUIsWUFBWSxvQ0FBb0MsYUFBYSx5Q0FBeUMsY0FBYyxnREFBZ0QsU0FBUyxvREFBb0QsUUFBUSxrREFBa0QsT0FBTyxnREFBZ0QsU0FBUyxvREFBb0QsVUFBVSxzSkFBc0osb0JBQW9CLGNBQWMsNEVBQTRFLHNEQUFzRCxxQkFBcUIsaUNBQWlDLDJIQUEySCxxQkFBcUIsdUNBQXVDLGdDQUFnQyxFQUFFLGlCQUFpQix3QkFBd0Isa0JBQWtCLG1CQUFtQiw0QkFBNEIsa0ZBQWtGLGlCQUFpQiwrQkFBK0Isa0JBQWtCLDBCQUEwQixVQUFVLG9EQUFvRCxvQkFBb0IsZUFBZSwrREFBK0QseURBQXlELHdIQUF3SCxxQkFBcUIsdUNBQXVDLGNBQWMsRUFBRSxVQUFVLGtGQUFrRixvQkFBb0IsY0FBYyx5RkFBeUYsZ0VBQWdFLHdCQUF3QiwrREFBK0Qsb0dBQW9HLHFCQUFxQix1Q0FBdUMseUJBQXlCLEVBQUUsVUFBVSxnRkFBZ0Ysb0JBQW9CLGVBQWUsMERBQTBELHFCQUFxQixzQkFBc0IscUJBQXFCLHdCQUF3QixxQkFBcUIsc1hBQXNYLDRCQUE0QixrQkFBa0IsZ0NBQWdDLCtDQUErQyxHQUFHLFVBQVUsb05BQW9OLG9CQUFvQixjQUFjLGlGQUFpRixxREFBcUQsdUJBQXVCLGdJQUFnSSxxQkFBcUIsaUNBQWlDLHVCQUF1QiwyQ0FBMkMsNkJBQTZCLHFCQUFxQiwrQkFBK0IscUJBQXFCLHVCQUF1QixxQkFBcUIsb0JBQW9CLHFCQUFxQiw2QkFBNkIscUJBQXFCLG9kQUFvZCx5QkFBeUIsMENBQTBDLHFCQUFxQix1Q0FBdUMsWUFBWSxFQUFFLFVBQVUsc09BQXNPLHdIQUF3SCxvQkFBb0IsY0FBYywySkFBMkosZ0VBQWdFLHNCQUFzQiwwREFBMEQsb0NBQW9DLDBDQUEwQyw4Q0FBOEMscUNBQXFDLDBDQUEwQyw4Q0FBOEMscUNBQXFDLGdCQUFnQix1REFBdUQsRUFBRSxpS0FBaUsseUJBQXlCLHFCQUFxQix1Q0FBdUMsMEJBQTBCLEVBQUUsZ0JBQWdCLHNDQUFzQyxpQkFBaUIsOENBQThDLFVBQVUsdU1BQXVNLGdGQUFnRixvQkFBb0IsY0FBYyw2SEFBNkgsb0RBQW9ELHNCQUFzQiwwREFBMEQsOEJBQThCLHdDQUF3QyxtQ0FBbUMsMENBQTBDLDhDQUE4Qyw2Q0FBNkMsZ0JBQWdCLGlDQUFpQyxFQUFFLDZMQUE2TCxvRUFBb0UscUJBQXFCLHVDQUF1QyxZQUFZLEVBQUUsVUFBVSx5TEFBeUwsb0JBQW9CLGVBQWUsNExBQTRMLG9CQUFvQixjQUFjLHlGQUF5RixnRUFBZ0Usd0JBQXdCLHlDQUF5QywyQkFBMkIseUNBQXlDLDhCQUE4Qix5Q0FBeUMseUJBQXlCLG9EQUFvRCw2U0FBNlMscUJBQXFCLHVDQUF1Qyx5QkFBeUIsRUFBRSxVQUFVLHlJQUF5SSxvQkFBb0IsY0FBYyx1RUFBdUUsaURBQWlELHdCQUF3QixxQkFBcUIsdUJBQXVCLGdDQUFnQyxxQkFBcUIsa0RBQWtELHVEQUF1RCxnQ0FBZ0MscUJBQXFCLDREQUE0RCwwREFBMEQscUJBQXFCLDZCQUE2QiwwREFBMEQsNERBQTRELDJDQUEyQyw4WUFBOFksbUJBQW1CLHFHQUFxRyxxQkFBcUIsdUNBQXVDLDZDQUE2QyxFQUFFLFlBQVksbUJBQW1CLGFBQWEsY0FBYyxRQUFRLGlSQUFpUixpQkFBaUIsd0JBQXdCLGtCQUFrQiwwREFBMEQsVUFBVSxvT0FBb08sb0JBQW9CLGNBQWMsaUdBQWlHLCtFQUErRSxtQkFBbUIsdURBQXVELHFCQUFxQixpRUFBaUUsK0ZBQStGLGdEQUFnRCxzYkFBc2IscUJBQXFCLHVDQUF1Qyx3REFBd0QsRUFBRSxrQkFBa0IsV0FBVyxZQUFZLElBQUksS0FBSywwQ0FBMEMsc0VBQXNFLFNBQVMsY0FBYyxxQkFBcUIsZUFBZSxnQkFBZ0IsMENBQTBDLGtDQUFrQyxvQkFBb0IsMkJBQTJCLHFCQUFxQix5SUFBeUksVUFBVSx5TUFBeU0sb0JBQW9CLGNBQWMsK0lBQStJLGlEQUFpRCxrR0FBa0cscUJBQXFCLHVDQUF1Qyx1QkFBdUIsRUFBRSxZQUFZLG1CQUFtQixhQUFhLDJEQUEyRCxlQUFlLHNCQUFzQixnQkFBZ0IsMkRBQTJELFdBQVcsMENBQTBDLDRGQUE0RixVQUFVLFlBQVksVUFBVSxZQUFZLFVBQVUsRUFBRSxrQ0FBa0MsZ0JBQWdCLFVBQVUsa0JBQWtCLHlLQUF5SyxtQkFBbUIsaUZBQWlGLEdBQUcsVUFBVSwwREFBMEQsb0JBQW9CLGNBQWMsOEZBQThGLGdDQUFnQyx1QkFBdUIscUJBQXFCLG1CQUFtQix3Q0FBd0MsNkJBQTZCLHFCQUFxQixvQkFBb0Isd0NBQXdDLHFQQUFxUCxVQUFVLDhJQUE4SSxvQkFBb0IsY0FBYyxnRkFBZ0YscUJBQXFCLG9CQUFvQixxQkFBcUIscUJBQXFCLHFCQUFxQix5QkFBeUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsMEJBQTBCLHdDQUF3QyxrQ0FBa0MscUJBQXFCLGlTQUFpUyxVQUFVLGtLQUFrSyxvQkFBb0IsZUFBZSw4REFBOEQscUJBQXFCLDZCQUE2QixxQkFBcUIsd1BBQXdQLHVCQUF1QiwwQ0FBMEMsd0JBQXdCLDRDQUE0QyxVQUFVLDZMQUE2TCxvQkFBb0IsY0FBYywwRUFBMEUsaURBQWlELG1CQUFtQix1REFBdUQsb0RBQW9ELDZCQUE2QixrQ0FBa0MsNkJBQTZCLHdCQUF3QixxQkFBcUIsd0hBQXdILHFCQUFxQixvTEFBb0wscUJBQXFCLDRJQUE0SSxxQkFBcUIsdUNBQXVDLFNBQVMsRUFBRSxVQUFVLG9NQUFvTSxvQkFBb0IsY0FBYyxnRkFBZ0YsNkRBQTZELG1CQUFtQiw2Q0FBNkMscUJBQXFCLDZDQUE2QywyQkFBMkIscUJBQXFCLDJCQUEyQixxQkFBcUIseUJBQXlCLHlEQUF5RCxxQkFBcUIsdURBQXVELHFWQUFxVixxQkFBcUIsdUNBQXVDLDZDQUE2QyxFQUFFLFNBQVMsb0RBQW9ELFFBQVEsa0RBQWtELE9BQU8sa0dBQWtHLFNBQVMsd0dBQXdHLFdBQVcsdUJBQXVCLFlBQVksb0NBQW9DLGFBQWEseUNBQXlDLGNBQWMsZ0RBQWdELFVBQVUsMktBQTJLLG9CQUFvQixjQUFjLGdGQUFnRiw2REFBNkQsd0JBQXdCLHFEQUFxRCxvQkFBb0Isc0ZBQXNGLGdPQUFnTyxxQkFBcUIsdUNBQXVDLCtDQUErQyxFQUFFLFdBQVcsc0JBQXNCLFlBQVksaUJBQWlCLFVBQVUseUhBQXlILG9CQUFvQixjQUFjLCtHQUErRyx1REFBdUQsMENBQTBDLHFCQUFxQixzQkFBc0IseUNBQXlDLG1EQUFtRCxZQUFZLGFBQWEsaUdBQWlHLDZEQUE2RCxxQkFBcUIsdUNBQXVDLDZDQUE2QyxFQUFFLFdBQVcsd0NBQXdDLHlCQUF5QixtR0FBbUcsb0RBQW9ELFdBQVcsNENBQTRDLFlBQVksaUNBQWlDLG1EQUFtRCxHQUFHLGVBQWUsOEJBQThCLFdBQVcsa0JBQWtCLFlBQVksd0RBQXdELEVBQUUsZ0JBQWdCLGdCQUFnQixnREFBZ0QsaUJBQWlCLHdEQUF3RCxVQUFVLHFIQUFxSCxvQkFBb0IsY0FBYywwR0FBMEcsOENBQThDLEVBQUUsVUFBVSxzREFBc0Qsb0JBQW9CLGNBQWMsc0VBQXNFLHFEQUFxRCw4Q0FBOEMsc0VBQXNFLGtIQUFrSCxxQkFBcUIsdUNBQXVDLDJDQUEyQyxFQUFFLFdBQVcsdUVBQXVFLFdBQVcsMkVBQTJFLDJEQUEyRCwyR0FBMkcsR0FBRyxnQ0FBZ0MsZUFBZSwrQkFBK0IsVUFBVSxzREFBc0Qsb0JBQW9CLGNBQWMsK0RBQStELGdEQUFnRCwwRUFBMEUscUJBQXFCLHVDQUF1QyxzQ0FBc0MsRUFBRSxXQUFXLG9FQUFvRSxXQUFXLDJCQUEyQixZQUFZLHNCQUFzQixnQkFBZ0IsZ0NBQWdDLGlCQUFpQiwyQkFBMkIsdUJBQXVCLHNGQUFzRixVQUFVLDRDQUE0QyxvQkFBb0IsY0FBYyxpSEFBaUgsV0FBVyxxQ0FBcUMsb0JBQW9CLGNBQWMsb0VBQW9FLGdEQUFnRCxnREFBZ0QscUJBQXFCLHVDQUF1QyxVQUFVLEVBQUUsV0FBVyxpQ0FBaUMsV0FBVywyQkFBMkIsWUFBWSx1QkFBdUIsb0JBQW9CLGNBQWMsZ0VBQWdFLGdEQUFnRCwrQkFBK0IscUJBQXFCLG1JQUFtSSxxQkFBcUIsdUNBQXVDLFFBQVEsRUFBRSxXQUFXLHdCQUF3QixZQUFZLGtHQUFrRyxZQUFZLGlDQUFpQyxXQUFXLDBHQUEwRyxjQUFjLHdFQUF3RSxZQUFZLDRFQUE0RSxXQUFXLHlHQUF5RyxjQUFjLGtGQUFrRixVQUFVLDRGQUE0Rix3Q0FBd0Msb0JBQW9CLGNBQWMsMEVBQTBFLHdEQUF3RCxnQ0FBZ0MsMkRBQTJELDZEQUE2RCxxQ0FBcUMsZ0hBQWdILHFCQUFxQix1Q0FBdUMsc0NBQXNDLEVBQUUsV0FBVyx5QkFBeUIsWUFBWSxvQkFBb0IsVUFBVSxvSEFBb0gsb0JBQW9CLGNBQWMsMkVBQTJFLHdEQUF3RCw4QkFBOEIsaUNBQWlDLG1DQUFtQyx1RkFBdUYsdUhBQXVILHFCQUFxQix1Q0FBdUMsOENBQThDLEVBQUUsV0FBVyx1QkFBdUIsWUFBWSxrQkFBa0IsWUFBWSxtQ0FBbUMsV0FBVyx5QkFBeUIsWUFBWSxvQkFBb0IsV0FBVywrQ0FBK0MscUJBQXFCLG1CQUFtQixZQUFZLGtDQUFrQyw2Q0FBNkMsRUFBRSxzQ0FBc0MsV0FBVywwQ0FBMEMsVUFBVSxrSEFBa0gsaUJBQWlCLG9CQUFvQixjQUFjLDBFQUEwRSxxQkFBcUIsa0NBQWtDLGdDQUFnQywwRUFBMEUsVUFBVSx3RUFBd0Usb0JBQW9CLGNBQWMscUhBQXFILHFCQUFxQixzQ0FBc0MsZ0RBQWdELDZCQUE2QixpREFBaUQsbUJBQW1CLGdEQUFnRCxvQkFBb0IsaURBQWlELHVEQUF1RCx3RUFBd0UsMEJBQTBCLDREQUE0RCw2QkFBNkIsNkRBQTZELGlCQUFpQixnREFBZ0QsNllBQTZZLHFCQUFxQix1Q0FBdUMsd0NBQXdDLEVBQUUsVUFBVSwyUEFBMlAsb0JBQW9CLGNBQWMsZ0VBQWdFLHNFQUFzRSx5QkFBeUIsc0VBQXNFLHlCQUF5QixzRUFBc0Usd0JBQXdCLHFFQUFxRSx3QkFBd0IscUVBQXFFLHdCQUF3QixxRUFBcUUsbUJBQW1CLGdFQUFnRSxtQkFBbUIsZ0VBQWdFLG1CQUFtQixnRUFBZ0UsRUFBRSxxQkFBcUIsdUNBQXVDLHdGQUF3RixFQUFFLFVBQVUseU9BQXlPLFFBQVEsbUJBQW1CLFVBQVUsRUFBRSxXQUFXLHFCQUFxQixHQUFHLG9CQUFvQixjQUFjLGlHQUFpRyw2RUFBNkUseVdBQXlXLG9FQUFvRSx5QkFBeUIsb0VBQW9FLHlCQUF5QixvRUFBb0UsNEJBQTRCLDBFQUEwRSw0QkFBNEIsMEVBQTBFLDRCQUE0QiwwRUFBMEUsRUFBRSxxQkFBcUIsdUNBQXVDLHVPQUF1TyxFQUFFLG1CQUFtQixpRkFBaUYsc0JBQXNCLDBGQUEwRixtQkFBbUIsaUNBQWlDLG9CQUFvQiw0QkFBNEIsa0JBQWtCLGdDQUFnQyxtQkFBbUIsMkJBQTJCLG9CQUFvQixrQ0FBa0MscUJBQXFCLDZCQUE2QixvQkFBb0Isa0NBQWtDLHFCQUFxQiw2QkFBNkIscUJBQXFCLG1DQUFtQyxzQkFBc0IsOEJBQThCLHFCQUFxQixtQ0FBbUMsc0JBQXNCLDhCQUE4QixvQkFBb0Isa0NBQWtDLHFCQUFxQiw2QkFBNkIsa0JBQWtCLGdDQUFnQyxtQkFBbUIsMkJBQTJCLFVBQVUsc05BQXNOLG9CQUFvQixjQUFjLDJEQUEyRCx1Q0FBdUMsbUJBQW1CLHFCQUFxQix5TUFBeU0sb0JBQW9CLEVBQUUscUJBQXFCLHdCQUF3QixlQUFlLCtCQUErQix1QkFBdUIsa0RBQWtELFlBQVkscUdBQXFHLFFBQVEsMENBQTBDLHlEQUF5RCx5QkFBeUIsYUFBYSxzREFBc0QsOENBQThDLEdBQUcsc0NBQXNDLEdBQUcsT0FBTywwQ0FBMEMscURBQXFELHlCQUF5QixZQUFZLG9FQUFvRSxzREFBc0QsR0FBRyxxQ0FBcUMsR0FBRyxRQUFRLHlGQUF5RixVQUFVLDRFQUE0RSxvQkFBb0IsY0FBYyxxTUFBcU0sNkRBQTZELHVCQUF1Qiw4TEFBOEwsc0JBQXNCLG1LQUFtSyx1QkFBdUIsdUtBQXVLLG9CQUFvQiwwS0FBMEsscUJBQXFCLDhLQUE4SywyREFBMkQscUJBQXFCLHVDQUF1Qyx1REFBdUQsRUFBRSxnQkFBZ0Isa0NBQWtDLFVBQVUsMEtBQTBLLG9CQUFvQixjQUFjLGdHQUFnRyxpRUFBaUUsdUJBQXVCLDJDQUEyQyxtQkFBbUIsMkNBQTJDLHFCQUFxQixxQkFBcUIsaUNBQWlDLHFCQUFxQiwyRkFBMkYscUJBQXFCLHVDQUF1QywyQkFBMkIsRUFBRSxnQkFBZ0IsMEJBQTBCLGlCQUFpQixxQkFBcUIsZ0JBQWdCLGdDQUFnQyxpQkFBaUIsMkJBQTJCLFVBQVUsbUhBQW1ILG9CQUFvQixjQUFjLHVGQUF1RixxREFBcUQsZ0RBQWdELDRFQUE0RSxpRUFBaUUscUJBQXFCLHVDQUF1QyxjQUFjLEVBQUUsZ0JBQWdCLGtDQUFrQyxVQUFVLGlGQUFpRixvQkFBb0IsY0FBYyxtRkFBbUYsdUNBQXVDLHNDQUFzQyxxQkFBcUIseUNBQXlDLHFCQUFxQix1Q0FBdUMscUJBQXFCLDBDQUEwQyxxQkFBcUIsMEpBQTBKLHFCQUFxQix1Q0FBdUMsS0FBSyxxREFBcUQsT0FBTyxzREFBc0QsRUFBRSxVQUFVLDhIQUE4SCxvQkFBb0IsY0FBYyxxRkFBcUYsdUNBQXVDLGtDQUFrQywrRUFBK0Usb0hBQW9ILHFCQUFxQix1Q0FBdUMscUJBQXFCLHdDQUF3QyxxQkFBcUIsMENBQTBDLHFCQUFxQiwrTUFBK00scUJBQXFCLHVDQUF1Qyx3Q0FBd0MscURBQXFELE1BQU0scURBQXFELE9BQU8sc0RBQXNELEVBQUUsVUFBVSxzSUFBc0ksb0JBQW9CLGNBQWMsK0ZBQStGLHFCQUFxQiw0QkFBNEIsNERBQTRELHdDQUF3QywrRUFBK0Usd0JBQXdCLGlEQUFpRCx3QkFBd0IsaURBQWlELHlCQUF5QixrREFBa0QsMmZBQTJmLHFCQUFxQix1Q0FBdUMsdURBQXVELEVBQUUsVUFBVSxzVUFBc1Usb0JBQW9CLGNBQWMsNEhBQTRILHdEQUF3RCwrQkFBK0IseUJBQXlCLHNCQUFzQixxQkFBcUIsc0JBQXNCLHFCQUFxQiwySEFBMkgscUJBQXFCLHVDQUF1Qyx1QkFBdUIsRUFBRSxRQUFRLDBDQUEwQyx1Q0FBdUMsR0FBRyxhQUFhLDZDQUE2QyxjQUFjLG1NQUFtTSwyQkFBMkIsK0JBQStCLGdCQUFnQixpQ0FBaUMsaUJBQWlCLDRCQUE0QixVQUFVLGlGQUFpRixjQUFjLGtCQUFrQixjQUFjLHdCQUF3Qix3QkFBd0IsY0FBYyxzQkFBc0IsOENBQThDLGNBQWMsd0JBQXdCLHVCQUF1QixjQUFjLHFCQUFxQixtQkFBbUIsY0FBYyxpQkFBaUIsY0FBYyxjQUFjLG1CQUFtQix3QkFBd0IsTUFBTTtBQUMxcXNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90b25lL2J1aWxkL1RvbmUuanM/YmY5MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgRm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gcGxlYXNlIHNlZSBUb25lLmpzLkxJQ0VOU0UudHh0ICovXG4hZnVuY3Rpb24odCxlKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1lKCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXSxlKTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzLlRvbmU9ZSgpOnQuVG9uZT1lKCl9KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6dGhpcywoKCk9PigoKT0+e3ZhciB0PXszODI6ZnVuY3Rpb24odCxlLHMpeyFmdW5jdGlvbih0LGUscyxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1mdW5jdGlvbih0LGUscyl7cmV0dXJue2VuZFRpbWU6ZSxpbnNlcnRUaW1lOnMsdHlwZTpcImV4cG9uZW50aWFsUmFtcFRvVmFsdWVcIix2YWx1ZTp0fX0sbz1mdW5jdGlvbih0LGUscyl7cmV0dXJue2VuZFRpbWU6ZSxpbnNlcnRUaW1lOnMsdHlwZTpcImxpbmVhclJhbXBUb1ZhbHVlXCIsdmFsdWU6dH19LHI9ZnVuY3Rpb24odCxlKXtyZXR1cm57c3RhcnRUaW1lOmUsdHlwZTpcInNldFZhbHVlXCIsdmFsdWU6dH19LGE9ZnVuY3Rpb24odCxlLHMpe3JldHVybntkdXJhdGlvbjpzLHN0YXJ0VGltZTplLHR5cGU6XCJzZXRWYWx1ZUN1cnZlXCIsdmFsdWVzOnR9fSxjPWZ1bmN0aW9uKHQsZSxzKXt2YXIgbj1zLnN0YXJ0VGltZSxpPXMudGFyZ2V0LG89cy50aW1lQ29uc3RhbnQ7cmV0dXJuIGkrKGUtaSkqTWF0aC5leHAoKG4tdCkvbyl9LGg9ZnVuY3Rpb24odCl7cmV0dXJuXCJleHBvbmVudGlhbFJhbXBUb1ZhbHVlXCI9PT10LnR5cGV9LGw9ZnVuY3Rpb24odCl7cmV0dXJuXCJsaW5lYXJSYW1wVG9WYWx1ZVwiPT09dC50eXBlfSx1PWZ1bmN0aW9uKHQpe3JldHVybiBoKHQpfHxsKHQpfSxwPWZ1bmN0aW9uKHQpe3JldHVyblwic2V0VmFsdWVcIj09PXQudHlwZX0sZD1mdW5jdGlvbih0KXtyZXR1cm5cInNldFZhbHVlQ3VydmVcIj09PXQudHlwZX0sZj1mdW5jdGlvbiB0KGUscyxuLGkpe3ZhciBvPWVbc107cmV0dXJuIHZvaWQgMD09PW8/aTp1KG8pfHxwKG8pP28udmFsdWU6ZChvKT9vLnZhbHVlc1tvLnZhbHVlcy5sZW5ndGgtMV06YyhuLHQoZSxzLTEsby5zdGFydFRpbWUsaSksbyl9LF89ZnVuY3Rpb24odCxlLHMsbixpKXtyZXR1cm4gdm9pZCAwPT09cz9bbi5pbnNlcnRUaW1lLGldOnUocyk/W3MuZW5kVGltZSxzLnZhbHVlXTpwKHMpP1tzLnN0YXJ0VGltZSxzLnZhbHVlXTpkKHMpP1tzLnN0YXJ0VGltZStzLmR1cmF0aW9uLHMudmFsdWVzW3MudmFsdWVzLmxlbmd0aC0xXV06W3Muc3RhcnRUaW1lLGYodCxlLTEscy5zdGFydFRpbWUsaSldfSxtPWZ1bmN0aW9uKHQpe3JldHVyblwiY2FuY2VsQW5kSG9sZFwiPT09dC50eXBlfSxnPWZ1bmN0aW9uKHQpe3JldHVyblwiY2FuY2VsU2NoZWR1bGVkVmFsdWVzXCI9PT10LnR5cGV9LHY9ZnVuY3Rpb24odCl7cmV0dXJuIG0odCl8fGcodCk/dC5jYW5jZWxUaW1lOmgodCl8fGwodCk/dC5lbmRUaW1lOnQuc3RhcnRUaW1lfSx5PWZ1bmN0aW9uKHQsZSxzLG4pe3ZhciBpPW4uZW5kVGltZSxvPW4udmFsdWU7cmV0dXJuIHM9PT1vP286MDxzJiYwPG98fHM8MCYmbzwwP3MqTWF0aC5wb3coby9zLCh0LWUpLyhpLWUpKTowfSx4PWZ1bmN0aW9uKHQsZSxzLG4pe3JldHVybiBzKyh0LWUpLyhuLmVuZFRpbWUtZSkqKG4udmFsdWUtcyl9LHc9ZnVuY3Rpb24odCxlKXt2YXIgcz1lLmR1cmF0aW9uLG49ZS5zdGFydFRpbWUsaT1lLnZhbHVlcztyZXR1cm4gZnVuY3Rpb24odCxlKXt2YXIgcz1NYXRoLmZsb29yKGUpLG49TWF0aC5jZWlsKGUpO3JldHVybiBzPT09bj90W3NdOigxLShlLXMpKSp0W3NdKygxLShuLWUpKSp0W25dfShpLCh0LW4pL3MqKGkubGVuZ3RoLTEpKX0sYj1mdW5jdGlvbih0KXtyZXR1cm5cInNldFRhcmdldFwiPT09dC50eXBlfSxUPWZ1bmN0aW9uKCl7cmV0dXJuIG4oKGZ1bmN0aW9uIHQoZSl7cyh0aGlzLHQpLHRoaXMuX2F1dG9tYXRpb25FdmVudHM9W10sdGhpcy5fY3VycmVuVGltZT0wLHRoaXMuX2RlZmF1bHRWYWx1ZT1lfSksW3trZXk6U3ltYm9sLml0ZXJhdG9yLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2F1dG9tYXRpb25FdmVudHNbU3ltYm9sLml0ZXJhdG9yXSgpfX0se2tleTpcImFkZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXYodCk7aWYobSh0KXx8Zyh0KSl7dmFyIHM9dGhpcy5fYXV0b21hdGlvbkV2ZW50cy5maW5kSW5kZXgoKGZ1bmN0aW9uKHMpe3JldHVybiBnKHQpJiZkKHMpP3Muc3RhcnRUaW1lK3MuZHVyYXRpb24+PWU6dihzKT49ZX0pKSxuPXRoaXMuX2F1dG9tYXRpb25FdmVudHNbc107aWYoLTEhPT1zJiYodGhpcy5fYXV0b21hdGlvbkV2ZW50cz10aGlzLl9hdXRvbWF0aW9uRXZlbnRzLnNsaWNlKDAscykpLG0odCkpe3ZhciBjPXRoaXMuX2F1dG9tYXRpb25FdmVudHNbdGhpcy5fYXV0b21hdGlvbkV2ZW50cy5sZW5ndGgtMV07aWYodm9pZCAwIT09biYmdShuKSl7aWYodm9pZCAwIT09YyYmYihjKSl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgaW50ZXJuYWwgbGlzdCBpcyBtYWxmb3JtZWQuXCIpO3ZhciBwPXZvaWQgMD09PWM/bi5pbnNlcnRUaW1lOmQoYyk/Yy5zdGFydFRpbWUrYy5kdXJhdGlvbjp2KGMpLGY9dm9pZCAwPT09Yz90aGlzLl9kZWZhdWx0VmFsdWU6ZChjKT9jLnZhbHVlc1tjLnZhbHVlcy5sZW5ndGgtMV06Yy52YWx1ZSxfPWgobik/eShlLHAsZixuKTp4KGUscCxmLG4pLHc9aChuKT9pKF8sZSx0aGlzLl9jdXJyZW5UaW1lKTpvKF8sZSx0aGlzLl9jdXJyZW5UaW1lKTt0aGlzLl9hdXRvbWF0aW9uRXZlbnRzLnB1c2godyl9aWYodm9pZCAwIT09YyYmYihjKSYmdGhpcy5fYXV0b21hdGlvbkV2ZW50cy5wdXNoKHIodGhpcy5nZXRWYWx1ZShlKSxlKSksdm9pZCAwIT09YyYmZChjKSYmYy5zdGFydFRpbWUrYy5kdXJhdGlvbj5lKXt2YXIgVD1lLWMuc3RhcnRUaW1lLFM9KGMudmFsdWVzLmxlbmd0aC0xKS9jLmR1cmF0aW9uLGs9TWF0aC5tYXgoMiwxK01hdGguY2VpbChUKlMpKSxBPVQvKGstMSkqUyxDPWMudmFsdWVzLnNsaWNlKDAsayk7aWYoQTwxKWZvcih2YXIgRD0xO0Q8aztEKz0xKXt2YXIgTz1BKkQlMTtDW0RdPWMudmFsdWVzW0QtMV0qKDEtTykrYy52YWx1ZXNbRF0qT310aGlzLl9hdXRvbWF0aW9uRXZlbnRzW3RoaXMuX2F1dG9tYXRpb25FdmVudHMubGVuZ3RoLTFdPWEoQyxjLnN0YXJ0VGltZSxUKX19fWVsc2V7dmFyIE09dGhpcy5fYXV0b21hdGlvbkV2ZW50cy5maW5kSW5kZXgoKGZ1bmN0aW9uKHQpe3JldHVybiB2KHQpPmV9KSksRT0tMT09PU0/dGhpcy5fYXV0b21hdGlvbkV2ZW50c1t0aGlzLl9hdXRvbWF0aW9uRXZlbnRzLmxlbmd0aC0xXTp0aGlzLl9hdXRvbWF0aW9uRXZlbnRzW00tMV07aWYodm9pZCAwIT09RSYmZChFKSYmdihFKStFLmR1cmF0aW9uPmUpcmV0dXJuITE7dmFyIFI9aCh0KT9pKHQudmFsdWUsdC5lbmRUaW1lLHRoaXMuX2N1cnJlblRpbWUpOmwodCk/byh0LnZhbHVlLGUsdGhpcy5fY3VycmVuVGltZSk6dDtpZigtMT09PU0pdGhpcy5fYXV0b21hdGlvbkV2ZW50cy5wdXNoKFIpO2Vsc2V7aWYoZCh0KSYmZSt0LmR1cmF0aW9uPnYodGhpcy5fYXV0b21hdGlvbkV2ZW50c1tNXSkpcmV0dXJuITE7dGhpcy5fYXV0b21hdGlvbkV2ZW50cy5zcGxpY2UoTSwwLFIpfX1yZXR1cm4hMH19LHtrZXk6XCJmbHVzaFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2F1dG9tYXRpb25FdmVudHMuZmluZEluZGV4KChmdW5jdGlvbihlKXtyZXR1cm4gdihlKT50fSkpO2lmKGU+MSl7dmFyIHM9dGhpcy5fYXV0b21hdGlvbkV2ZW50cy5zbGljZShlLTEpLG49c1swXTtiKG4pJiZzLnVuc2hpZnQocihmKHRoaXMuX2F1dG9tYXRpb25FdmVudHMsZS0yLG4uc3RhcnRUaW1lLHRoaXMuX2RlZmF1bHRWYWx1ZSksbi5zdGFydFRpbWUpKSx0aGlzLl9hdXRvbWF0aW9uRXZlbnRzPXN9fX0se2tleTpcImdldFZhbHVlXCIsdmFsdWU6ZnVuY3Rpb24odCl7aWYoMD09PXRoaXMuX2F1dG9tYXRpb25FdmVudHMubGVuZ3RoKXJldHVybiB0aGlzLl9kZWZhdWx0VmFsdWU7dmFyIHM9dGhpcy5fYXV0b21hdGlvbkV2ZW50cy5maW5kSW5kZXgoKGZ1bmN0aW9uKGUpe3JldHVybiB2KGUpPnR9KSksbj10aGlzLl9hdXRvbWF0aW9uRXZlbnRzW3NdLGk9KC0xPT09cz90aGlzLl9hdXRvbWF0aW9uRXZlbnRzLmxlbmd0aDpzKS0xLG89dGhpcy5fYXV0b21hdGlvbkV2ZW50c1tpXTtpZih2b2lkIDAhPT1vJiZiKG8pJiYodm9pZCAwPT09bnx8IXUobil8fG4uaW5zZXJ0VGltZT50KSlyZXR1cm4gYyh0LGYodGhpcy5fYXV0b21hdGlvbkV2ZW50cyxpLTEsby5zdGFydFRpbWUsdGhpcy5fZGVmYXVsdFZhbHVlKSxvKTtpZih2b2lkIDAhPT1vJiZwKG8pJiYodm9pZCAwPT09bnx8IXUobikpKXJldHVybiBvLnZhbHVlO2lmKHZvaWQgMCE9PW8mJmQobykmJih2b2lkIDA9PT1ufHwhdShuKXx8by5zdGFydFRpbWUrby5kdXJhdGlvbj50KSlyZXR1cm4gdDxvLnN0YXJ0VGltZStvLmR1cmF0aW9uP3codCxvKTpvLnZhbHVlc1tvLnZhbHVlcy5sZW5ndGgtMV07aWYodm9pZCAwIT09byYmdShvKSYmKHZvaWQgMD09PW58fCF1KG4pKSlyZXR1cm4gby52YWx1ZTtpZih2b2lkIDAhPT1uJiZoKG4pKXt2YXIgcj1fKHRoaXMuX2F1dG9tYXRpb25FdmVudHMsaSxvLG4sdGhpcy5fZGVmYXVsdFZhbHVlKSxhPWUociwyKSxtPWFbMF0sZz1hWzFdO3JldHVybiB5KHQsbSxnLG4pfWlmKHZvaWQgMCE9PW4mJmwobikpe3ZhciBUPV8odGhpcy5fYXV0b21hdGlvbkV2ZW50cyxpLG8sbix0aGlzLl9kZWZhdWx0VmFsdWUpLFM9ZShULDIpLGs9U1swXSxBPVNbMV07cmV0dXJuIHgodCxrLEEsbil9cmV0dXJuIHRoaXMuX2RlZmF1bHRWYWx1ZX19XSl9KCk7dC5BdXRvbWF0aW9uRXZlbnRMaXN0PVQsdC5jcmVhdGVDYW5jZWxBbmRIb2xkQXV0b21hdGlvbkV2ZW50PWZ1bmN0aW9uKHQpe3JldHVybntjYW5jZWxUaW1lOnQsdHlwZTpcImNhbmNlbEFuZEhvbGRcIn19LHQuY3JlYXRlQ2FuY2VsU2NoZWR1bGVkVmFsdWVzQXV0b21hdGlvbkV2ZW50PWZ1bmN0aW9uKHQpe3JldHVybntjYW5jZWxUaW1lOnQsdHlwZTpcImNhbmNlbFNjaGVkdWxlZFZhbHVlc1wifX0sdC5jcmVhdGVFeHBvbmVudGlhbFJhbXBUb1ZhbHVlQXV0b21hdGlvbkV2ZW50PWZ1bmN0aW9uKHQsZSl7cmV0dXJue2VuZFRpbWU6ZSx0eXBlOlwiZXhwb25lbnRpYWxSYW1wVG9WYWx1ZVwiLHZhbHVlOnR9fSx0LmNyZWF0ZUxpbmVhclJhbXBUb1ZhbHVlQXV0b21hdGlvbkV2ZW50PWZ1bmN0aW9uKHQsZSl7cmV0dXJue2VuZFRpbWU6ZSx0eXBlOlwibGluZWFyUmFtcFRvVmFsdWVcIix2YWx1ZTp0fX0sdC5jcmVhdGVTZXRUYXJnZXRBdXRvbWF0aW9uRXZlbnQ9ZnVuY3Rpb24odCxlLHMpe3JldHVybntzdGFydFRpbWU6ZSx0YXJnZXQ6dCx0aW1lQ29uc3RhbnQ6cyx0eXBlOlwic2V0VGFyZ2V0XCJ9fSx0LmNyZWF0ZVNldFZhbHVlQXV0b21hdGlvbkV2ZW50PXIsdC5jcmVhdGVTZXRWYWx1ZUN1cnZlQXV0b21hdGlvbkV2ZW50PWF9KGUscyg0MjQpLHMoNjkwKSxzKDcyOCkpfSw4OTc6dD0+e3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpeyhudWxsPT1lfHxlPnQubGVuZ3RoKSYmKGU9dC5sZW5ndGgpO2Zvcih2YXIgcz0wLG49bmV3IEFycmF5KGUpO3M8ZTtzKyspbltzXT10W3NdO3JldHVybiBufSx0LmV4cG9ydHMuX19lc01vZHVsZT0hMCx0LmV4cG9ydHMuZGVmYXVsdD10LmV4cG9ydHN9LDM3Mjp0PT57dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHR9LHQuZXhwb3J0cy5fX2VzTW9kdWxlPSEwLHQuZXhwb3J0cy5kZWZhdWx0PXQuZXhwb3J0c30sNjkwOnQ9Pnt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSx0LmV4cG9ydHMuX19lc01vZHVsZT0hMCx0LmV4cG9ydHMuZGVmYXVsdD10LmV4cG9ydHN9LDcyODoodCxlLHMpPT57dmFyIG49cyg2Mik7ZnVuY3Rpb24gaSh0LGUpe2Zvcih2YXIgcz0wO3M8ZS5sZW5ndGg7cysrKXt2YXIgaT1lW3NdO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuKGkua2V5KSxpKX19dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxzKXtyZXR1cm4gZSYmaSh0LnByb3RvdHlwZSxlKSxzJiZpKHQscyksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fSx0LmV4cG9ydHMuX19lc01vZHVsZT0hMCx0LmV4cG9ydHMuZGVmYXVsdD10LmV4cG9ydHN9LDg3Mjp0PT57dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIHM9bnVsbD09dD9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJnRbU3ltYm9sLml0ZXJhdG9yXXx8dFtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9cyl7dmFyIG4saSxvLHIsYT1bXSxjPSEwLGg9ITE7dHJ5e2lmKG89KHM9cy5jYWxsKHQpKS5uZXh0LDA9PT1lKXtpZihPYmplY3QocykhPT1zKXJldHVybjtjPSExfWVsc2UgZm9yKDshKGM9KG49by5jYWxsKHMpKS5kb25lKSYmKGEucHVzaChuLnZhbHVlKSxhLmxlbmd0aCE9PWUpO2M9ITApO31jYXRjaCh0KXtoPSEwLGk9dH1maW5hbGx5e3RyeXtpZighYyYmbnVsbCE9cy5yZXR1cm4mJihyPXMucmV0dXJuKCksT2JqZWN0KHIpIT09cikpcmV0dXJufWZpbmFsbHl7aWYoaCl0aHJvdyBpfX1yZXR1cm4gYX19LHQuZXhwb3J0cy5fX2VzTW9kdWxlPSEwLHQuZXhwb3J0cy5kZWZhdWx0PXQuZXhwb3J0c30sMjE4OnQ9Pnt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSx0LmV4cG9ydHMuX19lc01vZHVsZT0hMCx0LmV4cG9ydHMuZGVmYXVsdD10LmV4cG9ydHN9LDQyNDoodCxlLHMpPT57dmFyIG49cygzNzIpLGk9cyg4NzIpLG89cygxMTYpLHI9cygyMTgpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiBuKHQpfHxpKHQsZSl8fG8odCxlKXx8cigpfSx0LmV4cG9ydHMuX19lc01vZHVsZT0hMCx0LmV4cG9ydHMuZGVmYXVsdD10LmV4cG9ydHN9LDM2Oih0LGUscyk9Pnt2YXIgbj1zKDY5OCkuZGVmYXVsdDt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZihcIm9iamVjdFwiIT1uKHQpfHwhdClyZXR1cm4gdDt2YXIgcz10W1N5bWJvbC50b1ByaW1pdGl2ZV07aWYodm9pZCAwIT09cyl7dmFyIGk9cy5jYWxsKHQsZXx8XCJkZWZhdWx0XCIpO2lmKFwib2JqZWN0XCIhPW4oaSkpcmV0dXJuIGk7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpfXJldHVybihcInN0cmluZ1wiPT09ZT9TdHJpbmc6TnVtYmVyKSh0KX0sdC5leHBvcnRzLl9fZXNNb2R1bGU9ITAsdC5leHBvcnRzLmRlZmF1bHQ9dC5leHBvcnRzfSw2MjoodCxlLHMpPT57dmFyIG49cyg2OTgpLmRlZmF1bHQsaT1zKDM2KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGU9aSh0LFwic3RyaW5nXCIpO3JldHVyblwic3ltYm9sXCI9PW4oZSk/ZTplK1wiXCJ9LHQuZXhwb3J0cy5fX2VzTW9kdWxlPSEwLHQuZXhwb3J0cy5kZWZhdWx0PXQuZXhwb3J0c30sNjk4OnQ9PntmdW5jdGlvbiBlKHMpe3JldHVybiB0LmV4cG9ydHM9ZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSx0LmV4cG9ydHMuX19lc01vZHVsZT0hMCx0LmV4cG9ydHMuZGVmYXVsdD10LmV4cG9ydHMsZShzKX10LmV4cG9ydHM9ZSx0LmV4cG9ydHMuX19lc01vZHVsZT0hMCx0LmV4cG9ydHMuZGVmYXVsdD10LmV4cG9ydHN9LDExNjoodCxlLHMpPT57dmFyIG49cyg4OTcpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2lmKHQpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBuKHQsZSk7dmFyIHM9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1zJiZ0LmNvbnN0cnVjdG9yJiYocz10LmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1zfHxcIlNldFwiPT09cz9BcnJheS5mcm9tKHQpOlwiQXJndW1lbnRzXCI9PT1zfHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChzKT9uKHQsZSk6dm9pZCAwfX0sdC5leHBvcnRzLl9fZXNNb2R1bGU9ITAsdC5leHBvcnRzLmRlZmF1bHQ9dC5leHBvcnRzfX0sZT17fTtmdW5jdGlvbiBzKG4pe3ZhciBpPWVbbl07aWYodm9pZCAwIT09aSlyZXR1cm4gaS5leHBvcnRzO3ZhciBvPWVbbl09e2V4cG9ydHM6e319O3JldHVybiB0W25dLmNhbGwoby5leHBvcnRzLG8sby5leHBvcnRzLHMpLG8uZXhwb3J0c31zLmQ9KHQsZSk9Pntmb3IodmFyIG4gaW4gZSlzLm8oZSxuKSYmIXMubyh0LG4pJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLHtlbnVtZXJhYmxlOiEwLGdldDplW25dfSl9LHMubz0odCxlKT0+T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkscy5yPXQ9PntcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfTt2YXIgbj17fTtyZXR1cm4oKCk9PntcInVzZSBzdHJpY3RcIjtzLnIobikscy5kKG4se0FNT3NjaWxsYXRvcjooKT0+JG8sQU1TeW50aDooKT0+Q3IsQWJzOigpPT5wcixBZGQ6KCk9Pm5yLEFtcGxpdHVkZUVudmVsb3BlOigpPT5TcixBbmFseXNlcjooKT0+WGEsQXVkaW9Ub0dhaW46KCk9PlhvLEF1dG9GaWx0ZXI6KCk9PnVhLEF1dG9QYW5uZXI6KCk9PmRhLEF1dG9XYWg6KCk9Pl9hLEJhc2VDb250ZXh0OigpPT5DaSxCaXF1YWRGaWx0ZXI6KCk9PkRyLEJpdENydXNoZXI6KCk9PmdhLEJ1ZmZlcjooKT0+RGMsQnVmZmVyU291cmNlOigpPT5NYyxCdWZmZXJzOigpPT5PYyxDaGFubmVsOigpPT5zYyxDaGVieXNoZXY6KCk9PnlhLENob3J1czooKT0+U2EsQ2xvY2s6KCk9PnZvLENvbXByZXNzb3I6KCk9PmNjLENvbnRleHQ6KCk9PkRpLENvbnZvbHZlcjooKT0+ZmMsQ3Jvc3NGYWRlOigpPT5jYSxEQ01ldGVyOigpPT5KYSxEZWxheTooKT0+eW8sRGVzdGluYXRpb246KCk9PnljLERpc3RvcnRpb246KCk9PmthLERyYXc6KCk9PlNjLER1b1N5bnRoOigpPT5ScixFUTM6KCk9PmRjLEVtaXR0ZXI6KCk9PkFpLEVudmVsb3BlOigpPT54cixGRlQ6KCk9PkhhLEZNT3NjaWxsYXRvcjooKT0+SG8sRk1TeW50aDooKT0+cXIsRmF0T3NjaWxsYXRvcjooKT0+S28sRmVlZGJhY2tDb21iRmlsdGVyOigpPT5CcixGZWVkYmFja0RlbGF5OigpPT5DYSxGaWx0ZXI6KCk9Pk9yLEZvbGxvd2VyOigpPT5mYSxGcmVldmVyYjooKT0+UmEsRnJlcXVlbmN5OigpPT5KaSxGcmVxdWVuY3lDbGFzczooKT0+WWksRnJlcXVlbmN5RW52ZWxvcGU6KCk9Pk1yLEZyZXF1ZW5jeVNoaWZ0ZXI6KCk9Pk9hLEdhaW46KCk9PmhvLEdhaW5Ub0F1ZGlvOigpPT5kcixHYXRlOigpPT5oYyxHcmFpblBsYXllcjooKT0+dXIsR3JlYXRlclRoYW46KCk9PmdyLEdyZWF0ZXJUaGFuWmVybzooKT0+bXIsSW50ZXJ2YWxUaW1lbGluZTooKT0+Q28sSkNSZXZlcmI6KCk9PlZhLExGTzooKT0+cnIsTGltaXRlcjooKT0+bGMsTGlzdGVuZXI6KCk9PmJjLExvb3A6KCk9PiRyLExvd3Bhc3NDb21iRmlsdGVyOigpPT5HcixNYXN0ZXI6KCk9PnhjLE1lbWJyYW5lU3ludGg6KCk9PlZyLE1lcmdlOigpPT53YSxNZXRhbFN5bnRoOigpPT5JcixNZXRlcjooKT0+JGEsTWlkU2lkZUNvbXByZXNzb3I6KCk9PnVjLE1pZFNpZGVNZXJnZTooKT0+QmEsTWlkU2lkZVNwbGl0OigpPT5XYSxNaWRpOigpPT5UbyxNaWRpQ2xhc3M6KCk9PmJvLE1vbm86KCk9Pm5jLE1vbm9TeW50aDooKT0+RXIsTXVsdGliYW5kQ29tcHJlc3NvcjooKT0+cGMsTXVsdGliYW5kU3BsaXQ6KCk9PmljLE11bHRpcGx5OigpPT5ZbyxOZWdhdGU6KCk9PmZyLE5vaXNlOigpPT5MbyxOb2lzZVN5bnRoOigpPT5OcixPZmZsaW5lOigpPT54byxPZmZsaW5lQ29udGV4dDooKT0+cWksT21uaU9zY2lsbGF0b3I6KCk9PnNyLE9uZVBvbGVGaWx0ZXI6KCk9PlVyLE9zY2lsbGF0b3I6KCk9PlpvLFBXTU9zY2lsbGF0b3I6KCk9PnRyLFBhblZvbDooKT0+ZWMsUGFubmVyOigpPT5wYSxQYW5uZXIzRDooKT0+cmMsUGFyYW06KCk9Pm5vLFBhcnQ6KCk9PkhyLFBhdHRlcm46KCk9PnJhLFBoYXNlcjooKT0+TGEsUGluZ1BvbmdEZWxheTooKT0+UGEsUGl0Y2hTaGlmdDooKT0+amEsUGxheWVyOigpPT5ocixQbGF5ZXJzOigpPT5scixQbHVja1N5bnRoOigpPT5RcixQb2x5U3ludGg6KCk9PlpyLFBvdzooKT0+Rm8sUHVsc2VPc2NpbGxhdG9yOigpPT5KbyxSZWNvcmRlcjooKT0+YWMsUmV2ZXJiOigpPT56YSxTYW1wbGVyOigpPT5YcixTY2FsZTooKT0+aXIsU2NhbGVFeHA6KCk9PnZyLFNlcXVlbmNlOigpPT5hYSxTaWduYWw6KCk9PnBvLFNvbG86KCk9PnRjLFNwbGl0OigpPT54YSxTdGF0ZVRpbWVsaW5lOigpPT5zbyxTdGVyZW9XaWRlbmVyOigpPT5HYSxTdWJ0cmFjdDooKT0+X3IsU3luY2VkU2lnbmFsOigpPT55cixTeW50aDooKT0+a3IsVGlja3M6KCk9PmtvLFRpY2tzQ2xhc3M6KCk9PlNvLFRpbWU6KCk9PlhpLFRpbWVDbGFzczooKT0+WmksVGltZWxpbmU6KCk9PndpLFRvbmVBdWRpb0J1ZmZlcjooKT0+UmksVG9uZUF1ZGlvQnVmZmVyczooKT0+d28sVG9uZUF1ZGlvTm9kZTooKT0+aW8sVG9uZUJ1ZmZlclNvdXJjZTooKT0+am8sVG9uZUV2ZW50OigpPT5ZcixUb25lT3NjaWxsYXRvck5vZGU6KCk9PlFvLFRyYW5zcG9ydDooKT0+Z2MsVHJhbnNwb3J0VGltZTooKT0+dG8sVHJhbnNwb3J0VGltZUNsYXNzOigpPT5LaSxUcmVtb2xvOigpPT5RYSxVbml0OigpPT5lLFVzZXJNZWRpYTooKT0+VW8sVmlicmF0bzooKT0+WmEsVm9sdW1lOigpPT5PbyxXYXZlU2hhcGVyOigpPT5xbyxXYXZlZm9ybTooKT0+S2EsWmVybzooKT0+b3IsY29ubmVjdDooKT0+cm8sY29ubmVjdFNlcmllczooKT0+b28sY29ubmVjdFNpZ25hbDooKT0+Zm8sY29udGV4dDooKT0+QWMsZGJUb0dhaW46KCk9PmppLGRlYnVnOigpPT50LGRlZmF1bHRBcmc6KCk9PnBpLGRpc2Nvbm5lY3Q6KCk9PmFvLGZhbkluOigpPT5jbyxmdG9tOigpPT5CaSxnYWluVG9EYjooKT0+TGksZ2V0Q29udGV4dDooKT0+VmksZ2V0RGVzdGluYXRpb246KCk9PndjLGdldERyYXc6KCk9PmtjLGdldExpc3RlbmVyOigpPT5UYyxnZXRUcmFuc3BvcnQ6KCk9PnZjLGltbWVkaWF0ZTooKT0+bWMsaW50ZXJ2YWxUb0ZyZXF1ZW5jeVJhdGlvOigpPT56aSxpc0FycmF5OigpPT5Mbixpc0Jvb2xlYW46KCk9PmpuLGlzRGVmaW5lZDooKT0+SW4saXNGdW5jdGlvbjooKT0+Vm4saXNOb3RlOigpPT5Xbixpc051bWJlcjooKT0+Tm4saXNPYmplY3Q6KCk9PlBuLGlzU3RyaW5nOigpPT56bixpc1VuZGVmOigpPT5Gbixsb2FkZWQ6KCk9PkNjLG10b2Y6KCk9PkdpLG5vdzooKT0+X2Msb3B0aW9uc0Zyb21Bcmd1bWVudHM6KCk9PnVpLHNldENvbnRleHQ6KCk9Pk5pLHN0YXJ0OigpPT5QaSxzdXBwb3J0ZWQ6KCk9PnFuLHZlcnNpb246KCk9Pml9KTt2YXIgdD17fTtzLnIodCkscy5kKHQse2Fzc2VydDooKT0+Qm4sYXNzZXJ0Q29udGV4dFJ1bm5pbmc6KCk9PkduLGFzc2VydFJhbmdlOigpPT5Vbixhc3NlcnRVc2VkU2NoZWR1bGVUaW1lOigpPT5ZbixlbnRlclNjaGVkdWxlZENhbGxiYWNrOigpPT5Ybixsb2c6KCk9PkpuLHNldExvZ2dlcjooKT0+SG4sd2FybjooKT0+S259KTt2YXIgZT17fTtzLnIoZSk7Y29uc3QgaT1cIjE0LjkuMTdcIjt2YXIgbz1zKDM4Mik7Y29uc3Qgcj1uZXcgV2Vha1NldCxhPW5ldyBXZWFrTWFwLGM9bmV3IFdlYWtNYXAsaD1uZXcgV2Vha01hcCxsPW5ldyBXZWFrTWFwLHU9bmV3IFdlYWtNYXAscD1uZXcgV2Vha01hcCxkPW5ldyBXZWFrTWFwLGY9bmV3IFdlYWtNYXAsXz1uZXcgV2Vha01hcCxtPXtjb25zdHJ1Y3Q6KCk9Pm19LGc9L15pbXBvcnQoPzooPzpbXFxzXStbXFx3XSt8KD86W1xcc10rW1xcd10rW1xcc10qLCk/W1xcc10qXFx7W1xcc10qW1xcd10rKD86W1xcc10rYXNbXFxzXStbXFx3XSspPyg/OltcXHNdKixbXFxzXSpbXFx3XSsoPzpbXFxzXSthc1tcXHNdK1tcXHddKyk/KSpbXFxzXSp9fCg/OltcXHNdK1tcXHddK1tcXHNdKiwpP1tcXHNdKlxcKltcXHNdK2FzW1xcc10rW1xcd10rKVtcXHNdK2Zyb20pPyg/OltcXHNdKikoXCIoW15cIlxcXFxdfFxcXFwuKStcInwnKFteJ1xcXFxdfFxcXFwuKSsnKSg/OltcXHNdKik7Py8sdj0odCxlKT0+e2NvbnN0IHM9W107bGV0IG49dC5yZXBsYWNlKC9eW1xcc10rLyxcIlwiKSxpPW4ubWF0Y2goZyk7Zm9yKDtudWxsIT09aTspe2NvbnN0IHQ9aVsxXS5zbGljZSgxLC0xKSxvPWlbMF0ucmVwbGFjZSgvKFtcXHNdKyk/Oz8kLyxcIlwiKS5yZXBsYWNlKHQsbmV3IFVSTCh0LGUpLnRvU3RyaW5nKCkpO3MucHVzaChvKSxuPW4uc2xpY2UoaVswXS5sZW5ndGgpLnJlcGxhY2UoL15bXFxzXSsvLFwiXCIpLGk9bi5tYXRjaChnKX1yZXR1cm5bcy5qb2luKFwiO1wiKSxuXX0seT10PT57aWYodm9pZCAwIT09dCYmIUFycmF5LmlzQXJyYXkodCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBwYXJhbWV0ZXJEZXNjcmlwdG9ycyBwcm9wZXJ0eSBvZiBnaXZlbiB2YWx1ZSBmb3IgcHJvY2Vzc29yQ3RvciBpcyBub3QgYW4gYXJyYXkuXCIpfSx4PXQ9PntpZighKHQ9Pnt0cnl7bmV3IG5ldyBQcm94eSh0LG0pfWNhdGNoe3JldHVybiExfXJldHVybiEwfSkodCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBnaXZlbiB2YWx1ZSBmb3IgcHJvY2Vzc29yQ3RvciBzaG91bGQgYmUgYSBjb25zdHJ1Y3Rvci5cIik7aWYobnVsbD09PXQucHJvdG90eXBlfHxcIm9iamVjdFwiIT10eXBlb2YgdC5wcm90b3R5cGUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBnaXZlbiB2YWx1ZSBmb3IgcHJvY2Vzc29yQ3RvciBzaG91bGQgaGF2ZSBhIHByb3RvdHlwZS5cIil9LHc9KHQsZSk9Pntjb25zdCBzPXQuZ2V0KGUpO2lmKHZvaWQgMD09PXMpdGhyb3cgbmV3IEVycm9yKFwiQSB2YWx1ZSB3aXRoIHRoZSBnaXZlbiBrZXkgY291bGQgbm90IGJlIGZvdW5kLlwiKTtyZXR1cm4gc30sYj0odCxlKT0+e2NvbnN0IHM9QXJyYXkuZnJvbSh0KS5maWx0ZXIoZSk7aWYocy5sZW5ndGg+MSl0aHJvdyBFcnJvcihcIk1vcmUgdGhhbiBvbmUgZWxlbWVudCB3YXMgZm91bmQuXCIpO2lmKDA9PT1zLmxlbmd0aCl0aHJvdyBFcnJvcihcIk5vIGVsZW1lbnQgd2FzIGZvdW5kLlwiKTtjb25zdFtuXT1zO3JldHVybiB0LmRlbGV0ZShuKSxufSxUPSh0LGUscyxuKT0+e2NvbnN0IGk9dyh0LGUpLG89YihpLCh0PT50WzBdPT09cyYmdFsxXT09PW4pKTtyZXR1cm4gMD09PWkuc2l6ZSYmdC5kZWxldGUoZSksb30sUz10PT53KHAsdCksaz10PT57aWYoci5oYXModCkpdGhyb3cgbmV3IEVycm9yKFwiVGhlIEF1ZGlvTm9kZSBpcyBhbHJlYWR5IHN0b3JlZC5cIik7ci5hZGQodCksUyh0KS5mb3JFYWNoKCh0PT50KCEwKSkpfSxBPXQ9PlwicG9ydFwiaW4gdCxDPXQ9PntpZighci5oYXModCkpdGhyb3cgbmV3IEVycm9yKFwiVGhlIEF1ZGlvTm9kZSBpcyBub3Qgc3RvcmVkLlwiKTtyLmRlbGV0ZSh0KSxTKHQpLmZvckVhY2goKHQ9PnQoITEpKSl9LEQ9KHQsZSk9PnshQSh0KSYmZS5ldmVyeSgodD0+MD09PXQuc2l6ZSkpJiZDKHQpfSxPPXtjaGFubmVsQ291bnQ6MixjaGFubmVsQ291bnRNb2RlOlwibWF4XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIixmZnRTaXplOjIwNDgsbWF4RGVjaWJlbHM6LTMwLG1pbkRlY2liZWxzOi0xMDAsc21vb3RoaW5nVGltZUNvbnN0YW50Oi44fSxNPSh0LGUpPT50LmNvbnRleHQ9PT1lLEU9dD0+e3RyeXt0LmNvcHlUb0NoYW5uZWwobmV3IEZsb2F0MzJBcnJheSgxKSwwLC0xKX1jYXRjaHtyZXR1cm4hMX1yZXR1cm4hMH0sUj0oKT0+bmV3IERPTUV4Y2VwdGlvbihcIlwiLFwiSW5kZXhTaXplRXJyb3JcIikscT10PT57dmFyIGU7dC5nZXRDaGFubmVsRGF0YT0oZT10LmdldENoYW5uZWxEYXRhLHM9Pnt0cnl7cmV0dXJuIGUuY2FsbCh0LHMpfWNhdGNoKHQpe2lmKDEyPT09dC5jb2RlKXRocm93IFIoKTt0aHJvdyB0fX0pfSxGPXtudW1iZXJPZkNoYW5uZWxzOjF9LEk9LTM0MDI4MjM0NjYzODUyODg2ZTIyLFY9LUksTj10PT5yLmhhcyh0KSxQPXtidWZmZXI6bnVsbCxjaGFubmVsQ291bnQ6MixjaGFubmVsQ291bnRNb2RlOlwibWF4XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIixsb29wOiExLGxvb3BFbmQ6MCxsb29wU3RhcnQ6MCxwbGF5YmFja1JhdGU6MX0saj10PT53KGEsdCksTD10PT53KGgsdCksej0odCxlKT0+e2NvbnN0e2FjdGl2ZUlucHV0czpzfT1qKHQpO3MuZm9yRWFjaCgocz0+cy5mb3JFYWNoKCgoW3NdKT0+e2UuaW5jbHVkZXModCl8fHoocyxbLi4uZSx0XSl9KSkpKTtjb25zdCBuPSh0PT5cInBsYXliYWNrUmF0ZVwiaW4gdCkodCk/W3QucGxheWJhY2tSYXRlXTpBKHQpP0FycmF5LmZyb20odC5wYXJhbWV0ZXJzLnZhbHVlcygpKToodD0+XCJmcmVxdWVuY3lcImluIHQmJlwiZ2FpblwiaW4gdCkodCk/W3QuUSx0LmRldHVuZSx0LmZyZXF1ZW5jeSx0LmdhaW5dOih0PT5cIm9mZnNldFwiaW4gdCkodCk/W3Qub2Zmc2V0XToodD0+IShcImZyZXF1ZW5jeVwiaW4gdCkmJlwiZ2FpblwiaW4gdCkodCk/W3QuZ2Fpbl06KHQ9PlwiZGV0dW5lXCJpbiB0JiZcImZyZXF1ZW5jeVwiaW4gdCkodCk/W3QuZGV0dW5lLHQuZnJlcXVlbmN5XToodD0+XCJwYW5cImluIHQpKHQpP1t0LnBhbl06W107Zm9yKGNvbnN0IHQgb2Ygbil7Y29uc3Qgcz1MKHQpO3ZvaWQgMCE9PXMmJnMuYWN0aXZlSW5wdXRzLmZvckVhY2goKChbdF0pPT56KHQsZSkpKX1OKHQpJiZDKHQpfSxXPXQ9Pnt6KHQuZGVzdGluYXRpb24sW10pfSxCPXQ9PlwiY29udGV4dFwiaW4gdCxVPXQ9PkIodFswXSksRz0odCxlLHMsbik9Pntmb3IoY29uc3QgZSBvZiB0KWlmKHMoZSkpe2lmKG4pcmV0dXJuITE7dGhyb3cgRXJyb3IoXCJUaGUgc2V0IGNvbnRhaW5zIGF0IGxlYXN0IG9uZSBzaW1pbGFyIGVsZW1lbnQuXCIpfXJldHVybiB0LmFkZChlKSwhMH0sUT0odCxlLFtzLG5dLGkpPT57Ryh0LFtlLHMsbl0sKHQ9PnRbMF09PT1lJiZ0WzFdPT09cyksaSl9LFo9KHQsW2UscyxuXSxpKT0+e2NvbnN0IG89dC5nZXQoZSk7dm9pZCAwPT09bz90LnNldChlLG5ldyBTZXQoW1tzLG5dXSkpOkcobyxbcyxuXSwodD0+dFswXT09PXMpLGkpfSxYPXQ9PlwiaW5wdXRzXCJpbiB0LFk9KHQsZSxzLG4pPT57aWYoWChlKSl7Y29uc3QgaT1lLmlucHV0c1tuXTtyZXR1cm4gdC5jb25uZWN0KGkscywwKSxbaSxzLDBdfXJldHVybiB0LmNvbm5lY3QoZSxzLG4pLFtlLHMsbl19LCQ9KHQsZSxzKT0+e2Zvcihjb25zdCBuIG9mIHQpaWYoblswXT09PWUmJm5bMV09PT1zKXJldHVybiB0LmRlbGV0ZShuKSxuO3JldHVybiBudWxsfSxIPSh0LGUpPT57aWYoIVModCkuZGVsZXRlKGUpKXRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgdGhlIGV4cGVjdGVkIGV2ZW50IGxpc3RlbmVyLlwiKX0sSj0odCxlLHMpPT57Y29uc3Qgbj13KHQsZSksaT1iKG4sKHQ9PnRbMF09PT1zKSk7cmV0dXJuIDA9PT1uLnNpemUmJnQuZGVsZXRlKGUpLGl9LEs9KHQsZSxzLG4pPT57WChlKT90LmRpc2Nvbm5lY3QoZS5pbnB1dHNbbl0scywwKTp0LmRpc2Nvbm5lY3QoZSxzLG4pfSx0dD10PT53KGMsdCksZXQ9dD0+dyhsLHQpLHN0PXQ9PmQuaGFzKHQpLG50PXQ9PiFyLmhhcyh0KSxpdD0odCxlKT0+bmV3IFByb21pc2UoKHM9PntpZihudWxsIT09ZSlzKCEwKTtlbHNle2NvbnN0IGU9dC5jcmVhdGVTY3JpcHRQcm9jZXNzb3IoMjU2LDEsMSksbj10LmNyZWF0ZUdhaW4oKSxpPXQuY3JlYXRlQnVmZmVyKDEsMiw0NDEwMCksbz1pLmdldENoYW5uZWxEYXRhKDApO29bMF09MSxvWzFdPTE7Y29uc3Qgcj10LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO3IuYnVmZmVyPWksci5sb29wPSEwLHIuY29ubmVjdChlKS5jb25uZWN0KHQuZGVzdGluYXRpb24pLHIuY29ubmVjdChuKSxyLmRpc2Nvbm5lY3QobiksZS5vbmF1ZGlvcHJvY2Vzcz1uPT57Y29uc3QgaT1uLmlucHV0QnVmZmVyLmdldENoYW5uZWxEYXRhKDApO0FycmF5LnByb3RvdHlwZS5zb21lLmNhbGwoaSwodD0+MT09PXQpKT9zKCEwKTpzKCExKSxyLnN0b3AoKSxlLm9uYXVkaW9wcm9jZXNzPW51bGwsci5kaXNjb25uZWN0KGUpLGUuZGlzY29ubmVjdCh0LmRlc3RpbmF0aW9uKX0sci5zdGFydCgpfX0pKSxvdD0odCxlKT0+e2NvbnN0IHM9bmV3IE1hcDtmb3IoY29uc3QgZSBvZiB0KWZvcihjb25zdCB0IG9mIGUpe2NvbnN0IGU9cy5nZXQodCk7cy5zZXQodCx2b2lkIDA9PT1lPzE6ZSsxKX1zLmZvckVhY2goKCh0LHMpPT5lKHMsdCkpKX0scnQ9dD0+XCJjb250ZXh0XCJpbiB0LGF0PXQ9Pntjb25zdCBlPW5ldyBNYXA7dC5jb25uZWN0PSh0PT4ocyxuPTAsaT0wKT0+e2NvbnN0IG89cnQocyk/dChzLG4saSk6dChzLG4pLHI9ZS5nZXQocyk7cmV0dXJuIHZvaWQgMD09PXI/ZS5zZXQocyxbe2lucHV0Omksb3V0cHV0Om59XSk6ci5ldmVyeSgodD0+dC5pbnB1dCE9PWl8fHQub3V0cHV0IT09bikpJiZyLnB1c2goe2lucHV0Omksb3V0cHV0Om59KSxvfSkodC5jb25uZWN0LmJpbmQodCkpLHQuZGlzY29ubmVjdD0ocz0+KG4saSxvKT0+e2lmKHMuYXBwbHkodCksdm9pZCAwPT09billLmNsZWFyKCk7ZWxzZSBpZihcIm51bWJlclwiPT10eXBlb2Ygbilmb3IoY29uc3RbdCxzXW9mIGUpe2NvbnN0IGk9cy5maWx0ZXIoKHQ9PnQub3V0cHV0IT09bikpOzA9PT1pLmxlbmd0aD9lLmRlbGV0ZSh0KTplLnNldCh0LGkpfWVsc2UgaWYoZS5oYXMobikpaWYodm9pZCAwPT09aSllLmRlbGV0ZShuKTtlbHNle2NvbnN0IHQ9ZS5nZXQobik7aWYodm9pZCAwIT09dCl7Y29uc3Qgcz10LmZpbHRlcigodD0+dC5vdXRwdXQhPT1pJiYodC5pbnB1dCE9PW98fHZvaWQgMD09PW8pKSk7MD09PXMubGVuZ3RoP2UuZGVsZXRlKG4pOmUuc2V0KG4scyl9fWZvcihjb25zdFtzLG5db2YgZSluLmZvckVhY2goKGU9PntydChzKT90LmNvbm5lY3QocyxlLm91dHB1dCxlLmlucHV0KTp0LmNvbm5lY3QocyxlLm91dHB1dCl9KSl9KSh0LmRpc2Nvbm5lY3QpfSxjdD0odCxlLHMsbixpKT0+e2NvbnN0W28scl09KCh0LGUscyxuKT0+e2NvbnN0e2FjdGl2ZUlucHV0czppLHBhc3NpdmVJbnB1dHM6b309aihlKSxyPSQoaVtuXSx0LHMpO3JldHVybiBudWxsPT09cj9bVChvLHQscyxuKVsyXSwhMV06W3JbMl0sITBdfSkodCxzLG4saSk7aWYobnVsbCE9PW8mJihIKHQsbyksIXJ8fGV8fHN0KHQpfHxLKHR0KHQpLHR0KHMpLG4saSkpLE4ocykpe2NvbnN0e2FjdGl2ZUlucHV0czp0fT1qKHMpO0Qocyx0KX19LGh0PSh0LGUscyxuKT0+e2NvbnN0W2ksb109KCh0LGUscyk9Pntjb25zdHthY3RpdmVJbnB1dHM6bixwYXNzaXZlSW5wdXRzOml9PUwoZSksbz0kKG4sdCxzKTtyZXR1cm4gbnVsbD09PW8/W0ooaSx0LHMpWzFdLCExXTpbb1syXSwhMF19KSh0LHMsbik7bnVsbCE9PWkmJihIKHQsaSksIW98fGV8fHN0KHQpfHx0dCh0KS5kaXNjb25uZWN0KGV0KHMpLG4pKX07Y2xhc3MgbHR7Y29uc3RydWN0b3IodCl7dGhpcy5fbWFwPW5ldyBNYXAodCl9Z2V0IHNpemUoKXtyZXR1cm4gdGhpcy5fbWFwLnNpemV9ZW50cmllcygpe3JldHVybiB0aGlzLl9tYXAuZW50cmllcygpfWZvckVhY2godCxlPW51bGwpe3JldHVybiB0aGlzLl9tYXAuZm9yRWFjaCgoKHMsbik9PnQuY2FsbChlLHMsbix0aGlzKSkpfWdldCh0KXtyZXR1cm4gdGhpcy5fbWFwLmdldCh0KX1oYXModCl7cmV0dXJuIHRoaXMuX21hcC5oYXModCl9a2V5cygpe3JldHVybiB0aGlzLl9tYXAua2V5cygpfXZhbHVlcygpe3JldHVybiB0aGlzLl9tYXAudmFsdWVzKCl9fWNvbnN0IHV0PXtjaGFubmVsQ291bnQ6MixjaGFubmVsQ291bnRNb2RlOlwiZXhwbGljaXRcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLG51bWJlck9mSW5wdXRzOjEsbnVtYmVyT2ZPdXRwdXRzOjEscGFyYW1ldGVyRGF0YTp7fSxwcm9jZXNzb3JPcHRpb25zOnt9fTtmdW5jdGlvbiBwdCh0LGUscyxuLGkpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuY29weUZyb21DaGFubmVsKTA9PT1lW3NdLmJ5dGVMZW5ndGgmJihlW3NdPW5ldyBGbG9hdDMyQXJyYXkoMTI4KSksdC5jb3B5RnJvbUNoYW5uZWwoZVtzXSxuLGkpO2Vsc2V7Y29uc3Qgbz10LmdldENoYW5uZWxEYXRhKG4pO2lmKDA9PT1lW3NdLmJ5dGVMZW5ndGgpZVtzXT1vLnNsaWNlKGksaSsxMjgpO2Vsc2V7Y29uc3QgdD1uZXcgRmxvYXQzMkFycmF5KG8uYnVmZmVyLGkqRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULDEyOCk7ZVtzXS5zZXQodCl9fX1jb25zdCBkdD0odCxlLHMsbixpKT0+e1wiZnVuY3Rpb25cIj09dHlwZW9mIHQuY29weVRvQ2hhbm5lbD8wIT09ZVtzXS5ieXRlTGVuZ3RoJiZ0LmNvcHlUb0NoYW5uZWwoZVtzXSxuLGkpOjAhPT1lW3NdLmJ5dGVMZW5ndGgmJnQuZ2V0Q2hhbm5lbERhdGEobikuc2V0KGVbc10saSl9LGZ0PSh0LGUpPT57Y29uc3Qgcz1bXTtmb3IobGV0IG49MDtuPHQ7bis9MSl7Y29uc3QgdD1bXSxpPVwibnVtYmVyXCI9PXR5cGVvZiBlP2U6ZVtuXTtmb3IobGV0IGU9MDtlPGk7ZSs9MSl0LnB1c2gobmV3IEZsb2F0MzJBcnJheSgxMjgpKTtzLnB1c2godCl9cmV0dXJuIHN9LF90PWFzeW5jKHQsZSxzLG4saSxvLHIpPT57Y29uc3QgYT1udWxsPT09ZT8xMjgqTWF0aC5jZWlsKHQuY29udGV4dC5sZW5ndGgvMTI4KTplLmxlbmd0aCxjPW4uY2hhbm5lbENvdW50Km4ubnVtYmVyT2ZJbnB1dHMsaD1pLnJlZHVjZSgoKHQsZSk9PnQrZSksMCksbD0wPT09aD9udWxsOnMuY3JlYXRlQnVmZmVyKGgsYSxzLnNhbXBsZVJhdGUpO2lmKHZvaWQgMD09PW8pdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyB0aGUgcHJvY2Vzc29yIGNvbnN0cnVjdG9yLlwiKTtjb25zdCB1PWoodCkscD1hd2FpdCgodCxlKT0+e2NvbnN0IHM9dyhfLHQpLG49dHQoZSk7cmV0dXJuIHcocyxuKX0pKHMsdCksZD1mdChuLm51bWJlck9mSW5wdXRzLG4uY2hhbm5lbENvdW50KSxmPWZ0KG4ubnVtYmVyT2ZPdXRwdXRzLGkpLG09QXJyYXkuZnJvbSh0LnBhcmFtZXRlcnMua2V5cygpKS5yZWR1Y2UoKCh0LGUpPT4oey4uLnQsW2VdOm5ldyBGbG9hdDMyQXJyYXkoMTI4KX0pKSx7fSk7Zm9yKGxldCBoPTA7aDxhO2grPTEyOCl7aWYobi5udW1iZXJPZklucHV0cz4wJiZudWxsIT09ZSlmb3IobGV0IHQ9MDt0PG4ubnVtYmVyT2ZJbnB1dHM7dCs9MSlmb3IobGV0IHM9MDtzPG4uY2hhbm5lbENvdW50O3MrPTEpcHQoZSxkW3RdLHMscyxoKTt2b2lkIDAhPT1vLnBhcmFtZXRlckRlc2NyaXB0b3JzJiZudWxsIT09ZSYmby5wYXJhbWV0ZXJEZXNjcmlwdG9ycy5mb3JFYWNoKCgoe25hbWU6dH0scyk9PntwdChlLG0sdCxjK3MsaCl9KSk7Zm9yKGxldCB0PTA7dDxuLm51bWJlck9mSW5wdXRzO3QrPTEpZm9yKGxldCBlPTA7ZTxpW3RdO2UrPTEpMD09PWZbdF1bZV0uYnl0ZUxlbmd0aCYmKGZbdF1bZV09bmV3IEZsb2F0MzJBcnJheSgxMjgpKTt0cnl7Y29uc3QgdD1kLm1hcCgoKHQsZSk9PjA9PT11LmFjdGl2ZUlucHV0c1tlXS5zaXplP1tdOnQpKSxlPXIoaC9zLnNhbXBsZVJhdGUscy5zYW1wbGVSYXRlLCgoKT0+cC5wcm9jZXNzKHQsZixtKSkpO2lmKG51bGwhPT1sKWZvcihsZXQgdD0wLGU9MDt0PG4ubnVtYmVyT2ZPdXRwdXRzO3QrPTEpe2ZvcihsZXQgcz0wO3M8aVt0XTtzKz0xKWR0KGwsZlt0XSxzLGUrcyxoKTtlKz1pW3RdfWlmKCFlKWJyZWFrfWNhdGNoKGUpe3QuZGlzcGF0Y2hFdmVudChuZXcgRXJyb3JFdmVudChcInByb2Nlc3NvcmVycm9yXCIse2NvbG5vOmUuY29sbm8sZmlsZW5hbWU6ZS5maWxlbmFtZSxsaW5lbm86ZS5saW5lbm8sbWVzc2FnZTplLm1lc3NhZ2V9KSk7YnJlYWt9fXJldHVybiBsfSxtdD17UToxLGNoYW5uZWxDb3VudDoyLGNoYW5uZWxDb3VudE1vZGU6XCJtYXhcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLGRldHVuZTowLGZyZXF1ZW5jeTozNTAsZ2FpbjowLHR5cGU6XCJsb3dwYXNzXCJ9LGd0PXtjaGFubmVsQ291bnQ6MSxjaGFubmVsQ291bnRNb2RlOlwiZXhwbGljaXRcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLG51bWJlck9mSW5wdXRzOjZ9LHZ0PXtjaGFubmVsQ291bnQ6NixjaGFubmVsQ291bnRNb2RlOlwiZXhwbGljaXRcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJkaXNjcmV0ZVwiLG51bWJlck9mT3V0cHV0czo2fSx5dD17Y2hhbm5lbENvdW50OjIsY2hhbm5lbENvdW50TW9kZTpcIm1heFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCIsb2Zmc2V0OjF9LHh0PXtidWZmZXI6bnVsbCxjaGFubmVsQ291bnQ6MixjaGFubmVsQ291bnRNb2RlOlwiY2xhbXBlZC1tYXhcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLGRpc2FibGVOb3JtYWxpemF0aW9uOiExfSx3dD10PT57Y29uc3R7cG9ydDE6ZSxwb3J0MjpzfT1uZXcgTWVzc2FnZUNoYW5uZWw7cmV0dXJuIG5ldyBQcm9taXNlKChuPT57Y29uc3QgaT0oKT0+e3Mub25tZXNzYWdlPW51bGwsZS5jbG9zZSgpLHMuY2xvc2UoKSxuKCl9O3Mub25tZXNzYWdlPSgpPT5pKCk7dHJ5e2UucG9zdE1lc3NhZ2UodCxbdF0pfWNhdGNoe31maW5hbGx5e2koKX19KSl9LGJ0PXtjaGFubmVsQ291bnQ6MixjaGFubmVsQ291bnRNb2RlOlwibWF4XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIixkZWxheVRpbWU6MCxtYXhEZWxheVRpbWU6MX0sVHQ9KHQsZSxzKT0+e2NvbnN0IG49ZVtzXTtpZih2b2lkIDA9PT1uKXRocm93IHQoKTtyZXR1cm4gbn0sU3Q9e2F0dGFjazouMDAzLGNoYW5uZWxDb3VudDoyLGNoYW5uZWxDb3VudE1vZGU6XCJjbGFtcGVkLW1heFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCIsa25lZTozMCxyYXRpbzoxMixyZWxlYXNlOi4yNSx0aHJlc2hvbGQ6LTI0fSxrdD17Y2hhbm5lbENvdW50OjIsY2hhbm5lbENvdW50TW9kZTpcIm1heFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCIsZ2FpbjoxfSxBdD0oKT0+bmV3IERPTUV4Y2VwdGlvbihcIlwiLFwiSW52YWxpZFN0YXRlRXJyb3JcIiksQ3Q9KCk9Pm5ldyBET01FeGNlcHRpb24oXCJcIixcIkludmFsaWRBY2Nlc3NFcnJvclwiKSxEdD17Y2hhbm5lbENvdW50OjIsY2hhbm5lbENvdW50TW9kZTpcIm1heFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCJ9LE90PSh0LGUscyxuLGksbyxyLGEsYyxoLGwpPT57Y29uc3QgdT1oLmxlbmd0aDtsZXQgcD1hO2ZvcihsZXQgYT0wO2E8dTthKz0xKXtsZXQgdT1zWzBdKmhbYV07Zm9yKGxldCBlPTE7ZTxpO2UrPTEpe2NvbnN0IG49cC1lJmMtMTt1Kz1zW2VdKm9bbl0sdS09dFtlXSpyW25dfWZvcihsZXQgdD1pO3Q8bjt0Kz0xKXUrPXNbdF0qb1twLXQmYy0xXTtmb3IobGV0IHM9aTtzPGU7cys9MSl1LT10W3NdKnJbcC1zJmMtMV07b1twXT1oW2FdLHJbcF09dSxwPXArMSZjLTEsbFthXT11fXJldHVybiBwfSxNdD17Y2hhbm5lbENvdW50OjIsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIn0sRXQ9dD0+e2NvbnN0IGU9bmV3IFVpbnQzMkFycmF5KFsxMTc5MDExNDEwLDQwLDExNjMyODA3MjcsNTQ0NTAxMDk0LDE2LDEzMTA3Myw0NDEwMCwxNzY0MDAsMTA0ODU4MCwxNjM1MDE3MDYwLDQsMF0pO3RyeXtjb25zdCBzPXQuZGVjb2RlQXVkaW9EYXRhKGUuYnVmZmVyLCgoKT0+e30pKTtyZXR1cm4gdm9pZCAwIT09cyYmKHMuY2F0Y2goKCgpPT57fSkpLCEwKX1jYXRjaHt9cmV0dXJuITF9LFJ0PSh0LGUscyk9Pntjb25zdCBuPWVbc107dm9pZCAwIT09biYmbiE9PXRbc10mJih0W3NdPW4pfSxxdD0odCxlKT0+e1J0KHQsZSxcImNoYW5uZWxDb3VudFwiKSxSdCh0LGUsXCJjaGFubmVsQ291bnRNb2RlXCIpLFJ0KHQsZSxcImNoYW5uZWxJbnRlcnByZXRhdGlvblwiKX0sRnQ9dD0+XCJmdW5jdGlvblwiPT10eXBlb2YgdC5nZXRGbG9hdFRpbWVEb21haW5EYXRhLEl0PSh0LGUscyk9Pntjb25zdCBuPWVbc107dm9pZCAwIT09biYmbiE9PXRbc10udmFsdWUmJih0W3NdLnZhbHVlPW4pfSxWdD10PT57dC5zdGFydD0oZT0+KHM9MCxuPTAsaSk9PntpZihcIm51bWJlclwiPT10eXBlb2YgaSYmaTwwfHxuPDB8fHM8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRoZSBwYXJhbWV0ZXJzIGNhbid0IGJlIG5lZ2F0aXZlLlwiKTtlLmNhbGwodCxzLG4saSl9KSh0LnN0YXJ0KX0sTnQ9dD0+e3ZhciBlO3Quc3RvcD0oZT10LnN0b3AsKHM9MCk9PntpZihzPDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUaGUgcGFyYW1ldGVyIGNhbid0IGJlIG5lZ2F0aXZlLlwiKTtlLmNhbGwodCxzKX0pfSxQdD0odCxlKT0+bnVsbD09PXQ/NTEyOk1hdGgubWF4KDUxMixNYXRoLm1pbigxNjM4NCxNYXRoLnBvdygyLE1hdGgucm91bmQoTWF0aC5sb2cyKHQqZSkpKSkpLGp0PSh0LGUpPT57Y29uc3Qgcz10LmNyZWF0ZUJpcXVhZEZpbHRlcigpO3JldHVybiBxdChzLGUpLEl0KHMsZSxcIlFcIiksSXQocyxlLFwiZGV0dW5lXCIpLEl0KHMsZSxcImZyZXF1ZW5jeVwiKSxJdChzLGUsXCJnYWluXCIpLFJ0KHMsZSxcInR5cGVcIiksc30sTHQ9KHQsZSk9Pntjb25zdCBzPXQuY3JlYXRlQ2hhbm5lbFNwbGl0dGVyKGUubnVtYmVyT2ZPdXRwdXRzKTtyZXR1cm4gcXQocyxlKSwodD0+e2NvbnN0IGU9dC5udW1iZXJPZk91dHB1dHM7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJjaGFubmVsQ291bnRcIix7Z2V0OigpPT5lLHNldDp0PT57aWYodCE9PWUpdGhyb3cgQXQoKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcImNoYW5uZWxDb3VudE1vZGVcIix7Z2V0OigpPT5cImV4cGxpY2l0XCIsc2V0OnQ9PntpZihcImV4cGxpY2l0XCIhPT10KXRocm93IEF0KCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJjaGFubmVsSW50ZXJwcmV0YXRpb25cIix7Z2V0OigpPT5cImRpc2NyZXRlXCIsc2V0OnQ9PntpZihcImRpc2NyZXRlXCIhPT10KXRocm93IEF0KCl9fSl9KShzKSxzfSx6dD0odCxlKT0+KHQuY29ubmVjdD1lLmNvbm5lY3QuYmluZChlKSx0LmRpc2Nvbm5lY3Q9ZS5kaXNjb25uZWN0LmJpbmQoZSksdCksV3Q9KHQsZSk9Pntjb25zdCBzPXQuY3JlYXRlRGVsYXkoZS5tYXhEZWxheVRpbWUpO3JldHVybiBxdChzLGUpLEl0KHMsZSxcImRlbGF5VGltZVwiKSxzfSxCdD0odCxlKT0+e2NvbnN0IHM9dC5jcmVhdGVHYWluKCk7cmV0dXJuIHF0KHMsZSksSXQocyxlLFwiZ2FpblwiKSxzfTtmdW5jdGlvbiBVdCh0LGUpe2NvbnN0IHM9ZVswXSplWzBdK2VbMV0qZVsxXTtyZXR1cm5bKHRbMF0qZVswXSt0WzFdKmVbMV0pL3MsKHRbMV0qZVswXS10WzBdKmVbMV0pL3NdfWZ1bmN0aW9uIEd0KHQsZSl7bGV0IHM9WzAsMF07Zm9yKGxldCBvPXQubGVuZ3RoLTE7bz49MDtvLT0xKWk9ZSxzPVsobj1zKVswXSppWzBdLW5bMV0qaVsxXSxuWzBdKmlbMV0rblsxXSppWzBdXSxzWzBdKz10W29dO3ZhciBuLGk7cmV0dXJuIHN9Y29uc3QgUXQ9KHQsZSxzLG4pPT50LmNyZWF0ZVNjcmlwdFByb2Nlc3NvcihlLHMsbiksWnQ9KCk9Pm5ldyBET01FeGNlcHRpb24oXCJcIixcIk5vdFN1cHBvcnRlZEVycm9yXCIpLFh0PXtudW1iZXJPZkNoYW5uZWxzOjF9LFl0PXtjaGFubmVsQ291bnQ6MixjaGFubmVsQ291bnRNb2RlOlwibWF4XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIixkZXR1bmU6MCxmcmVxdWVuY3k6NDQwLHBlcmlvZGljV2F2ZTp2b2lkIDAsdHlwZTpcInNpbmVcIn0sJHQ9e2NoYW5uZWxDb3VudDoyLGNoYW5uZWxDb3VudE1vZGU6XCJjbGFtcGVkLW1heFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCIsY29uZUlubmVyQW5nbGU6MzYwLGNvbmVPdXRlckFuZ2xlOjM2MCxjb25lT3V0ZXJHYWluOjAsZGlzdGFuY2VNb2RlbDpcImludmVyc2VcIixtYXhEaXN0YW5jZToxZTQsb3JpZW50YXRpb25YOjEsb3JpZW50YXRpb25ZOjAsb3JpZW50YXRpb25aOjAscGFubmluZ01vZGVsOlwiZXF1YWxwb3dlclwiLHBvc2l0aW9uWDowLHBvc2l0aW9uWTowLHBvc2l0aW9uWjowLHJlZkRpc3RhbmNlOjEscm9sbG9mZkZhY3RvcjoxfSxIdD17ZGlzYWJsZU5vcm1hbGl6YXRpb246ITF9LEp0PXtjaGFubmVsQ291bnQ6MixjaGFubmVsQ291bnRNb2RlOlwiZXhwbGljaXRcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLHBhbjowfSxLdD0oKT0+bmV3IERPTUV4Y2VwdGlvbihcIlwiLFwiVW5rbm93bkVycm9yXCIpLHRlPXtjaGFubmVsQ291bnQ6MixjaGFubmVsQ291bnRNb2RlOlwibWF4XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIixjdXJ2ZTpudWxsLG92ZXJzYW1wbGU6XCJub25lXCJ9LGVlPSh0LGUscyk9PnZvaWQgMD09PXQuY29weUZyb21DaGFubmVsP3QuZ2V0Q2hhbm5lbERhdGEocylbMF06KHQuY29weUZyb21DaGFubmVsKGUscyksZVswXSksc2U9dD0+e2lmKG51bGw9PT10KXJldHVybiExO2NvbnN0IGU9dC5sZW5ndGg7cmV0dXJuIGUlMiE9MD8wIT09dFtNYXRoLmZsb29yKGUvMildOnRbZS8yLTFdK3RbZS8yXSE9PTB9LG5lPSh0LGUscyxuKT0+e2xldCBpPXQ7Zm9yKDshaS5oYXNPd25Qcm9wZXJ0eShlKTspaT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoaSk7Y29uc3R7Z2V0Om8sc2V0OnJ9PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSxlKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHtnZXQ6cyhvKSxzZXQ6bihyKX0pfSxpZT0odCxlLHMpPT57dHJ5e3Quc2V0VmFsdWVBdFRpbWUoZSxzKX1jYXRjaChuKXtpZig5IT09bi5jb2RlKXRocm93IG47aWUodCxlLHMrMWUtNyl9fSxvZT10PT57Y29uc3QgZT10LmNyZWF0ZU9zY2lsbGF0b3IoKTt0cnl7ZS5zdGFydCgtMSl9Y2F0Y2godCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBSYW5nZUVycm9yfXJldHVybiExfSxyZT10PT57Y29uc3QgZT10LmNyZWF0ZUJ1ZmZlcigxLDEsNDQxMDApLHM9dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtzLmJ1ZmZlcj1lLHMuc3RhcnQoKSxzLnN0b3AoKTt0cnl7cmV0dXJuIHMuc3RvcCgpLCEwfWNhdGNoe3JldHVybiExfX0sYWU9dD0+e2NvbnN0IGU9dC5jcmVhdGVPc2NpbGxhdG9yKCk7dHJ5e2Uuc3RvcCgtMSl9Y2F0Y2godCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBSYW5nZUVycm9yfXJldHVybiExfSxjZT0oKT0+e3RyeXtuZXcgRE9NRXhjZXB0aW9ufWNhdGNoe3JldHVybiExfXJldHVybiEwfSxoZT0oKT0+bmV3IFByb21pc2UoKHQ9Pntjb25zdCBlPW5ldyBBcnJheUJ1ZmZlcigwKSx7cG9ydDE6cyxwb3J0MjpufT1uZXcgTWVzc2FnZUNoYW5uZWw7cy5vbm1lc3NhZ2U9KHtkYXRhOmV9KT0+dChudWxsIT09ZSksbi5wb3N0TWVzc2FnZShlLFtlXSl9KSksbGU9KHQsZSk9Pntjb25zdCBzPWUuY3JlYXRlR2FpbigpO3QuY29ubmVjdChzKTtjb25zdCBuPShlPT4oKT0+e2UuY2FsbCh0LHMpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsbil9KSh0LmRpc2Nvbm5lY3QpO3QuYWRkRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsbiksenQodCxzKSx0LnN0b3A9KGU9PntsZXQgbj0hMTtyZXR1cm4oaT0wKT0+e2lmKG4pdHJ5e2UuY2FsbCh0LGkpfWNhdGNoe3MuZ2Fpbi5zZXRWYWx1ZUF0VGltZSgwLGkpfWVsc2UgZS5jYWxsKHQsaSksbj0hMH19KSh0LnN0b3ApfSx1ZT0odCxlKT0+cz0+e2NvbnN0IG49e3ZhbHVlOnR9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhzLHtjdXJyZW50VGFyZ2V0Om4sdGFyZ2V0Om59KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UuY2FsbCh0LHMpOmUuaGFuZGxlRXZlbnQuY2FsbCh0LHMpfSxwZT0odD0+KGUscyxbbixpLG9dLHIpPT57dChlW2ldLFtzLG4sb10sKHQ9PnRbMF09PT1zJiZ0WzFdPT09bikscil9KShHKSxkZT0odD0+KGUscyxbbixpLG9dLHIpPT57Y29uc3QgYT1lLmdldChuKTt2b2lkIDA9PT1hP2Uuc2V0KG4sbmV3IFNldChbW2kscyxvXV0pKTp0KGEsW2kscyxvXSwodD0+dFswXT09PWkmJnRbMV09PT1zKSxyKX0pKEcpLGZlPSh0PT4oZSxzLG4saSk9PnQoZVtpXSwodD0+dFswXT09PXMmJnRbMV09PT1uKSkpKGIpLF9lPW5ldyBXZWFrTWFwLG1lPSh0PT5lPT57dmFyIHM7cmV0dXJuIG51bGwhPT0ocz10LmdldChlKSkmJnZvaWQgMCE9PXM/czowfSkoX2UpLGdlPSh2ZT1uZXcgTWFwLHllPW5ldyBXZWFrTWFwLCh0LGUpPT57Y29uc3Qgcz15ZS5nZXQodCk7aWYodm9pZCAwIT09cylyZXR1cm4gcztjb25zdCBuPXZlLmdldCh0KTtpZih2b2lkIDAhPT1uKXJldHVybiBuO3RyeXtjb25zdCBzPWUoKTtyZXR1cm4gcyBpbnN0YW5jZW9mIFByb21pc2U/KHZlLnNldCh0LHMpLHMuY2F0Y2goKCgpPT4hMSkpLnRoZW4oKGU9Pih2ZS5kZWxldGUodCkseWUuc2V0KHQsZSksZSkpKSk6KHllLnNldCh0LHMpLHMpfWNhdGNoe3JldHVybiB5ZS5zZXQodCwhMSksITF9fSk7dmFyIHZlLHllO2NvbnN0IHhlPVwidW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3c/bnVsbDp3aW5kb3csd2U9KCh0LGUpPT4ocyxuKT0+e2NvbnN0IGk9cy5jcmVhdGVBbmFseXNlcigpO2lmKHF0KGksbiksIShuLm1heERlY2liZWxzPm4ubWluRGVjaWJlbHMpKXRocm93IGUoKTtyZXR1cm4gUnQoaSxuLFwiZmZ0U2l6ZVwiKSxSdChpLG4sXCJtYXhEZWNpYmVsc1wiKSxSdChpLG4sXCJtaW5EZWNpYmVsc1wiKSxSdChpLG4sXCJzbW9vdGhpbmdUaW1lQ29uc3RhbnRcIiksdChGdCwoKCk9PkZ0KGkpKSl8fCh0PT57dC5nZXRGbG9hdFRpbWVEb21haW5EYXRhPWU9Pntjb25zdCBzPW5ldyBVaW50OEFycmF5KGUubGVuZ3RoKTt0LmdldEJ5dGVUaW1lRG9tYWluRGF0YShzKTtjb25zdCBuPU1hdGgubWF4KHMubGVuZ3RoLHQuZmZ0U2l6ZSk7Zm9yKGxldCB0PTA7dDxuO3QrPTEpZVt0XT0uMDA3ODEyNSooc1t0XS0xMjgpO3JldHVybiBlfX0pKGkpLGl9KShnZSxSKSxiZT0odD0+ZT0+e2NvbnN0IHM9dChlKTtpZihudWxsPT09cy5yZW5kZXJlcil0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHRoZSByZW5kZXJlciBvZiB0aGUgZ2l2ZW4gQXVkaW9Ob2RlIGluIHRoZSBhdWRpbyBncmFwaC5cIik7cmV0dXJuIHMucmVuZGVyZXJ9KShqKSxUZT0oKHQsZSxzKT0+YXN5bmMobixpLG8pPT57Y29uc3Qgcj10KG4pO2F3YWl0IFByb21pc2UuYWxsKHIuYWN0aXZlSW5wdXRzLm1hcCgoKHQscik9PkFycmF5LmZyb20odCkubWFwKChhc3luYyhbdCxhXSk9Pntjb25zdCBjPWUodCksaD1hd2FpdCBjLnJlbmRlcih0LGkpLGw9bi5jb250ZXh0LmRlc3RpbmF0aW9uO3ModCl8fG49PT1sJiZzKG4pfHxoLmNvbm5lY3QobyxhLHIpfSkpKSkucmVkdWNlKCgodCxlKT0+Wy4uLnQsLi4uZV0pLFtdKSl9KShqLGJlLHN0KSxTZT0oKHQsZSxzKT0+KCk9Pntjb25zdCBuPW5ldyBXZWFrTWFwO3JldHVybntyZW5kZXIoaSxvKXtjb25zdCByPW4uZ2V0KG8pO3JldHVybiB2b2lkIDAhPT1yP1Byb21pc2UucmVzb2x2ZShyKTooYXN5bmMoaSxvKT0+e2xldCByPWUoaSk7aWYoIU0ocixvKSl7Y29uc3QgZT17Y2hhbm5lbENvdW50OnIuY2hhbm5lbENvdW50LGNoYW5uZWxDb3VudE1vZGU6ci5jaGFubmVsQ291bnRNb2RlLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpyLmNoYW5uZWxJbnRlcnByZXRhdGlvbixmZnRTaXplOnIuZmZ0U2l6ZSxtYXhEZWNpYmVsczpyLm1heERlY2liZWxzLG1pbkRlY2liZWxzOnIubWluRGVjaWJlbHMsc21vb3RoaW5nVGltZUNvbnN0YW50OnIuc21vb3RoaW5nVGltZUNvbnN0YW50fTtyPXQobyxlKX1yZXR1cm4gbi5zZXQobyxyKSxhd2FpdCBzKGksbyxyKSxyfSkoaSxvKX19fSkod2UsdHQsVGUpLGtlPShBZT11LHQ9Pntjb25zdCBlPUFlLmdldCh0KTtpZih2b2lkIDA9PT1lKXRocm93IEF0KCk7cmV0dXJuIGV9KTt2YXIgQWU7Y29uc3QgQ2U9KHQ9Pm51bGw9PT10P251bGw6dC5oYXNPd25Qcm9wZXJ0eShcIk9mZmxpbmVBdWRpb0NvbnRleHRcIik/dC5PZmZsaW5lQXVkaW9Db250ZXh0OnQuaGFzT3duUHJvcGVydHkoXCJ3ZWJraXRPZmZsaW5lQXVkaW9Db250ZXh0XCIpP3Qud2Via2l0T2ZmbGluZUF1ZGlvQ29udGV4dDpudWxsKSh4ZSksRGU9KHQ9PmU9Pm51bGwhPT10JiZlIGluc3RhbmNlb2YgdCkoQ2UpLE9lPW5ldyBXZWFrTWFwLE1lPSh0PT5jbGFzc3tjb25zdHJ1Y3Rvcih0KXt0aGlzLl9uYXRpdmVFdmVudFRhcmdldD10LHRoaXMuX2xpc3RlbmVycz1uZXcgV2Vha01hcH1hZGRFdmVudExpc3RlbmVyKGUscyxuKXtpZihudWxsIT09cyl7bGV0IGk9dGhpcy5fbGlzdGVuZXJzLmdldChzKTt2b2lkIDA9PT1pJiYoaT10KHRoaXMscyksXCJmdW5jdGlvblwiPT10eXBlb2YgcyYmdGhpcy5fbGlzdGVuZXJzLnNldChzLGkpKSx0aGlzLl9uYXRpdmVFdmVudFRhcmdldC5hZGRFdmVudExpc3RlbmVyKGUsaSxuKX19ZGlzcGF0Y2hFdmVudCh0KXtyZXR1cm4gdGhpcy5fbmF0aXZlRXZlbnRUYXJnZXQuZGlzcGF0Y2hFdmVudCh0KX1yZW1vdmVFdmVudExpc3RlbmVyKHQsZSxzKXtjb25zdCBuPW51bGw9PT1lP3ZvaWQgMDp0aGlzLl9saXN0ZW5lcnMuZ2V0KGUpO3RoaXMuX25hdGl2ZUV2ZW50VGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIodCx2b2lkIDA9PT1uP251bGw6bixzKX19KSh1ZSksRWU9KHQ9Pm51bGw9PT10P251bGw6dC5oYXNPd25Qcm9wZXJ0eShcIkF1ZGlvQ29udGV4dFwiKT90LkF1ZGlvQ29udGV4dDp0Lmhhc093blByb3BlcnR5KFwid2Via2l0QXVkaW9Db250ZXh0XCIpP3Qud2Via2l0QXVkaW9Db250ZXh0Om51bGwpKHhlKSxSZT0odD0+ZT0+bnVsbCE9PXQmJmUgaW5zdGFuY2VvZiB0KShFZSkscWU9KHQ9PmU9Pm51bGwhPT10JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LkF1ZGlvTm9kZSYmZSBpbnN0YW5jZW9mIHQuQXVkaW9Ob2RlKSh4ZSksRmU9KHQ9PmU9Pm51bGwhPT10JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LkF1ZGlvUGFyYW0mJmUgaW5zdGFuY2VvZiB0LkF1ZGlvUGFyYW0pKHhlKSxJZT0odD0+bnVsbD09PXQ/bnVsbDp0Lmhhc093blByb3BlcnR5KFwiQXVkaW9Xb3JrbGV0Tm9kZVwiKT90LkF1ZGlvV29ya2xldE5vZGU6bnVsbCkoeGUpLFZlPSgodCxlLHMsbixpLG8scixhLGgsbCx1LGQsZixfLG0sZyk9PmNsYXNzIGV4dGVuZHMgbHtjb25zdHJ1Y3RvcihlLG4saSxvKXtzdXBlcihpKSx0aGlzLl9jb250ZXh0PWUsdGhpcy5fbmF0aXZlQXVkaW9Ob2RlPWk7Y29uc3Qgcj11KGUpO2QocikmJiEwIT09cyhpdCwoKCk9Pml0KHIsZykpKSYmYXQoaSksYy5zZXQodGhpcyxpKSxwLnNldCh0aGlzLG5ldyBTZXQpLFwiY2xvc2VkXCIhPT1lLnN0YXRlJiZuJiZrKHRoaXMpLHQodGhpcyxvLGkpfWdldCBjaGFubmVsQ291bnQoKXtyZXR1cm4gdGhpcy5fbmF0aXZlQXVkaW9Ob2RlLmNoYW5uZWxDb3VudH1zZXQgY2hhbm5lbENvdW50KHQpe3RoaXMuX25hdGl2ZUF1ZGlvTm9kZS5jaGFubmVsQ291bnQ9dH1nZXQgY2hhbm5lbENvdW50TW9kZSgpe3JldHVybiB0aGlzLl9uYXRpdmVBdWRpb05vZGUuY2hhbm5lbENvdW50TW9kZX1zZXQgY2hhbm5lbENvdW50TW9kZSh0KXt0aGlzLl9uYXRpdmVBdWRpb05vZGUuY2hhbm5lbENvdW50TW9kZT10fWdldCBjaGFubmVsSW50ZXJwcmV0YXRpb24oKXtyZXR1cm4gdGhpcy5fbmF0aXZlQXVkaW9Ob2RlLmNoYW5uZWxJbnRlcnByZXRhdGlvbn1zZXQgY2hhbm5lbEludGVycHJldGF0aW9uKHQpe3RoaXMuX25hdGl2ZUF1ZGlvTm9kZS5jaGFubmVsSW50ZXJwcmV0YXRpb249dH1nZXQgY29udGV4dCgpe3JldHVybiB0aGlzLl9jb250ZXh0fWdldCBudW1iZXJPZklucHV0cygpe3JldHVybiB0aGlzLl9uYXRpdmVBdWRpb05vZGUubnVtYmVyT2ZJbnB1dHN9Z2V0IG51bWJlck9mT3V0cHV0cygpe3JldHVybiB0aGlzLl9uYXRpdmVBdWRpb05vZGUubnVtYmVyT2ZPdXRwdXRzfWNvbm5lY3QodCxzPTAsYT0wKXtpZihzPDB8fHM+PXRoaXMuX25hdGl2ZUF1ZGlvTm9kZS5udW1iZXJPZk91dHB1dHMpdGhyb3cgaSgpO2NvbnN0IGM9dSh0aGlzLl9jb250ZXh0KSxsPW0oYyk7aWYoZih0KXx8Xyh0KSl0aHJvdyBvKCk7aWYoQih0KSl7Y29uc3QgaT10dCh0KTt0cnl7Y29uc3QgZT1ZKHRoaXMuX25hdGl2ZUF1ZGlvTm9kZSxpLHMsYSksbj1udCh0aGlzKTsobHx8bikmJnRoaXMuX25hdGl2ZUF1ZGlvTm9kZS5kaXNjb25uZWN0KC4uLmUpLFwiY2xvc2VkXCIhPT10aGlzLmNvbnRleHQuc3RhdGUmJiFuJiZudCh0KSYmayh0KX1jYXRjaCh0KXtpZigxMj09PXQuY29kZSl0aHJvdyBvKCk7dGhyb3cgdH1pZihlKHRoaXMsdCxzLGEsbCkpe2NvbnN0IGU9aChbdGhpc10sdCk7b3QoZSxuKGwpKX1yZXR1cm4gdH1jb25zdCBwPWV0KHQpO2lmKFwicGxheWJhY2tSYXRlXCI9PT1wLm5hbWUmJjEwMjQ9PT1wLm1heFZhbHVlKXRocm93IHIoKTt0cnl7dGhpcy5fbmF0aXZlQXVkaW9Ob2RlLmNvbm5lY3QocCxzKSwobHx8bnQodGhpcykpJiZ0aGlzLl9uYXRpdmVBdWRpb05vZGUuZGlzY29ubmVjdChwLHMpfWNhdGNoKHQpe2lmKDEyPT09dC5jb2RlKXRocm93IG8oKTt0aHJvdyB0fWlmKCgodCxlLHMsbik9Pntjb25zdHthY3RpdmVJbnB1dHM6aSxwYXNzaXZlSW5wdXRzOm99PUwoZSkse291dHB1dHM6cn09aih0KSxhPVModCksYz1yPT57Y29uc3QgYT10dCh0KSxjPWV0KGUpO2lmKHIpe2NvbnN0IGU9SihvLHQscyk7UShpLHQsZSwhMSksbnx8c3QodCl8fGEuY29ubmVjdChjLHMpfWVsc2V7Y29uc3QgZT0oKHQsZSxzKT0+Yih0LCh0PT50WzBdPT09ZSYmdFsxXT09PXMpKSkoaSx0LHMpO1oobyxlLCExKSxufHxzdCh0KXx8YS5kaXNjb25uZWN0KGMscyl9fTtyZXR1cm4hIUcocixbZSxzXSwodD0+dFswXT09PWUmJnRbMV09PT1zKSwhMCkmJihhLmFkZChjKSxOKHQpP1EoaSx0LFtzLGNdLCEwKTpaKG8sW3QscyxjXSwhMCksITApfSkodGhpcyx0LHMsbCkpe2NvbnN0IGU9aChbdGhpc10sdCk7b3QoZSxuKGwpKX19ZGlzY29ubmVjdCh0LGUscyl7bGV0IG47Y29uc3Qgcj11KHRoaXMuX2NvbnRleHQpLGM9bShyKTtpZih2b2lkIDA9PT10KW49KCh0LGUpPT57Y29uc3Qgcz1qKHQpLG49W107Zm9yKGNvbnN0IGkgb2Ygcy5vdXRwdXRzKVUoaSk/Y3QodCxlLC4uLmkpOmh0KHQsZSwuLi5pKSxuLnB1c2goaVswXSk7cmV0dXJuIHMub3V0cHV0cy5jbGVhcigpLG59KSh0aGlzLGMpO2Vsc2UgaWYoXCJudW1iZXJcIj09dHlwZW9mIHQpe2lmKHQ8MHx8dD49dGhpcy5udW1iZXJPZk91dHB1dHMpdGhyb3cgaSgpO249KCh0LGUscyk9Pntjb25zdCBuPWoodCksaT1bXTtmb3IoY29uc3QgbyBvZiBuLm91dHB1dHMpb1sxXT09PXMmJihVKG8pP2N0KHQsZSwuLi5vKTpodCh0LGUsLi4ubyksaS5wdXNoKG9bMF0pLG4ub3V0cHV0cy5kZWxldGUobykpO3JldHVybiBpfSkodGhpcyxjLHQpfWVsc2V7aWYodm9pZCAwIT09ZSYmKGU8MHx8ZT49dGhpcy5udW1iZXJPZk91dHB1dHMpKXRocm93IGkoKTtpZihCKHQpJiZ2b2lkIDAhPT1zJiYoczwwfHxzPj10Lm51bWJlck9mSW5wdXRzKSl0aHJvdyBpKCk7aWYobj0oKHQsZSxzLG4saSk9Pntjb25zdCBvPWoodCk7cmV0dXJuIEFycmF5LmZyb20oby5vdXRwdXRzKS5maWx0ZXIoKHQ9PiEodFswXSE9PXN8fHZvaWQgMCE9PW4mJnRbMV0hPT1ufHx2b2lkIDAhPT1pJiZ0WzJdIT09aSkpKS5tYXAoKHM9PihVKHMpP2N0KHQsZSwuLi5zKTpodCh0LGUsLi4ucyksby5vdXRwdXRzLmRlbGV0ZShzKSxzWzBdKSkpfSkodGhpcyxjLHQsZSxzKSwwPT09bi5sZW5ndGgpdGhyb3cgbygpfWZvcihjb25zdCB0IG9mIG4pe2NvbnN0IGU9aChbdGhpc10sdCk7b3QoZSxhKX19fSkoKE5lPWEsKHQsZSxzKT0+e2NvbnN0IG49W107Zm9yKGxldCB0PTA7dDxzLm51bWJlck9mSW5wdXRzO3QrPTEpbi5wdXNoKG5ldyBTZXQpO05lLnNldCh0LHthY3RpdmVJbnB1dHM6bixvdXRwdXRzOm5ldyBTZXQscGFzc2l2ZUlucHV0czpuZXcgV2Vha01hcCxyZW5kZXJlcjplfSl9KSwoKHQsZSxzLG4saSxvLHIsYSxjLGgsbCx1LHApPT57Y29uc3QgZD1uZXcgV2Vha01hcDtyZXR1cm4oZixfLG0sZyx2KT0+e2NvbnN0e2FjdGl2ZUlucHV0czp5LHBhc3NpdmVJbnB1dHM6eH09byhfKSx7b3V0cHV0czp3fT1vKGYpLGI9YShmKSxTPW89Pntjb25zdCBhPWMoXyksaD1jKGYpO2lmKG8pe2NvbnN0IGU9VCh4LGYsbSxnKTt0KHksZixlLCExKSx2fHx1KGYpfHxzKGgsYSxtLGcpLHAoXykmJmsoXyl9ZWxzZXtjb25zdCB0PW4oeSxmLG0sZyk7ZSh4LGcsdCwhMSksdnx8dShmKXx8aShoLGEsbSxnKTtjb25zdCBzPXIoXyk7aWYoMD09PXMpbChfKSYmRChfLHkpO2Vsc2V7Y29uc3QgdD1kLmdldChfKTt2b2lkIDAhPT10JiZjbGVhclRpbWVvdXQodCksZC5zZXQoXyxzZXRUaW1lb3V0KCgoKT0+e2woXykmJkQoXyx5KX0pLDFlMypzKSl9fX07cmV0dXJuISFoKHcsW18sbSxnXSwodD0+dFswXT09PV8mJnRbMV09PT1tJiZ0WzJdPT09ZyksITApJiYoYi5hZGQoUyksbChmKT90KHksZixbbSxnLFNdLCEwKTplKHgsZyxbZixtLFNdLCEwKSwhMCl9fSkocGUsZGUsWSxmZSxLLGosbWUsUyx0dCxHLE4sc3QsbnQpLGdlLCgodCxlLHMsbixpLG8pPT5yPT4oYSxjKT0+e2NvbnN0IGg9dC5nZXQoYSk7aWYodm9pZCAwPT09aCl7aWYoIXImJm8oYSkpe2NvbnN0IHQ9bihhKSx7b3V0cHV0czpvfT1zKGEpO2Zvcihjb25zdCBzIG9mIG8paWYoVShzKSl7Y29uc3QgaT1uKHNbMF0pO2UodCxpLHNbMV0sc1syXSl9ZWxzZXtjb25zdCBlPWkoc1swXSk7dC5kaXNjb25uZWN0KGUsc1sxXSl9fXQuc2V0KGEsYyl9ZWxzZSB0LnNldChhLGgrYyl9KShkLEssaix0dCxldCxOKSxSLEN0LFp0LCgodCxlLHMsbixpLG8scixhKT0+KGMsaCk9Pntjb25zdCBsPWUuZ2V0KGMpO2lmKHZvaWQgMD09PWwpdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyB0aGUgZXhwZWN0ZWQgY3ljbGUgY291bnQuXCIpO2NvbnN0IHU9byhjLmNvbnRleHQpLHA9YSh1KTtpZihsPT09aCl7aWYoZS5kZWxldGUoYyksIXAmJnIoYykpe2NvbnN0IGU9bihjKSx7b3V0cHV0czpvfT1zKGMpO2Zvcihjb25zdCBzIG9mIG8paWYoVShzKSl7Y29uc3QgaT1uKHNbMF0pO3QoZSxpLHNbMV0sc1syXSl9ZWxzZXtjb25zdCB0PWkoc1swXSk7ZS5jb25uZWN0KHQsc1sxXSl9fX1lbHNlIGUuc2V0KGMsbC1oKX0pKFksZCxqLHR0LGV0LGtlLE4sRGUpLCgodCxlLHMpPT5mdW5jdGlvbiBuKGksbyl7Y29uc3Qgcj1CKG8pP286cyh0LG8pO2lmKCh0PT5cImRlbGF5VGltZVwiaW4gdCkocikpcmV0dXJuW107aWYoaVswXT09PXIpcmV0dXJuW2ldO2lmKGkuaW5jbHVkZXMocikpcmV0dXJuW107Y29uc3R7b3V0cHV0czphfT1lKHIpO3JldHVybiBBcnJheS5mcm9tKGEpLm1hcCgodD0+bihbLi4uaSxyXSx0WzBdKSkpLnJlZHVjZSgoKHQsZSk9PnQuY29uY2F0KGUpKSxbXSl9KShPZSxqLHcpLE1lLGtlLFJlLHFlLEZlLERlLEllKTt2YXIgTmU7Y29uc3QgUGU9KCh0LGUscyxuLGksbyk9PmNsYXNzIGV4dGVuZHMgdHtjb25zdHJ1Y3Rvcih0LHMpe2NvbnN0IHI9aSh0KSxhPXsuLi5PLC4uLnN9LGM9bihyLGEpO3N1cGVyKHQsITEsYyxvKHIpP2UoKTpudWxsKSx0aGlzLl9uYXRpdmVBbmFseXNlck5vZGU9Y31nZXQgZmZ0U2l6ZSgpe3JldHVybiB0aGlzLl9uYXRpdmVBbmFseXNlck5vZGUuZmZ0U2l6ZX1zZXQgZmZ0U2l6ZSh0KXt0aGlzLl9uYXRpdmVBbmFseXNlck5vZGUuZmZ0U2l6ZT10fWdldCBmcmVxdWVuY3lCaW5Db3VudCgpe3JldHVybiB0aGlzLl9uYXRpdmVBbmFseXNlck5vZGUuZnJlcXVlbmN5QmluQ291bnR9Z2V0IG1heERlY2liZWxzKCl7cmV0dXJuIHRoaXMuX25hdGl2ZUFuYWx5c2VyTm9kZS5tYXhEZWNpYmVsc31zZXQgbWF4RGVjaWJlbHModCl7Y29uc3QgZT10aGlzLl9uYXRpdmVBbmFseXNlck5vZGUubWF4RGVjaWJlbHM7aWYodGhpcy5fbmF0aXZlQW5hbHlzZXJOb2RlLm1heERlY2liZWxzPXQsISh0PnRoaXMuX25hdGl2ZUFuYWx5c2VyTm9kZS5taW5EZWNpYmVscykpdGhyb3cgdGhpcy5fbmF0aXZlQW5hbHlzZXJOb2RlLm1heERlY2liZWxzPWUscygpfWdldCBtaW5EZWNpYmVscygpe3JldHVybiB0aGlzLl9uYXRpdmVBbmFseXNlck5vZGUubWluRGVjaWJlbHN9c2V0IG1pbkRlY2liZWxzKHQpe2NvbnN0IGU9dGhpcy5fbmF0aXZlQW5hbHlzZXJOb2RlLm1pbkRlY2liZWxzO2lmKHRoaXMuX25hdGl2ZUFuYWx5c2VyTm9kZS5taW5EZWNpYmVscz10LCEodGhpcy5fbmF0aXZlQW5hbHlzZXJOb2RlLm1heERlY2liZWxzPnQpKXRocm93IHRoaXMuX25hdGl2ZUFuYWx5c2VyTm9kZS5taW5EZWNpYmVscz1lLHMoKX1nZXQgc21vb3RoaW5nVGltZUNvbnN0YW50KCl7cmV0dXJuIHRoaXMuX25hdGl2ZUFuYWx5c2VyTm9kZS5zbW9vdGhpbmdUaW1lQ29uc3RhbnR9c2V0IHNtb290aGluZ1RpbWVDb25zdGFudCh0KXt0aGlzLl9uYXRpdmVBbmFseXNlck5vZGUuc21vb3RoaW5nVGltZUNvbnN0YW50PXR9Z2V0Qnl0ZUZyZXF1ZW5jeURhdGEodCl7dGhpcy5fbmF0aXZlQW5hbHlzZXJOb2RlLmdldEJ5dGVGcmVxdWVuY3lEYXRhKHQpfWdldEJ5dGVUaW1lRG9tYWluRGF0YSh0KXt0aGlzLl9uYXRpdmVBbmFseXNlck5vZGUuZ2V0Qnl0ZVRpbWVEb21haW5EYXRhKHQpfWdldEZsb2F0RnJlcXVlbmN5RGF0YSh0KXt0aGlzLl9uYXRpdmVBbmFseXNlck5vZGUuZ2V0RmxvYXRGcmVxdWVuY3lEYXRhKHQpfWdldEZsb2F0VGltZURvbWFpbkRhdGEodCl7dGhpcy5fbmF0aXZlQW5hbHlzZXJOb2RlLmdldEZsb2F0VGltZURvbWFpbkRhdGEodCl9fSkoVmUsU2UsUix3ZSxrZSxEZSksamU9bmV3IFdlYWtTZXQsTGU9KHQ9Pm51bGw9PT10P251bGw6dC5oYXNPd25Qcm9wZXJ0eShcIkF1ZGlvQnVmZmVyXCIpP3QuQXVkaW9CdWZmZXI6bnVsbCkoeGUpLHplPShXZT1uZXcgVWludDMyQXJyYXkoMSksdD0+KFdlWzBdPXQsV2VbMF0pKTt2YXIgV2U7Y29uc3QgQmU9KCh0LGUpPT5zPT57cy5jb3B5RnJvbUNoYW5uZWw9KG4saSxvPTApPT57Y29uc3Qgcj10KG8pLGE9dChpKTtpZihhPj1zLm51bWJlck9mQ2hhbm5lbHMpdGhyb3cgZSgpO2NvbnN0IGM9cy5sZW5ndGgsaD1zLmdldENoYW5uZWxEYXRhKGEpLGw9bi5sZW5ndGg7Zm9yKGxldCB0PXI8MD8tcjowO3QrcjxjJiZ0PGw7dCs9MSluW3RdPWhbdCtyXX0scy5jb3B5VG9DaGFubmVsPShuLGksbz0wKT0+e2NvbnN0IHI9dChvKSxhPXQoaSk7aWYoYT49cy5udW1iZXJPZkNoYW5uZWxzKXRocm93IGUoKTtjb25zdCBjPXMubGVuZ3RoLGg9cy5nZXRDaGFubmVsRGF0YShhKSxsPW4ubGVuZ3RoO2ZvcihsZXQgdD1yPDA/LXI6MDt0K3I8YyYmdDxsO3QrPTEpaFt0K3JdPW5bdF19fSkoemUsUiksVWU9KHQ9PmU9PntlLmNvcHlGcm9tQ2hhbm5lbD0ocz0+KG4saSxvPTApPT57Y29uc3Qgcj10KG8pLGE9dChpKTtpZihyPGUubGVuZ3RoKXJldHVybiBzLmNhbGwoZSxuLGEscil9KShlLmNvcHlGcm9tQ2hhbm5lbCksZS5jb3B5VG9DaGFubmVsPShzPT4obixpLG89MCk9Pntjb25zdCByPXQobyksYT10KGkpO2lmKHI8ZS5sZW5ndGgpcmV0dXJuIHMuY2FsbChlLG4sYSxyKX0pKGUuY29weVRvQ2hhbm5lbCl9KSh6ZSksR2U9KCh0LGUscyxuLGksbyxyLGEpPT57bGV0IGM9bnVsbDtyZXR1cm4gY2xhc3MgaHtjb25zdHJ1Y3RvcihoKXtpZihudWxsPT09aSl0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHRoZSBuYXRpdmUgT2ZmbGluZUF1ZGlvQ29udGV4dCBjb25zdHJ1Y3Rvci5cIik7Y29uc3R7bGVuZ3RoOmwsbnVtYmVyT2ZDaGFubmVsczp1LHNhbXBsZVJhdGU6cH09ey4uLkYsLi4uaH07bnVsbD09PWMmJihjPW5ldyBpKDEsMSw0NDEwMCkpO2NvbnN0IGQ9bnVsbCE9PW4mJmUobyxvKT9uZXcgbih7bGVuZ3RoOmwsbnVtYmVyT2ZDaGFubmVsczp1LHNhbXBsZVJhdGU6cH0pOmMuY3JlYXRlQnVmZmVyKHUsbCxwKTtpZigwPT09ZC5udW1iZXJPZkNoYW5uZWxzKXRocm93IHMoKTtyZXR1cm5cImZ1bmN0aW9uXCIhPXR5cGVvZiBkLmNvcHlGcm9tQ2hhbm5lbD8ocihkKSxxKGQpKTplKEUsKCgpPT5FKGQpKSl8fGEoZCksdC5hZGQoZCksZH1zdGF0aWNbU3ltYm9sLmhhc0luc3RhbmNlXShlKXtyZXR1cm4gbnVsbCE9PWUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZPYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk9PT1oLnByb3RvdHlwZXx8dC5oYXMoZSl9fX0pKGplLGdlLFp0LExlLENlLCh0PT4oKT0+e2lmKG51bGw9PT10KXJldHVybiExO3RyeXtuZXcgdCh7bGVuZ3RoOjEsc2FtcGxlUmF0ZTo0NDEwMH0pfWNhdGNoe3JldHVybiExfXJldHVybiEwfSkoTGUpLEJlLFVlKSxRZT0odD0+KGUscyk9Pntjb25zdCBuPXQoZSx7Y2hhbm5lbENvdW50OjEsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixnYWluOjB9KTtzLmNvbm5lY3QobikuY29ubmVjdChlLmRlc3RpbmF0aW9uKTtjb25zdCBpPSgpPT57cy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIixpKSxzLmRpc2Nvbm5lY3Qobiksbi5kaXNjb25uZWN0KCl9O3MuYWRkRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsaSl9KShCdCksWmU9KCh0LGUscyk9PmFzeW5jKG4saSxvKT0+e2NvbnN0IHI9ZShuKTthd2FpdCBQcm9taXNlLmFsbChBcnJheS5mcm9tKHIuYWN0aXZlSW5wdXRzKS5tYXAoKGFzeW5jKFtlLG5dKT0+e2NvbnN0IHI9dChlKSxhPWF3YWl0IHIucmVuZGVyKGUsaSk7cyhlKXx8YS5jb25uZWN0KG8sbil9KSkpfSkoYmUsTCxzdCksWGU9KHQ9PihlLHMsbik9PnQocyxlLG4pKShaZSksWWU9KCh0LGUscyxuLGksbyxyLGEsYyxoLGwpPT4oYyx1KT0+e2NvbnN0IHA9Yy5jcmVhdGVCdWZmZXJTb3VyY2UoKTtyZXR1cm4gcXQocCx1KSxJdChwLHUsXCJwbGF5YmFja1JhdGVcIiksUnQocCx1LFwiYnVmZmVyXCIpLFJ0KHAsdSxcImxvb3BcIiksUnQocCx1LFwibG9vcEVuZFwiKSxSdChwLHUsXCJsb29wU3RhcnRcIiksZShzLCgoKT0+cyhjKSkpfHwodD0+e3Quc3RhcnQ9KGU9PntsZXQgcz0hMTtyZXR1cm4obj0wLGk9MCxvKT0+e2lmKHMpdGhyb3cgQXQoKTtlLmNhbGwodCxuLGksbykscz0hMH19KSh0LnN0YXJ0KX0pKHApLGUobiwoKCk9Pm4oYykpKXx8KHQ9Pnt0LnN0YXJ0PShlPT4ocz0wLG49MCxpKT0+e2NvbnN0IG89dC5idWZmZXIscj1udWxsPT09bz9uOk1hdGgubWluKG8uZHVyYXRpb24sbik7bnVsbCE9PW8mJnI+by5kdXJhdGlvbi0uNS90LmNvbnRleHQuc2FtcGxlUmF0ZT9lLmNhbGwodCxzLDAsMCk6ZS5jYWxsKHQscyxyLGkpfSkodC5zdGFydCl9KShwKSxlKGksKCgpPT5pKGMpKSl8fGgocCxjKSxlKG8sKCgpPT5vKGMpKSl8fFZ0KHApLGUociwoKCk9PnIoYykpKXx8bChwLGMpLGUoYSwoKCk9PmEoYykpKXx8TnQocCksdChjLHApLHB9KShRZSxnZSwodD0+e2NvbnN0IGU9dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtlLnN0YXJ0KCk7dHJ5e2Uuc3RhcnQoKX1jYXRjaHtyZXR1cm4hMH1yZXR1cm4hMX0pLCh0PT57Y29uc3QgZT10LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpLHM9dC5jcmVhdGVCdWZmZXIoMSwxLDQ0MTAwKTtlLmJ1ZmZlcj1zO3RyeXtlLnN0YXJ0KDAsMSl9Y2F0Y2h7cmV0dXJuITF9cmV0dXJuITB9KSwodD0+e2NvbnN0IGU9dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtlLnN0YXJ0KCk7dHJ5e2Uuc3RvcCgpfWNhdGNoe3JldHVybiExfXJldHVybiEwfSksb2UscmUsYWUsMCwodD0+KGUscyk9Pntjb25zdCBuPXMuY3JlYXRlQnVmZmVyKDEsMSw0NDEwMCk7bnVsbD09PWUuYnVmZmVyJiYoZS5idWZmZXI9biksdChlLFwiYnVmZmVyXCIsKHQ9PigpPT57Y29uc3Qgcz10LmNhbGwoZSk7cmV0dXJuIHM9PT1uP251bGw6c30pLCh0PT5zPT50LmNhbGwoZSxudWxsPT09cz9uOnMpKSl9KShuZSksbGUpLCRlPSgodCxlKT0+KHMsbixpKT0+KHQobikucmVwbGF5KGkpLGUobixzLGkpKSkoKHQ9PmU9Pntjb25zdCBzPXQoZSk7aWYobnVsbD09PXMucmVuZGVyZXIpdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyB0aGUgcmVuZGVyZXIgb2YgdGhlIGdpdmVuIEF1ZGlvUGFyYW0gaW4gdGhlIGF1ZGlvIGdyYXBoLlwiKTtyZXR1cm4gcy5yZW5kZXJlcn0pKEwpLFplKSxIZT0oKHQsZSxzLG4saSk9PigpPT57Y29uc3Qgbz1uZXcgV2Vha01hcDtsZXQgcj1udWxsLGE9bnVsbDtyZXR1cm57c2V0IHN0YXJ0KHQpe3I9dH0sc2V0IHN0b3AodCl7YT10fSxyZW5kZXIoYyxoKXtjb25zdCBsPW8uZ2V0KGgpO3JldHVybiB2b2lkIDAhPT1sP1Byb21pc2UucmVzb2x2ZShsKTooYXN5bmMoYyxoKT0+e2xldCBsPXMoYyk7Y29uc3QgdT1NKGwsaCk7aWYoIXUpe2NvbnN0IHQ9e2J1ZmZlcjpsLmJ1ZmZlcixjaGFubmVsQ291bnQ6bC5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpsLmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOmwuY2hhbm5lbEludGVycHJldGF0aW9uLGxvb3A6bC5sb29wLGxvb3BFbmQ6bC5sb29wRW5kLGxvb3BTdGFydDpsLmxvb3BTdGFydCxwbGF5YmFja1JhdGU6bC5wbGF5YmFja1JhdGUudmFsdWV9O2w9ZShoLHQpLG51bGwhPT1yJiZsLnN0YXJ0KC4uLnIpLG51bGwhPT1hJiZsLnN0b3AoYSl9cmV0dXJuIG8uc2V0KGgsbCksdT9hd2FpdCB0KGgsYy5wbGF5YmFja1JhdGUsbC5wbGF5YmFja1JhdGUpOmF3YWl0IG4oaCxjLnBsYXliYWNrUmF0ZSxsLnBsYXliYWNrUmF0ZSksYXdhaXQgaShjLGgsbCksbH0pKGMsaCl9fX0pKFhlLFllLHR0LCRlLFRlKSxKZT0oKHQsZSxzLG4saSxyLGEsYyxoLGwsdSxwLGQpPT4obixmLF8sbT1udWxsLGc9bnVsbCk9Pntjb25zdCB2PV8udmFsdWUseT1uZXcgby5BdXRvbWF0aW9uRXZlbnRMaXN0KHYpLHg9Zj8odD0+KHtyZXBsYXkoZSl7Zm9yKGNvbnN0IHMgb2YgdClpZihcImV4cG9uZW50aWFsUmFtcFRvVmFsdWVcIj09PXMudHlwZSl7Y29uc3R7ZW5kVGltZTp0LHZhbHVlOm59PXM7ZS5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKG4sdCl9ZWxzZSBpZihcImxpbmVhclJhbXBUb1ZhbHVlXCI9PT1zLnR5cGUpe2NvbnN0e2VuZFRpbWU6dCx2YWx1ZTpufT1zO2UubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUobix0KX1lbHNlIGlmKFwic2V0VGFyZ2V0XCI9PT1zLnR5cGUpe2NvbnN0e3N0YXJ0VGltZTp0LHRhcmdldDpuLHRpbWVDb25zdGFudDppfT1zO2Uuc2V0VGFyZ2V0QXRUaW1lKG4sdCxpKX1lbHNlIGlmKFwic2V0VmFsdWVcIj09PXMudHlwZSl7Y29uc3R7c3RhcnRUaW1lOnQsdmFsdWU6bn09cztlLnNldFZhbHVlQXRUaW1lKG4sdCl9ZWxzZXtpZihcInNldFZhbHVlQ3VydmVcIiE9PXMudHlwZSl0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCBhcHBseSBhbiB1bmtub3duIGF1dG9tYXRpb24uXCIpO3tjb25zdHtkdXJhdGlvbjp0LHN0YXJ0VGltZTpuLHZhbHVlczppfT1zO2Uuc2V0VmFsdWVDdXJ2ZUF0VGltZShpLG4sdCl9fX19KSkoeSk6bnVsbCx3PXtnZXQgZGVmYXVsdFZhbHVlKCl7cmV0dXJuIHZ9LGdldCBtYXhWYWx1ZSgpe3JldHVybiBudWxsPT09bT9fLm1heFZhbHVlOm19LGdldCBtaW5WYWx1ZSgpe3JldHVybiBudWxsPT09Zz9fLm1pblZhbHVlOmd9LGdldCB2YWx1ZSgpe3JldHVybiBfLnZhbHVlfSxzZXQgdmFsdWUodCl7Xy52YWx1ZT10LHcuc2V0VmFsdWVBdFRpbWUodCxuLmNvbnRleHQuY3VycmVudFRpbWUpfSxjYW5jZWxBbmRIb2xkQXRUaW1lKHQpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIF8uY2FuY2VsQW5kSG9sZEF0VGltZSludWxsPT09eCYmeS5mbHVzaChuLmNvbnRleHQuY3VycmVudFRpbWUpLHkuYWRkKGkodCkpLF8uY2FuY2VsQW5kSG9sZEF0VGltZSh0KTtlbHNle2NvbnN0IGU9QXJyYXkuZnJvbSh5KS5wb3AoKTtudWxsPT09eCYmeS5mbHVzaChuLmNvbnRleHQuY3VycmVudFRpbWUpLHkuYWRkKGkodCkpO2NvbnN0IHM9QXJyYXkuZnJvbSh5KS5wb3AoKTtfLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0KSxlIT09cyYmdm9pZCAwIT09cyYmKFwiZXhwb25lbnRpYWxSYW1wVG9WYWx1ZVwiPT09cy50eXBlP18uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZShzLnZhbHVlLHMuZW5kVGltZSk6XCJsaW5lYXJSYW1wVG9WYWx1ZVwiPT09cy50eXBlP18ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUocy52YWx1ZSxzLmVuZFRpbWUpOlwic2V0VmFsdWVcIj09PXMudHlwZT9fLnNldFZhbHVlQXRUaW1lKHMudmFsdWUscy5zdGFydFRpbWUpOlwic2V0VmFsdWVDdXJ2ZVwiPT09cy50eXBlJiZfLnNldFZhbHVlQ3VydmVBdFRpbWUocy52YWx1ZXMscy5zdGFydFRpbWUscy5kdXJhdGlvbikpfXJldHVybiB3fSxjYW5jZWxTY2hlZHVsZWRWYWx1ZXM6dD0+KG51bGw9PT14JiZ5LmZsdXNoKG4uY29udGV4dC5jdXJyZW50VGltZSkseS5hZGQocih0KSksXy5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModCksdyksZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSh0LGUpe2lmKDA9PT10KXRocm93IG5ldyBSYW5nZUVycm9yO2lmKCFOdW1iZXIuaXNGaW5pdGUoZSl8fGU8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcjtjb25zdCBzPW4uY29udGV4dC5jdXJyZW50VGltZTtyZXR1cm4gbnVsbD09PXgmJnkuZmx1c2gocyksMD09PUFycmF5LmZyb20oeSkubGVuZ3RoJiYoeS5hZGQobCh2LHMpKSxfLnNldFZhbHVlQXRUaW1lKHYscykpLHkuYWRkKGEodCxlKSksXy5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKHQsZSksd30sbGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCxlKXtjb25zdCBzPW4uY29udGV4dC5jdXJyZW50VGltZTtyZXR1cm4gbnVsbD09PXgmJnkuZmx1c2gocyksMD09PUFycmF5LmZyb20oeSkubGVuZ3RoJiYoeS5hZGQobCh2LHMpKSxfLnNldFZhbHVlQXRUaW1lKHYscykpLHkuYWRkKGModCxlKSksXy5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh0LGUpLHd9LHNldFRhcmdldEF0VGltZToodCxlLHMpPT4obnVsbD09PXgmJnkuZmx1c2gobi5jb250ZXh0LmN1cnJlbnRUaW1lKSx5LmFkZChoKHQsZSxzKSksXy5zZXRUYXJnZXRBdFRpbWUodCxlLHMpLHcpLHNldFZhbHVlQXRUaW1lOih0LGUpPT4obnVsbD09PXgmJnkuZmx1c2gobi5jb250ZXh0LmN1cnJlbnRUaW1lKSx5LmFkZChsKHQsZSkpLF8uc2V0VmFsdWVBdFRpbWUodCxlKSx3KSxzZXRWYWx1ZUN1cnZlQXRUaW1lKHQsZSxzKXtjb25zdCBpPXQgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXk/dDpuZXcgRmxvYXQzMkFycmF5KHQpO2lmKG51bGwhPT1wJiZcIndlYmtpdEF1ZGlvQ29udGV4dFwiPT09cC5uYW1lKXtjb25zdCB0PWUrcyxvPW4uY29udGV4dC5zYW1wbGVSYXRlLHI9TWF0aC5jZWlsKGUqbyksYT1NYXRoLmZsb29yKHQqbyksYz1hLXIsaD1uZXcgRmxvYXQzMkFycmF5KGMpO2ZvcihsZXQgdD0wO3Q8Yzt0Kz0xKXtjb25zdCBuPShpLmxlbmd0aC0xKS9zKigocit0KS9vLWUpLGE9TWF0aC5mbG9vcihuKSxjPU1hdGguY2VpbChuKTtoW3RdPWE9PT1jP2lbYV06KDEtKG4tYSkpKmlbYV0rKDEtKGMtbikpKmlbY119bnVsbD09PXgmJnkuZmx1c2gobi5jb250ZXh0LmN1cnJlbnRUaW1lKSx5LmFkZCh1KGgsZSxzKSksXy5zZXRWYWx1ZUN1cnZlQXRUaW1lKGgsZSxzKTtjb25zdCBsPWEvbztsPHQmJmQodyxoW2gubGVuZ3RoLTFdLGwpLGQodyxpW2kubGVuZ3RoLTFdLHQpfWVsc2UgbnVsbD09PXgmJnkuZmx1c2gobi5jb250ZXh0LmN1cnJlbnRUaW1lKSx5LmFkZCh1KGksZSxzKSksXy5zZXRWYWx1ZUN1cnZlQXRUaW1lKGksZSxzKTtyZXR1cm4gd319O3JldHVybiBzLnNldCh3LF8pLGUuc2V0KHcsbiksdCh3LHgpLHd9KSgoS2U9aCwodCxlKT0+e0tlLnNldCh0LHthY3RpdmVJbnB1dHM6bmV3IFNldCxwYXNzaXZlSW5wdXRzOm5ldyBXZWFrTWFwLHJlbmRlcmVyOmV9KX0pLE9lLGwsMCxvLmNyZWF0ZUNhbmNlbEFuZEhvbGRBdXRvbWF0aW9uRXZlbnQsby5jcmVhdGVDYW5jZWxTY2hlZHVsZWRWYWx1ZXNBdXRvbWF0aW9uRXZlbnQsby5jcmVhdGVFeHBvbmVudGlhbFJhbXBUb1ZhbHVlQXV0b21hdGlvbkV2ZW50LG8uY3JlYXRlTGluZWFyUmFtcFRvVmFsdWVBdXRvbWF0aW9uRXZlbnQsby5jcmVhdGVTZXRUYXJnZXRBdXRvbWF0aW9uRXZlbnQsby5jcmVhdGVTZXRWYWx1ZUF1dG9tYXRpb25FdmVudCxvLmNyZWF0ZVNldFZhbHVlQ3VydmVBdXRvbWF0aW9uRXZlbnQsRWUsaWUpO3ZhciBLZTtjb25zdCB0cz0oKHQsZSxzLG4saSxvLHIsYSk9PmNsYXNzIGV4dGVuZHMgdHtjb25zdHJ1Y3Rvcih0LG4pe2NvbnN0IGE9byh0KSxjPXsuLi5QLC4uLm59LGg9aShhLGMpLGw9cihhKSx1PWw/ZSgpOm51bGw7c3VwZXIodCwhMSxoLHUpLHRoaXMuX2F1ZGlvQnVmZmVyU291cmNlTm9kZVJlbmRlcmVyPXUsdGhpcy5faXNCdWZmZXJOdWxsaWZpZWQ9ITEsdGhpcy5faXNCdWZmZXJTZXQ9bnVsbCE9PWMuYnVmZmVyLHRoaXMuX25hdGl2ZUF1ZGlvQnVmZmVyU291cmNlTm9kZT1oLHRoaXMuX29uZW5kZWQ9bnVsbCx0aGlzLl9wbGF5YmFja1JhdGU9cyh0aGlzLGwsaC5wbGF5YmFja1JhdGUsVixJKX1nZXQgYnVmZmVyKCl7cmV0dXJuIHRoaXMuX2lzQnVmZmVyTnVsbGlmaWVkP251bGw6dGhpcy5fbmF0aXZlQXVkaW9CdWZmZXJTb3VyY2VOb2RlLmJ1ZmZlcn1zZXQgYnVmZmVyKHQpe2lmKHRoaXMuX25hdGl2ZUF1ZGlvQnVmZmVyU291cmNlTm9kZS5idWZmZXI9dCxudWxsIT09dCl7aWYodGhpcy5faXNCdWZmZXJTZXQpdGhyb3cgbigpO3RoaXMuX2lzQnVmZmVyU2V0PSEwfX1nZXQgbG9vcCgpe3JldHVybiB0aGlzLl9uYXRpdmVBdWRpb0J1ZmZlclNvdXJjZU5vZGUubG9vcH1zZXQgbG9vcCh0KXt0aGlzLl9uYXRpdmVBdWRpb0J1ZmZlclNvdXJjZU5vZGUubG9vcD10fWdldCBsb29wRW5kKCl7cmV0dXJuIHRoaXMuX25hdGl2ZUF1ZGlvQnVmZmVyU291cmNlTm9kZS5sb29wRW5kfXNldCBsb29wRW5kKHQpe3RoaXMuX25hdGl2ZUF1ZGlvQnVmZmVyU291cmNlTm9kZS5sb29wRW5kPXR9Z2V0IGxvb3BTdGFydCgpe3JldHVybiB0aGlzLl9uYXRpdmVBdWRpb0J1ZmZlclNvdXJjZU5vZGUubG9vcFN0YXJ0fXNldCBsb29wU3RhcnQodCl7dGhpcy5fbmF0aXZlQXVkaW9CdWZmZXJTb3VyY2VOb2RlLmxvb3BTdGFydD10fWdldCBvbmVuZGVkKCl7cmV0dXJuIHRoaXMuX29uZW5kZWR9c2V0IG9uZW5kZWQodCl7Y29uc3QgZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2EodGhpcyx0KTpudWxsO3RoaXMuX25hdGl2ZUF1ZGlvQnVmZmVyU291cmNlTm9kZS5vbmVuZGVkPWU7Y29uc3Qgcz10aGlzLl9uYXRpdmVBdWRpb0J1ZmZlclNvdXJjZU5vZGUub25lbmRlZDt0aGlzLl9vbmVuZGVkPW51bGwhPT1zJiZzPT09ZT90OnN9Z2V0IHBsYXliYWNrUmF0ZSgpe3JldHVybiB0aGlzLl9wbGF5YmFja1JhdGV9c3RhcnQodD0wLGU9MCxzKXtpZih0aGlzLl9uYXRpdmVBdWRpb0J1ZmZlclNvdXJjZU5vZGUuc3RhcnQodCxlLHMpLG51bGwhPT10aGlzLl9hdWRpb0J1ZmZlclNvdXJjZU5vZGVSZW5kZXJlciYmKHRoaXMuX2F1ZGlvQnVmZmVyU291cmNlTm9kZVJlbmRlcmVyLnN0YXJ0PXZvaWQgMD09PXM/W3QsZV06W3QsZSxzXSksXCJjbG9zZWRcIiE9PXRoaXMuY29udGV4dC5zdGF0ZSl7ayh0aGlzKTtjb25zdCB0PSgpPT57dGhpcy5fbmF0aXZlQXVkaW9CdWZmZXJTb3VyY2VOb2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLHQpLE4odGhpcykmJkModGhpcyl9O3RoaXMuX25hdGl2ZUF1ZGlvQnVmZmVyU291cmNlTm9kZS5hZGRFdmVudExpc3RlbmVyKFwiZW5kZWRcIix0KX19c3RvcCh0PTApe3RoaXMuX25hdGl2ZUF1ZGlvQnVmZmVyU291cmNlTm9kZS5zdG9wKHQpLG51bGwhPT10aGlzLl9hdWRpb0J1ZmZlclNvdXJjZU5vZGVSZW5kZXJlciYmKHRoaXMuX2F1ZGlvQnVmZmVyU291cmNlTm9kZVJlbmRlcmVyLnN0b3A9dCl9fSkoVmUsSGUsSmUsQXQsWWUsa2UsRGUsdWUpLGVzPSgodCxlLHMsbixpLG8scixhKT0+Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKHQsZSl7Y29uc3Qgcz1vKHQpLG49cihzKSxjPWkocyxlLG4pO3N1cGVyKHQsITEsYyxuPyh0PT57Y29uc3QgZT1uZXcgV2Vha01hcDtyZXR1cm57cmVuZGVyKHMsbil7Y29uc3QgaT1lLmdldChuKTtyZXR1cm4gdm9pZCAwIT09aT9Qcm9taXNlLnJlc29sdmUoaSk6KGFzeW5jKHMsbik9Pntjb25zdCBpPW4uZGVzdGluYXRpb247cmV0dXJuIGUuc2V0KG4saSksYXdhaXQgdChzLG4saSksaX0pKHMsbil9fX0pKGEpOm51bGwpLHRoaXMuX2lzTm9kZU9mTmF0aXZlT2ZmbGluZUF1ZGlvQ29udGV4dD1uLHRoaXMuX25hdGl2ZUF1ZGlvRGVzdGluYXRpb25Ob2RlPWN9Z2V0IGNoYW5uZWxDb3VudCgpe3JldHVybiB0aGlzLl9uYXRpdmVBdWRpb0Rlc3RpbmF0aW9uTm9kZS5jaGFubmVsQ291bnR9c2V0IGNoYW5uZWxDb3VudCh0KXtpZih0aGlzLl9pc05vZGVPZk5hdGl2ZU9mZmxpbmVBdWRpb0NvbnRleHQpdGhyb3cgbigpO2lmKHQ+dGhpcy5fbmF0aXZlQXVkaW9EZXN0aW5hdGlvbk5vZGUubWF4Q2hhbm5lbENvdW50KXRocm93IHMoKTt0aGlzLl9uYXRpdmVBdWRpb0Rlc3RpbmF0aW9uTm9kZS5jaGFubmVsQ291bnQ9dH1nZXQgY2hhbm5lbENvdW50TW9kZSgpe3JldHVybiB0aGlzLl9uYXRpdmVBdWRpb0Rlc3RpbmF0aW9uTm9kZS5jaGFubmVsQ291bnRNb2RlfXNldCBjaGFubmVsQ291bnRNb2RlKHQpe2lmKHRoaXMuX2lzTm9kZU9mTmF0aXZlT2ZmbGluZUF1ZGlvQ29udGV4dCl0aHJvdyBuKCk7dGhpcy5fbmF0aXZlQXVkaW9EZXN0aW5hdGlvbk5vZGUuY2hhbm5lbENvdW50TW9kZT10fWdldCBtYXhDaGFubmVsQ291bnQoKXtyZXR1cm4gdGhpcy5fbmF0aXZlQXVkaW9EZXN0aW5hdGlvbk5vZGUubWF4Q2hhbm5lbENvdW50fX0pKFZlLDAsUixBdCwoKHQsZSk9PihzLG4saSk9Pntjb25zdCBvPXMuZGVzdGluYXRpb247aWYoby5jaGFubmVsQ291bnQhPT1uKXRyeXtvLmNoYW5uZWxDb3VudD1ufWNhdGNoe31pJiZcImV4cGxpY2l0XCIhPT1vLmNoYW5uZWxDb3VudE1vZGUmJihvLmNoYW5uZWxDb3VudE1vZGU9XCJleHBsaWNpdFwiKSwwPT09by5tYXhDaGFubmVsQ291bnQmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLFwibWF4Q2hhbm5lbENvdW50XCIse3ZhbHVlOm59KTtjb25zdCByPXQocyx7Y2hhbm5lbENvdW50Om4sY2hhbm5lbENvdW50TW9kZTpvLmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOm8uY2hhbm5lbEludGVycHJldGF0aW9uLGdhaW46MX0pO3JldHVybiBlKHIsXCJjaGFubmVsQ291bnRcIiwodD0+KCk9PnQuY2FsbChyKSksKHQ9PmU9Pnt0LmNhbGwocixlKTt0cnl7by5jaGFubmVsQ291bnQ9ZX1jYXRjaCh0KXtpZihlPm8ubWF4Q2hhbm5lbENvdW50KXRocm93IHR9fSkpLGUocixcImNoYW5uZWxDb3VudE1vZGVcIiwodD0+KCk9PnQuY2FsbChyKSksKHQ9PmU9Pnt0LmNhbGwocixlKSxvLmNoYW5uZWxDb3VudE1vZGU9ZX0pKSxlKHIsXCJjaGFubmVsSW50ZXJwcmV0YXRpb25cIiwodD0+KCk9PnQuY2FsbChyKSksKHQ9PmU9Pnt0LmNhbGwocixlKSxvLmNoYW5uZWxJbnRlcnByZXRhdGlvbj1lfSkpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwibWF4Q2hhbm5lbENvdW50XCIse2dldDooKT0+by5tYXhDaGFubmVsQ291bnR9KSxyLmNvbm5lY3Qobykscn0pKEJ0LG5lKSxrZSxEZSxUZSksc3M9KCh0LGUscyxuLGkpPT4oKT0+e2NvbnN0IG89bmV3IFdlYWtNYXA7cmV0dXJue3JlbmRlcihyLGEpe2NvbnN0IGM9by5nZXQoYSk7cmV0dXJuIHZvaWQgMCE9PWM/UHJvbWlzZS5yZXNvbHZlKGMpOihhc3luYyhyLGEpPT57bGV0IGM9cyhyKTtjb25zdCBoPU0oYyxhKTtpZighaCl7Y29uc3QgdD17UTpjLlEudmFsdWUsY2hhbm5lbENvdW50OmMuY2hhbm5lbENvdW50LGNoYW5uZWxDb3VudE1vZGU6Yy5jaGFubmVsQ291bnRNb2RlLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpjLmNoYW5uZWxJbnRlcnByZXRhdGlvbixkZXR1bmU6Yy5kZXR1bmUudmFsdWUsZnJlcXVlbmN5OmMuZnJlcXVlbmN5LnZhbHVlLGdhaW46Yy5nYWluLnZhbHVlLHR5cGU6Yy50eXBlfTtjPWUoYSx0KX1yZXR1cm4gby5zZXQoYSxjKSxoPyhhd2FpdCB0KGEsci5RLGMuUSksYXdhaXQgdChhLHIuZGV0dW5lLGMuZGV0dW5lKSxhd2FpdCB0KGEsci5mcmVxdWVuY3ksYy5mcmVxdWVuY3kpLGF3YWl0IHQoYSxyLmdhaW4sYy5nYWluKSk6KGF3YWl0IG4oYSxyLlEsYy5RKSxhd2FpdCBuKGEsci5kZXR1bmUsYy5kZXR1bmUpLGF3YWl0IG4oYSxyLmZyZXF1ZW5jeSxjLmZyZXF1ZW5jeSksYXdhaXQgbihhLHIuZ2FpbixjLmdhaW4pKSxhd2FpdCBpKHIsYSxjKSxjfSkocixhKX19fSkoWGUsanQsdHQsJGUsVGUpLG5zPSh0PT4oZSxzKT0+dC5zZXQoZSxzKSkoX2UpLGlzPSgodCxlLHMsbixpLG8scixhKT0+Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKHQsbil7Y29uc3QgYz1vKHQpLGg9ey4uLm10LC4uLm59LGw9aShjLGgpLHU9cihjKTtzdXBlcih0LCExLGwsdT9zKCk6bnVsbCksdGhpcy5fUT1lKHRoaXMsdSxsLlEsVixJKSx0aGlzLl9kZXR1bmU9ZSh0aGlzLHUsbC5kZXR1bmUsMTIwMCpNYXRoLmxvZzIoViksLTEyMDAqTWF0aC5sb2cyKFYpKSx0aGlzLl9mcmVxdWVuY3k9ZSh0aGlzLHUsbC5mcmVxdWVuY3ksdC5zYW1wbGVSYXRlLzIsMCksdGhpcy5fZ2Fpbj1lKHRoaXMsdSxsLmdhaW4sNDAqTWF0aC5sb2cxMChWKSxJKSx0aGlzLl9uYXRpdmVCaXF1YWRGaWx0ZXJOb2RlPWwsYSh0aGlzLDEpfWdldCBkZXR1bmUoKXtyZXR1cm4gdGhpcy5fZGV0dW5lfWdldCBmcmVxdWVuY3koKXtyZXR1cm4gdGhpcy5fZnJlcXVlbmN5fWdldCBnYWluKCl7cmV0dXJuIHRoaXMuX2dhaW59Z2V0IFEoKXtyZXR1cm4gdGhpcy5fUX1nZXQgdHlwZSgpe3JldHVybiB0aGlzLl9uYXRpdmVCaXF1YWRGaWx0ZXJOb2RlLnR5cGV9c2V0IHR5cGUodCl7dGhpcy5fbmF0aXZlQmlxdWFkRmlsdGVyTm9kZS50eXBlPXR9Z2V0RnJlcXVlbmN5UmVzcG9uc2UodCxlLHMpe3RyeXt0aGlzLl9uYXRpdmVCaXF1YWRGaWx0ZXJOb2RlLmdldEZyZXF1ZW5jeVJlc3BvbnNlKHQsZSxzKX1jYXRjaCh0KXtpZigxMT09PXQuY29kZSl0aHJvdyBuKCk7dGhyb3cgdH1pZih0Lmxlbmd0aCE9PWUubGVuZ3RofHxlLmxlbmd0aCE9PXMubGVuZ3RoKXRocm93IG4oKX19KShWZSxKZSxzcyxDdCxqdCxrZSxEZSxucyksb3M9KCh0LGUpPT4ocyxuLGkpPT57Y29uc3Qgbz1uZXcgU2V0O3JldHVybiBzLmNvbm5lY3Q9KGk9PihyLGE9MCxjPTApPT57Y29uc3QgaD0wPT09by5zaXplO2lmKGUocikpcmV0dXJuIGkuY2FsbChzLHIsYSxjKSx0KG8sW3IsYSxjXSwodD0+dFswXT09PXImJnRbMV09PT1hJiZ0WzJdPT09YyksITApLGgmJm4oKSxyO2kuY2FsbChzLHIsYSksdChvLFtyLGFdLCh0PT50WzBdPT09ciYmdFsxXT09PWEpLCEwKSxoJiZuKCl9KShzLmNvbm5lY3QpLHMuZGlzY29ubmVjdD0odD0+KG4scixhKT0+e2NvbnN0IGM9by5zaXplPjA7aWYodm9pZCAwPT09bil0LmFwcGx5KHMpLG8uY2xlYXIoKTtlbHNlIGlmKFwibnVtYmVyXCI9PXR5cGVvZiBuKXt0LmNhbGwocyxuKTtmb3IoY29uc3QgdCBvZiBvKXRbMV09PT1uJiZvLmRlbGV0ZSh0KX1lbHNle2Uobik/dC5jYWxsKHMsbixyLGEpOnQuY2FsbChzLG4scik7Zm9yKGNvbnN0IHQgb2Ygbyl0WzBdIT09bnx8dm9pZCAwIT09ciYmdFsxXSE9PXJ8fHZvaWQgMCE9PWEmJnRbMl0hPT1hfHxvLmRlbGV0ZSh0KX1jb25zdCBoPTA9PT1vLnNpemU7YyYmaCYmaSgpfSkocy5kaXNjb25uZWN0KSxzfSkoRyxxZSkscnM9KCh0LGUpPT4ocyxuKT0+e24uY2hhbm5lbENvdW50PTEsbi5jaGFubmVsQ291bnRNb2RlPVwiZXhwbGljaXRcIixPYmplY3QuZGVmaW5lUHJvcGVydHkobixcImNoYW5uZWxDb3VudFwiLHtnZXQ6KCk9PjEsc2V0OigpPT57dGhyb3cgdCgpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLFwiY2hhbm5lbENvdW50TW9kZVwiLHtnZXQ6KCk9PlwiZXhwbGljaXRcIixzZXQ6KCk9Pnt0aHJvdyB0KCl9fSk7Y29uc3QgaT1zLmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO2UobiwoKCk9Pntjb25zdCB0PW4ubnVtYmVyT2ZJbnB1dHM7Zm9yKGxldCBlPTA7ZTx0O2UrPTEpaS5jb25uZWN0KG4sMCxlKX0pLCgoKT0+aS5kaXNjb25uZWN0KG4pKSl9KShBdCxvcyksYXM9KCh0LGUpPT4ocyxuKT0+e2NvbnN0IGk9cy5jcmVhdGVDaGFubmVsTWVyZ2VyKG4ubnVtYmVyT2ZJbnB1dHMpO3JldHVybiBudWxsIT09dCYmXCJ3ZWJraXRBdWRpb0NvbnRleHRcIj09PXQubmFtZSYmZShzLGkpLHF0KGksbiksaX0pKEVlLHJzKSxjcz0oKHQsZSxzKT0+KCk9Pntjb25zdCBuPW5ldyBXZWFrTWFwO3JldHVybntyZW5kZXIoaSxvKXtjb25zdCByPW4uZ2V0KG8pO3JldHVybiB2b2lkIDAhPT1yP1Byb21pc2UucmVzb2x2ZShyKTooYXN5bmMoaSxvKT0+e2xldCByPWUoaSk7aWYoIU0ocixvKSl7Y29uc3QgZT17Y2hhbm5lbENvdW50OnIuY2hhbm5lbENvdW50LGNoYW5uZWxDb3VudE1vZGU6ci5jaGFubmVsQ291bnRNb2RlLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpyLmNoYW5uZWxJbnRlcnByZXRhdGlvbixudW1iZXJPZklucHV0czpyLm51bWJlck9mSW5wdXRzfTtyPXQobyxlKX1yZXR1cm4gbi5zZXQobyxyKSxhd2FpdCBzKGksbyxyKSxyfSkoaSxvKX19fSkoYXMsdHQsVGUpLGhzPSgodCxlLHMsbixpKT0+Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKHQsbyl7Y29uc3Qgcj1uKHQpLGE9ey4uLmd0LC4uLm99O3N1cGVyKHQsITEscyhyLGEpLGkocik/ZSgpOm51bGwpfX0pKFZlLGNzLGFzLGtlLERlKSxscz0oKHQsZSxzKT0+KCk9Pntjb25zdCBuPW5ldyBXZWFrTWFwO3JldHVybntyZW5kZXIoaSxvKXtjb25zdCByPW4uZ2V0KG8pO3JldHVybiB2b2lkIDAhPT1yP1Byb21pc2UucmVzb2x2ZShyKTooYXN5bmMoaSxvKT0+e2xldCByPWUoaSk7aWYoIU0ocixvKSl7Y29uc3QgZT17Y2hhbm5lbENvdW50OnIuY2hhbm5lbENvdW50LGNoYW5uZWxDb3VudE1vZGU6ci5jaGFubmVsQ291bnRNb2RlLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpyLmNoYW5uZWxJbnRlcnByZXRhdGlvbixudW1iZXJPZk91dHB1dHM6ci5udW1iZXJPZk91dHB1dHN9O3I9dChvLGUpfXJldHVybiBuLnNldChvLHIpLGF3YWl0IHMoaSxvLHIpLHJ9KShpLG8pfX19KShMdCx0dCxUZSksdXM9KCh0LGUscyxuLGksbyk9PmNsYXNzIGV4dGVuZHMgdHtjb25zdHJ1Y3Rvcih0LG8pe2NvbnN0IHI9bih0KSxhPSh0PT4oey4uLnQsY2hhbm5lbENvdW50OnQubnVtYmVyT2ZPdXRwdXRzfSkpKHsuLi52dCwuLi5vfSk7c3VwZXIodCwhMSxzKHIsYSksaShyKT9lKCk6bnVsbCl9fSkoVmUsbHMsTHQsa2UsRGUpLHBzPSgodCxlLHMsbik9PihpLHtvZmZzZXQ6bywuLi5yfSk9Pntjb25zdCBhPWkuY3JlYXRlQnVmZmVyKDEsMiw0NDEwMCksYz1lKGkse2J1ZmZlcjpudWxsLGNoYW5uZWxDb3VudDoyLGNoYW5uZWxDb3VudE1vZGU6XCJtYXhcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLGxvb3A6ITEsbG9vcEVuZDowLGxvb3BTdGFydDowLHBsYXliYWNrUmF0ZToxfSksaD1zKGksey4uLnIsZ2FpbjpvfSksbD1hLmdldENoYW5uZWxEYXRhKDApO2xbMF09MSxsWzFdPTEsYy5idWZmZXI9YSxjLmxvb3A9ITA7Y29uc3QgdT17Z2V0IGJ1ZmZlclNpemUoKXt9LGdldCBjaGFubmVsQ291bnQoKXtyZXR1cm4gaC5jaGFubmVsQ291bnR9LHNldCBjaGFubmVsQ291bnQodCl7aC5jaGFubmVsQ291bnQ9dH0sZ2V0IGNoYW5uZWxDb3VudE1vZGUoKXtyZXR1cm4gaC5jaGFubmVsQ291bnRNb2RlfSxzZXQgY2hhbm5lbENvdW50TW9kZSh0KXtoLmNoYW5uZWxDb3VudE1vZGU9dH0sZ2V0IGNoYW5uZWxJbnRlcnByZXRhdGlvbigpe3JldHVybiBoLmNoYW5uZWxJbnRlcnByZXRhdGlvbn0sc2V0IGNoYW5uZWxJbnRlcnByZXRhdGlvbih0KXtoLmNoYW5uZWxJbnRlcnByZXRhdGlvbj10fSxnZXQgY29udGV4dCgpe3JldHVybiBoLmNvbnRleHR9LGdldCBpbnB1dHMoKXtyZXR1cm5bXX0sZ2V0IG51bWJlck9mSW5wdXRzKCl7cmV0dXJuIGMubnVtYmVyT2ZJbnB1dHN9LGdldCBudW1iZXJPZk91dHB1dHMoKXtyZXR1cm4gaC5udW1iZXJPZk91dHB1dHN9LGdldCBvZmZzZXQoKXtyZXR1cm4gaC5nYWlufSxnZXQgb25lbmRlZCgpe3JldHVybiBjLm9uZW5kZWR9LHNldCBvbmVuZGVkKHQpe2Mub25lbmRlZD10fSxhZGRFdmVudExpc3RlbmVyOiguLi50KT0+Yy5hZGRFdmVudExpc3RlbmVyKHRbMF0sdFsxXSx0WzJdKSxkaXNwYXRjaEV2ZW50OiguLi50KT0+Yy5kaXNwYXRjaEV2ZW50KHRbMF0pLHJlbW92ZUV2ZW50TGlzdGVuZXI6KC4uLnQpPT5jLnJlbW92ZUV2ZW50TGlzdGVuZXIodFswXSx0WzFdLHRbMl0pLHN0YXJ0KHQ9MCl7Yy5zdGFydC5jYWxsKGMsdCl9LHN0b3AodD0wKXtjLnN0b3AuY2FsbChjLHQpfX07cmV0dXJuIHQoaSxjKSxuKHp0KHUsaCksKCgpPT5jLmNvbm5lY3QoaCkpLCgoKT0+Yy5kaXNjb25uZWN0KGgpKSl9KShRZSxZZSxCdCxvcyksZHM9KCh0LGUscyxuLGkpPT4obyxyKT0+e2lmKHZvaWQgMD09PW8uY3JlYXRlQ29uc3RhbnRTb3VyY2UpcmV0dXJuIHMobyxyKTtjb25zdCBhPW8uY3JlYXRlQ29uc3RhbnRTb3VyY2UoKTtyZXR1cm4gcXQoYSxyKSxJdChhLHIsXCJvZmZzZXRcIiksZShuLCgoKT0+bihvKSkpfHxWdChhKSxlKGksKCgpPT5pKG8pKSl8fE50KGEpLHQobyxhKSxhfSkoUWUsZ2UscHMsb2UsYWUpLGZzPSgodCxlLHMsbixpKT0+KCk9Pntjb25zdCBvPW5ldyBXZWFrTWFwO2xldCByPW51bGwsYT1udWxsO3JldHVybntzZXQgc3RhcnQodCl7cj10fSxzZXQgc3RvcCh0KXthPXR9LHJlbmRlcihjLGgpe2NvbnN0IGw9by5nZXQoaCk7cmV0dXJuIHZvaWQgMCE9PWw/UHJvbWlzZS5yZXNvbHZlKGwpOihhc3luYyhjLGgpPT57bGV0IGw9cyhjKTtjb25zdCB1PU0obCxoKTtpZighdSl7Y29uc3QgdD17Y2hhbm5lbENvdW50OmwuY2hhbm5lbENvdW50LGNoYW5uZWxDb3VudE1vZGU6bC5jaGFubmVsQ291bnRNb2RlLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpsLmNoYW5uZWxJbnRlcnByZXRhdGlvbixvZmZzZXQ6bC5vZmZzZXQudmFsdWV9O2w9ZShoLHQpLG51bGwhPT1yJiZsLnN0YXJ0KHIpLG51bGwhPT1hJiZsLnN0b3AoYSl9cmV0dXJuIG8uc2V0KGgsbCksdT9hd2FpdCB0KGgsYy5vZmZzZXQsbC5vZmZzZXQpOmF3YWl0IG4oaCxjLm9mZnNldCxsLm9mZnNldCksYXdhaXQgaShjLGgsbCksbH0pKGMsaCl9fX0pKFhlLGRzLHR0LCRlLFRlKSxfcz0oKHQsZSxzLG4saSxvLHIpPT5jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IodCxyKXtjb25zdCBhPWkodCksYz17Li4ueXQsLi4ucn0saD1uKGEsYyksbD1vKGEpLHU9bD9zKCk6bnVsbDtzdXBlcih0LCExLGgsdSksdGhpcy5fY29uc3RhbnRTb3VyY2VOb2RlUmVuZGVyZXI9dSx0aGlzLl9uYXRpdmVDb25zdGFudFNvdXJjZU5vZGU9aCx0aGlzLl9vZmZzZXQ9ZSh0aGlzLGwsaC5vZmZzZXQsVixJKSx0aGlzLl9vbmVuZGVkPW51bGx9Z2V0IG9mZnNldCgpe3JldHVybiB0aGlzLl9vZmZzZXR9Z2V0IG9uZW5kZWQoKXtyZXR1cm4gdGhpcy5fb25lbmRlZH1zZXQgb25lbmRlZCh0KXtjb25zdCBlPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/cih0aGlzLHQpOm51bGw7dGhpcy5fbmF0aXZlQ29uc3RhbnRTb3VyY2VOb2RlLm9uZW5kZWQ9ZTtjb25zdCBzPXRoaXMuX25hdGl2ZUNvbnN0YW50U291cmNlTm9kZS5vbmVuZGVkO3RoaXMuX29uZW5kZWQ9bnVsbCE9PXMmJnM9PT1lP3Q6c31zdGFydCh0PTApe2lmKHRoaXMuX25hdGl2ZUNvbnN0YW50U291cmNlTm9kZS5zdGFydCh0KSxudWxsIT09dGhpcy5fY29uc3RhbnRTb3VyY2VOb2RlUmVuZGVyZXImJih0aGlzLl9jb25zdGFudFNvdXJjZU5vZGVSZW5kZXJlci5zdGFydD10KSxcImNsb3NlZFwiIT09dGhpcy5jb250ZXh0LnN0YXRlKXtrKHRoaXMpO2NvbnN0IHQ9KCk9Pnt0aGlzLl9uYXRpdmVDb25zdGFudFNvdXJjZU5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsdCksTih0aGlzKSYmQyh0aGlzKX07dGhpcy5fbmF0aXZlQ29uc3RhbnRTb3VyY2VOb2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLHQpfX1zdG9wKHQ9MCl7dGhpcy5fbmF0aXZlQ29uc3RhbnRTb3VyY2VOb2RlLnN0b3AodCksbnVsbCE9PXRoaXMuX2NvbnN0YW50U291cmNlTm9kZVJlbmRlcmVyJiYodGhpcy5fY29uc3RhbnRTb3VyY2VOb2RlUmVuZGVyZXIuc3RvcD10KX19KShWZSxKZSxmcyxkcyxrZSxEZSx1ZSksbXM9KCh0LGUpPT4ocyxuKT0+e2NvbnN0IGk9cy5jcmVhdGVDb252b2x2ZXIoKTtpZihxdChpLG4pLG4uZGlzYWJsZU5vcm1hbGl6YXRpb249PT1pLm5vcm1hbGl6ZSYmKGkubm9ybWFsaXplPSFuLmRpc2FibGVOb3JtYWxpemF0aW9uKSxSdChpLG4sXCJidWZmZXJcIiksbi5jaGFubmVsQ291bnQ+Mil0aHJvdyB0KCk7aWYoZShpLFwiY2hhbm5lbENvdW50XCIsKHQ9PigpPT50LmNhbGwoaSkpLChlPT5zPT57aWYocz4yKXRocm93IHQoKTtyZXR1cm4gZS5jYWxsKGkscyl9KSksXCJtYXhcIj09PW4uY2hhbm5lbENvdW50TW9kZSl0aHJvdyB0KCk7cmV0dXJuIGUoaSxcImNoYW5uZWxDb3VudE1vZGVcIiwodD0+KCk9PnQuY2FsbChpKSksKGU9PnM9PntpZihcIm1heFwiPT09cyl0aHJvdyB0KCk7cmV0dXJuIGUuY2FsbChpLHMpfSkpLGl9KShadCxuZSksZ3M9KCh0LGUscyk9PigpPT57Y29uc3Qgbj1uZXcgV2Vha01hcDtyZXR1cm57cmVuZGVyKGksbyl7Y29uc3Qgcj1uLmdldChvKTtyZXR1cm4gdm9pZCAwIT09cj9Qcm9taXNlLnJlc29sdmUocik6KGFzeW5jKGksbyk9PntsZXQgcj1lKGkpO2lmKCFNKHIsbykpe2NvbnN0IGU9e2J1ZmZlcjpyLmJ1ZmZlcixjaGFubmVsQ291bnQ6ci5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpyLmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOnIuY2hhbm5lbEludGVycHJldGF0aW9uLGRpc2FibGVOb3JtYWxpemF0aW9uOiFyLm5vcm1hbGl6ZX07cj10KG8sZSl9cmV0dXJuIG4uc2V0KG8sciksWChyKT9hd2FpdCBzKGksbyxyLmlucHV0c1swXSk6YXdhaXQgcyhpLG8scikscn0pKGksbyl9fX0pKG1zLHR0LFRlKSx2cz0oKHQsZSxzLG4saSxvKT0+Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKHQscil7Y29uc3QgYT1uKHQpLGM9ey4uLnh0LC4uLnJ9LGg9cyhhLGMpO3N1cGVyKHQsITEsaCxpKGEpP2UoKTpudWxsKSx0aGlzLl9pc0J1ZmZlck51bGxpZmllZD0hMSx0aGlzLl9uYXRpdmVDb252b2x2ZXJOb2RlPWgsbnVsbCE9PWMuYnVmZmVyJiZvKHRoaXMsYy5idWZmZXIuZHVyYXRpb24pfWdldCBidWZmZXIoKXtyZXR1cm4gdGhpcy5faXNCdWZmZXJOdWxsaWZpZWQ/bnVsbDp0aGlzLl9uYXRpdmVDb252b2x2ZXJOb2RlLmJ1ZmZlcn1zZXQgYnVmZmVyKHQpe2lmKHRoaXMuX25hdGl2ZUNvbnZvbHZlck5vZGUuYnVmZmVyPXQsbnVsbD09PXQmJm51bGwhPT10aGlzLl9uYXRpdmVDb252b2x2ZXJOb2RlLmJ1ZmZlcil7Y29uc3QgdD10aGlzLl9uYXRpdmVDb252b2x2ZXJOb2RlLmNvbnRleHQ7dGhpcy5fbmF0aXZlQ29udm9sdmVyTm9kZS5idWZmZXI9dC5jcmVhdGVCdWZmZXIoMSwxLHQuc2FtcGxlUmF0ZSksdGhpcy5faXNCdWZmZXJOdWxsaWZpZWQ9ITAsbyh0aGlzLDApfWVsc2UgdGhpcy5faXNCdWZmZXJOdWxsaWZpZWQ9ITEsbyh0aGlzLG51bGw9PT10aGlzLl9uYXRpdmVDb252b2x2ZXJOb2RlLmJ1ZmZlcj8wOnRoaXMuX25hdGl2ZUNvbnZvbHZlck5vZGUuYnVmZmVyLmR1cmF0aW9uKX1nZXQgbm9ybWFsaXplKCl7cmV0dXJuIHRoaXMuX25hdGl2ZUNvbnZvbHZlck5vZGUubm9ybWFsaXplfXNldCBub3JtYWxpemUodCl7dGhpcy5fbmF0aXZlQ29udm9sdmVyTm9kZS5ub3JtYWxpemU9dH19KShWZSxncyxtcyxrZSxEZSxucykseXM9KCh0LGUscyxuLGkpPT5vPT57Y29uc3Qgcj1uZXcgV2Vha01hcDtyZXR1cm57cmVuZGVyKGEsYyl7Y29uc3QgaD1yLmdldChjKTtyZXR1cm4gdm9pZCAwIT09aD9Qcm9taXNlLnJlc29sdmUoaCk6KGFzeW5jKGEsYyk9PntsZXQgaD1zKGEpO2NvbnN0IGw9TShoLGMpO2lmKCFsKXtjb25zdCB0PXtjaGFubmVsQ291bnQ6aC5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpoLmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOmguY2hhbm5lbEludGVycHJldGF0aW9uLGRlbGF5VGltZTpoLmRlbGF5VGltZS52YWx1ZSxtYXhEZWxheVRpbWU6b307aD1lKGMsdCl9cmV0dXJuIHIuc2V0KGMsaCksbD9hd2FpdCB0KGMsYS5kZWxheVRpbWUsaC5kZWxheVRpbWUpOmF3YWl0IG4oYyxhLmRlbGF5VGltZSxoLmRlbGF5VGltZSksYXdhaXQgaShhLGMsaCksaH0pKGEsYyl9fX0pKFhlLFd0LHR0LCRlLFRlKSx4cz0oKHQsZSxzLG4saSxvLHIpPT5jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IodCxhKXtjb25zdCBjPWkodCksaD17Li4uYnQsLi4uYX0sbD1uKGMsaCksdT1vKGMpO3N1cGVyKHQsITEsbCx1P3MoaC5tYXhEZWxheVRpbWUpOm51bGwpLHRoaXMuX2RlbGF5VGltZT1lKHRoaXMsdSxsLmRlbGF5VGltZSkscih0aGlzLGgubWF4RGVsYXlUaW1lKX1nZXQgZGVsYXlUaW1lKCl7cmV0dXJuIHRoaXMuX2RlbGF5VGltZX19KShWZSxKZSx5cyxXdCxrZSxEZSxucyksd3M9KHQ9PihlLHMpPT57Y29uc3Qgbj1lLmNyZWF0ZUR5bmFtaWNzQ29tcHJlc3NvcigpO2lmKHF0KG4scykscy5jaGFubmVsQ291bnQ+Mil0aHJvdyB0KCk7aWYoXCJtYXhcIj09PXMuY2hhbm5lbENvdW50TW9kZSl0aHJvdyB0KCk7cmV0dXJuIEl0KG4scyxcImF0dGFja1wiKSxJdChuLHMsXCJrbmVlXCIpLEl0KG4scyxcInJhdGlvXCIpLEl0KG4scyxcInJlbGVhc2VcIiksSXQobixzLFwidGhyZXNob2xkXCIpLG59KShadCksYnM9KCh0LGUscyxuLGkpPT4oKT0+e2NvbnN0IG89bmV3IFdlYWtNYXA7cmV0dXJue3JlbmRlcihyLGEpe2NvbnN0IGM9by5nZXQoYSk7cmV0dXJuIHZvaWQgMCE9PWM/UHJvbWlzZS5yZXNvbHZlKGMpOihhc3luYyhyLGEpPT57bGV0IGM9cyhyKTtjb25zdCBoPU0oYyxhKTtpZighaCl7Y29uc3QgdD17YXR0YWNrOmMuYXR0YWNrLnZhbHVlLGNoYW5uZWxDb3VudDpjLmNoYW5uZWxDb3VudCxjaGFubmVsQ291bnRNb2RlOmMuY2hhbm5lbENvdW50TW9kZSxjaGFubmVsSW50ZXJwcmV0YXRpb246Yy5jaGFubmVsSW50ZXJwcmV0YXRpb24sa25lZTpjLmtuZWUudmFsdWUscmF0aW86Yy5yYXRpby52YWx1ZSxyZWxlYXNlOmMucmVsZWFzZS52YWx1ZSx0aHJlc2hvbGQ6Yy50aHJlc2hvbGQudmFsdWV9O2M9ZShhLHQpfXJldHVybiBvLnNldChhLGMpLGg/KGF3YWl0IHQoYSxyLmF0dGFjayxjLmF0dGFjayksYXdhaXQgdChhLHIua25lZSxjLmtuZWUpLGF3YWl0IHQoYSxyLnJhdGlvLGMucmF0aW8pLGF3YWl0IHQoYSxyLnJlbGVhc2UsYy5yZWxlYXNlKSxhd2FpdCB0KGEsci50aHJlc2hvbGQsYy50aHJlc2hvbGQpKTooYXdhaXQgbihhLHIuYXR0YWNrLGMuYXR0YWNrKSxhd2FpdCBuKGEsci5rbmVlLGMua25lZSksYXdhaXQgbihhLHIucmF0aW8sYy5yYXRpbyksYXdhaXQgbihhLHIucmVsZWFzZSxjLnJlbGVhc2UpLGF3YWl0IG4oYSxyLnRocmVzaG9sZCxjLnRocmVzaG9sZCkpLGF3YWl0IGkocixhLGMpLGN9KShyLGEpfX19KShYZSx3cyx0dCwkZSxUZSksVHM9KCh0LGUscyxuLGksbyxyLGEpPT5jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IodCxpKXtjb25zdCBjPW8odCksaD17Li4uU3QsLi4uaX0sbD1uKGMsaCksdT1yKGMpO3N1cGVyKHQsITEsbCx1P3MoKTpudWxsKSx0aGlzLl9hdHRhY2s9ZSh0aGlzLHUsbC5hdHRhY2spLHRoaXMuX2tuZWU9ZSh0aGlzLHUsbC5rbmVlKSx0aGlzLl9uYXRpdmVEeW5hbWljc0NvbXByZXNzb3JOb2RlPWwsdGhpcy5fcmF0aW89ZSh0aGlzLHUsbC5yYXRpbyksdGhpcy5fcmVsZWFzZT1lKHRoaXMsdSxsLnJlbGVhc2UpLHRoaXMuX3RocmVzaG9sZD1lKHRoaXMsdSxsLnRocmVzaG9sZCksYSh0aGlzLC4wMDYpfWdldCBhdHRhY2soKXtyZXR1cm4gdGhpcy5fYXR0YWNrfWdldCBjaGFubmVsQ291bnQoKXtyZXR1cm4gdGhpcy5fbmF0aXZlRHluYW1pY3NDb21wcmVzc29yTm9kZS5jaGFubmVsQ291bnR9c2V0IGNoYW5uZWxDb3VudCh0KXtjb25zdCBlPXRoaXMuX25hdGl2ZUR5bmFtaWNzQ29tcHJlc3Nvck5vZGUuY2hhbm5lbENvdW50O2lmKHRoaXMuX25hdGl2ZUR5bmFtaWNzQ29tcHJlc3Nvck5vZGUuY2hhbm5lbENvdW50PXQsdD4yKXRocm93IHRoaXMuX25hdGl2ZUR5bmFtaWNzQ29tcHJlc3Nvck5vZGUuY2hhbm5lbENvdW50PWUsaSgpfWdldCBjaGFubmVsQ291bnRNb2RlKCl7cmV0dXJuIHRoaXMuX25hdGl2ZUR5bmFtaWNzQ29tcHJlc3Nvck5vZGUuY2hhbm5lbENvdW50TW9kZX1zZXQgY2hhbm5lbENvdW50TW9kZSh0KXtjb25zdCBlPXRoaXMuX25hdGl2ZUR5bmFtaWNzQ29tcHJlc3Nvck5vZGUuY2hhbm5lbENvdW50TW9kZTtpZih0aGlzLl9uYXRpdmVEeW5hbWljc0NvbXByZXNzb3JOb2RlLmNoYW5uZWxDb3VudE1vZGU9dCxcIm1heFwiPT09dCl0aHJvdyB0aGlzLl9uYXRpdmVEeW5hbWljc0NvbXByZXNzb3JOb2RlLmNoYW5uZWxDb3VudE1vZGU9ZSxpKCl9Z2V0IGtuZWUoKXtyZXR1cm4gdGhpcy5fa25lZX1nZXQgcmF0aW8oKXtyZXR1cm4gdGhpcy5fcmF0aW99Z2V0IHJlZHVjdGlvbigpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0aGlzLl9uYXRpdmVEeW5hbWljc0NvbXByZXNzb3JOb2RlLnJlZHVjdGlvbi52YWx1ZT90aGlzLl9uYXRpdmVEeW5hbWljc0NvbXByZXNzb3JOb2RlLnJlZHVjdGlvbi52YWx1ZTp0aGlzLl9uYXRpdmVEeW5hbWljc0NvbXByZXNzb3JOb2RlLnJlZHVjdGlvbn1nZXQgcmVsZWFzZSgpe3JldHVybiB0aGlzLl9yZWxlYXNlfWdldCB0aHJlc2hvbGQoKXtyZXR1cm4gdGhpcy5fdGhyZXNob2xkfX0pKFZlLEplLGJzLHdzLFp0LGtlLERlLG5zKSxTcz0oKHQsZSxzLG4saSk9PigpPT57Y29uc3Qgbz1uZXcgV2Vha01hcDtyZXR1cm57cmVuZGVyKHIsYSl7Y29uc3QgYz1vLmdldChhKTtyZXR1cm4gdm9pZCAwIT09Yz9Qcm9taXNlLnJlc29sdmUoYyk6KGFzeW5jKHIsYSk9PntsZXQgYz1zKHIpO2NvbnN0IGg9TShjLGEpO2lmKCFoKXtjb25zdCB0PXtjaGFubmVsQ291bnQ6Yy5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpjLmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOmMuY2hhbm5lbEludGVycHJldGF0aW9uLGdhaW46Yy5nYWluLnZhbHVlfTtjPWUoYSx0KX1yZXR1cm4gby5zZXQoYSxjKSxoP2F3YWl0IHQoYSxyLmdhaW4sYy5nYWluKTphd2FpdCBuKGEsci5nYWluLGMuZ2FpbiksYXdhaXQgaShyLGEsYyksY30pKHIsYSl9fX0pKFhlLEJ0LHR0LCRlLFRlKSxrcz0oKHQsZSxzLG4saSxvKT0+Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKHQscil7Y29uc3QgYT1pKHQpLGM9ey4uLmt0LC4uLnJ9LGg9bihhLGMpLGw9byhhKTtzdXBlcih0LCExLGgsbD9zKCk6bnVsbCksdGhpcy5fZ2Fpbj1lKHRoaXMsbCxoLmdhaW4sVixJKX1nZXQgZ2Fpbigpe3JldHVybiB0aGlzLl9nYWlufX0pKFZlLEplLFNzLEJ0LGtlLERlKSxBcz0oKHQsZSxzLG4pPT4oaSxvLHtjaGFubmVsQ291bnQ6cixjaGFubmVsQ291bnRNb2RlOmEsY2hhbm5lbEludGVycHJldGF0aW9uOmMsZmVlZGJhY2s6aCxmZWVkZm9yd2FyZDpsfSk9Pntjb25zdCB1PVB0KG8saS5zYW1wbGVSYXRlKSxwPWggaW5zdGFuY2VvZiBGbG9hdDY0QXJyYXk/aDpuZXcgRmxvYXQ2NEFycmF5KGgpLGQ9bCBpbnN0YW5jZW9mIEZsb2F0NjRBcnJheT9sOm5ldyBGbG9hdDY0QXJyYXkobCksZj1wLmxlbmd0aCxfPWQubGVuZ3RoLG09TWF0aC5taW4oZixfKTtpZigwPT09Znx8Zj4yMCl0aHJvdyBuKCk7aWYoMD09PXBbMF0pdGhyb3cgZSgpO2lmKDA9PT1ffHxfPjIwKXRocm93IG4oKTtpZigwPT09ZFswXSl0aHJvdyBlKCk7aWYoMSE9PXBbMF0pe2ZvcihsZXQgdD0wO3Q8Xzt0Kz0xKWRbdF0vPXBbMF07Zm9yKGxldCB0PTE7dDxmO3QrPTEpcFt0XS89cFswXX1jb25zdCBnPXMoaSx1LHIscik7Zy5jaGFubmVsQ291bnQ9cixnLmNoYW5uZWxDb3VudE1vZGU9YSxnLmNoYW5uZWxJbnRlcnByZXRhdGlvbj1jO2NvbnN0IHY9W10seT1bXSx4PVtdO2ZvcihsZXQgdD0wO3Q8cjt0Kz0xKXt2LnB1c2goMCk7Y29uc3QgdD1uZXcgRmxvYXQzMkFycmF5KDMyKSxlPW5ldyBGbG9hdDMyQXJyYXkoMzIpO3QuZmlsbCgwKSxlLmZpbGwoMCkseS5wdXNoKHQpLHgucHVzaChlKX1nLm9uYXVkaW9wcm9jZXNzPXQ9Pntjb25zdCBlPXQuaW5wdXRCdWZmZXIscz10Lm91dHB1dEJ1ZmZlcixuPWUubnVtYmVyT2ZDaGFubmVscztmb3IobGV0IHQ9MDt0PG47dCs9MSl7Y29uc3Qgbj1lLmdldENoYW5uZWxEYXRhKHQpLGk9cy5nZXRDaGFubmVsRGF0YSh0KTt2W3RdPU90KHAsZixkLF8sbSx5W3RdLHhbdF0sdlt0XSwzMixuLGkpfX07Y29uc3Qgdz1pLnNhbXBsZVJhdGUvMjtyZXR1cm4genQoe2dldCBidWZmZXJTaXplKCl7cmV0dXJuIHV9LGdldCBjaGFubmVsQ291bnQoKXtyZXR1cm4gZy5jaGFubmVsQ291bnR9LHNldCBjaGFubmVsQ291bnQodCl7Zy5jaGFubmVsQ291bnQ9dH0sZ2V0IGNoYW5uZWxDb3VudE1vZGUoKXtyZXR1cm4gZy5jaGFubmVsQ291bnRNb2RlfSxzZXQgY2hhbm5lbENvdW50TW9kZSh0KXtnLmNoYW5uZWxDb3VudE1vZGU9dH0sZ2V0IGNoYW5uZWxJbnRlcnByZXRhdGlvbigpe3JldHVybiBnLmNoYW5uZWxJbnRlcnByZXRhdGlvbn0sc2V0IGNoYW5uZWxJbnRlcnByZXRhdGlvbih0KXtnLmNoYW5uZWxJbnRlcnByZXRhdGlvbj10fSxnZXQgY29udGV4dCgpe3JldHVybiBnLmNvbnRleHR9LGdldCBpbnB1dHMoKXtyZXR1cm5bZ119LGdldCBudW1iZXJPZklucHV0cygpe3JldHVybiBnLm51bWJlck9mSW5wdXRzfSxnZXQgbnVtYmVyT2ZPdXRwdXRzKCl7cmV0dXJuIGcubnVtYmVyT2ZPdXRwdXRzfSxhZGRFdmVudExpc3RlbmVyOiguLi50KT0+Zy5hZGRFdmVudExpc3RlbmVyKHRbMF0sdFsxXSx0WzJdKSxkaXNwYXRjaEV2ZW50OiguLi50KT0+Zy5kaXNwYXRjaEV2ZW50KHRbMF0pLGdldEZyZXF1ZW5jeVJlc3BvbnNlKGUscyxuKXtpZihlLmxlbmd0aCE9PXMubGVuZ3RofHxzLmxlbmd0aCE9PW4ubGVuZ3RoKXRocm93IHQoKTtjb25zdCBpPWUubGVuZ3RoO2ZvcihsZXQgdD0wO3Q8aTt0Kz0xKXtjb25zdCBpPS1NYXRoLlBJKihlW3RdL3cpLG89W01hdGguY29zKGkpLE1hdGguc2luKGkpXSxyPVV0KEd0KGQsbyksR3QocCxvKSk7c1t0XT1NYXRoLnNxcnQoclswXSpyWzBdK3JbMV0qclsxXSksblt0XT1NYXRoLmF0YW4yKHJbMV0sclswXSl9fSxyZW1vdmVFdmVudExpc3RlbmVyOiguLi50KT0+Zy5yZW1vdmVFdmVudExpc3RlbmVyKHRbMF0sdFsxXSx0WzJdKX0sZyl9KShDdCxBdCxRdCxadCksQ3M9KCh0LGUscyxuKT0+aT0+dChFdCwoKCk9PkV0KGkpKSk/UHJvbWlzZS5yZXNvbHZlKHQobixuKSkudGhlbigodD0+e2lmKCF0KXtjb25zdCB0PXMoaSw1MTIsMCwxKTtpLm9uY29tcGxldGU9KCk9Pnt0Lm9uYXVkaW9wcm9jZXNzPW51bGwsdC5kaXNjb25uZWN0KCl9LHQub25hdWRpb3Byb2Nlc3M9KCk9PmkuY3VycmVudFRpbWUsdC5jb25uZWN0KGkuZGVzdGluYXRpb24pfXJldHVybiBpLnN0YXJ0UmVuZGVyaW5nKCl9KSk6bmV3IFByb21pc2UoKHQ9Pntjb25zdCBzPWUoaSx7Y2hhbm5lbENvdW50OjEsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixnYWluOjB9KTtpLm9uY29tcGxldGU9ZT0+e3MuZGlzY29ubmVjdCgpLHQoZS5yZW5kZXJlZEJ1ZmZlcil9LHMuY29ubmVjdChpLmRlc3RpbmF0aW9uKSxpLnN0YXJ0UmVuZGVyaW5nKCl9KSkpKGdlLEJ0LFF0LCgodCxlKT0+KCk9PntpZihudWxsPT09ZSlyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCExKTtjb25zdCBzPW5ldyBlKDEsMSw0NDEwMCksbj10KHMse2NoYW5uZWxDb3VudDoxLGNoYW5uZWxDb3VudE1vZGU6XCJleHBsaWNpdFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcImRpc2NyZXRlXCIsZ2FpbjowfSk7cmV0dXJuIG5ldyBQcm9taXNlKCh0PT57cy5vbmNvbXBsZXRlPSgpPT57bi5kaXNjb25uZWN0KCksdCgwIT09cy5jdXJyZW50VGltZSl9LHMuc3RhcnRSZW5kZXJpbmcoKX0pKX0pKEJ0LENlKSksRHM9KCh0LGUscyxuLGkpPT4obyxyKT0+e2NvbnN0IGE9bmV3IFdlYWtNYXA7bGV0IGM9bnVsbDtyZXR1cm57cmVuZGVyKGgsbCl7Y29uc3QgdT1hLmdldChsKTtyZXR1cm4gdm9pZCAwIT09dT9Qcm9taXNlLnJlc29sdmUodSk6KGFzeW5jKGgsbCk9PntsZXQgdT1udWxsLHA9ZShoKTtjb25zdCBkPU0ocCxsKTtpZih2b2lkIDA9PT1sLmNyZWF0ZUlJUkZpbHRlcj91PXQobCx7YnVmZmVyOm51bGwsY2hhbm5lbENvdW50OjIsY2hhbm5lbENvdW50TW9kZTpcIm1heFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCIsbG9vcDohMSxsb29wRW5kOjAsbG9vcFN0YXJ0OjAscGxheWJhY2tSYXRlOjF9KTpkfHwocD1sLmNyZWF0ZUlJUkZpbHRlcihyLG8pKSxhLnNldChsLG51bGw9PT11P3A6dSksbnVsbCE9PXUpe2lmKG51bGw9PT1jKXtpZihudWxsPT09cyl0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHRoZSBuYXRpdmUgT2ZmbGluZUF1ZGlvQ29udGV4dCBjb25zdHJ1Y3Rvci5cIik7Y29uc3QgdD1uZXcgcyhoLmNvbnRleHQuZGVzdGluYXRpb24uY2hhbm5lbENvdW50LGguY29udGV4dC5sZW5ndGgsbC5zYW1wbGVSYXRlKTtjPShhc3luYygpPT4oYXdhaXQgbihoLHQsdC5kZXN0aW5hdGlvbiksKCh0LGUscyxuKT0+e2NvbnN0IGk9cyBpbnN0YW5jZW9mIEZsb2F0NjRBcnJheT9zOm5ldyBGbG9hdDY0QXJyYXkocyksbz1uIGluc3RhbmNlb2YgRmxvYXQ2NEFycmF5P246bmV3IEZsb2F0NjRBcnJheShuKSxyPWkubGVuZ3RoLGE9by5sZW5ndGgsYz1NYXRoLm1pbihyLGEpO2lmKDEhPT1pWzBdKXtmb3IobGV0IHQ9MDt0PHI7dCs9MSlvW3RdLz1pWzBdO2ZvcihsZXQgdD0xO3Q8YTt0Kz0xKWlbdF0vPWlbMF19Y29uc3QgaD1uZXcgRmxvYXQzMkFycmF5KDMyKSxsPW5ldyBGbG9hdDMyQXJyYXkoMzIpLHU9ZS5jcmVhdGVCdWZmZXIodC5udW1iZXJPZkNoYW5uZWxzLHQubGVuZ3RoLHQuc2FtcGxlUmF0ZSkscD10Lm51bWJlck9mQ2hhbm5lbHM7Zm9yKGxldCBlPTA7ZTxwO2UrPTEpe2NvbnN0IHM9dC5nZXRDaGFubmVsRGF0YShlKSxuPXUuZ2V0Q2hhbm5lbERhdGEoZSk7aC5maWxsKDApLGwuZmlsbCgwKSxPdChpLHIsbyxhLGMsaCxsLDAsMzIscyxuKX1yZXR1cm4gdX0pKGF3YWl0IGkodCksbCxvLHIpKSkoKX1jb25zdCB0PWF3YWl0IGM7cmV0dXJuIHUuYnVmZmVyPXQsdS5zdGFydCgwKSx1fXJldHVybiBhd2FpdCBuKGgsbCxwKSxwfSkoaCxsKX19fSkoWWUsdHQsQ2UsVGUsQ3MpLE9zPSh0PT4oZSxzLG4pPT57aWYodm9pZCAwPT09ZS5jcmVhdGVJSVJGaWx0ZXIpcmV0dXJuIHQoZSxzLG4pO2NvbnN0IGk9ZS5jcmVhdGVJSVJGaWx0ZXIobi5mZWVkZm9yd2FyZCxuLmZlZWRiYWNrKTtyZXR1cm4gcXQoaSxuKSxpfSkoQXMpLE1zPSgodCxlLHMsbixpLG8pPT5jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IodCxyKXtjb25zdCBhPW4odCksYz1pKGEpLGg9ey4uLkR0LC4uLnJ9LGw9ZShhLGM/bnVsbDp0LmJhc2VMYXRlbmN5LGgpO3N1cGVyKHQsITEsbCxjP3MoaC5mZWVkYmFjayxoLmZlZWRmb3J3YXJkKTpudWxsKSwodD0+e3ZhciBlO3QuZ2V0RnJlcXVlbmN5UmVzcG9uc2U9KGU9dC5nZXRGcmVxdWVuY3lSZXNwb25zZSwocyxuLGkpPT57aWYocy5sZW5ndGghPT1uLmxlbmd0aHx8bi5sZW5ndGghPT1pLmxlbmd0aCl0aHJvdyBDdCgpO3JldHVybiBlLmNhbGwodCxzLG4saSl9KX0pKGwpLHRoaXMuX25hdGl2ZUlJUkZpbHRlck5vZGU9bCxvKHRoaXMsMSl9Z2V0RnJlcXVlbmN5UmVzcG9uc2UodCxlLHMpe3JldHVybiB0aGlzLl9uYXRpdmVJSVJGaWx0ZXJOb2RlLmdldEZyZXF1ZW5jeVJlc3BvbnNlKHQsZSxzKX19KShWZSxPcyxEcyxrZSxEZSxucyksRXM9KCh0LGUscyxuLGksbyxyLGEpPT4oYyxoKT0+e2NvbnN0IGw9aC5saXN0ZW5lcix7Zm9yd2FyZFg6dSxmb3J3YXJkWTpwLGZvcndhcmRaOmQscG9zaXRpb25YOmYscG9zaXRpb25ZOl8scG9zaXRpb25aOm0sdXBYOmcsdXBZOnYsdXBaOnl9PXZvaWQgMD09PWwuZm9yd2FyZFg/KCgpPT57Y29uc3QgdT1uZXcgRmxvYXQzMkFycmF5KDEpLHA9ZShoLHtjaGFubmVsQ291bnQ6MSxjaGFubmVsQ291bnRNb2RlOlwiZXhwbGljaXRcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLG51bWJlck9mSW5wdXRzOjl9KSxkPXIoaCk7bGV0IGY9ITEsXz1bMCwwLC0xLDAsMSwwXSxtPVswLDAsMF07Y29uc3QgZz0oKT0+e2lmKGYpcmV0dXJuO2Y9ITA7Y29uc3QgdD1uKGgsMjU2LDksMCk7dC5vbmF1ZGlvcHJvY2Vzcz0oe2lucHV0QnVmZmVyOnR9KT0+e2NvbnN0IGU9W28odCx1LDApLG8odCx1LDEpLG8odCx1LDIpLG8odCx1LDMpLG8odCx1LDQpLG8odCx1LDUpXTtlLnNvbWUoKCh0LGUpPT50IT09X1tlXSkpJiYobC5zZXRPcmllbnRhdGlvbiguLi5lKSxfPWUpO2NvbnN0IHM9W28odCx1LDYpLG8odCx1LDcpLG8odCx1LDgpXTtzLnNvbWUoKCh0LGUpPT50IT09bVtlXSkpJiYobC5zZXRQb3NpdGlvbiguLi5zKSxtPXMpfSxwLmNvbm5lY3QodCl9LHY9dD0+ZT0+e2UhPT1fW3RdJiYoX1t0XT1lLGwuc2V0T3JpZW50YXRpb24oLi4uXykpfSx5PXQ9PmU9PntlIT09bVt0XSYmKG1bdF09ZSxsLnNldFBvc2l0aW9uKC4uLm0pKX0seD0oZSxuLG8pPT57Y29uc3Qgcj1zKGgse2NoYW5uZWxDb3VudDoxLGNoYW5uZWxDb3VudE1vZGU6XCJleHBsaWNpdFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcImRpc2NyZXRlXCIsb2Zmc2V0Om59KTtyLmNvbm5lY3QocCwwLGUpLHIuc3RhcnQoKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoci5vZmZzZXQsXCJkZWZhdWx0VmFsdWVcIix7Z2V0OigpPT5ufSk7Y29uc3QgbD10KHtjb250ZXh0OmN9LGQsci5vZmZzZXQsVixJKTt2YXIgdSxmLF8sbSx2LHkseDtyZXR1cm4gYShsLFwidmFsdWVcIiwodD0+KCk9PnQuY2FsbChsKSksKHQ9PmU9Pnt0cnl7dC5jYWxsKGwsZSl9Y2F0Y2godCl7aWYoOSE9PXQuY29kZSl0aHJvdyB0fWcoKSxkJiZvKGUpfSkpLGwuY2FuY2VsQW5kSG9sZEF0VGltZT0odT1sLmNhbmNlbEFuZEhvbGRBdFRpbWUsZD8oKT0+e3Rocm93IGkoKX06KC4uLnQpPT57Y29uc3QgZT11LmFwcGx5KGwsdCk7cmV0dXJuIGcoKSxlfSksbC5jYW5jZWxTY2hlZHVsZWRWYWx1ZXM9KGY9bC5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMsZD8oKT0+e3Rocm93IGkoKX06KC4uLnQpPT57Y29uc3QgZT1mLmFwcGx5KGwsdCk7cmV0dXJuIGcoKSxlfSksbC5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lPShfPWwuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSxkPygpPT57dGhyb3cgaSgpfTooLi4udCk9Pntjb25zdCBlPV8uYXBwbHkobCx0KTtyZXR1cm4gZygpLGV9KSxsLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lPShtPWwubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUsZD8oKT0+e3Rocm93IGkoKX06KC4uLnQpPT57Y29uc3QgZT1tLmFwcGx5KGwsdCk7cmV0dXJuIGcoKSxlfSksbC5zZXRUYXJnZXRBdFRpbWU9KHY9bC5zZXRUYXJnZXRBdFRpbWUsZD8oKT0+e3Rocm93IGkoKX06KC4uLnQpPT57Y29uc3QgZT12LmFwcGx5KGwsdCk7cmV0dXJuIGcoKSxlfSksbC5zZXRWYWx1ZUF0VGltZT0oeT1sLnNldFZhbHVlQXRUaW1lLGQ/KCk9Pnt0aHJvdyBpKCl9OiguLi50KT0+e2NvbnN0IGU9eS5hcHBseShsLHQpO3JldHVybiBnKCksZX0pLGwuc2V0VmFsdWVDdXJ2ZUF0VGltZT0oeD1sLnNldFZhbHVlQ3VydmVBdFRpbWUsZD8oKT0+e3Rocm93IGkoKX06KC4uLnQpPT57Y29uc3QgZT14LmFwcGx5KGwsdCk7cmV0dXJuIGcoKSxlfSksbH07cmV0dXJue2ZvcndhcmRYOngoMCwwLHYoMCkpLGZvcndhcmRZOngoMSwwLHYoMSkpLGZvcndhcmRaOngoMiwtMSx2KDIpKSxwb3NpdGlvblg6eCg2LDAseSgwKSkscG9zaXRpb25ZOngoNywwLHkoMSkpLHBvc2l0aW9uWjp4KDgsMCx5KDIpKSx1cFg6eCgzLDAsdigzKSksdXBZOngoNCwxLHYoNCkpLHVwWjp4KDUsMCx2KDUpKX19KSgpOmw7cmV0dXJue2dldCBmb3J3YXJkWCgpe3JldHVybiB1fSxnZXQgZm9yd2FyZFkoKXtyZXR1cm4gcH0sZ2V0IGZvcndhcmRaKCl7cmV0dXJuIGR9LGdldCBwb3NpdGlvblgoKXtyZXR1cm4gZn0sZ2V0IHBvc2l0aW9uWSgpe3JldHVybiBffSxnZXQgcG9zaXRpb25aKCl7cmV0dXJuIG19LGdldCB1cFgoKXtyZXR1cm4gZ30sZ2V0IHVwWSgpe3JldHVybiB2fSxnZXQgdXBaKCl7cmV0dXJuIHl9fX0pKEplLGFzLGRzLFF0LFp0LGVlLERlLG5lKSxScz1uZXcgV2Vha01hcCxxcz0oKHQsZSxzLG4saSxvKT0+Y2xhc3MgZXh0ZW5kcyBze2NvbnN0cnVjdG9yKHMsbyl7c3VwZXIocyksdGhpcy5fbmF0aXZlQ29udGV4dD1zLHUuc2V0KHRoaXMscyksbihzKSYmaS5zZXQocyxuZXcgU2V0KSx0aGlzLl9kZXN0aW5hdGlvbj1uZXcgdCh0aGlzLG8pLHRoaXMuX2xpc3RlbmVyPWUodGhpcyxzKSx0aGlzLl9vbnN0YXRlY2hhbmdlPW51bGx9Z2V0IGN1cnJlbnRUaW1lKCl7cmV0dXJuIHRoaXMuX25hdGl2ZUNvbnRleHQuY3VycmVudFRpbWV9Z2V0IGRlc3RpbmF0aW9uKCl7cmV0dXJuIHRoaXMuX2Rlc3RpbmF0aW9ufWdldCBsaXN0ZW5lcigpe3JldHVybiB0aGlzLl9saXN0ZW5lcn1nZXQgb25zdGF0ZWNoYW5nZSgpe3JldHVybiB0aGlzLl9vbnN0YXRlY2hhbmdlfXNldCBvbnN0YXRlY2hhbmdlKHQpe2NvbnN0IGU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD9vKHRoaXMsdCk6bnVsbDt0aGlzLl9uYXRpdmVDb250ZXh0Lm9uc3RhdGVjaGFuZ2U9ZTtjb25zdCBzPXRoaXMuX25hdGl2ZUNvbnRleHQub25zdGF0ZWNoYW5nZTt0aGlzLl9vbnN0YXRlY2hhbmdlPW51bGwhPT1zJiZzPT09ZT90OnN9Z2V0IHNhbXBsZVJhdGUoKXtyZXR1cm4gdGhpcy5fbmF0aXZlQ29udGV4dC5zYW1wbGVSYXRlfWdldCBzdGF0ZSgpe3JldHVybiB0aGlzLl9uYXRpdmVDb250ZXh0LnN0YXRlfX0pKGVzLEVzLE1lLERlLFJzLHVlKSxGcz0oKHQsZSxzLG4saSxvKT0+KHIsYSk9Pntjb25zdCBjPXIuY3JlYXRlT3NjaWxsYXRvcigpO3JldHVybiBxdChjLGEpLEl0KGMsYSxcImRldHVuZVwiKSxJdChjLGEsXCJmcmVxdWVuY3lcIiksdm9pZCAwIT09YS5wZXJpb2RpY1dhdmU/Yy5zZXRQZXJpb2RpY1dhdmUoYS5wZXJpb2RpY1dhdmUpOlJ0KGMsYSxcInR5cGVcIiksZShzLCgoKT0+cyhyKSkpfHxWdChjKSxlKG4sKCgpPT5uKHIpKSl8fG8oYyxyKSxlKGksKCgpPT5pKHIpKSl8fE50KGMpLHQocixjKSxjfSkoUWUsZ2Usb2UscmUsYWUsbGUpLElzPSgodCxlLHMsbixpKT0+KCk9Pntjb25zdCBvPW5ldyBXZWFrTWFwO2xldCByPW51bGwsYT1udWxsLGM9bnVsbDtyZXR1cm57c2V0IHBlcmlvZGljV2F2ZSh0KXtyPXR9LHNldCBzdGFydCh0KXthPXR9LHNldCBzdG9wKHQpe2M9dH0scmVuZGVyKGgsbCl7Y29uc3QgdT1vLmdldChsKTtyZXR1cm4gdm9pZCAwIT09dT9Qcm9taXNlLnJlc29sdmUodSk6KGFzeW5jKGgsbCk9PntsZXQgdT1zKGgpO2NvbnN0IHA9TSh1LGwpO2lmKCFwKXtjb25zdCB0PXtjaGFubmVsQ291bnQ6dS5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTp1LmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOnUuY2hhbm5lbEludGVycHJldGF0aW9uLGRldHVuZTp1LmRldHVuZS52YWx1ZSxmcmVxdWVuY3k6dS5mcmVxdWVuY3kudmFsdWUscGVyaW9kaWNXYXZlOm51bGw9PT1yP3ZvaWQgMDpyLHR5cGU6dS50eXBlfTt1PWUobCx0KSxudWxsIT09YSYmdS5zdGFydChhKSxudWxsIT09YyYmdS5zdG9wKGMpfXJldHVybiBvLnNldChsLHUpLHA/KGF3YWl0IHQobCxoLmRldHVuZSx1LmRldHVuZSksYXdhaXQgdChsLGguZnJlcXVlbmN5LHUuZnJlcXVlbmN5KSk6KGF3YWl0IG4obCxoLmRldHVuZSx1LmRldHVuZSksYXdhaXQgbihsLGguZnJlcXVlbmN5LHUuZnJlcXVlbmN5KSksYXdhaXQgaShoLGwsdSksdX0pKGgsbCl9fX0pKFhlLEZzLHR0LCRlLFRlKSxWcz0oKHQsZSxzLG4saSxvLHIpPT5jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IodCxyKXtjb25zdCBhPWkodCksYz17Li4uWXQsLi4ucn0saD1zKGEsYyksbD1vKGEpLHU9bD9uKCk6bnVsbCxwPXQuc2FtcGxlUmF0ZS8yO3N1cGVyKHQsITEsaCx1KSx0aGlzLl9kZXR1bmU9ZSh0aGlzLGwsaC5kZXR1bmUsMTUzNjAwLC0xNTM2MDApLHRoaXMuX2ZyZXF1ZW5jeT1lKHRoaXMsbCxoLmZyZXF1ZW5jeSxwLC1wKSx0aGlzLl9uYXRpdmVPc2NpbGxhdG9yTm9kZT1oLHRoaXMuX29uZW5kZWQ9bnVsbCx0aGlzLl9vc2NpbGxhdG9yTm9kZVJlbmRlcmVyPXUsbnVsbCE9PXRoaXMuX29zY2lsbGF0b3JOb2RlUmVuZGVyZXImJnZvaWQgMCE9PWMucGVyaW9kaWNXYXZlJiYodGhpcy5fb3NjaWxsYXRvck5vZGVSZW5kZXJlci5wZXJpb2RpY1dhdmU9Yy5wZXJpb2RpY1dhdmUpfWdldCBkZXR1bmUoKXtyZXR1cm4gdGhpcy5fZGV0dW5lfWdldCBmcmVxdWVuY3koKXtyZXR1cm4gdGhpcy5fZnJlcXVlbmN5fWdldCBvbmVuZGVkKCl7cmV0dXJuIHRoaXMuX29uZW5kZWR9c2V0IG9uZW5kZWQodCl7Y29uc3QgZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3IodGhpcyx0KTpudWxsO3RoaXMuX25hdGl2ZU9zY2lsbGF0b3JOb2RlLm9uZW5kZWQ9ZTtjb25zdCBzPXRoaXMuX25hdGl2ZU9zY2lsbGF0b3JOb2RlLm9uZW5kZWQ7dGhpcy5fb25lbmRlZD1udWxsIT09cyYmcz09PWU/dDpzfWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuX25hdGl2ZU9zY2lsbGF0b3JOb2RlLnR5cGV9c2V0IHR5cGUodCl7dGhpcy5fbmF0aXZlT3NjaWxsYXRvck5vZGUudHlwZT10LG51bGwhPT10aGlzLl9vc2NpbGxhdG9yTm9kZVJlbmRlcmVyJiYodGhpcy5fb3NjaWxsYXRvck5vZGVSZW5kZXJlci5wZXJpb2RpY1dhdmU9bnVsbCl9c2V0UGVyaW9kaWNXYXZlKHQpe3RoaXMuX25hdGl2ZU9zY2lsbGF0b3JOb2RlLnNldFBlcmlvZGljV2F2ZSh0KSxudWxsIT09dGhpcy5fb3NjaWxsYXRvck5vZGVSZW5kZXJlciYmKHRoaXMuX29zY2lsbGF0b3JOb2RlUmVuZGVyZXIucGVyaW9kaWNXYXZlPXQpfXN0YXJ0KHQ9MCl7aWYodGhpcy5fbmF0aXZlT3NjaWxsYXRvck5vZGUuc3RhcnQodCksbnVsbCE9PXRoaXMuX29zY2lsbGF0b3JOb2RlUmVuZGVyZXImJih0aGlzLl9vc2NpbGxhdG9yTm9kZVJlbmRlcmVyLnN0YXJ0PXQpLFwiY2xvc2VkXCIhPT10aGlzLmNvbnRleHQuc3RhdGUpe2sodGhpcyk7Y29uc3QgdD0oKT0+e3RoaXMuX25hdGl2ZU9zY2lsbGF0b3JOb2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLHQpLE4odGhpcykmJkModGhpcyl9O3RoaXMuX25hdGl2ZU9zY2lsbGF0b3JOb2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLHQpfX1zdG9wKHQ9MCl7dGhpcy5fbmF0aXZlT3NjaWxsYXRvck5vZGUuc3RvcCh0KSxudWxsIT09dGhpcy5fb3NjaWxsYXRvck5vZGVSZW5kZXJlciYmKHRoaXMuX29zY2lsbGF0b3JOb2RlUmVuZGVyZXIuc3RvcD10KX19KShWZSxKZSxGcyxJcyxrZSxEZSx1ZSksTnM9KHQ9PihlLHMpPT57Y29uc3Qgbj10KGUse2J1ZmZlcjpudWxsLGNoYW5uZWxDb3VudDoyLGNoYW5uZWxDb3VudE1vZGU6XCJtYXhcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLGxvb3A6ITEsbG9vcEVuZDowLGxvb3BTdGFydDowLHBsYXliYWNrUmF0ZToxfSksaT1lLmNyZWF0ZUJ1ZmZlcigxLDIsNDQxMDApO3JldHVybiBuLmJ1ZmZlcj1pLG4ubG9vcD0hMCxuLmNvbm5lY3Qocyksbi5zdGFydCgpLCgpPT57bi5zdG9wKCksbi5kaXNjb25uZWN0KHMpfX0pKFllKSxQcz0oKHQsZSxzLG4saSk9PihvLHtjdXJ2ZTpyLG92ZXJzYW1wbGU6YSwuLi5jfSk9Pntjb25zdCBoPW8uY3JlYXRlV2F2ZVNoYXBlcigpLGw9by5jcmVhdGVXYXZlU2hhcGVyKCk7cXQoaCxjKSxxdChsLGMpO2NvbnN0IHU9cyhvLHsuLi5jLGdhaW46MX0pLHA9cyhvLHsuLi5jLGdhaW46LTF9KSxkPXMobyx7Li4uYyxnYWluOjF9KSxmPXMobyx7Li4uYyxnYWluOi0xfSk7bGV0IF89bnVsbCxtPSExLGc9bnVsbDtjb25zdCB2PXtnZXQgYnVmZmVyU2l6ZSgpe30sZ2V0IGNoYW5uZWxDb3VudCgpe3JldHVybiBoLmNoYW5uZWxDb3VudH0sc2V0IGNoYW5uZWxDb3VudCh0KXt1LmNoYW5uZWxDb3VudD10LHAuY2hhbm5lbENvdW50PXQsaC5jaGFubmVsQ291bnQ9dCxkLmNoYW5uZWxDb3VudD10LGwuY2hhbm5lbENvdW50PXQsZi5jaGFubmVsQ291bnQ9dH0sZ2V0IGNoYW5uZWxDb3VudE1vZGUoKXtyZXR1cm4gaC5jaGFubmVsQ291bnRNb2RlfSxzZXQgY2hhbm5lbENvdW50TW9kZSh0KXt1LmNoYW5uZWxDb3VudE1vZGU9dCxwLmNoYW5uZWxDb3VudE1vZGU9dCxoLmNoYW5uZWxDb3VudE1vZGU9dCxkLmNoYW5uZWxDb3VudE1vZGU9dCxsLmNoYW5uZWxDb3VudE1vZGU9dCxmLmNoYW5uZWxDb3VudE1vZGU9dH0sZ2V0IGNoYW5uZWxJbnRlcnByZXRhdGlvbigpe3JldHVybiBoLmNoYW5uZWxJbnRlcnByZXRhdGlvbn0sc2V0IGNoYW5uZWxJbnRlcnByZXRhdGlvbih0KXt1LmNoYW5uZWxJbnRlcnByZXRhdGlvbj10LHAuY2hhbm5lbEludGVycHJldGF0aW9uPXQsaC5jaGFubmVsSW50ZXJwcmV0YXRpb249dCxkLmNoYW5uZWxJbnRlcnByZXRhdGlvbj10LGwuY2hhbm5lbEludGVycHJldGF0aW9uPXQsZi5jaGFubmVsSW50ZXJwcmV0YXRpb249dH0sZ2V0IGNvbnRleHQoKXtyZXR1cm4gaC5jb250ZXh0fSxnZXQgY3VydmUoKXtyZXR1cm4gZ30sc2V0IGN1cnZlKHMpe2lmKG51bGwhPT1zJiZzLmxlbmd0aDwyKXRocm93IGUoKTtpZihudWxsPT09cyloLmN1cnZlPXMsbC5jdXJ2ZT1zO2Vsc2V7Y29uc3QgdD1zLmxlbmd0aCxlPW5ldyBGbG9hdDMyQXJyYXkodCsyLXQlMiksbj1uZXcgRmxvYXQzMkFycmF5KHQrMi10JTIpO2VbMF09c1swXSxuWzBdPS1zW3QtMV07Y29uc3QgaT1NYXRoLmNlaWwoKHQrMSkvMiksbz0odCsxKS8yLTE7Zm9yKGxldCByPTE7cjxpO3IrPTEpe2NvbnN0IGE9ci9pKm8sYz1NYXRoLmZsb29yKGEpLGg9TWF0aC5jZWlsKGEpO2Vbcl09Yz09PWg/c1tjXTooMS0oYS1jKSkqc1tjXSsoMS0oaC1hKSkqc1toXSxuW3JdPWM9PT1oPy1zW3QtMS1jXTotKDEtKGEtYykpKnNbdC0xLWNdLSgxLShoLWEpKSpzW3QtMS1oXX1lW2ldPXQlMj09MT9zW2ktMV06KHNbaS0yXStzW2ktMV0pLzIsaC5jdXJ2ZT1lLGwuY3VydmU9bn1nPXMsbSYmKG4oZykmJm51bGw9PT1fP189dChvLHUpOm51bGwhPT1fJiYoXygpLF89bnVsbCkpfSxnZXQgaW5wdXRzKCl7cmV0dXJuW3VdfSxnZXQgbnVtYmVyT2ZJbnB1dHMoKXtyZXR1cm4gaC5udW1iZXJPZklucHV0c30sZ2V0IG51bWJlck9mT3V0cHV0cygpe3JldHVybiBoLm51bWJlck9mT3V0cHV0c30sZ2V0IG92ZXJzYW1wbGUoKXtyZXR1cm4gaC5vdmVyc2FtcGxlfSxzZXQgb3ZlcnNhbXBsZSh0KXtoLm92ZXJzYW1wbGU9dCxsLm92ZXJzYW1wbGU9dH0sYWRkRXZlbnRMaXN0ZW5lcjooLi4udCk9PnUuYWRkRXZlbnRMaXN0ZW5lcih0WzBdLHRbMV0sdFsyXSksZGlzcGF0Y2hFdmVudDooLi4udCk9PnUuZGlzcGF0Y2hFdmVudCh0WzBdKSxyZW1vdmVFdmVudExpc3RlbmVyOiguLi50KT0+dS5yZW1vdmVFdmVudExpc3RlbmVyKHRbMF0sdFsxXSx0WzJdKX07cmV0dXJuIG51bGwhPT1yJiYodi5jdXJ2ZT1yIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5P3I6bmV3IEZsb2F0MzJBcnJheShyKSksYSE9PXYub3ZlcnNhbXBsZSYmKHYub3ZlcnNhbXBsZT1hKSxpKHp0KHYsZCksKCgpPT57dS5jb25uZWN0KGgpLmNvbm5lY3QoZCksdS5jb25uZWN0KHApLmNvbm5lY3QobCkuY29ubmVjdChmKS5jb25uZWN0KGQpLG09ITAsbihnKSYmKF89dChvLHUpKX0pLCgoKT0+e3UuZGlzY29ubmVjdChoKSxoLmRpc2Nvbm5lY3QoZCksdS5kaXNjb25uZWN0KHApLHAuZGlzY29ubmVjdChsKSxsLmRpc2Nvbm5lY3QoZiksZi5kaXNjb25uZWN0KGQpLG09ITEsbnVsbCE9PV8mJihfKCksXz1udWxsKX0pKX0pKE5zLEF0LEJ0LHNlLG9zKSxqcz0oKHQsZSxzLG4saSxvLHIpPT4oYSxjKT0+e2NvbnN0IGg9YS5jcmVhdGVXYXZlU2hhcGVyKCk7aWYobnVsbCE9PW8mJlwid2Via2l0QXVkaW9Db250ZXh0XCI9PT1vLm5hbWUmJnZvaWQgMD09PWEuY3JlYXRlR2FpbigpLmdhaW4uYXV0b21hdGlvblJhdGUpcmV0dXJuIHMoYSxjKTtxdChoLGMpO2NvbnN0IGw9bnVsbD09PWMuY3VydmV8fGMuY3VydmUgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXk/Yy5jdXJ2ZTpuZXcgRmxvYXQzMkFycmF5KGMuY3VydmUpO2lmKG51bGwhPT1sJiZsLmxlbmd0aDwyKXRocm93IGUoKTtSdChoLHtjdXJ2ZTpsfSxcImN1cnZlXCIpLFJ0KGgsYyxcIm92ZXJzYW1wbGVcIik7bGV0IHU9bnVsbCxwPSExO3JldHVybiByKGgsXCJjdXJ2ZVwiLCh0PT4oKT0+dC5jYWxsKGgpKSwoZT0+cz0+KGUuY2FsbChoLHMpLHAmJihuKHMpJiZudWxsPT09dT91PXQoYSxoKTpuKHMpfHxudWxsPT09dXx8KHUoKSx1PW51bGwpKSxzKSkpLGkoaCwoKCk9PntwPSEwLG4oaC5jdXJ2ZSkmJih1PXQoYSxoKSl9KSwoKCk9PntwPSExLG51bGwhPT11JiYodSgpLHU9bnVsbCl9KSl9KShOcyxBdCxQcyxzZSxvcyxFZSxuZSksTHM9KCh0LGUscyxuLGksbyxyLGEsYyxoKT0+KGwse2NvbmVJbm5lckFuZ2xlOnUsY29uZU91dGVyQW5nbGU6cCxjb25lT3V0ZXJHYWluOmQsZGlzdGFuY2VNb2RlbDpmLG1heERpc3RhbmNlOl8sb3JpZW50YXRpb25YOm0sb3JpZW50YXRpb25ZOmcsb3JpZW50YXRpb25aOnYscGFubmluZ01vZGVsOnkscG9zaXRpb25YOngscG9zaXRpb25ZOncscG9zaXRpb25aOmIscmVmRGlzdGFuY2U6VCxyb2xsb2ZmRmFjdG9yOlMsLi4ua30pPT57Y29uc3QgQT1sLmNyZWF0ZVBhbm5lcigpO2lmKGsuY2hhbm5lbENvdW50PjIpdGhyb3cgcigpO2lmKFwibWF4XCI9PT1rLmNoYW5uZWxDb3VudE1vZGUpdGhyb3cgcigpO3F0KEEsayk7Y29uc3QgQz17Y2hhbm5lbENvdW50OjEsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIn0sRD1zKGwsey4uLkMsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIixudW1iZXJPZklucHV0czo2fSksTz1uKGwsey4uLmssZ2FpbjoxfSksTT1uKGwsey4uLkMsZ2FpbjoxfSksRT1uKGwsey4uLkMsZ2FpbjowfSksUj1uKGwsey4uLkMsZ2FpbjowfSkscT1uKGwsey4uLkMsZ2FpbjowfSksRj1uKGwsey4uLkMsZ2FpbjowfSksST1uKGwsey4uLkMsZ2FpbjowfSksVj1pKGwsMjU2LDYsMSksTj1vKGwsey4uLkMsY3VydmU6bmV3IEZsb2F0MzJBcnJheShbMSwxXSksb3ZlcnNhbXBsZTpcIm5vbmVcIn0pO2xldCBQPVttLGcsdl0saj1beCx3LGJdO2NvbnN0IEw9bmV3IEZsb2F0MzJBcnJheSgxKTtWLm9uYXVkaW9wcm9jZXNzPSh7aW5wdXRCdWZmZXI6dH0pPT57Y29uc3QgZT1bYyh0LEwsMCksYyh0LEwsMSksYyh0LEwsMildO2Uuc29tZSgoKHQsZSk9PnQhPT1QW2VdKSkmJihBLnNldE9yaWVudGF0aW9uKC4uLmUpLFA9ZSk7Y29uc3Qgcz1bYyh0LEwsMyksYyh0LEwsNCksYyh0LEwsNSldO3Muc29tZSgoKHQsZSk9PnQhPT1qW2VdKSkmJihBLnNldFBvc2l0aW9uKC4uLnMpLGo9cyl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFLmdhaW4sXCJkZWZhdWx0VmFsdWVcIix7Z2V0OigpPT4wfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFIuZ2FpbixcImRlZmF1bHRWYWx1ZVwiLHtnZXQ6KCk9PjB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkocS5nYWluLFwiZGVmYXVsdFZhbHVlXCIse2dldDooKT0+MH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGLmdhaW4sXCJkZWZhdWx0VmFsdWVcIix7Z2V0OigpPT4wfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEkuZ2FpbixcImRlZmF1bHRWYWx1ZVwiLHtnZXQ6KCk9PjB9KTtjb25zdCB6PXtnZXQgYnVmZmVyU2l6ZSgpe30sZ2V0IGNoYW5uZWxDb3VudCgpe3JldHVybiBBLmNoYW5uZWxDb3VudH0sc2V0IGNoYW5uZWxDb3VudCh0KXtpZih0PjIpdGhyb3cgcigpO08uY2hhbm5lbENvdW50PXQsQS5jaGFubmVsQ291bnQ9dH0sZ2V0IGNoYW5uZWxDb3VudE1vZGUoKXtyZXR1cm4gQS5jaGFubmVsQ291bnRNb2RlfSxzZXQgY2hhbm5lbENvdW50TW9kZSh0KXtpZihcIm1heFwiPT09dCl0aHJvdyByKCk7Ty5jaGFubmVsQ291bnRNb2RlPXQsQS5jaGFubmVsQ291bnRNb2RlPXR9LGdldCBjaGFubmVsSW50ZXJwcmV0YXRpb24oKXtyZXR1cm4gQS5jaGFubmVsSW50ZXJwcmV0YXRpb259LHNldCBjaGFubmVsSW50ZXJwcmV0YXRpb24odCl7Ty5jaGFubmVsSW50ZXJwcmV0YXRpb249dCxBLmNoYW5uZWxJbnRlcnByZXRhdGlvbj10fSxnZXQgY29uZUlubmVyQW5nbGUoKXtyZXR1cm4gQS5jb25lSW5uZXJBbmdsZX0sc2V0IGNvbmVJbm5lckFuZ2xlKHQpe0EuY29uZUlubmVyQW5nbGU9dH0sZ2V0IGNvbmVPdXRlckFuZ2xlKCl7cmV0dXJuIEEuY29uZU91dGVyQW5nbGV9LHNldCBjb25lT3V0ZXJBbmdsZSh0KXtBLmNvbmVPdXRlckFuZ2xlPXR9LGdldCBjb25lT3V0ZXJHYWluKCl7cmV0dXJuIEEuY29uZU91dGVyR2Fpbn0sc2V0IGNvbmVPdXRlckdhaW4odCl7aWYodDwwfHx0PjEpdGhyb3cgZSgpO0EuY29uZU91dGVyR2Fpbj10fSxnZXQgY29udGV4dCgpe3JldHVybiBBLmNvbnRleHR9LGdldCBkaXN0YW5jZU1vZGVsKCl7cmV0dXJuIEEuZGlzdGFuY2VNb2RlbH0sc2V0IGRpc3RhbmNlTW9kZWwodCl7QS5kaXN0YW5jZU1vZGVsPXR9LGdldCBpbnB1dHMoKXtyZXR1cm5bT119LGdldCBtYXhEaXN0YW5jZSgpe3JldHVybiBBLm1heERpc3RhbmNlfSxzZXQgbWF4RGlzdGFuY2UodCl7aWYodDwwKXRocm93IG5ldyBSYW5nZUVycm9yO0EubWF4RGlzdGFuY2U9dH0sZ2V0IG51bWJlck9mSW5wdXRzKCl7cmV0dXJuIEEubnVtYmVyT2ZJbnB1dHN9LGdldCBudW1iZXJPZk91dHB1dHMoKXtyZXR1cm4gQS5udW1iZXJPZk91dHB1dHN9LGdldCBvcmllbnRhdGlvblgoKXtyZXR1cm4gTS5nYWlufSxnZXQgb3JpZW50YXRpb25ZKCl7cmV0dXJuIEUuZ2Fpbn0sZ2V0IG9yaWVudGF0aW9uWigpe3JldHVybiBSLmdhaW59LGdldCBwYW5uaW5nTW9kZWwoKXtyZXR1cm4gQS5wYW5uaW5nTW9kZWx9LHNldCBwYW5uaW5nTW9kZWwodCl7QS5wYW5uaW5nTW9kZWw9dH0sZ2V0IHBvc2l0aW9uWCgpe3JldHVybiBxLmdhaW59LGdldCBwb3NpdGlvblkoKXtyZXR1cm4gRi5nYWlufSxnZXQgcG9zaXRpb25aKCl7cmV0dXJuIEkuZ2Fpbn0sZ2V0IHJlZkRpc3RhbmNlKCl7cmV0dXJuIEEucmVmRGlzdGFuY2V9LHNldCByZWZEaXN0YW5jZSh0KXtpZih0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3I7QS5yZWZEaXN0YW5jZT10fSxnZXQgcm9sbG9mZkZhY3Rvcigpe3JldHVybiBBLnJvbGxvZmZGYWN0b3J9LHNldCByb2xsb2ZmRmFjdG9yKHQpe2lmKHQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcjtBLnJvbGxvZmZGYWN0b3I9dH0sYWRkRXZlbnRMaXN0ZW5lcjooLi4udCk9Pk8uYWRkRXZlbnRMaXN0ZW5lcih0WzBdLHRbMV0sdFsyXSksZGlzcGF0Y2hFdmVudDooLi4udCk9Pk8uZGlzcGF0Y2hFdmVudCh0WzBdKSxyZW1vdmVFdmVudExpc3RlbmVyOiguLi50KT0+Ty5yZW1vdmVFdmVudExpc3RlbmVyKHRbMF0sdFsxXSx0WzJdKX07cmV0dXJuIHUhPT16LmNvbmVJbm5lckFuZ2xlJiYoei5jb25lSW5uZXJBbmdsZT11KSxwIT09ei5jb25lT3V0ZXJBbmdsZSYmKHouY29uZU91dGVyQW5nbGU9cCksZCE9PXouY29uZU91dGVyR2FpbiYmKHouY29uZU91dGVyR2Fpbj1kKSxmIT09ei5kaXN0YW5jZU1vZGVsJiYoei5kaXN0YW5jZU1vZGVsPWYpLF8hPT16Lm1heERpc3RhbmNlJiYoei5tYXhEaXN0YW5jZT1fKSxtIT09ei5vcmllbnRhdGlvblgudmFsdWUmJih6Lm9yaWVudGF0aW9uWC52YWx1ZT1tKSxnIT09ei5vcmllbnRhdGlvblkudmFsdWUmJih6Lm9yaWVudGF0aW9uWS52YWx1ZT1nKSx2IT09ei5vcmllbnRhdGlvbloudmFsdWUmJih6Lm9yaWVudGF0aW9uWi52YWx1ZT12KSx5IT09ei5wYW5uaW5nTW9kZWwmJih6LnBhbm5pbmdNb2RlbD15KSx4IT09ei5wb3NpdGlvblgudmFsdWUmJih6LnBvc2l0aW9uWC52YWx1ZT14KSx3IT09ei5wb3NpdGlvblkudmFsdWUmJih6LnBvc2l0aW9uWS52YWx1ZT13KSxiIT09ei5wb3NpdGlvbloudmFsdWUmJih6LnBvc2l0aW9uWi52YWx1ZT1iKSxUIT09ei5yZWZEaXN0YW5jZSYmKHoucmVmRGlzdGFuY2U9VCksUyE9PXoucm9sbG9mZkZhY3RvciYmKHoucm9sbG9mZkZhY3Rvcj1TKSwxPT09UFswXSYmMD09PVBbMV0mJjA9PT1QWzJdfHxBLnNldE9yaWVudGF0aW9uKC4uLlApLDA9PT1qWzBdJiYwPT09alsxXSYmMD09PWpbMl18fEEuc2V0UG9zaXRpb24oLi4uaiksaCh6dCh6LEEpLCgoKT0+e08uY29ubmVjdChBKSx0KE8sTiwwLDApLE4uY29ubmVjdChNKS5jb25uZWN0KEQsMCwwKSxOLmNvbm5lY3QoRSkuY29ubmVjdChELDAsMSksTi5jb25uZWN0KFIpLmNvbm5lY3QoRCwwLDIpLE4uY29ubmVjdChxKS5jb25uZWN0KEQsMCwzKSxOLmNvbm5lY3QoRikuY29ubmVjdChELDAsNCksTi5jb25uZWN0KEkpLmNvbm5lY3QoRCwwLDUpLEQuY29ubmVjdChWKS5jb25uZWN0KGwuZGVzdGluYXRpb24pfSksKCgpPT57Ty5kaXNjb25uZWN0KEEpLGEoTyxOLDAsMCksTi5kaXNjb25uZWN0KE0pLE0uZGlzY29ubmVjdChEKSxOLmRpc2Nvbm5lY3QoRSksRS5kaXNjb25uZWN0KEQpLE4uZGlzY29ubmVjdChSKSxSLmRpc2Nvbm5lY3QoRCksTi5kaXNjb25uZWN0KHEpLHEuZGlzY29ubmVjdChEKSxOLmRpc2Nvbm5lY3QoRiksRi5kaXNjb25uZWN0KEQpLE4uZGlzY29ubmVjdChJKSxJLmRpc2Nvbm5lY3QoRCksRC5kaXNjb25uZWN0KFYpLFYuZGlzY29ubmVjdChsLmRlc3RpbmF0aW9uKX0pKX0pKFksQXQsYXMsQnQsUXQsanMsWnQsSyxlZSxvcyksenM9KHQ9PihlLHMpPT57Y29uc3Qgbj1lLmNyZWF0ZVBhbm5lcigpO3JldHVybiB2b2lkIDA9PT1uLm9yaWVudGF0aW9uWD90KGUscyk6KHF0KG4scyksSXQobixzLFwib3JpZW50YXRpb25YXCIpLEl0KG4scyxcIm9yaWVudGF0aW9uWVwiKSxJdChuLHMsXCJvcmllbnRhdGlvblpcIiksSXQobixzLFwicG9zaXRpb25YXCIpLEl0KG4scyxcInBvc2l0aW9uWVwiKSxJdChuLHMsXCJwb3NpdGlvblpcIiksUnQobixzLFwiY29uZUlubmVyQW5nbGVcIiksUnQobixzLFwiY29uZU91dGVyQW5nbGVcIiksUnQobixzLFwiY29uZU91dGVyR2FpblwiKSxSdChuLHMsXCJkaXN0YW5jZU1vZGVsXCIpLFJ0KG4scyxcIm1heERpc3RhbmNlXCIpLFJ0KG4scyxcInBhbm5pbmdNb2RlbFwiKSxSdChuLHMsXCJyZWZEaXN0YW5jZVwiKSxSdChuLHMsXCJyb2xsb2ZmRmFjdG9yXCIpLG4pfSkoTHMpLFdzPSgodCxlLHMsbixpLG8scixhLGMsaCk9PigpPT57Y29uc3QgbD1uZXcgV2Vha01hcDtsZXQgdT1udWxsO3JldHVybntyZW5kZXIocCxkKXtjb25zdCBmPWwuZ2V0KGQpO3JldHVybiB2b2lkIDAhPT1mP1Byb21pc2UucmVzb2x2ZShmKTooYXN5bmMocCxkKT0+e2xldCBmPW51bGwsXz1vKHApO2NvbnN0IG09e2NoYW5uZWxDb3VudDpfLmNoYW5uZWxDb3VudCxjaGFubmVsQ291bnRNb2RlOl8uY2hhbm5lbENvdW50TW9kZSxjaGFubmVsSW50ZXJwcmV0YXRpb246Xy5jaGFubmVsSW50ZXJwcmV0YXRpb259LGc9ey4uLm0sY29uZUlubmVyQW5nbGU6Xy5jb25lSW5uZXJBbmdsZSxjb25lT3V0ZXJBbmdsZTpfLmNvbmVPdXRlckFuZ2xlLGNvbmVPdXRlckdhaW46Xy5jb25lT3V0ZXJHYWluLGRpc3RhbmNlTW9kZWw6Xy5kaXN0YW5jZU1vZGVsLG1heERpc3RhbmNlOl8ubWF4RGlzdGFuY2UscGFubmluZ01vZGVsOl8ucGFubmluZ01vZGVsLHJlZkRpc3RhbmNlOl8ucmVmRGlzdGFuY2Uscm9sbG9mZkZhY3RvcjpfLnJvbGxvZmZGYWN0b3J9LHY9TShfLGQpO2lmKFwiYnVmZmVyU2l6ZVwiaW4gXylmPW4oZCx7Li4ubSxnYWluOjF9KTtlbHNlIGlmKCF2KXtjb25zdCB0PXsuLi5nLG9yaWVudGF0aW9uWDpfLm9yaWVudGF0aW9uWC52YWx1ZSxvcmllbnRhdGlvblk6Xy5vcmllbnRhdGlvblkudmFsdWUsb3JpZW50YXRpb25aOl8ub3JpZW50YXRpb25aLnZhbHVlLHBvc2l0aW9uWDpfLnBvc2l0aW9uWC52YWx1ZSxwb3NpdGlvblk6Xy5wb3NpdGlvblkudmFsdWUscG9zaXRpb25aOl8ucG9zaXRpb25aLnZhbHVlfTtfPWkoZCx0KX1pZihsLnNldChkLG51bGw9PT1mP186ZiksbnVsbCE9PWYpe2lmKG51bGw9PT11KXtpZihudWxsPT09cil0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHRoZSBuYXRpdmUgT2ZmbGluZUF1ZGlvQ29udGV4dCBjb25zdHJ1Y3Rvci5cIik7Y29uc3QgdD1uZXcgcig2LHAuY29udGV4dC5sZW5ndGgsZC5zYW1wbGVSYXRlKSxuPWUodCx7Y2hhbm5lbENvdW50OjEsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIixudW1iZXJPZklucHV0czo2fSk7bi5jb25uZWN0KHQuZGVzdGluYXRpb24pLHU9KGFzeW5jKCk9Pntjb25zdCBlPWF3YWl0IFByb21pc2UuYWxsKFtwLm9yaWVudGF0aW9uWCxwLm9yaWVudGF0aW9uWSxwLm9yaWVudGF0aW9uWixwLnBvc2l0aW9uWCxwLnBvc2l0aW9uWSxwLnBvc2l0aW9uWl0ubWFwKChhc3luYyhlLG4pPT57Y29uc3QgaT1zKHQse2NoYW5uZWxDb3VudDoxLGNoYW5uZWxDb3VudE1vZGU6XCJleHBsaWNpdFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcImRpc2NyZXRlXCIsb2Zmc2V0OjA9PT1uPzE6MH0pO3JldHVybiBhd2FpdCBhKHQsZSxpLm9mZnNldCksaX0pKSk7Zm9yKGxldCB0PTA7dDw2O3QrPTEpZVt0XS5jb25uZWN0KG4sMCx0KSxlW3RdLnN0YXJ0KDApO3JldHVybiBoKHQpfSkoKX1jb25zdCB0PWF3YWl0IHUsbz1uKGQsey4uLm0sZ2FpbjoxfSk7YXdhaXQgYyhwLGQsbyk7Y29uc3QgbD1bXTtmb3IobGV0IGU9MDtlPHQubnVtYmVyT2ZDaGFubmVscztlKz0xKWwucHVzaCh0LmdldENoYW5uZWxEYXRhKGUpKTtsZXQgXz1bbFswXVswXSxsWzFdWzBdLGxbMl1bMF1dLHY9W2xbM11bMF0sbFs0XVswXSxsWzVdWzBdXSx5PW4oZCx7Li4ubSxnYWluOjF9KSx4PWkoZCx7Li4uZyxvcmllbnRhdGlvblg6X1swXSxvcmllbnRhdGlvblk6X1sxXSxvcmllbnRhdGlvblo6X1syXSxwb3NpdGlvblg6dlswXSxwb3NpdGlvblk6dlsxXSxwb3NpdGlvblo6dlsyXX0pO28uY29ubmVjdCh5KS5jb25uZWN0KHguaW5wdXRzWzBdKSx4LmNvbm5lY3QoZik7Zm9yKGxldCBlPTEyODtlPHQubGVuZ3RoO2UrPTEyOCl7Y29uc3QgdD1bbFswXVtlXSxsWzFdW2VdLGxbMl1bZV1dLHM9W2xbM11bZV0sbFs0XVtlXSxsWzVdW2VdXTtpZih0LnNvbWUoKCh0LGUpPT50IT09X1tlXSkpfHxzLnNvbWUoKCh0LGUpPT50IT09dltlXSkpKXtfPXQsdj1zO2NvbnN0IHI9ZS9kLnNhbXBsZVJhdGU7eS5nYWluLnNldFZhbHVlQXRUaW1lKDAscikseT1uKGQsey4uLm0sZ2FpbjowfSkseD1pKGQsey4uLmcsb3JpZW50YXRpb25YOl9bMF0sb3JpZW50YXRpb25ZOl9bMV0sb3JpZW50YXRpb25aOl9bMl0scG9zaXRpb25YOnZbMF0scG9zaXRpb25ZOnZbMV0scG9zaXRpb25aOnZbMl19KSx5LmdhaW4uc2V0VmFsdWVBdFRpbWUoMSxyKSxvLmNvbm5lY3QoeSkuY29ubmVjdCh4LmlucHV0c1swXSkseC5jb25uZWN0KGYpfX1yZXR1cm4gZn1yZXR1cm4gdj8oYXdhaXQgdChkLHAub3JpZW50YXRpb25YLF8ub3JpZW50YXRpb25YKSxhd2FpdCB0KGQscC5vcmllbnRhdGlvblksXy5vcmllbnRhdGlvblkpLGF3YWl0IHQoZCxwLm9yaWVudGF0aW9uWixfLm9yaWVudGF0aW9uWiksYXdhaXQgdChkLHAucG9zaXRpb25YLF8ucG9zaXRpb25YKSxhd2FpdCB0KGQscC5wb3NpdGlvblksXy5wb3NpdGlvblkpLGF3YWl0IHQoZCxwLnBvc2l0aW9uWixfLnBvc2l0aW9uWikpOihhd2FpdCBhKGQscC5vcmllbnRhdGlvblgsXy5vcmllbnRhdGlvblgpLGF3YWl0IGEoZCxwLm9yaWVudGF0aW9uWSxfLm9yaWVudGF0aW9uWSksYXdhaXQgYShkLHAub3JpZW50YXRpb25aLF8ub3JpZW50YXRpb25aKSxhd2FpdCBhKGQscC5wb3NpdGlvblgsXy5wb3NpdGlvblgpLGF3YWl0IGEoZCxwLnBvc2l0aW9uWSxfLnBvc2l0aW9uWSksYXdhaXQgYShkLHAucG9zaXRpb25aLF8ucG9zaXRpb25aKSksWChfKT9hd2FpdCBjKHAsZCxfLmlucHV0c1swXSk6YXdhaXQgYyhwLGQsXyksX30pKHAsZCl9fX0pKFhlLGFzLGRzLEJ0LHpzLHR0LENlLCRlLFRlLENzKSxCcz0oKHQsZSxzLG4saSxvLHIpPT5jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IodCxhKXtjb25zdCBjPWkodCksaD17Li4uJHQsLi4uYX0sbD1zKGMsaCksdT1vKGMpO3N1cGVyKHQsITEsbCx1P24oKTpudWxsKSx0aGlzLl9uYXRpdmVQYW5uZXJOb2RlPWwsdGhpcy5fb3JpZW50YXRpb25YPWUodGhpcyx1LGwub3JpZW50YXRpb25YLFYsSSksdGhpcy5fb3JpZW50YXRpb25ZPWUodGhpcyx1LGwub3JpZW50YXRpb25ZLFYsSSksdGhpcy5fb3JpZW50YXRpb25aPWUodGhpcyx1LGwub3JpZW50YXRpb25aLFYsSSksdGhpcy5fcG9zaXRpb25YPWUodGhpcyx1LGwucG9zaXRpb25YLFYsSSksdGhpcy5fcG9zaXRpb25ZPWUodGhpcyx1LGwucG9zaXRpb25ZLFYsSSksdGhpcy5fcG9zaXRpb25aPWUodGhpcyx1LGwucG9zaXRpb25aLFYsSSkscih0aGlzLDEpfWdldCBjb25lSW5uZXJBbmdsZSgpe3JldHVybiB0aGlzLl9uYXRpdmVQYW5uZXJOb2RlLmNvbmVJbm5lckFuZ2xlfXNldCBjb25lSW5uZXJBbmdsZSh0KXt0aGlzLl9uYXRpdmVQYW5uZXJOb2RlLmNvbmVJbm5lckFuZ2xlPXR9Z2V0IGNvbmVPdXRlckFuZ2xlKCl7cmV0dXJuIHRoaXMuX25hdGl2ZVBhbm5lck5vZGUuY29uZU91dGVyQW5nbGV9c2V0IGNvbmVPdXRlckFuZ2xlKHQpe3RoaXMuX25hdGl2ZVBhbm5lck5vZGUuY29uZU91dGVyQW5nbGU9dH1nZXQgY29uZU91dGVyR2Fpbigpe3JldHVybiB0aGlzLl9uYXRpdmVQYW5uZXJOb2RlLmNvbmVPdXRlckdhaW59c2V0IGNvbmVPdXRlckdhaW4odCl7dGhpcy5fbmF0aXZlUGFubmVyTm9kZS5jb25lT3V0ZXJHYWluPXR9Z2V0IGRpc3RhbmNlTW9kZWwoKXtyZXR1cm4gdGhpcy5fbmF0aXZlUGFubmVyTm9kZS5kaXN0YW5jZU1vZGVsfXNldCBkaXN0YW5jZU1vZGVsKHQpe3RoaXMuX25hdGl2ZVBhbm5lck5vZGUuZGlzdGFuY2VNb2RlbD10fWdldCBtYXhEaXN0YW5jZSgpe3JldHVybiB0aGlzLl9uYXRpdmVQYW5uZXJOb2RlLm1heERpc3RhbmNlfXNldCBtYXhEaXN0YW5jZSh0KXt0aGlzLl9uYXRpdmVQYW5uZXJOb2RlLm1heERpc3RhbmNlPXR9Z2V0IG9yaWVudGF0aW9uWCgpe3JldHVybiB0aGlzLl9vcmllbnRhdGlvblh9Z2V0IG9yaWVudGF0aW9uWSgpe3JldHVybiB0aGlzLl9vcmllbnRhdGlvbll9Z2V0IG9yaWVudGF0aW9uWigpe3JldHVybiB0aGlzLl9vcmllbnRhdGlvblp9Z2V0IHBhbm5pbmdNb2RlbCgpe3JldHVybiB0aGlzLl9uYXRpdmVQYW5uZXJOb2RlLnBhbm5pbmdNb2RlbH1zZXQgcGFubmluZ01vZGVsKHQpe3RoaXMuX25hdGl2ZVBhbm5lck5vZGUucGFubmluZ01vZGVsPXR9Z2V0IHBvc2l0aW9uWCgpe3JldHVybiB0aGlzLl9wb3NpdGlvblh9Z2V0IHBvc2l0aW9uWSgpe3JldHVybiB0aGlzLl9wb3NpdGlvbll9Z2V0IHBvc2l0aW9uWigpe3JldHVybiB0aGlzLl9wb3NpdGlvblp9Z2V0IHJlZkRpc3RhbmNlKCl7cmV0dXJuIHRoaXMuX25hdGl2ZVBhbm5lck5vZGUucmVmRGlzdGFuY2V9c2V0IHJlZkRpc3RhbmNlKHQpe3RoaXMuX25hdGl2ZVBhbm5lck5vZGUucmVmRGlzdGFuY2U9dH1nZXQgcm9sbG9mZkZhY3Rvcigpe3JldHVybiB0aGlzLl9uYXRpdmVQYW5uZXJOb2RlLnJvbGxvZmZGYWN0b3J9c2V0IHJvbGxvZmZGYWN0b3IodCl7dGhpcy5fbmF0aXZlUGFubmVyTm9kZS5yb2xsb2ZmRmFjdG9yPXR9fSkoVmUsSmUsenMsV3Msa2UsRGUsbnMpLFVzPSh0PT4oZSx7ZGlzYWJsZU5vcm1hbGl6YXRpb246cyxpbWFnOm4scmVhbDppfSk9Pntjb25zdCBvPW4gaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXk/bjpuZXcgRmxvYXQzMkFycmF5KG4pLHI9aSBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheT9pOm5ldyBGbG9hdDMyQXJyYXkoaSksYT1lLmNyZWF0ZVBlcmlvZGljV2F2ZShyLG8se2Rpc2FibGVOb3JtYWxpemF0aW9uOnN9KTtpZihBcnJheS5mcm9tKG4pLmxlbmd0aDwyKXRocm93IHQoKTtyZXR1cm4gYX0pKFIpLEdzPSgodCxlLHMsbik9PmNsYXNzIG57Y29uc3RydWN0b3IobixpKXtjb25zdCBvPWUobikscj0odD0+e2NvbnN0e2ltYWc6ZSxyZWFsOnN9PXQ7cmV0dXJuIHZvaWQgMD09PWU/dm9pZCAwPT09cz97Li4udCxpbWFnOlswLDBdLHJlYWw6WzAsMF19OnsuLi50LGltYWc6QXJyYXkuZnJvbShzLCgoKT0+MCkpLHJlYWw6c306dm9pZCAwPT09cz97Li4udCxpbWFnOmUscmVhbDpBcnJheS5mcm9tKGUsKCgpPT4wKSl9OnsuLi50LGltYWc6ZSxyZWFsOnN9fSkoey4uLkh0LC4uLml9KSxhPXQobyxyKTtyZXR1cm4gcy5hZGQoYSksYX1zdGF0aWNbU3ltYm9sLmhhc0luc3RhbmNlXSh0KXtyZXR1cm4gbnVsbCE9PXQmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk9PT1uLnByb3RvdHlwZXx8cy5oYXModCl9fSkoVXMsa2UsbmV3IFdlYWtTZXQpLFFzPSgodCxlLHMsbixpLG8pPT57Y29uc3Qgcj0xNjM4NSxhPW5ldyBGbG9hdDMyQXJyYXkoWzEsMV0pLGM9TWF0aC5QSS8yLGg9e2NoYW5uZWxDb3VudDoxLGNoYW5uZWxDb3VudE1vZGU6XCJleHBsaWNpdFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcImRpc2NyZXRlXCJ9LGw9ey4uLmgsb3ZlcnNhbXBsZTpcIm5vbmVcIn0sdT0odCxvLHUscCxkKT0+e2lmKDE9PT1vKXJldHVybigodCxlLGksbyk9Pntjb25zdCB1PW5ldyBGbG9hdDMyQXJyYXkocikscD1uZXcgRmxvYXQzMkFycmF5KHIpO2ZvcihsZXQgdD0wO3Q8cjt0Kz0xKXtjb25zdCBlPXQvMTYzODQqYzt1W3RdPU1hdGguY29zKGUpLHBbdF09TWF0aC5zaW4oZSl9Y29uc3QgZD1zKHQsey4uLmgsZ2FpbjowfSksZj1uKHQsey4uLmwsY3VydmU6dX0pLF89bih0LHsuLi5sLGN1cnZlOmF9KSxtPXModCx7Li4uaCxnYWluOjB9KSxnPW4odCx7Li4ubCxjdXJ2ZTpwfSk7cmV0dXJue2Nvbm5lY3RHcmFwaCgpe2UuY29ubmVjdChkKSxlLmNvbm5lY3Qodm9pZCAwPT09Xy5pbnB1dHM/XzpfLmlucHV0c1swXSksZS5jb25uZWN0KG0pLF8uY29ubmVjdChpKSxpLmNvbm5lY3Qodm9pZCAwPT09Zi5pbnB1dHM/ZjpmLmlucHV0c1swXSksaS5jb25uZWN0KHZvaWQgMD09PWcuaW5wdXRzP2c6Zy5pbnB1dHNbMF0pLGYuY29ubmVjdChkLmdhaW4pLGcuY29ubmVjdChtLmdhaW4pLGQuY29ubmVjdChvLDAsMCksbS5jb25uZWN0KG8sMCwxKX0sZGlzY29ubmVjdEdyYXBoKCl7ZS5kaXNjb25uZWN0KGQpLGUuZGlzY29ubmVjdCh2b2lkIDA9PT1fLmlucHV0cz9fOl8uaW5wdXRzWzBdKSxlLmRpc2Nvbm5lY3QobSksXy5kaXNjb25uZWN0KGkpLGkuZGlzY29ubmVjdCh2b2lkIDA9PT1mLmlucHV0cz9mOmYuaW5wdXRzWzBdKSxpLmRpc2Nvbm5lY3Qodm9pZCAwPT09Zy5pbnB1dHM/ZzpnLmlucHV0c1swXSksZi5kaXNjb25uZWN0KGQuZ2FpbiksZy5kaXNjb25uZWN0KG0uZ2FpbiksZC5kaXNjb25uZWN0KG8sMCwwKSxtLmRpc2Nvbm5lY3QobywwLDEpfX19KSh0LHUscCxkKTtpZigyPT09bylyZXR1cm4oKHQsaSxvLHUpPT57Y29uc3QgcD1uZXcgRmxvYXQzMkFycmF5KHIpLGQ9bmV3IEZsb2F0MzJBcnJheShyKSxmPW5ldyBGbG9hdDMyQXJyYXkociksXz1uZXcgRmxvYXQzMkFycmF5KHIpLG09TWF0aC5mbG9vcig4MTkyLjUpO2ZvcihsZXQgdD0wO3Q8cjt0Kz0xKWlmKHQ+bSl7Y29uc3QgZT0odC1tKS8oMTYzODQtbSkqYztwW3RdPU1hdGguY29zKGUpLGRbdF09TWF0aC5zaW4oZSksZlt0XT0wLF9bdF09MX1lbHNle2NvbnN0IGU9dC8oMTYzODQtbSkqYztwW3RdPTEsZFt0XT0wLGZbdF09TWF0aC5jb3MoZSksX1t0XT1NYXRoLnNpbihlKX1jb25zdCBnPWUodCx7Y2hhbm5lbENvdW50OjIsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixudW1iZXJPZk91dHB1dHM6Mn0pLHY9cyh0LHsuLi5oLGdhaW46MH0pLHk9bih0LHsuLi5sLGN1cnZlOnB9KSx4PXModCx7Li4uaCxnYWluOjB9KSx3PW4odCx7Li4ubCxjdXJ2ZTpkfSksYj1uKHQsey4uLmwsY3VydmU6YX0pLFQ9cyh0LHsuLi5oLGdhaW46MH0pLFM9bih0LHsuLi5sLGN1cnZlOmZ9KSxrPXModCx7Li4uaCxnYWluOjB9KSxBPW4odCx7Li4ubCxjdXJ2ZTpffSk7cmV0dXJue2Nvbm5lY3RHcmFwaCgpe2kuY29ubmVjdChnKSxpLmNvbm5lY3Qodm9pZCAwPT09Yi5pbnB1dHM/YjpiLmlucHV0c1swXSksZy5jb25uZWN0KHYsMCksZy5jb25uZWN0KHgsMCksZy5jb25uZWN0KFQsMSksZy5jb25uZWN0KGssMSksYi5jb25uZWN0KG8pLG8uY29ubmVjdCh2b2lkIDA9PT15LmlucHV0cz95OnkuaW5wdXRzWzBdKSxvLmNvbm5lY3Qodm9pZCAwPT09dy5pbnB1dHM/dzp3LmlucHV0c1swXSksby5jb25uZWN0KHZvaWQgMD09PVMuaW5wdXRzP1M6Uy5pbnB1dHNbMF0pLG8uY29ubmVjdCh2b2lkIDA9PT1BLmlucHV0cz9BOkEuaW5wdXRzWzBdKSx5LmNvbm5lY3Qodi5nYWluKSx3LmNvbm5lY3QoeC5nYWluKSxTLmNvbm5lY3QoVC5nYWluKSxBLmNvbm5lY3Qoay5nYWluKSx2LmNvbm5lY3QodSwwLDApLFQuY29ubmVjdCh1LDAsMCkseC5jb25uZWN0KHUsMCwxKSxrLmNvbm5lY3QodSwwLDEpfSxkaXNjb25uZWN0R3JhcGgoKXtpLmRpc2Nvbm5lY3QoZyksaS5kaXNjb25uZWN0KHZvaWQgMD09PWIuaW5wdXRzP2I6Yi5pbnB1dHNbMF0pLGcuZGlzY29ubmVjdCh2LDApLGcuZGlzY29ubmVjdCh4LDApLGcuZGlzY29ubmVjdChULDEpLGcuZGlzY29ubmVjdChrLDEpLGIuZGlzY29ubmVjdChvKSxvLmRpc2Nvbm5lY3Qodm9pZCAwPT09eS5pbnB1dHM/eTp5LmlucHV0c1swXSksby5kaXNjb25uZWN0KHZvaWQgMD09PXcuaW5wdXRzP3c6dy5pbnB1dHNbMF0pLG8uZGlzY29ubmVjdCh2b2lkIDA9PT1TLmlucHV0cz9TOlMuaW5wdXRzWzBdKSxvLmRpc2Nvbm5lY3Qodm9pZCAwPT09QS5pbnB1dHM/QTpBLmlucHV0c1swXSkseS5kaXNjb25uZWN0KHYuZ2Fpbiksdy5kaXNjb25uZWN0KHguZ2FpbiksUy5kaXNjb25uZWN0KFQuZ2FpbiksQS5kaXNjb25uZWN0KGsuZ2Fpbiksdi5kaXNjb25uZWN0KHUsMCwwKSxULmRpc2Nvbm5lY3QodSwwLDApLHguZGlzY29ubmVjdCh1LDAsMSksay5kaXNjb25uZWN0KHUsMCwxKX19fSkodCx1LHAsZCk7dGhyb3cgaSgpfTtyZXR1cm4oZSx7Y2hhbm5lbENvdW50Om4sY2hhbm5lbENvdW50TW9kZTpyLHBhbjphLC4uLmN9KT0+e2lmKFwibWF4XCI9PT1yKXRocm93IGkoKTtjb25zdCBoPXQoZSx7Li4uYyxjaGFubmVsQ291bnQ6MSxjaGFubmVsQ291bnRNb2RlOnIsbnVtYmVyT2ZJbnB1dHM6Mn0pLGw9cyhlLHsuLi5jLGNoYW5uZWxDb3VudDpuLGNoYW5uZWxDb3VudE1vZGU6cixnYWluOjF9KSxwPXMoZSx7Y2hhbm5lbENvdW50OjEsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixnYWluOmF9KTtsZXR7Y29ubmVjdEdyYXBoOmQsZGlzY29ubmVjdEdyYXBoOmZ9PXUoZSxuLGwscCxoKTtPYmplY3QuZGVmaW5lUHJvcGVydHkocC5nYWluLFwiZGVmYXVsdFZhbHVlXCIse2dldDooKT0+MH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwLmdhaW4sXCJtYXhWYWx1ZVwiLHtnZXQ6KCk9PjF9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkocC5nYWluLFwibWluVmFsdWVcIix7Z2V0OigpPT4tMX0pO2NvbnN0IF89e2dldCBidWZmZXJTaXplKCl7fSxnZXQgY2hhbm5lbENvdW50KCl7cmV0dXJuIGwuY2hhbm5lbENvdW50fSxzZXQgY2hhbm5lbENvdW50KHQpe2wuY2hhbm5lbENvdW50IT09dCYmKG0mJmYoKSwoe2Nvbm5lY3RHcmFwaDpkLGRpc2Nvbm5lY3RHcmFwaDpmfT11KGUsdCxsLHAsaCkpLG0mJmQoKSksbC5jaGFubmVsQ291bnQ9dH0sZ2V0IGNoYW5uZWxDb3VudE1vZGUoKXtyZXR1cm4gbC5jaGFubmVsQ291bnRNb2RlfSxzZXQgY2hhbm5lbENvdW50TW9kZSh0KXtpZihcImNsYW1wZWQtbWF4XCI9PT10fHxcIm1heFwiPT09dCl0aHJvdyBpKCk7bC5jaGFubmVsQ291bnRNb2RlPXR9LGdldCBjaGFubmVsSW50ZXJwcmV0YXRpb24oKXtyZXR1cm4gbC5jaGFubmVsSW50ZXJwcmV0YXRpb259LHNldCBjaGFubmVsSW50ZXJwcmV0YXRpb24odCl7bC5jaGFubmVsSW50ZXJwcmV0YXRpb249dH0sZ2V0IGNvbnRleHQoKXtyZXR1cm4gbC5jb250ZXh0fSxnZXQgaW5wdXRzKCl7cmV0dXJuW2xdfSxnZXQgbnVtYmVyT2ZJbnB1dHMoKXtyZXR1cm4gbC5udW1iZXJPZklucHV0c30sZ2V0IG51bWJlck9mT3V0cHV0cygpe3JldHVybiBsLm51bWJlck9mT3V0cHV0c30sZ2V0IHBhbigpe3JldHVybiBwLmdhaW59LGFkZEV2ZW50TGlzdGVuZXI6KC4uLnQpPT5sLmFkZEV2ZW50TGlzdGVuZXIodFswXSx0WzFdLHRbMl0pLGRpc3BhdGNoRXZlbnQ6KC4uLnQpPT5sLmRpc3BhdGNoRXZlbnQodFswXSkscmVtb3ZlRXZlbnRMaXN0ZW5lcjooLi4udCk9PmwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0WzBdLHRbMV0sdFsyXSl9O2xldCBtPSExO3JldHVybiBvKHp0KF8saCksKCgpPT57ZCgpLG09ITB9KSwoKCk9PntmKCksbT0hMX0pKX19KShhcyxMdCxCdCxqcyxadCxvcyksWnM9KCh0LGUpPT4ocyxuKT0+e2NvbnN0IGk9bi5jaGFubmVsQ291bnRNb2RlO2lmKFwiY2xhbXBlZC1tYXhcIj09PWkpdGhyb3cgZSgpO2lmKHZvaWQgMD09PXMuY3JlYXRlU3RlcmVvUGFubmVyKXJldHVybiB0KHMsbik7Y29uc3Qgbz1zLmNyZWF0ZVN0ZXJlb1Bhbm5lcigpO3JldHVybiBxdChvLG4pLEl0KG8sbixcInBhblwiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkobyxcImNoYW5uZWxDb3VudE1vZGVcIix7Z2V0OigpPT5pLHNldDp0PT57aWYodCE9PWkpdGhyb3cgZSgpfX0pLG99KShRcyxadCksWHM9KCh0LGUscyxuLGkpPT4oKT0+e2NvbnN0IG89bmV3IFdlYWtNYXA7cmV0dXJue3JlbmRlcihyLGEpe2NvbnN0IGM9by5nZXQoYSk7cmV0dXJuIHZvaWQgMCE9PWM/UHJvbWlzZS5yZXNvbHZlKGMpOihhc3luYyhyLGEpPT57bGV0IGM9cyhyKTtjb25zdCBoPU0oYyxhKTtpZighaCl7Y29uc3QgdD17Y2hhbm5lbENvdW50OmMuY2hhbm5lbENvdW50LGNoYW5uZWxDb3VudE1vZGU6Yy5jaGFubmVsQ291bnRNb2RlLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpjLmNoYW5uZWxJbnRlcnByZXRhdGlvbixwYW46Yy5wYW4udmFsdWV9O2M9ZShhLHQpfXJldHVybiBvLnNldChhLGMpLGg/YXdhaXQgdChhLHIucGFuLGMucGFuKTphd2FpdCBuKGEsci5wYW4sYy5wYW4pLFgoYyk/YXdhaXQgaShyLGEsYy5pbnB1dHNbMF0pOmF3YWl0IGkocixhLGMpLGN9KShyLGEpfX19KShYZSxacyx0dCwkZSxUZSksWXM9KCh0LGUscyxuLGksbyk9PmNsYXNzIGV4dGVuZHMgdHtjb25zdHJ1Y3Rvcih0LHIpe2NvbnN0IGE9aSh0KSxjPXsuLi5KdCwuLi5yfSxoPXMoYSxjKSxsPW8oYSk7c3VwZXIodCwhMSxoLGw/bigpOm51bGwpLHRoaXMuX3Bhbj1lKHRoaXMsbCxoLnBhbil9Z2V0IHBhbigpe3JldHVybiB0aGlzLl9wYW59fSkoVmUsSmUsWnMsWHMsa2UsRGUpLCRzPSgodCxlLHMpPT4oKT0+e2NvbnN0IG49bmV3IFdlYWtNYXA7cmV0dXJue3JlbmRlcihpLG8pe2NvbnN0IHI9bi5nZXQobyk7cmV0dXJuIHZvaWQgMCE9PXI/UHJvbWlzZS5yZXNvbHZlKHIpOihhc3luYyhpLG8pPT57bGV0IHI9ZShpKTtpZighTShyLG8pKXtjb25zdCBlPXtjaGFubmVsQ291bnQ6ci5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpyLmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOnIuY2hhbm5lbEludGVycHJldGF0aW9uLGN1cnZlOnIuY3VydmUsb3ZlcnNhbXBsZTpyLm92ZXJzYW1wbGV9O3I9dChvLGUpfXJldHVybiBuLnNldChvLHIpLFgocik/YXdhaXQgcyhpLG8sci5pbnB1dHNbMF0pOmF3YWl0IHMoaSxvLHIpLHJ9KShpLG8pfX19KShqcyx0dCxUZSksSHM9KCh0LGUscyxuLGksbyxyKT0+Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKHQsZSl7Y29uc3QgYT1pKHQpLGM9ey4uLnRlLC4uLmV9LGg9cyhhLGMpO3N1cGVyKHQsITAsaCxvKGEpP24oKTpudWxsKSx0aGlzLl9pc0N1cnZlTnVsbGlmaWVkPSExLHRoaXMuX25hdGl2ZVdhdmVTaGFwZXJOb2RlPWgscih0aGlzLDEpfWdldCBjdXJ2ZSgpe3JldHVybiB0aGlzLl9pc0N1cnZlTnVsbGlmaWVkP251bGw6dGhpcy5fbmF0aXZlV2F2ZVNoYXBlck5vZGUuY3VydmV9c2V0IGN1cnZlKHQpe2lmKG51bGw9PT10KXRoaXMuX2lzQ3VydmVOdWxsaWZpZWQ9ITAsdGhpcy5fbmF0aXZlV2F2ZVNoYXBlck5vZGUuY3VydmU9bmV3IEZsb2F0MzJBcnJheShbMCwwXSk7ZWxzZXtpZih0Lmxlbmd0aDwyKXRocm93IGUoKTt0aGlzLl9pc0N1cnZlTnVsbGlmaWVkPSExLHRoaXMuX25hdGl2ZVdhdmVTaGFwZXJOb2RlLmN1cnZlPXR9fWdldCBvdmVyc2FtcGxlKCl7cmV0dXJuIHRoaXMuX25hdGl2ZVdhdmVTaGFwZXJOb2RlLm92ZXJzYW1wbGV9c2V0IG92ZXJzYW1wbGUodCl7dGhpcy5fbmF0aXZlV2F2ZVNoYXBlck5vZGUub3ZlcnNhbXBsZT10fX0pKFZlLEF0LGpzLCRzLGtlLERlLG5zKSxKcz0odD0+bnVsbCE9PXQmJnQuaXNTZWN1cmVDb250ZXh0KSh4ZSksS3M9KHQ9PihlLHMsbik9PntPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0LHtjdXJyZW50RnJhbWU6e2NvbmZpZ3VyYWJsZTohMCxnZXQ6KCk9Pk1hdGgucm91bmQoZSpzKX0sY3VycmVudFRpbWU6e2NvbmZpZ3VyYWJsZTohMCxnZXQ6KCk9PmV9fSk7dHJ5e3JldHVybiBuKCl9ZmluYWxseXtudWxsIT09dCYmKGRlbGV0ZSB0LmN1cnJlbnRGcmFtZSxkZWxldGUgdC5jdXJyZW50VGltZSl9fSkoeGUpLHRuPW5ldyBXZWFrTWFwLGVuPSgodCxlKT0+cz0+e2xldCBuPXQuZ2V0KHMpO2lmKHZvaWQgMCE9PW4pcmV0dXJuIG47aWYobnVsbD09PWUpdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyB0aGUgbmF0aXZlIE9mZmxpbmVBdWRpb0NvbnRleHQgY29uc3RydWN0b3IuXCIpO3JldHVybiBuPW5ldyBlKDEsMSw0NDEwMCksdC5zZXQocyxuKSxufSkodG4sQ2UpLHNuPUpzPygodCxlLHMsbixpLG8scixhLGMsaCxsLHUscCk9PntsZXQgZD0wO3JldHVybihfLG0sZz17Y3JlZGVudGlhbHM6XCJvbWl0XCJ9KT0+e2NvbnN0IHc9bC5nZXQoXyk7aWYodm9pZCAwIT09dyYmdy5oYXMobSkpcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO2NvbnN0IGI9aC5nZXQoXyk7aWYodm9pZCAwIT09Yil7Y29uc3QgdD1iLmdldChtKTtpZih2b2lkIDAhPT10KXJldHVybiB0fWNvbnN0IFQ9byhfKSxTPXZvaWQgMD09PVQuYXVkaW9Xb3JrbGV0P2kobSkudGhlbigoKFt0LGVdKT0+e2NvbnN0W24saV09dih0LGUpO3JldHVybiBzKGAke259OygoYSxiKT0+eyhhW2JdPWFbYl18fFtdKS5wdXNoKChBdWRpb1dvcmtsZXRQcm9jZXNzb3IsZ2xvYmFsLHJlZ2lzdGVyUHJvY2Vzc29yLHNhbXBsZVJhdGUsc2VsZix3aW5kb3cpPT57JHtpfVxcbn0pfSkod2luZG93LCdfQVdHUycpYCl9KSkudGhlbigoKCk9Pntjb25zdCB0PXAuX0FXR1MucG9wKCk7aWYodm9pZCAwPT09dCl0aHJvdyBuZXcgU3ludGF4RXJyb3I7bihULmN1cnJlbnRUaW1lLFQuc2FtcGxlUmF0ZSwoKCk9PnQoY2xhc3N7fSx2b2lkIDAsKCh0LHMpPT57aWYoXCJcIj09PXQudHJpbSgpKXRocm93IGUoKTtjb25zdCBuPWYuZ2V0KFQpO2lmKHZvaWQgMCE9PW4pe2lmKG4uaGFzKHQpKXRocm93IGUoKTt4KHMpLHkocy5wYXJhbWV0ZXJEZXNjcmlwdG9ycyksbi5zZXQodCxzKX1lbHNlIHgocykseShzLnBhcmFtZXRlckRlc2NyaXB0b3JzKSxmLnNldChULG5ldyBNYXAoW1t0LHNdXSkpfSksVC5zYW1wbGVSYXRlLHZvaWQgMCx2b2lkIDApKSl9KSk6UHJvbWlzZS5hbGwoW2kobSksUHJvbWlzZS5yZXNvbHZlKHQodSx1KSldKS50aGVuKCgoW1t0LGVdLHNdKT0+e2NvbnN0IG49ZCsxO2Q9bjtjb25zdFtpLG9dPXYodCxlKSxoPW5ldyBCbG9iKFtgJHtpfTsoKEF1ZGlvV29ya2xldFByb2Nlc3NvcixyZWdpc3RlclByb2Nlc3Nvcik9Pnske299XFxufSkoJHtzP1wiQXVkaW9Xb3JrbGV0UHJvY2Vzc29yXCI6XCJjbGFzcyBleHRlbmRzIEF1ZGlvV29ya2xldFByb2Nlc3NvciB7X19iPW5ldyBXZWFrU2V0KCk7Y29uc3RydWN0b3IoKXtzdXBlcigpOyhwPT5wLnBvc3RNZXNzYWdlPShxPT4obSx0KT0+cS5jYWxsKHAsbSx0P3QuZmlsdGVyKHU9PiF0aGlzLl9fYi5oYXModSkpOnQpKShwLnBvc3RNZXNzYWdlKSkodGhpcy5wb3J0KX19XCJ9LChuLHApPT5yZWdpc3RlclByb2Nlc3NvcihuLGNsYXNzIGV4dGVuZHMgcHske3M/XCJcIjpcIl9fYyA9IChhKSA9PiBhLmZvckVhY2goZT0+dGhpcy5fX2IuYWRkKGUuYnVmZmVyKSk7XCJ9cHJvY2VzcyhpLG8scCl7JHtzP1wiXCI6XCJpLmZvckVhY2godGhpcy5fX2MpO28uZm9yRWFjaCh0aGlzLl9fYyk7dGhpcy5fX2MoT2JqZWN0LnZhbHVlcyhwKSk7XCJ9cmV0dXJuIHN1cGVyLnByb2Nlc3MoaS5tYXAoaj0+ai5zb21lKGs9PmsubGVuZ3RoPT09MCk/W106aiksbyxwKX19KSk7cmVnaXN0ZXJQcm9jZXNzb3IoJ19fc2FjJHtufScsY2xhc3MgZXh0ZW5kcyBBdWRpb1dvcmtsZXRQcm9jZXNzb3J7cHJvY2Vzcygpe3JldHVybiAhMX19KWBdLHt0eXBlOlwiYXBwbGljYXRpb24vamF2YXNjcmlwdDsgY2hhcnNldD11dGYtOFwifSksbD1VUkwuY3JlYXRlT2JqZWN0VVJMKGgpO3JldHVybiBULmF1ZGlvV29ya2xldC5hZGRNb2R1bGUobCxnKS50aGVuKCgoKT0+e2lmKGEoVCkpcmV0dXJuIFQ7Y29uc3QgdD1yKFQpO3JldHVybiB0LmF1ZGlvV29ya2xldC5hZGRNb2R1bGUobCxnKS50aGVuKCgoKT0+dCkpfSkpLnRoZW4oKHQ9PntpZihudWxsPT09Yyl0aHJvdyBuZXcgU3ludGF4RXJyb3I7dHJ5e25ldyBjKHQsYF9fc2FjJHtufWApfWNhdGNoe3Rocm93IG5ldyBTeW50YXhFcnJvcn19KSkuZmluYWxseSgoKCk9PlVSTC5yZXZva2VPYmplY3RVUkwobCkpKX0pKTtyZXR1cm4gdm9pZCAwPT09Yj9oLnNldChfLG5ldyBNYXAoW1ttLFNdXSkpOmIuc2V0KG0sUyksUy50aGVuKCgoKT0+e2NvbnN0IHQ9bC5nZXQoXyk7dm9pZCAwPT09dD9sLnNldChfLG5ldyBTZXQoW21dKSk6dC5hZGQobSl9KSkuZmluYWxseSgoKCk9Pntjb25zdCB0PWguZ2V0KF8pO3ZvaWQgMCE9PXQmJnQuZGVsZXRlKG0pfSkpLFN9fSkoZ2UsWnQsKHQ9PmU9Pm5ldyBQcm9taXNlKCgocyxuKT0+e2lmKG51bGw9PT10KXJldHVybiB2b2lkIG4obmV3IFN5bnRheEVycm9yKTtjb25zdCBpPXQuZG9jdW1lbnQuaGVhZDtpZihudWxsPT09aSluKG5ldyBTeW50YXhFcnJvcik7ZWxzZXtjb25zdCBvPXQuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKSxyPW5ldyBCbG9iKFtlXSx7dHlwZTpcImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIn0pLGE9VVJMLmNyZWF0ZU9iamVjdFVSTChyKSxjPXQub25lcnJvcixoPSgpPT57dC5vbmVycm9yPWMsVVJMLnJldm9rZU9iamVjdFVSTChhKX07dC5vbmVycm9yPShlLHMsaSxvLHIpPT5zPT09YXx8cz09PXQubG9jYXRpb24uaHJlZiYmMT09PWkmJjE9PT1vPyhoKCksbihyKSwhMSk6bnVsbCE9PWM/YyhlLHMsaSxvLHIpOnZvaWQgMCxvLm9uZXJyb3I9KCk9PntoKCksbihuZXcgU3ludGF4RXJyb3IpfSxvLm9ubG9hZD0oKT0+e2goKSxzKCl9LG8uc3JjPWEsby50eXBlPVwibW9kdWxlXCIsaS5hcHBlbmRDaGlsZChvKX19KSkpKHhlKSxLcywoYXN5bmMgdD0+e3RyeXtjb25zdCBlPWF3YWl0IGZldGNoKHQpO2lmKGUub2spcmV0dXJuW2F3YWl0IGUudGV4dCgpLGUudXJsXX1jYXRjaHt9dGhyb3cgbmV3IERPTUV4Y2VwdGlvbihcIlwiLFwiQWJvcnRFcnJvclwiKX0pLGtlLGVuLERlLEllLG5ldyBXZWFrTWFwLG5ldyBXZWFrTWFwLCgodCxlKT0+YXN5bmMoKT0+e2lmKG51bGw9PT10KXJldHVybiEwO2lmKG51bGw9PT1lKXJldHVybiExO2NvbnN0IHM9bmV3IEJsb2IoWydjbGFzcyBBIGV4dGVuZHMgQXVkaW9Xb3JrbGV0UHJvY2Vzc29ye3Byb2Nlc3MoaSl7dGhpcy5wb3J0LnBvc3RNZXNzYWdlKGksW2lbMF1bMF0uYnVmZmVyXSl9fXJlZ2lzdGVyUHJvY2Vzc29yKFwiYVwiLEEpJ10se3R5cGU6XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0OyBjaGFyc2V0PXV0Zi04XCJ9KSxuPW5ldyBlKDEsMTI4LDQ0MTAwKSxpPVVSTC5jcmVhdGVPYmplY3RVUkwocyk7bGV0IG89ITEscj0hMTt0cnl7YXdhaXQgbi5hdWRpb1dvcmtsZXQuYWRkTW9kdWxlKGkpO2NvbnN0IGU9bmV3IHQobixcImFcIix7bnVtYmVyT2ZPdXRwdXRzOjB9KSxzPW4uY3JlYXRlT3NjaWxsYXRvcigpO2UucG9ydC5vbm1lc3NhZ2U9KCk9Pm89ITAsZS5vbnByb2Nlc3NvcmVycm9yPSgpPT5yPSEwLHMuY29ubmVjdChlKSxzLnN0YXJ0KDApLGF3YWl0IG4uc3RhcnRSZW5kZXJpbmcoKSxhd2FpdCBuZXcgUHJvbWlzZSgodD0+c2V0VGltZW91dCh0KSkpfWNhdGNoe31maW5hbGx5e1VSTC5yZXZva2VPYmplY3RVUkwoaSl9cmV0dXJuIG8mJiFyfSkoSWUsQ2UpLHhlKTp2b2lkIDAsbm49KCh0LGUpPT5zPT50KHMpfHxlKHMpKShSZSxEZSksb249KCh0LGUscyxuLGksbyxyLGEsYyxoLGwpPT4ocyxuKT0+e2NvbnN0IHU9cihzKT9zOm8ocyk7aWYoaS5oYXMobikpe2NvbnN0IHQ9bmV3IERPTUV4Y2VwdGlvbihcIlwiLFwiRGF0YUNsb25lRXJyb3JcIik7cmV0dXJuIFByb21pc2UucmVqZWN0KHQpfXRyeXtpLmFkZChuKX1jYXRjaHt9cmV0dXJuIGUoYywoKCk9PmModSkpKT91LmRlY29kZUF1ZGlvRGF0YShuKS50aGVuKChzPT4od3QobikuY2F0Y2goKCgpPT57fSkpLGUoYSwoKCk9PmEocykpKXx8bChzKSx0LmFkZChzKSxzKSkpOm5ldyBQcm9taXNlKCgoZSxzKT0+e2NvbnN0IGk9YXN5bmMoKT0+e3RyeXthd2FpdCB3dChuKX1jYXRjaHt9fSxvPXQ9PntzKHQpLGkoKX07dHJ5e3UuZGVjb2RlQXVkaW9EYXRhKG4sKHM9PntcImZ1bmN0aW9uXCIhPXR5cGVvZiBzLmNvcHlGcm9tQ2hhbm5lbCYmKGgocykscShzKSksdC5hZGQocyksaSgpLnRoZW4oKCgpPT5lKHMpKSl9KSwodD0+e28obnVsbD09PXQ/bmV3IERPTUV4Y2VwdGlvbihcIlwiLFwiRW5jb2RpbmdFcnJvclwiKTp0KX0pKX1jYXRjaCh0KXtvKHQpfX0pKX0pKGplLGdlLDAsMCxuZXcgV2Vha1NldCxrZSxubixFLEV0LEJlLFVlKSxybj0oKHQsZSxzLG4saSxvLHIsYSxjLGgsbCx1LHAsZCxmLF8sbSxnLHYseSk9PmNsYXNzIGV4dGVuZHMgZntjb25zdHJ1Y3RvcihlLHMpe3N1cGVyKGUscyksdGhpcy5fbmF0aXZlQ29udGV4dD1lLHRoaXMuX2F1ZGlvV29ya2xldD12b2lkIDA9PT10P3ZvaWQgMDp7YWRkTW9kdWxlOihlLHMpPT50KHRoaXMsZSxzKX19Z2V0IGF1ZGlvV29ya2xldCgpe3JldHVybiB0aGlzLl9hdWRpb1dvcmtsZXR9Y3JlYXRlQW5hbHlzZXIoKXtyZXR1cm4gbmV3IGUodGhpcyl9Y3JlYXRlQmlxdWFkRmlsdGVyKCl7cmV0dXJuIG5ldyBpKHRoaXMpfWNyZWF0ZUJ1ZmZlcih0LGUsbil7cmV0dXJuIG5ldyBzKHtsZW5ndGg6ZSxudW1iZXJPZkNoYW5uZWxzOnQsc2FtcGxlUmF0ZTpufSl9Y3JlYXRlQnVmZmVyU291cmNlKCl7cmV0dXJuIG5ldyBuKHRoaXMpfWNyZWF0ZUNoYW5uZWxNZXJnZXIodD02KXtyZXR1cm4gbmV3IG8odGhpcyx7bnVtYmVyT2ZJbnB1dHM6dH0pfWNyZWF0ZUNoYW5uZWxTcGxpdHRlcih0PTYpe3JldHVybiBuZXcgcih0aGlzLHtudW1iZXJPZk91dHB1dHM6dH0pfWNyZWF0ZUNvbnN0YW50U291cmNlKCl7cmV0dXJuIG5ldyBhKHRoaXMpfWNyZWF0ZUNvbnZvbHZlcigpe3JldHVybiBuZXcgYyh0aGlzKX1jcmVhdGVEZWxheSh0PTEpe3JldHVybiBuZXcgbCh0aGlzLHttYXhEZWxheVRpbWU6dH0pfWNyZWF0ZUR5bmFtaWNzQ29tcHJlc3Nvcigpe3JldHVybiBuZXcgdSh0aGlzKX1jcmVhdGVHYWluKCl7cmV0dXJuIG5ldyBwKHRoaXMpfWNyZWF0ZUlJUkZpbHRlcih0LGUpe3JldHVybiBuZXcgZCh0aGlzLHtmZWVkYmFjazplLGZlZWRmb3J3YXJkOnR9KX1jcmVhdGVPc2NpbGxhdG9yKCl7cmV0dXJuIG5ldyBfKHRoaXMpfWNyZWF0ZVBhbm5lcigpe3JldHVybiBuZXcgbSh0aGlzKX1jcmVhdGVQZXJpb2RpY1dhdmUodCxlLHM9e2Rpc2FibGVOb3JtYWxpemF0aW9uOiExfSl7cmV0dXJuIG5ldyBnKHRoaXMsey4uLnMsaW1hZzplLHJlYWw6dH0pfWNyZWF0ZVN0ZXJlb1Bhbm5lcigpe3JldHVybiBuZXcgdih0aGlzKX1jcmVhdGVXYXZlU2hhcGVyKCl7cmV0dXJuIG5ldyB5KHRoaXMpfWRlY29kZUF1ZGlvRGF0YSh0LGUscyl7cmV0dXJuIGgodGhpcy5fbmF0aXZlQ29udGV4dCx0KS50aGVuKCh0PT4oXCJmdW5jdGlvblwiPT10eXBlb2YgZSYmZSh0KSx0KSksKHQ9Pnt0aHJvd1wiZnVuY3Rpb25cIj09dHlwZW9mIHMmJnModCksdH0pKX19KShzbixQZSxHZSx0cyxpcyxocyx1cyxfcyx2cyxvbix4cyxUcyxrcyxNcyxxcyxWcyxCcyxHcyxZcyxIcyksYW49KCh0LGUscyxuKT0+Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKHQsZSl7Y29uc3QgaT1zKHQpLG89KCh0LGUpPT50LmNyZWF0ZU1lZGlhRWxlbWVudFNvdXJjZShlLm1lZGlhRWxlbWVudCkpKGksZSk7aWYobihpKSl0aHJvdyBUeXBlRXJyb3IoKTtzdXBlcih0LCEwLG8sbnVsbCksdGhpcy5fbmF0aXZlTWVkaWFFbGVtZW50QXVkaW9Tb3VyY2VOb2RlPW99Z2V0IG1lZGlhRWxlbWVudCgpe3JldHVybiB0aGlzLl9uYXRpdmVNZWRpYUVsZW1lbnRBdWRpb1NvdXJjZU5vZGUubWVkaWFFbGVtZW50fX0pKFZlLDAsa2UsRGUpLGNuPSgodCxlLHMsbik9PmNsYXNzIGV4dGVuZHMgdHtjb25zdHJ1Y3Rvcih0LGUpe2NvbnN0IGk9cyh0KTtpZihuKGkpKXRocm93IG5ldyBUeXBlRXJyb3I7Y29uc3Qgbz0oKHQsZSk9Pntjb25zdCBzPXQuY3JlYXRlTWVkaWFTdHJlYW1EZXN0aW5hdGlvbigpO3JldHVybiBxdChzLGUpLDE9PT1zLm51bWJlck9mT3V0cHV0cyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHMsXCJudW1iZXJPZk91dHB1dHNcIix7Z2V0OigpPT4wfSksc30pKGksey4uLk10LC4uLmV9KTtzdXBlcih0LCExLG8sbnVsbCksdGhpcy5fbmF0aXZlTWVkaWFTdHJlYW1BdWRpb0Rlc3RpbmF0aW9uTm9kZT1vfWdldCBzdHJlYW0oKXtyZXR1cm4gdGhpcy5fbmF0aXZlTWVkaWFTdHJlYW1BdWRpb0Rlc3RpbmF0aW9uTm9kZS5zdHJlYW19fSkoVmUsMCxrZSxEZSksaG49KCh0LGUscyxuKT0+Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKHQsZSl7Y29uc3QgaT1zKHQpLG89KCh0LHttZWRpYVN0cmVhbTplfSk9Pntjb25zdCBzPWUuZ2V0QXVkaW9UcmFja3MoKTtzLnNvcnQoKCh0LGUpPT50LmlkPGUuaWQ/LTE6dC5pZD5lLmlkPzE6MCkpO2NvbnN0IG49cy5zbGljZSgwLDEpLGk9dC5jcmVhdGVNZWRpYVN0cmVhbVNvdXJjZShuZXcgTWVkaWFTdHJlYW0obikpO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxcIm1lZGlhU3RyZWFtXCIse3ZhbHVlOmV9KSxpfSkoaSxlKTtpZihuKGkpKXRocm93IG5ldyBUeXBlRXJyb3I7c3VwZXIodCwhMCxvLG51bGwpLHRoaXMuX25hdGl2ZU1lZGlhU3RyZWFtQXVkaW9Tb3VyY2VOb2RlPW99Z2V0IG1lZGlhU3RyZWFtKCl7cmV0dXJuIHRoaXMuX25hdGl2ZU1lZGlhU3RyZWFtQXVkaW9Tb3VyY2VOb2RlLm1lZGlhU3RyZWFtfX0pKFZlLDAsa2UsRGUpLGxuPSgodCxlKT0+KHMse21lZGlhU3RyZWFtVHJhY2s6bn0pPT57aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygcy5jcmVhdGVNZWRpYVN0cmVhbVRyYWNrU291cmNlKXJldHVybiBzLmNyZWF0ZU1lZGlhU3RyZWFtVHJhY2tTb3VyY2Uobik7Y29uc3QgaT1uZXcgTWVkaWFTdHJlYW0oW25dKSxvPXMuY3JlYXRlTWVkaWFTdHJlYW1Tb3VyY2UoaSk7aWYoXCJhdWRpb1wiIT09bi5raW5kKXRocm93IHQoKTtpZihlKHMpKXRocm93IG5ldyBUeXBlRXJyb3I7cmV0dXJuIG99KShBdCxEZSksdW49KCh0LGUscyk9PmNsYXNzIGV4dGVuZHMgdHtjb25zdHJ1Y3Rvcih0LG4pe2NvbnN0IGk9cyh0KTtzdXBlcih0LCEwLGUoaSxuKSxudWxsKX19KShWZSxsbixrZSkscG49KCh0LGUscyxuLGksbyxyLGEsYyk9PmNsYXNzIGV4dGVuZHMgdHtjb25zdHJ1Y3Rvcih0PXt9KXtpZihudWxsPT09Yyl0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHRoZSBuYXRpdmUgQXVkaW9Db250ZXh0IGNvbnN0cnVjdG9yLlwiKTtsZXQgZTt0cnl7ZT1uZXcgYyh0KX1jYXRjaCh0KXtpZigxMj09PXQuY29kZSYmXCJzYW1wbGVSYXRlIGlzIG5vdCBpbiByYW5nZVwiPT09dC5tZXNzYWdlKXRocm93IHMoKTt0aHJvdyB0fWlmKG51bGw9PT1lKXRocm93IG4oKTtpZighKHQ9PnZvaWQgMD09PXR8fFwibnVtYmVyXCI9PXR5cGVvZiB0fHxcInN0cmluZ1wiPT10eXBlb2YgdCYmKFwiYmFsYW5jZWRcIj09PXR8fFwiaW50ZXJhY3RpdmVcIj09PXR8fFwicGxheWJhY2tcIj09PXQpKSh0LmxhdGVuY3lIaW50KSl0aHJvdyBuZXcgVHlwZUVycm9yKGBUaGUgcHJvdmlkZWQgdmFsdWUgJyR7dC5sYXRlbmN5SGludH0nIGlzIG5vdCBhIHZhbGlkIGVudW0gdmFsdWUgb2YgdHlwZSBBdWRpb0NvbnRleHRMYXRlbmN5Q2F0ZWdvcnkuYCk7aWYodm9pZCAwIT09dC5zYW1wbGVSYXRlJiZlLnNhbXBsZVJhdGUhPT10LnNhbXBsZVJhdGUpdGhyb3cgcygpO3N1cGVyKGUsMik7Y29uc3R7bGF0ZW5jeUhpbnQ6aX09dCx7c2FtcGxlUmF0ZTpvfT1lO2lmKHRoaXMuX2Jhc2VMYXRlbmN5PVwibnVtYmVyXCI9PXR5cGVvZiBlLmJhc2VMYXRlbmN5P2UuYmFzZUxhdGVuY3k6XCJiYWxhbmNlZFwiPT09aT81MTIvbzpcImludGVyYWN0aXZlXCI9PT1pfHx2b2lkIDA9PT1pPzI1Ni9vOlwicGxheWJhY2tcIj09PWk/MTAyNC9vOjEyOCpNYXRoLm1heCgyLE1hdGgubWluKDEyOCxNYXRoLnJvdW5kKGkqby8xMjgpKSkvbyx0aGlzLl9uYXRpdmVBdWRpb0NvbnRleHQ9ZSxcIndlYmtpdEF1ZGlvQ29udGV4dFwiPT09Yy5uYW1lPyh0aGlzLl9uYXRpdmVHYWluTm9kZT1lLmNyZWF0ZUdhaW4oKSx0aGlzLl9uYXRpdmVPc2NpbGxhdG9yTm9kZT1lLmNyZWF0ZU9zY2lsbGF0b3IoKSx0aGlzLl9uYXRpdmVHYWluTm9kZS5nYWluLnZhbHVlPTFlLTM3LHRoaXMuX25hdGl2ZU9zY2lsbGF0b3JOb2RlLmNvbm5lY3QodGhpcy5fbmF0aXZlR2Fpbk5vZGUpLmNvbm5lY3QoZS5kZXN0aW5hdGlvbiksdGhpcy5fbmF0aXZlT3NjaWxsYXRvck5vZGUuc3RhcnQoKSk6KHRoaXMuX25hdGl2ZUdhaW5Ob2RlPW51bGwsdGhpcy5fbmF0aXZlT3NjaWxsYXRvck5vZGU9bnVsbCksdGhpcy5fc3RhdGU9bnVsbCxcInJ1bm5pbmdcIj09PWUuc3RhdGUpe3RoaXMuX3N0YXRlPVwic3VzcGVuZGVkXCI7Y29uc3QgdD0oKT0+e1wic3VzcGVuZGVkXCI9PT10aGlzLl9zdGF0ZSYmKHRoaXMuX3N0YXRlPW51bGwpLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN0YXRlY2hhbmdlXCIsdCl9O2UuYWRkRXZlbnRMaXN0ZW5lcihcInN0YXRlY2hhbmdlXCIsdCl9fWdldCBiYXNlTGF0ZW5jeSgpe3JldHVybiB0aGlzLl9iYXNlTGF0ZW5jeX1nZXQgc3RhdGUoKXtyZXR1cm4gbnVsbCE9PXRoaXMuX3N0YXRlP3RoaXMuX3N0YXRlOnRoaXMuX25hdGl2ZUF1ZGlvQ29udGV4dC5zdGF0ZX1jbG9zZSgpe3JldHVyblwiY2xvc2VkXCI9PT10aGlzLnN0YXRlP3RoaXMuX25hdGl2ZUF1ZGlvQ29udGV4dC5jbG9zZSgpLnRoZW4oKCgpPT57dGhyb3cgZSgpfSkpOihcInN1c3BlbmRlZFwiPT09dGhpcy5fc3RhdGUmJih0aGlzLl9zdGF0ZT1udWxsKSx0aGlzLl9uYXRpdmVBdWRpb0NvbnRleHQuY2xvc2UoKS50aGVuKCgoKT0+e251bGwhPT10aGlzLl9uYXRpdmVHYWluTm9kZSYmbnVsbCE9PXRoaXMuX25hdGl2ZU9zY2lsbGF0b3JOb2RlJiYodGhpcy5fbmF0aXZlT3NjaWxsYXRvck5vZGUuc3RvcCgpLHRoaXMuX25hdGl2ZUdhaW5Ob2RlLmRpc2Nvbm5lY3QoKSx0aGlzLl9uYXRpdmVPc2NpbGxhdG9yTm9kZS5kaXNjb25uZWN0KCkpLFcodGhpcyl9KSkpfWNyZWF0ZU1lZGlhRWxlbWVudFNvdXJjZSh0KXtyZXR1cm4gbmV3IGkodGhpcyx7bWVkaWFFbGVtZW50OnR9KX1jcmVhdGVNZWRpYVN0cmVhbURlc3RpbmF0aW9uKCl7cmV0dXJuIG5ldyBvKHRoaXMpfWNyZWF0ZU1lZGlhU3RyZWFtU291cmNlKHQpe3JldHVybiBuZXcgcih0aGlzLHttZWRpYVN0cmVhbTp0fSl9Y3JlYXRlTWVkaWFTdHJlYW1UcmFja1NvdXJjZSh0KXtyZXR1cm4gbmV3IGEodGhpcyx7bWVkaWFTdHJlYW1UcmFjazp0fSl9cmVzdW1lKCl7cmV0dXJuXCJzdXNwZW5kZWRcIj09PXRoaXMuX3N0YXRlP25ldyBQcm9taXNlKCgodCxlKT0+e2NvbnN0IHM9KCk9Pnt0aGlzLl9uYXRpdmVBdWRpb0NvbnRleHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN0YXRlY2hhbmdlXCIscyksXCJydW5uaW5nXCI9PT10aGlzLl9uYXRpdmVBdWRpb0NvbnRleHQuc3RhdGU/dCgpOnRoaXMucmVzdW1lKCkudGhlbih0LGUpfTt0aGlzLl9uYXRpdmVBdWRpb0NvbnRleHQuYWRkRXZlbnRMaXN0ZW5lcihcInN0YXRlY2hhbmdlXCIscyl9KSk6dGhpcy5fbmF0aXZlQXVkaW9Db250ZXh0LnJlc3VtZSgpLmNhdGNoKCh0PT57aWYodm9pZCAwPT09dHx8MTU9PT10LmNvZGUpdGhyb3cgZSgpO3Rocm93IHR9KSl9c3VzcGVuZCgpe3JldHVybiB0aGlzLl9uYXRpdmVBdWRpb0NvbnRleHQuc3VzcGVuZCgpLmNhdGNoKCh0PT57aWYodm9pZCAwPT09dCl0aHJvdyBlKCk7dGhyb3cgdH0pKX19KShybixBdCxadCxLdCxhbixjbixobix1bixFZSksZG49KHQ9PmU9Pntjb25zdCBzPXQuZ2V0KGUpO2lmKHZvaWQgMD09PXMpdGhyb3cgbmV3IEVycm9yKFwiVGhlIGNvbnRleHQgaGFzIG5vIHNldCBvZiBBdWRpb1dvcmtsZXROb2Rlcy5cIik7cmV0dXJuIHN9KShScyksZm49KHQ9PihlLHMpPT57dChlKS5hZGQocyl9KShkbiksX249KHQ9PihlLHMsbj0wLGk9MCk9Pntjb25zdCBvPWVbbl07aWYodm9pZCAwPT09byl0aHJvdyB0KCk7cmV0dXJuIHJ0KHMpP28uY29ubmVjdChzLDAsaSk6by5jb25uZWN0KHMsMCl9KShSKSxtbj0odD0+KGUscyk9Pnt0KGUpLmRlbGV0ZShzKX0pKGRuKSxnbj0odD0+KGUscyxuLGk9MCk9PnZvaWQgMD09PXM/ZS5mb3JFYWNoKCh0PT50LmRpc2Nvbm5lY3QoKSkpOlwibnVtYmVyXCI9PXR5cGVvZiBzP1R0KHQsZSxzKS5kaXNjb25uZWN0KCk6cnQocyk/dm9pZCAwPT09bj9lLmZvckVhY2goKHQ9PnQuZGlzY29ubmVjdChzKSkpOnZvaWQgMD09PWk/VHQodCxlLG4pLmRpc2Nvbm5lY3QocywwKTpUdCh0LGUsbikuZGlzY29ubmVjdChzLDAsaSk6dm9pZCAwPT09bj9lLmZvckVhY2goKHQ9PnQuZGlzY29ubmVjdChzKSkpOlR0KHQsZSxuKS5kaXNjb25uZWN0KHMsMCkpKFIpLHZuPW5ldyBXZWFrTWFwLHluPSgodCxlKT0+cz0+ZSh0LHMpKSh2bix3KSx4bj0oKHQsZSxzLG4saSxvLHIsYSxjLGgsbCx1LHApPT4oZCxmLG0sZyk9PntpZigwPT09Zy5udW1iZXJPZklucHV0cyYmMD09PWcubnVtYmVyT2ZPdXRwdXRzKXRocm93IGMoKTtjb25zdCB2PUFycmF5LmlzQXJyYXkoZy5vdXRwdXRDaGFubmVsQ291bnQpP2cub3V0cHV0Q2hhbm5lbENvdW50OkFycmF5LmZyb20oZy5vdXRwdXRDaGFubmVsQ291bnQpO2lmKHYuc29tZSgodD0+dDwxKSkpdGhyb3cgYygpO2lmKHYubGVuZ3RoIT09Zy5udW1iZXJPZk91dHB1dHMpdGhyb3cgZSgpO2lmKFwiZXhwbGljaXRcIiE9PWcuY2hhbm5lbENvdW50TW9kZSl0aHJvdyBjKCk7Y29uc3QgeT1nLmNoYW5uZWxDb3VudCpnLm51bWJlck9mSW5wdXRzLHg9di5yZWR1Y2UoKCh0LGUpPT50K2UpLDApLHc9dm9pZCAwPT09bS5wYXJhbWV0ZXJEZXNjcmlwdG9ycz8wOm0ucGFyYW1ldGVyRGVzY3JpcHRvcnMubGVuZ3RoO2lmKHkrdz42fHx4PjYpdGhyb3cgYygpO2NvbnN0IGI9bmV3IE1lc3NhZ2VDaGFubmVsLFQ9W10sUz1bXTtmb3IobGV0IHQ9MDt0PGcubnVtYmVyT2ZJbnB1dHM7dCs9MSlULnB1c2gocihkLHtjaGFubmVsQ291bnQ6Zy5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpnLmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOmcuY2hhbm5lbEludGVycHJldGF0aW9uLGdhaW46MX0pKSxTLnB1c2goaShkLHtjaGFubmVsQ291bnQ6Zy5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixudW1iZXJPZk91dHB1dHM6Zy5jaGFubmVsQ291bnR9KSk7Y29uc3Qgaz1bXTtpZih2b2lkIDAhPT1tLnBhcmFtZXRlckRlc2NyaXB0b3JzKWZvcihjb25zdHtkZWZhdWx0VmFsdWU6dCxtYXhWYWx1ZTplLG1pblZhbHVlOnMsbmFtZTpufW9mIG0ucGFyYW1ldGVyRGVzY3JpcHRvcnMpe2NvbnN0IGk9byhkLHtjaGFubmVsQ291bnQ6MSxjaGFubmVsQ291bnRNb2RlOlwiZXhwbGljaXRcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJkaXNjcmV0ZVwiLG9mZnNldDp2b2lkIDAhPT1nLnBhcmFtZXRlckRhdGFbbl0/Zy5wYXJhbWV0ZXJEYXRhW25dOnZvaWQgMD09PXQ/MDp0fSk7T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoaS5vZmZzZXQse2RlZmF1bHRWYWx1ZTp7Z2V0OigpPT52b2lkIDA9PT10PzA6dH0sbWF4VmFsdWU6e2dldDooKT0+dm9pZCAwPT09ZT9WOmV9LG1pblZhbHVlOntnZXQ6KCk9PnZvaWQgMD09PXM/STpzfX0pLGsucHVzaChpKX1jb25zdCBBPW4oZCx7Y2hhbm5lbENvdW50OjEsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwic3BlYWtlcnNcIixudW1iZXJPZklucHV0czpNYXRoLm1heCgxLHkrdyl9KSxDPVB0KGYsZC5zYW1wbGVSYXRlKSxEPWEoZCxDLHkrdyxNYXRoLm1heCgxLHgpKSxPPWkoZCx7Y2hhbm5lbENvdW50Ok1hdGgubWF4KDEseCksY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixudW1iZXJPZk91dHB1dHM6TWF0aC5tYXgoMSx4KX0pLE09W107Zm9yKGxldCB0PTA7dDxnLm51bWJlck9mT3V0cHV0czt0Kz0xKU0ucHVzaChuKGQse2NoYW5uZWxDb3VudDoxLGNoYW5uZWxDb3VudE1vZGU6XCJleHBsaWNpdFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCIsbnVtYmVyT2ZJbnB1dHM6dlt0XX0pKTtmb3IobGV0IHQ9MDt0PGcubnVtYmVyT2ZJbnB1dHM7dCs9MSl7VFt0XS5jb25uZWN0KFNbdF0pO2ZvcihsZXQgZT0wO2U8Zy5jaGFubmVsQ291bnQ7ZSs9MSlTW3RdLmNvbm5lY3QoQSxlLHQqZy5jaGFubmVsQ291bnQrZSl9Y29uc3QgRT1uZXcgbHQodm9pZCAwPT09bS5wYXJhbWV0ZXJEZXNjcmlwdG9ycz9bXTptLnBhcmFtZXRlckRlc2NyaXB0b3JzLm1hcCgoKHtuYW1lOnR9LGUpPT57Y29uc3Qgcz1rW2VdO3JldHVybiBzLmNvbm5lY3QoQSwwLHkrZSkscy5zdGFydCgwKSxbdCxzLm9mZnNldF19KSkpO0EuY29ubmVjdChEKTtsZXQgUj1nLmNoYW5uZWxJbnRlcnByZXRhdGlvbixxPW51bGw7Y29uc3QgRj0wPT09Zy5udW1iZXJPZk91dHB1dHM/W0RdOk0sTj17Z2V0IGJ1ZmZlclNpemUoKXtyZXR1cm4gQ30sZ2V0IGNoYW5uZWxDb3VudCgpe3JldHVybiBnLmNoYW5uZWxDb3VudH0sc2V0IGNoYW5uZWxDb3VudCh0KXt0aHJvdyBzKCl9LGdldCBjaGFubmVsQ291bnRNb2RlKCl7cmV0dXJuIGcuY2hhbm5lbENvdW50TW9kZX0sc2V0IGNoYW5uZWxDb3VudE1vZGUodCl7dGhyb3cgcygpfSxnZXQgY2hhbm5lbEludGVycHJldGF0aW9uKCl7cmV0dXJuIFJ9LHNldCBjaGFubmVsSW50ZXJwcmV0YXRpb24odCl7Zm9yKGNvbnN0IGUgb2YgVCllLmNoYW5uZWxJbnRlcnByZXRhdGlvbj10O1I9dH0sZ2V0IGNvbnRleHQoKXtyZXR1cm4gRC5jb250ZXh0fSxnZXQgaW5wdXRzKCl7cmV0dXJuIFR9LGdldCBudW1iZXJPZklucHV0cygpe3JldHVybiBnLm51bWJlck9mSW5wdXRzfSxnZXQgbnVtYmVyT2ZPdXRwdXRzKCl7cmV0dXJuIGcubnVtYmVyT2ZPdXRwdXRzfSxnZXQgb25wcm9jZXNzb3JlcnJvcigpe3JldHVybiBxfSxzZXQgb25wcm9jZXNzb3JlcnJvcih0KXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBxJiZOLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwcm9jZXNzb3JlcnJvclwiLHEpLHE9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om51bGwsXCJmdW5jdGlvblwiPT10eXBlb2YgcSYmTi5hZGRFdmVudExpc3RlbmVyKFwicHJvY2Vzc29yZXJyb3JcIixxKX0sZ2V0IHBhcmFtZXRlcnMoKXtyZXR1cm4gRX0sZ2V0IHBvcnQoKXtyZXR1cm4gYi5wb3J0Mn0sYWRkRXZlbnRMaXN0ZW5lcjooLi4udCk9PkQuYWRkRXZlbnRMaXN0ZW5lcih0WzBdLHRbMV0sdFsyXSksY29ubmVjdDp0LmJpbmQobnVsbCxGKSxkaXNjb25uZWN0OmguYmluZChudWxsLEYpLGRpc3BhdGNoRXZlbnQ6KC4uLnQpPT5ELmRpc3BhdGNoRXZlbnQodFswXSkscmVtb3ZlRXZlbnRMaXN0ZW5lcjooLi4udCk9PkQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0WzBdLHRbMV0sdFsyXSl9LFA9bmV3IE1hcDt2YXIgaixMO2IucG9ydDEuYWRkRXZlbnRMaXN0ZW5lcj0oaj1iLnBvcnQxLmFkZEV2ZW50TGlzdGVuZXIsKC4uLnQpPT57aWYoXCJtZXNzYWdlXCI9PT10WzBdKXtjb25zdCBlPVwiZnVuY3Rpb25cIj09dHlwZW9mIHRbMV0/dFsxXTpcIm9iamVjdFwiPT10eXBlb2YgdFsxXSYmbnVsbCE9PXRbMV0mJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRbMV0uaGFuZGxlRXZlbnQ/dFsxXS5oYW5kbGVFdmVudDpudWxsO2lmKG51bGwhPT1lKXtjb25zdCBzPVAuZ2V0KHRbMV0pO3ZvaWQgMCE9PXM/dFsxXT1zOih0WzFdPXQ9PntsKGQuY3VycmVudFRpbWUsZC5zYW1wbGVSYXRlLCgoKT0+ZSh0KSkpfSxQLnNldChlLHRbMV0pKX19cmV0dXJuIGouY2FsbChiLnBvcnQxLHRbMF0sdFsxXSx0WzJdKX0pLGIucG9ydDEucmVtb3ZlRXZlbnRMaXN0ZW5lcj0oTD1iLnBvcnQxLnJlbW92ZUV2ZW50TGlzdGVuZXIsKC4uLnQpPT57aWYoXCJtZXNzYWdlXCI9PT10WzBdKXtjb25zdCBlPVAuZ2V0KHRbMV0pO3ZvaWQgMCE9PWUmJihQLmRlbGV0ZSh0WzFdKSx0WzFdPWUpfXJldHVybiBMLmNhbGwoYi5wb3J0MSx0WzBdLHRbMV0sdFsyXSl9KTtsZXQgej1udWxsO09iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnBvcnQxLFwib25tZXNzYWdlXCIse2dldDooKT0+eixzZXQ6dD0+e1wiZnVuY3Rpb25cIj09dHlwZW9mIHomJmIucG9ydDEucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIix6KSx6PVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpudWxsLFwiZnVuY3Rpb25cIj09dHlwZW9mIHomJihiLnBvcnQxLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIseiksYi5wb3J0MS5zdGFydCgpKX19KSxtLnByb3RvdHlwZS5wb3J0PWIucG9ydDE7bGV0IFc9bnVsbDtjb25zdCBCPSgodCxlLHMsbik9PntsZXQgaT1fLmdldCh0KTt2b2lkIDA9PT1pJiYoaT1uZXcgV2Vha01hcCxfLnNldCh0LGkpKTtjb25zdCBvPShhc3luYyh0LGUpPT57Y29uc3Qgcz1hd2FpdCh0PT5uZXcgUHJvbWlzZSgoKGUscyk9Pntjb25zdHtwb3J0MTpuLHBvcnQyOml9PW5ldyBNZXNzYWdlQ2hhbm5lbDtuLm9ubWVzc2FnZT0oe2RhdGE6dH0pPT57bi5jbG9zZSgpLGkuY2xvc2UoKSxlKHQpfSxuLm9ubWVzc2FnZWVycm9yPSh7ZGF0YTp0fSk9PntuLmNsb3NlKCksaS5jbG9zZSgpLHModCl9LGkucG9zdE1lc3NhZ2UodCl9KSkpKGUpO3JldHVybiBuZXcgdChzKX0pKHMsbik7cmV0dXJuIGkuc2V0KGUsbyksb30pKGQsTixtLGcpO0IudGhlbigodD0+Vz10KSk7Y29uc3QgVT1mdChnLm51bWJlck9mSW5wdXRzLGcuY2hhbm5lbENvdW50KSxHPWZ0KGcubnVtYmVyT2ZPdXRwdXRzLHYpLFE9dm9pZCAwPT09bS5wYXJhbWV0ZXJEZXNjcmlwdG9ycz9bXTptLnBhcmFtZXRlckRlc2NyaXB0b3JzLnJlZHVjZSgoKHQse25hbWU6ZX0pPT4oey4uLnQsW2VdOm5ldyBGbG9hdDMyQXJyYXkoMTI4KX0pKSx7fSk7bGV0IFo9ITA7Y29uc3QgWD0oKT0+e2cubnVtYmVyT2ZPdXRwdXRzPjAmJkQuZGlzY29ubmVjdChPKTtmb3IobGV0IHQ9MCxlPTA7dDxnLm51bWJlck9mT3V0cHV0czt0Kz0xKXtjb25zdCBzPU1bdF07Zm9yKGxldCBuPTA7bjx2W3RdO24rPTEpTy5kaXNjb25uZWN0KHMsZStuLG4pO2UrPXZbdF19fSxZPW5ldyBNYXA7RC5vbmF1ZGlvcHJvY2Vzcz0oe2lucHV0QnVmZmVyOnQsb3V0cHV0QnVmZmVyOmV9KT0+e2lmKG51bGwhPT1XKXtjb25zdCBzPXUoTik7Zm9yKGxldCBuPTA7bjxDO24rPTEyOCl7Zm9yKGxldCBlPTA7ZTxnLm51bWJlck9mSW5wdXRzO2UrPTEpZm9yKGxldCBzPTA7czxnLmNoYW5uZWxDb3VudDtzKz0xKXB0KHQsVVtlXSxzLHMsbik7dm9pZCAwIT09bS5wYXJhbWV0ZXJEZXNjcmlwdG9ycyYmbS5wYXJhbWV0ZXJEZXNjcmlwdG9ycy5mb3JFYWNoKCgoe25hbWU6ZX0scyk9PntwdCh0LFEsZSx5K3Msbil9KSk7Zm9yKGxldCB0PTA7dDxnLm51bWJlck9mSW5wdXRzO3QrPTEpZm9yKGxldCBlPTA7ZTx2W3RdO2UrPTEpMD09PUdbdF1bZV0uYnl0ZUxlbmd0aCYmKEdbdF1bZV09bmV3IEZsb2F0MzJBcnJheSgxMjgpKTt0cnl7Y29uc3QgdD1VLm1hcCgoKHQsZSk9PntpZihzW2VdLnNpemU+MClyZXR1cm4gWS5zZXQoZSxDLzEyOCksdDtjb25zdCBuPVkuZ2V0KGUpO3JldHVybiB2b2lkIDA9PT1uP1tdOih0LmV2ZXJ5KCh0PT50LmV2ZXJ5KCh0PT4wPT09dCkpKSkmJigxPT09bj9ZLmRlbGV0ZShlKTpZLnNldChlLG4tMSkpLHQpfSkpLGk9bChkLmN1cnJlbnRUaW1lK24vZC5zYW1wbGVSYXRlLGQuc2FtcGxlUmF0ZSwoKCk9PlcucHJvY2Vzcyh0LEcsUSkpKTtaPWk7Zm9yKGxldCB0PTAscz0wO3Q8Zy5udW1iZXJPZk91dHB1dHM7dCs9MSl7Zm9yKGxldCBpPTA7aTx2W3RdO2krPTEpZHQoZSxHW3RdLGkscytpLG4pO3MrPXZbdF19fWNhdGNoKHQpe1o9ITEsTi5kaXNwYXRjaEV2ZW50KG5ldyBFcnJvckV2ZW50KFwicHJvY2Vzc29yZXJyb3JcIix7Y29sbm86dC5jb2xubyxmaWxlbmFtZTp0LmZpbGVuYW1lLGxpbmVubzp0LmxpbmVubyxtZXNzYWdlOnQubWVzc2FnZX0pKX1pZighWil7Zm9yKGxldCB0PTA7dDxnLm51bWJlck9mSW5wdXRzO3QrPTEpe1RbdF0uZGlzY29ubmVjdChTW3RdKTtmb3IobGV0IGU9MDtlPGcuY2hhbm5lbENvdW50O2UrPTEpU1tuXS5kaXNjb25uZWN0KEEsZSx0KmcuY2hhbm5lbENvdW50K2UpfWlmKHZvaWQgMCE9PW0ucGFyYW1ldGVyRGVzY3JpcHRvcnMpe2NvbnN0IHQ9bS5wYXJhbWV0ZXJEZXNjcmlwdG9ycy5sZW5ndGg7Zm9yKGxldCBlPTA7ZTx0O2UrPTEpe2NvbnN0IHQ9a1tlXTt0LmRpc2Nvbm5lY3QoQSwwLHkrZSksdC5zdG9wKCl9fUEuZGlzY29ubmVjdChEKSxELm9uYXVkaW9wcm9jZXNzPW51bGwsJD9YKCk6SygpO2JyZWFrfX19fTtsZXQgJD0hMTtjb25zdCBIPXIoZCx7Y2hhbm5lbENvdW50OjEsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixnYWluOjB9KSxKPSgpPT5ELmNvbm5lY3QoSCkuY29ubmVjdChkLmRlc3RpbmF0aW9uKSxLPSgpPT57RC5kaXNjb25uZWN0KEgpLEguZGlzY29ubmVjdCgpfTtyZXR1cm4gSigpLHAoTiwoKCk9PntpZihaKXtLKCksZy5udW1iZXJPZk91dHB1dHM+MCYmRC5jb25uZWN0KE8pO2ZvcihsZXQgdD0wLGU9MDt0PGcubnVtYmVyT2ZPdXRwdXRzO3QrPTEpe2NvbnN0IHM9TVt0XTtmb3IobGV0IG49MDtuPHZbdF07bis9MSlPLmNvbm5lY3QocyxlK24sbik7ZSs9dlt0XX19JD0hMH0pLCgoKT0+e1omJihKKCksWCgpKSwkPSExfSkpfSkoX24sUixBdCxhcyxMdCxkcyxCdCxRdCxadCxnbixLcyx5bixvcyksd249KCh0LGUscyxuLGkpPT4obyxyLGEsYyxoLGwpPT57aWYobnVsbCE9PWEpdHJ5e2NvbnN0IGU9bmV3IGEobyxjLGwpLG49bmV3IE1hcDtsZXQgcj1udWxsO2lmKE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUse2NoYW5uZWxDb3VudDp7Z2V0OigpPT5sLmNoYW5uZWxDb3VudCxzZXQ6KCk9Pnt0aHJvdyB0KCl9fSxjaGFubmVsQ291bnRNb2RlOntnZXQ6KCk9PlwiZXhwbGljaXRcIixzZXQ6KCk9Pnt0aHJvdyB0KCl9fSxvbnByb2Nlc3NvcmVycm9yOntnZXQ6KCk9PnIsc2V0OnQ9PntcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiZlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwcm9jZXNzb3JlcnJvclwiLHIpLHI9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om51bGwsXCJmdW5jdGlvblwiPT10eXBlb2YgciYmZS5hZGRFdmVudExpc3RlbmVyKFwicHJvY2Vzc29yZXJyb3JcIixyKX19fSksZS5hZGRFdmVudExpc3RlbmVyPShwPWUuYWRkRXZlbnRMaXN0ZW5lciwoLi4udCk9PntpZihcInByb2Nlc3NvcmVycm9yXCI9PT10WzBdKXtjb25zdCBlPVwiZnVuY3Rpb25cIj09dHlwZW9mIHRbMV0/dFsxXTpcIm9iamVjdFwiPT10eXBlb2YgdFsxXSYmbnVsbCE9PXRbMV0mJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRbMV0uaGFuZGxlRXZlbnQ/dFsxXS5oYW5kbGVFdmVudDpudWxsO2lmKG51bGwhPT1lKXtjb25zdCBzPW4uZ2V0KHRbMV0pO3ZvaWQgMCE9PXM/dFsxXT1zOih0WzFdPXM9PntcImVycm9yXCI9PT1zLnR5cGU/KE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHMse3R5cGU6e3ZhbHVlOlwicHJvY2Vzc29yZXJyb3JcIn19KSxlKHMpKTplKG5ldyBFcnJvckV2ZW50KHRbMF0sey4uLnN9KSl9LG4uc2V0KGUsdFsxXSkpfX1yZXR1cm4gcC5jYWxsKGUsXCJlcnJvclwiLHRbMV0sdFsyXSkscC5jYWxsKGUsLi4udCl9KSxlLnJlbW92ZUV2ZW50TGlzdGVuZXI9KHU9ZS5yZW1vdmVFdmVudExpc3RlbmVyLCguLi50KT0+e2lmKFwicHJvY2Vzc29yZXJyb3JcIj09PXRbMF0pe2NvbnN0IGU9bi5nZXQodFsxXSk7dm9pZCAwIT09ZSYmKG4uZGVsZXRlKHRbMV0pLHRbMV09ZSl9cmV0dXJuIHUuY2FsbChlLFwiZXJyb3JcIix0WzFdLHRbMl0pLHUuY2FsbChlLHRbMF0sdFsxXSx0WzJdKX0pLDAhPT1sLm51bWJlck9mT3V0cHV0cyl7Y29uc3QgdD1zKG8se2NoYW5uZWxDb3VudDoxLGNoYW5uZWxDb3VudE1vZGU6XCJleHBsaWNpdFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcImRpc2NyZXRlXCIsZ2FpbjowfSk7cmV0dXJuIGUuY29ubmVjdCh0KS5jb25uZWN0KG8uZGVzdGluYXRpb24pLGkoZSwoKCk9PnQuZGlzY29ubmVjdCgpKSwoKCk9PnQuY29ubmVjdChvLmRlc3RpbmF0aW9uKSkpfXJldHVybiBlfWNhdGNoKHQpe2lmKDExPT09dC5jb2RlKXRocm93IG4oKTt0aHJvdyB0fXZhciB1LHA7aWYodm9pZCAwPT09aCl0aHJvdyBuKCk7cmV0dXJuKHQ9Pntjb25zdHtwb3J0MTplfT1uZXcgTWVzc2FnZUNoYW5uZWw7dHJ5e2UucG9zdE1lc3NhZ2UodCl9ZmluYWxseXtlLmNsb3NlKCl9fSkobCksZShvLHIsaCxsKX0pKEF0LHhuLEJ0LFp0LG9zKSxibj0oKHQsZSxzLG4saSxvLHIsYSxjLGgsbCx1LHAsZCxmLF8pPT4obSxnLHYpPT57Y29uc3QgeT1uZXcgV2Vha01hcDtsZXQgeD1udWxsO3JldHVybntyZW5kZXIodyxiKXthKGIsdyk7Y29uc3QgVD15LmdldChiKTtyZXR1cm4gdm9pZCAwIT09VD9Qcm9taXNlLnJlc29sdmUoVCk6KGFzeW5jKGEsdyk9PntsZXQgYj1sKGEpLFQ9bnVsbDtjb25zdCBTPU0oYix3KSxrPUFycmF5LmlzQXJyYXkoZy5vdXRwdXRDaGFubmVsQ291bnQpP2cub3V0cHV0Q2hhbm5lbENvdW50OkFycmF5LmZyb20oZy5vdXRwdXRDaGFubmVsQ291bnQpO2lmKG51bGw9PT11KXtjb25zdCB0PWsucmVkdWNlKCgodCxlKT0+dCtlKSwwKSxzPWkodyx7Y2hhbm5lbENvdW50Ok1hdGgubWF4KDEsdCksY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixudW1iZXJPZk91dHB1dHM6TWF0aC5tYXgoMSx0KX0pLG89W107Zm9yKGxldCB0PTA7dDxhLm51bWJlck9mT3V0cHV0czt0Kz0xKW8ucHVzaChuKHcse2NoYW5uZWxDb3VudDoxLGNoYW5uZWxDb3VudE1vZGU6XCJleHBsaWNpdFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCIsbnVtYmVyT2ZJbnB1dHM6a1t0XX0pKTtjb25zdCBoPXIodyx7Y2hhbm5lbENvdW50OmcuY2hhbm5lbENvdW50LGNoYW5uZWxDb3VudE1vZGU6Zy5jaGFubmVsQ291bnRNb2RlLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpnLmNoYW5uZWxJbnRlcnByZXRhdGlvbixnYWluOjF9KTtoLmNvbm5lY3Q9ZS5iaW5kKG51bGwsbyksaC5kaXNjb25uZWN0PWMuYmluZChudWxsLG8pLFQ9W3MsbyxoXX1lbHNlIFN8fChiPW5ldyB1KHcsbSkpO2lmKHkuc2V0KHcsbnVsbD09PVQ/YjpUWzJdKSxudWxsIT09VCl7aWYobnVsbD09PXgpe2lmKHZvaWQgMD09PXYpdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyB0aGUgcHJvY2Vzc29yIGNvbnN0cnVjdG9yLlwiKTtpZihudWxsPT09cCl0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHRoZSBuYXRpdmUgT2ZmbGluZUF1ZGlvQ29udGV4dCBjb25zdHJ1Y3Rvci5cIik7Y29uc3QgdD1hLmNoYW5uZWxDb3VudCphLm51bWJlck9mSW5wdXRzLGU9dm9pZCAwPT09di5wYXJhbWV0ZXJEZXNjcmlwdG9ycz8wOnYucGFyYW1ldGVyRGVzY3JpcHRvcnMubGVuZ3RoLHM9dCtlLGM9YXN5bmMoKT0+e2NvbnN0IGM9bmV3IHAocywxMjgqTWF0aC5jZWlsKGEuY29udGV4dC5sZW5ndGgvMTI4KSx3LnNhbXBsZVJhdGUpLGg9W10sbD1bXTtmb3IobGV0IHQ9MDt0PGcubnVtYmVyT2ZJbnB1dHM7dCs9MSloLnB1c2gocihjLHtjaGFubmVsQ291bnQ6Zy5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpnLmNoYW5uZWxDb3VudE1vZGUsY2hhbm5lbEludGVycHJldGF0aW9uOmcuY2hhbm5lbEludGVycHJldGF0aW9uLGdhaW46MX0pKSxsLnB1c2goaShjLHtjaGFubmVsQ291bnQ6Zy5jaGFubmVsQ291bnQsY2hhbm5lbENvdW50TW9kZTpcImV4cGxpY2l0XCIsY2hhbm5lbEludGVycHJldGF0aW9uOlwiZGlzY3JldGVcIixudW1iZXJPZk91dHB1dHM6Zy5jaGFubmVsQ291bnR9KSk7Y29uc3QgdT1hd2FpdCBQcm9taXNlLmFsbChBcnJheS5mcm9tKGEucGFyYW1ldGVycy52YWx1ZXMoKSkubWFwKChhc3luYyB0PT57Y29uc3QgZT1vKGMse2NoYW5uZWxDb3VudDoxLGNoYW5uZWxDb3VudE1vZGU6XCJleHBsaWNpdFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcImRpc2NyZXRlXCIsb2Zmc2V0OnQudmFsdWV9KTtyZXR1cm4gYXdhaXQgZChjLHQsZS5vZmZzZXQpLGV9KSkpLG09bihjLHtjaGFubmVsQ291bnQ6MSxjaGFubmVsQ291bnRNb2RlOlwiZXhwbGljaXRcIixjaGFubmVsSW50ZXJwcmV0YXRpb246XCJzcGVha2Vyc1wiLG51bWJlck9mSW5wdXRzOk1hdGgubWF4KDEsdCtlKX0pO2ZvcihsZXQgdD0wO3Q8Zy5udW1iZXJPZklucHV0czt0Kz0xKXtoW3RdLmNvbm5lY3QobFt0XSk7Zm9yKGxldCBlPTA7ZTxnLmNoYW5uZWxDb3VudDtlKz0xKWxbdF0uY29ubmVjdChtLGUsdCpnLmNoYW5uZWxDb3VudCtlKX1mb3IoY29uc3RbZSxzXW9mIHUuZW50cmllcygpKXMuY29ubmVjdChtLDAsdCtlKSxzLnN0YXJ0KDApO3JldHVybiBtLmNvbm5lY3QoYy5kZXN0aW5hdGlvbiksYXdhaXQgUHJvbWlzZS5hbGwoaC5tYXAoKHQ9PmYoYSxjLHQpKSkpLF8oYyl9O3g9X3QoYSwwPT09cz9udWxsOmF3YWl0IGMoKSx3LGcsayx2LGgpfWNvbnN0IHQ9YXdhaXQgeCxlPXModyx7YnVmZmVyOm51bGwsY2hhbm5lbENvdW50OjIsY2hhbm5lbENvdW50TW9kZTpcIm1heFwiLGNoYW5uZWxJbnRlcnByZXRhdGlvbjpcInNwZWFrZXJzXCIsbG9vcDohMSxsb29wRW5kOjAsbG9vcFN0YXJ0OjAscGxheWJhY2tSYXRlOjF9KSxbYyxsLHVdPVQ7bnVsbCE9PXQmJihlLmJ1ZmZlcj10LGUuc3RhcnQoMCkpLGUuY29ubmVjdChjKTtmb3IobGV0IHQ9MCxlPTA7dDxhLm51bWJlck9mT3V0cHV0czt0Kz0xKXtjb25zdCBzPWxbdF07Zm9yKGxldCBuPTA7bjxrW3RdO24rPTEpYy5jb25uZWN0KHMsZStuLG4pO2UrPWtbdF19cmV0dXJuIHV9aWYoUylmb3IoY29uc3RbZSxzXW9mIGEucGFyYW1ldGVycy5lbnRyaWVzKCkpYXdhaXQgdCh3LHMsYi5wYXJhbWV0ZXJzLmdldChlKSk7ZWxzZSBmb3IoY29uc3RbdCxlXW9mIGEucGFyYW1ldGVycy5lbnRyaWVzKCkpYXdhaXQgZCh3LGUsYi5wYXJhbWV0ZXJzLmdldCh0KSk7cmV0dXJuIGF3YWl0IGYoYSx3LGIpLGJ9KSh3LGIpfX19KShYZSxfbixZZSxhcyxMdCxkcyxCdCxtbixnbixLcyx0dCxJZSxDZSwkZSxUZSxDcyksVG49KHQ9PmU9PnQuZ2V0KGUpKSh0biksU249KHQ9PihlLHMpPT57dC5zZXQoZSxzKX0pKHZuKSxrbj1Kcz8oKHQsZSxzLG4saSxvLHIsYSxjLGgsbCx1LHAsZCk9PmNsYXNzIGV4dGVuZHMgZXtjb25zdHJ1Y3RvcihlLGwscCl7dmFyIGQ7Y29uc3QgXz1hKGUpLG09YyhfKSxnPSh0PT4oey4uLnQsb3V0cHV0Q2hhbm5lbENvdW50OnZvaWQgMCE9PXQub3V0cHV0Q2hhbm5lbENvdW50P3Qub3V0cHV0Q2hhbm5lbENvdW50OjE9PT10Lm51bWJlck9mSW5wdXRzJiYxPT09dC5udW1iZXJPZk91dHB1dHM/W3QuY2hhbm5lbENvdW50XTpBcnJheS5mcm9tKHtsZW5ndGg6dC5udW1iZXJPZk91dHB1dHN9LCgoKT0+MSkpfSkpKHsuLi51dCwuLi5wfSk7KHQ9Pntjb25zdHtwb3J0MTplLHBvcnQyOnN9PW5ldyBNZXNzYWdlQ2hhbm5lbDt0cnl7ZS5wb3N0TWVzc2FnZSh0KX1maW5hbGx5e2UuY2xvc2UoKSxzLmNsb3NlKCl9fSkoZyk7Y29uc3Qgdj1mLmdldChfKSx5PW51bGw9PXY/dm9pZCAwOnYuZ2V0KGwpLHg9bXx8XCJjbG9zZWRcIiE9PV8uc3RhdGU/XzpudWxsIT09KGQ9cihfKSkmJnZvaWQgMCE9PWQ/ZDpfLHc9aSh4LG0/bnVsbDplLmJhc2VMYXRlbmN5LGgsbCx5LGcpO3N1cGVyKGUsITAsdyxtP24obCxnLHkpOm51bGwpO2NvbnN0IGI9W107dy5wYXJhbWV0ZXJzLmZvckVhY2goKCh0LGUpPT57Y29uc3Qgbj1zKHRoaXMsbSx0KTtiLnB1c2goW2Usbl0pfSkpLHRoaXMuX25hdGl2ZUF1ZGlvV29ya2xldE5vZGU9dyx0aGlzLl9vbnByb2Nlc3NvcmVycm9yPW51bGwsdGhpcy5fcGFyYW1ldGVycz1uZXcgbHQoYiksbSYmdChfLHRoaXMpO2NvbnN0e2FjdGl2ZUlucHV0czpUfT1vKHRoaXMpO3UodyxUKX1nZXQgb25wcm9jZXNzb3JlcnJvcigpe3JldHVybiB0aGlzLl9vbnByb2Nlc3NvcmVycm9yfXNldCBvbnByb2Nlc3NvcmVycm9yKHQpe2NvbnN0IGU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD9kKHRoaXMsdCk6bnVsbDt0aGlzLl9uYXRpdmVBdWRpb1dvcmtsZXROb2RlLm9ucHJvY2Vzc29yZXJyb3I9ZTtjb25zdCBzPXRoaXMuX25hdGl2ZUF1ZGlvV29ya2xldE5vZGUub25wcm9jZXNzb3JlcnJvcjt0aGlzLl9vbnByb2Nlc3NvcmVycm9yPW51bGwhPT1zJiZzPT09ZT90OnN9Z2V0IHBhcmFtZXRlcnMoKXtyZXR1cm4gbnVsbD09PXRoaXMuX3BhcmFtZXRlcnM/dGhpcy5fbmF0aXZlQXVkaW9Xb3JrbGV0Tm9kZS5wYXJhbWV0ZXJzOnRoaXMuX3BhcmFtZXRlcnN9Z2V0IHBvcnQoKXtyZXR1cm4gdGhpcy5fbmF0aXZlQXVkaW9Xb3JrbGV0Tm9kZS5wb3J0fX0pKGZuLFZlLEplLGJuLHduLGosVG4sa2UsRGUsSWUsMCxTbiwwLHVlKTp2b2lkIDAsQW49KCh0LGUpPT4ocyxuLGkpPT57aWYobnVsbD09PWUpdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyB0aGUgbmF0aXZlIE9mZmxpbmVBdWRpb0NvbnRleHQgY29uc3RydWN0b3IuXCIpO3RyeXtyZXR1cm4gbmV3IGUocyxuLGkpfWNhdGNoKGUpe2lmKFwiU3ludGF4RXJyb3JcIj09PWUubmFtZSl0aHJvdyB0KCk7dGhyb3cgZX19KShadCxDZSksQ249KCh0LGUscyxuLGksbyxyLGEpPT4oYyxoKT0+cyhjKS5yZW5kZXIoYyxoKS50aGVuKCgoKT0+UHJvbWlzZS5hbGwoQXJyYXkuZnJvbShuKGgpKS5tYXAoKHQ9PnModCkucmVuZGVyKHQsaCkpKSkpKS50aGVuKCgoKT0+aShoKSkpLnRoZW4oKHM9PihcImZ1bmN0aW9uXCIhPXR5cGVvZiBzLmNvcHlGcm9tQ2hhbm5lbD8ocihzKSxxKHMpKTplKG8sKCgpPT5vKHMpKSl8fGEocyksdC5hZGQocykscykpKSkoamUsZ2UsYmUsZG4sQ3MsRSxCZSxVZSksRG49KCh0LGUscyxuLGkpPT5jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IodCxzLGkpe2xldCBvO2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0JiZ2b2lkIDAhPT1zJiZ2b2lkIDAhPT1pKW89e2xlbmd0aDpzLG51bWJlck9mQ2hhbm5lbHM6dCxzYW1wbGVSYXRlOml9O2Vsc2V7aWYoXCJvYmplY3RcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IEVycm9yKFwiVGhlIGdpdmVuIHBhcmFtZXRlcnMgYXJlIG5vdCB2YWxpZC5cIik7bz10fWNvbnN0e2xlbmd0aDpyLG51bWJlck9mQ2hhbm5lbHM6YSxzYW1wbGVSYXRlOmN9PXsuLi5YdCwuLi5vfSxoPW4oYSxyLGMpO2UoRXQsKCgpPT5FdChoKSkpfHxoLmFkZEV2ZW50TGlzdGVuZXIoXCJzdGF0ZWNoYW5nZVwiLCgoKT0+e2xldCB0PTA7Y29uc3QgZT1zPT57XCJydW5uaW5nXCI9PT10aGlzLl9zdGF0ZSYmKHQ+MD8oaC5yZW1vdmVFdmVudExpc3RlbmVyKFwic3RhdGVjaGFuZ2VcIixlKSxzLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLHRoaXMuX3dhaXRGb3JUaGVQcm9taXNlVG9TZXR0bGUocykpOnQrPTEpfTtyZXR1cm4gZX0pKCkpLHN1cGVyKGgsYSksdGhpcy5fbGVuZ3RoPXIsdGhpcy5fbmF0aXZlT2ZmbGluZUF1ZGlvQ29udGV4dD1oLHRoaXMuX3N0YXRlPW51bGx9Z2V0IGxlbmd0aCgpe3JldHVybiB2b2lkIDA9PT10aGlzLl9uYXRpdmVPZmZsaW5lQXVkaW9Db250ZXh0Lmxlbmd0aD90aGlzLl9sZW5ndGg6dGhpcy5fbmF0aXZlT2ZmbGluZUF1ZGlvQ29udGV4dC5sZW5ndGh9Z2V0IHN0YXRlKCl7cmV0dXJuIG51bGw9PT10aGlzLl9zdGF0ZT90aGlzLl9uYXRpdmVPZmZsaW5lQXVkaW9Db250ZXh0LnN0YXRlOnRoaXMuX3N0YXRlfXN0YXJ0UmVuZGVyaW5nKCl7cmV0dXJuXCJydW5uaW5nXCI9PT10aGlzLl9zdGF0ZT9Qcm9taXNlLnJlamVjdChzKCkpOih0aGlzLl9zdGF0ZT1cInJ1bm5pbmdcIixpKHRoaXMuZGVzdGluYXRpb24sdGhpcy5fbmF0aXZlT2ZmbGluZUF1ZGlvQ29udGV4dCkuZmluYWxseSgoKCk9Pnt0aGlzLl9zdGF0ZT1udWxsLFcodGhpcyl9KSkpfV93YWl0Rm9yVGhlUHJvbWlzZVRvU2V0dGxlKHQpe251bGw9PT10aGlzLl9zdGF0ZT90aGlzLl9uYXRpdmVPZmZsaW5lQXVkaW9Db250ZXh0LmRpc3BhdGNoRXZlbnQodCk6c2V0VGltZW91dCgoKCk9PnRoaXMuX3dhaXRGb3JUaGVQcm9taXNlVG9TZXR0bGUodCkpKX19KShybixnZSxBdCxBbixDbiksT249KCh0LGUpPT5zPT57Y29uc3Qgbj10LmdldChzKTtyZXR1cm4gZShuKXx8ZShzKX0pKHUsUmUpLE1uPSgodCxlKT0+cz0+dC5oYXMocyl8fGUocykpKGMscWUpLEVuPSgodCxlKT0+cz0+dC5oYXMocyl8fGUocykpKGwsRmUpLFJuPSgodCxlKT0+cz0+e2NvbnN0IG49dC5nZXQocyk7cmV0dXJuIGUobil8fGUocyl9KSh1LERlKSxxbj0oKT0+KGFzeW5jKHQsZSxzLG4saSxvLHIsYSxjLGgsbCx1LHAsZCxmLF8pPT4hISh0KGUsZSkmJnQocyxzKSYmdChpLGkpJiZ0KG8sbykmJnQoYSxhKSYmdChjLGMpJiZ0KGgsaCkmJnQobCxsKSYmdCh1LHUpJiZ0KHAscCkmJnQoZCxkKSkmJihhd2FpdCBQcm9taXNlLmFsbChbdChuLG4pLHQocixyKSx0KGYsZiksdChfLF8pXSkpLmV2ZXJ5KCh0PT50KSkpKGdlLCh0PT4oKT0+e2lmKG51bGw9PT10KXJldHVybiExO2NvbnN0IGU9bmV3IHQoMSwxLDQ0MTAwKS5jcmVhdGVCdWZmZXIoMSwxLDQ0MTAwKTtpZih2b2lkIDA9PT1lLmNvcHlUb0NoYW5uZWwpcmV0dXJuITA7Y29uc3Qgcz1uZXcgRmxvYXQzMkFycmF5KDIpO3RyeXtlLmNvcHlGcm9tQ2hhbm5lbChzLDAsMCl9Y2F0Y2h7cmV0dXJuITF9cmV0dXJuITB9KShDZSksKHQ9PigpPT57aWYobnVsbD09PXQpcmV0dXJuITE7aWYodm9pZCAwIT09dC5wcm90b3R5cGUmJnZvaWQgMCE9PXQucHJvdG90eXBlLmNsb3NlKXJldHVybiEwO2NvbnN0IGU9bmV3IHQscz12b2lkIDAhPT1lLmNsb3NlO3RyeXtlLmNsb3NlKCl9Y2F0Y2h7fXJldHVybiBzfSkoRWUpLCh0PT4oKT0+e2lmKG51bGw9PT10KXJldHVybiBQcm9taXNlLnJlc29sdmUoITEpO2NvbnN0IGU9bmV3IHQoMSwxLDQ0MTAwKTtyZXR1cm4gbmV3IFByb21pc2UoKHQ9PntsZXQgcz0hMDtjb25zdCBuPW49PntzJiYocz0hMSxlLnN0YXJ0UmVuZGVyaW5nKCksdChuIGluc3RhbmNlb2YgVHlwZUVycm9yKSl9O2xldCBpO3RyeXtpPWUuZGVjb2RlQXVkaW9EYXRhKG51bGwsKCgpPT57fSksbil9Y2F0Y2godCl7bih0KX12b2lkIDAhPT1pJiZpLmNhdGNoKG4pfSkpfSkoQ2UpLCh0PT4oKT0+e2lmKG51bGw9PT10KXJldHVybiExO2xldCBlO3RyeXtlPW5ldyB0KHtsYXRlbmN5SGludDpcImJhbGFuY2VkXCJ9KX1jYXRjaHtyZXR1cm4hMX1yZXR1cm4gZS5jbG9zZSgpLCEwfSkoRWUpLCh0PT4oKT0+e2lmKG51bGw9PT10KXJldHVybiExO2NvbnN0IGU9bmV3IHQoMSwxLDQ0MTAwKS5jcmVhdGVHYWluKCkscz1lLmNvbm5lY3QoZSk9PT1lO3JldHVybiBlLmRpc2Nvbm5lY3QoZSksc30pKENlKSwoKHQsZSk9PmFzeW5jKCk9PntpZihudWxsPT09dClyZXR1cm4hMDtpZihudWxsPT09ZSlyZXR1cm4hMTtjb25zdCBzPW5ldyBCbG9iKFsnbGV0IGMscDtjbGFzcyBBIGV4dGVuZHMgQXVkaW9Xb3JrbGV0UHJvY2Vzc29ye2NvbnN0cnVjdG9yKCl7c3VwZXIoKTt0aGlzLnBvcnQub25tZXNzYWdlPShlKT0+e3A9ZS5kYXRhO3Aub25tZXNzYWdlPSgpPT57cC5wb3N0TWVzc2FnZShjKTtwLmNsb3NlKCl9O3RoaXMucG9ydC5wb3N0TWVzc2FnZSgwKX19cHJvY2Vzcygpe2M9MX19cmVnaXN0ZXJQcm9jZXNzb3IoXCJhXCIsQSknXSx7dHlwZTpcImFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7IGNoYXJzZXQ9dXRmLThcIn0pLG49bmV3IE1lc3NhZ2VDaGFubmVsLGk9bmV3IGUoMSwxMjgsNDQxMDApLG89VVJMLmNyZWF0ZU9iamVjdFVSTChzKTtsZXQgcj0hMTt0cnl7YXdhaXQgaS5hdWRpb1dvcmtsZXQuYWRkTW9kdWxlKG8pO2NvbnN0IGU9bmV3IHQoaSxcImFcIix7bnVtYmVyT2ZPdXRwdXRzOjB9KSxzPWkuY3JlYXRlT3NjaWxsYXRvcigpO2F3YWl0IG5ldyBQcm9taXNlKCh0PT57ZS5wb3J0Lm9ubWVzc2FnZT0oKT0+dCgpLGUucG9ydC5wb3N0TWVzc2FnZShuLnBvcnQyLFtuLnBvcnQyXSl9KSksZS5wb3J0Lm9ubWVzc2FnZT0oKT0+cj0hMCxzLmNvbm5lY3QoZSkscy5zdGFydCgwKSxhd2FpdCBpLnN0YXJ0UmVuZGVyaW5nKCkscj1hd2FpdCBuZXcgUHJvbWlzZSgodD0+e24ucG9ydDEub25tZXNzYWdlPSh7ZGF0YTplfSk9PnQoMT09PWUpLG4ucG9ydDEucG9zdE1lc3NhZ2UoMCl9KSl9Y2F0Y2h7fWZpbmFsbHl7bi5wb3J0MS5jbG9zZSgpLFVSTC5yZXZva2VPYmplY3RVUkwobyl9cmV0dXJuIHJ9KShJZSxDZSksKHQ9PigpPT57aWYobnVsbD09PXQpcmV0dXJuITE7Y29uc3QgZT1uZXcgdCgxLDEsNDQxMDApLmNyZWF0ZUNoYW5uZWxNZXJnZXIoKTtpZihcIm1heFwiPT09ZS5jaGFubmVsQ291bnRNb2RlKXJldHVybiEwO3RyeXtlLmNoYW5uZWxDb3VudD0yfWNhdGNoe3JldHVybiEwfXJldHVybiExfSkoQ2UpLCh0PT4oKT0+e2lmKG51bGw9PT10KXJldHVybiExO2NvbnN0IGU9bmV3IHQoMSwxLDQ0MTAwKTtyZXR1cm4gdm9pZCAwPT09ZS5jcmVhdGVDb25zdGFudFNvdXJjZXx8ZS5jcmVhdGVDb25zdGFudFNvdXJjZSgpLm9mZnNldC5tYXhWYWx1ZSE9PU51bWJlci5QT1NJVElWRV9JTkZJTklUWX0pKENlKSwodD0+KCk9PntpZihudWxsPT09dClyZXR1cm4hMTtjb25zdCBlPW5ldyB0KDEsMSw0NDEwMCkscz1lLmNyZWF0ZUNvbnZvbHZlcigpO3MuYnVmZmVyPWUuY3JlYXRlQnVmZmVyKDEsMSxlLnNhbXBsZVJhdGUpO3RyeXtzLmJ1ZmZlcj1lLmNyZWF0ZUJ1ZmZlcigxLDEsZS5zYW1wbGVSYXRlKX1jYXRjaHtyZXR1cm4hMX1yZXR1cm4hMH0pKENlKSwodD0+KCk9PntpZihudWxsPT09dClyZXR1cm4hMTtjb25zdCBlPW5ldyB0KDEsMSw0NDEwMCkuY3JlYXRlQ29udm9sdmVyKCk7dHJ5e2UuY2hhbm5lbENvdW50PTF9Y2F0Y2h7cmV0dXJuITF9cmV0dXJuITB9KShDZSksY2UsKHQ9PigpPT5udWxsIT09dCYmdC5oYXNPd25Qcm9wZXJ0eShcImlzU2VjdXJlQ29udGV4dFwiKSkoeGUpLCh0PT4oKT0+e2lmKG51bGw9PT10KXJldHVybiExO2NvbnN0IGU9bmV3IHQ7dHJ5e3JldHVybiBlLmNyZWF0ZU1lZGlhU3RyZWFtU291cmNlKG5ldyBNZWRpYVN0cmVhbSksITF9Y2F0Y2godCl7cmV0dXJuITB9ZmluYWxseXtlLmNsb3NlKCl9fSkoRWUpLCh0PT4oKT0+e2lmKG51bGw9PT10KXJldHVybiBQcm9taXNlLnJlc29sdmUoITEpO2NvbnN0IGU9bmV3IHQoMSwxLDQ0MTAwKTtpZih2b2lkIDA9PT1lLmNyZWF0ZVN0ZXJlb1Bhbm5lcilyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCEwKTtpZih2b2lkIDA9PT1lLmNyZWF0ZUNvbnN0YW50U291cmNlKXJldHVybiBQcm9taXNlLnJlc29sdmUoITApO2NvbnN0IHM9ZS5jcmVhdGVDb25zdGFudFNvdXJjZSgpLG49ZS5jcmVhdGVTdGVyZW9QYW5uZXIoKTtyZXR1cm4gcy5jaGFubmVsQ291bnQ9MSxzLm9mZnNldC52YWx1ZT0xLG4uY2hhbm5lbENvdW50PTEscy5zdGFydCgpLHMuY29ubmVjdChuKS5jb25uZWN0KGUuZGVzdGluYXRpb24pLGUuc3RhcnRSZW5kZXJpbmcoKS50aGVuKCh0PT4xIT09dC5nZXRDaGFubmVsRGF0YSgwKVswXSkpfSkoQ2UpLGhlKTtmdW5jdGlvbiBGbih0KXtyZXR1cm4gdm9pZCAwPT09dH1mdW5jdGlvbiBJbih0KXtyZXR1cm4gdm9pZCAwIT09dH1mdW5jdGlvbiBWbih0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0fWZ1bmN0aW9uIE5uKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0fWZ1bmN0aW9uIFBuKHQpe3JldHVyblwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkmJnQuY29uc3RydWN0b3I9PT1PYmplY3R9ZnVuY3Rpb24gam4odCl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiB0fWZ1bmN0aW9uIExuKHQpe3JldHVybiBBcnJheS5pc0FycmF5KHQpfWZ1bmN0aW9uIHpuKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0fWZ1bmN0aW9uIFduKHQpe3JldHVybiB6bih0KSYmL14oW2EtZ117MX0oPzpifCN8eHxiYik/KSgtP1swLTldKykvaS50ZXN0KHQpfWZ1bmN0aW9uIEJuKHQsZSl7aWYoIXQpdGhyb3cgbmV3IEVycm9yKGUpfWZ1bmN0aW9uIFVuKHQsZSxzPTEvMCl7aWYoIShlPD10JiZ0PD1zKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihgVmFsdWUgbXVzdCBiZSB3aXRoaW4gWyR7ZX0sICR7c31dLCBnb3Q6ICR7dH1gKX1mdW5jdGlvbiBHbih0KXt0LmlzT2ZmbGluZXx8XCJydW5uaW5nXCI9PT10LnN0YXRlfHxLbignVGhlIEF1ZGlvQ29udGV4dCBpcyBcInN1c3BlbmRlZFwiLiBJbnZva2UgVG9uZS5zdGFydCgpIGZyb20gYSB1c2VyIGFjdGlvbiB0byBzdGFydCB0aGUgYXVkaW8uJyl9bGV0IFFuPSExLFpuPSExO2Z1bmN0aW9uIFhuKHQpe1FuPXR9ZnVuY3Rpb24gWW4odCl7Rm4odCkmJlFuJiYhWm4mJihabj0hMCxLbihcIkV2ZW50cyBzY2hlZHVsZWQgaW5zaWRlIG9mIHNjaGVkdWxlZCBjYWxsYmFja3Mgc2hvdWxkIHVzZSB0aGUgcGFzc2VkIGluIHNjaGVkdWxpbmcgdGltZS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Ub25lanMvVG9uZS5qcy93aWtpL0FjY3VyYXRlLVRpbWluZ1wiKSl9bGV0ICRuPWNvbnNvbGU7ZnVuY3Rpb24gSG4odCl7JG49dH1mdW5jdGlvbiBKbiguLi50KXskbi5sb2coLi4udCl9ZnVuY3Rpb24gS24oLi4udCl7JG4ud2FybiguLi50KX1jb25zdCB0aT1cIm9iamVjdFwiPT10eXBlb2Ygc2VsZj9zZWxmOm51bGwsZWk9dGkmJih0aS5oYXNPd25Qcm9wZXJ0eShcIkF1ZGlvQ29udGV4dFwiKXx8dGkuaGFzT3duUHJvcGVydHkoXCJ3ZWJraXRBdWRpb0NvbnRleHRcIikpO2Z1bmN0aW9uIHNpKHQsZSxzLG4pe3ZhciBpLG89YXJndW1lbnRzLmxlbmd0aCxyPW88Mz9lOm51bGw9PT1uP249T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHMpOm47aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpcj1SZWZsZWN0LmRlY29yYXRlKHQsZSxzLG4pO2Vsc2UgZm9yKHZhciBhPXQubGVuZ3RoLTE7YT49MDthLS0pKGk9dFthXSkmJihyPShvPDM/aShyKTpvPjM/aShlLHMscik6aShlLHMpKXx8cik7cmV0dXJuIG8+MyYmciYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUscyxyKSxyfWZ1bmN0aW9uIG5pKHQsZSxzLG4pe3JldHVybiBuZXcoc3x8KHM9UHJvbWlzZSkpKChmdW5jdGlvbihpLG8pe2Z1bmN0aW9uIHIodCl7dHJ5e2Mobi5uZXh0KHQpKX1jYXRjaCh0KXtvKHQpfX1mdW5jdGlvbiBhKHQpe3RyeXtjKG4udGhyb3codCkpfWNhdGNoKHQpe28odCl9fWZ1bmN0aW9uIGModCl7dmFyIGU7dC5kb25lP2kodC52YWx1ZSk6KGU9dC52YWx1ZSxlIGluc3RhbmNlb2Ygcz9lOm5ldyBzKChmdW5jdGlvbih0KXt0KGUpfSkpKS50aGVuKHIsYSl9Yygobj1uLmFwcGx5KHQsZXx8W10pKS5uZXh0KCkpfSkpfU9iamVjdC5jcmVhdGUsT2JqZWN0LmNyZWF0ZSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTdXBwcmVzc2VkRXJyb3ImJlN1cHByZXNzZWRFcnJvcjtjbGFzcyBpaXtjb25zdHJ1Y3Rvcih0LGUscyxuKXt0aGlzLl9jYWxsYmFjaz10LHRoaXMuX3R5cGU9ZSx0aGlzLl9taW5pbXVtVXBkYXRlSW50ZXJ2YWw9TWF0aC5tYXgoMTI4LyhufHw0NDEwMCksLjAwMSksdGhpcy51cGRhdGVJbnRlcnZhbD1zLHRoaXMuX2NyZWF0ZUNsb2NrKCl9X2NyZWF0ZVdvcmtlcigpe2NvbnN0IHQ9bmV3IEJsb2IoW2BcXG5cXHRcXHRcXHQvLyB0aGUgaW5pdGlhbCB0aW1lb3V0IHRpbWVcXG5cXHRcXHRcXHRsZXQgdGltZW91dFRpbWUgPSAgJHsoMWUzKnRoaXMuX3VwZGF0ZUludGVydmFsKS50b0ZpeGVkKDEpfTtcXG5cXHRcXHRcXHQvLyBvbm1lc3NhZ2UgY2FsbGJhY2tcXG5cXHRcXHRcXHRzZWxmLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKG1zZyl7XFxuXFx0XFx0XFx0XFx0dGltZW91dFRpbWUgPSBwYXJzZUludChtc2cuZGF0YSk7XFxuXFx0XFx0XFx0fTtcXG5cXHRcXHRcXHQvLyB0aGUgdGljayBmdW5jdGlvbiB3aGljaCBwb3N0cyBhIG1lc3NhZ2VcXG5cXHRcXHRcXHQvLyBhbmQgc2NoZWR1bGVzIGEgbmV3IHRpY2tcXG5cXHRcXHRcXHRmdW5jdGlvbiB0aWNrKCl7XFxuXFx0XFx0XFx0XFx0c2V0VGltZW91dCh0aWNrLCB0aW1lb3V0VGltZSk7XFxuXFx0XFx0XFx0XFx0c2VsZi5wb3N0TWVzc2FnZSgndGljaycpO1xcblxcdFxcdFxcdH1cXG5cXHRcXHRcXHQvLyBjYWxsIHRpY2sgaW5pdGlhbGx5XFxuXFx0XFx0XFx0dGljaygpO1xcblxcdFxcdFxcdGBdLHt0eXBlOlwidGV4dC9qYXZhc2NyaXB0XCJ9KSxlPVVSTC5jcmVhdGVPYmplY3RVUkwodCkscz1uZXcgV29ya2VyKGUpO3Mub25tZXNzYWdlPXRoaXMuX2NhbGxiYWNrLmJpbmQodGhpcyksdGhpcy5fd29ya2VyPXN9X2NyZWF0ZVRpbWVvdXQoKXt0aGlzLl90aW1lb3V0PXNldFRpbWVvdXQoKCgpPT57dGhpcy5fY3JlYXRlVGltZW91dCgpLHRoaXMuX2NhbGxiYWNrKCl9KSwxZTMqdGhpcy5fdXBkYXRlSW50ZXJ2YWwpfV9jcmVhdGVDbG9jaygpe2lmKFwid29ya2VyXCI9PT10aGlzLl90eXBlKXRyeXt0aGlzLl9jcmVhdGVXb3JrZXIoKX1jYXRjaCh0KXt0aGlzLl90eXBlPVwidGltZW91dFwiLHRoaXMuX2NyZWF0ZUNsb2NrKCl9ZWxzZVwidGltZW91dFwiPT09dGhpcy5fdHlwZSYmdGhpcy5fY3JlYXRlVGltZW91dCgpfV9kaXNwb3NlQ2xvY2soKXt0aGlzLl90aW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy5fdGltZW91dCksdGhpcy5fd29ya2VyJiYodGhpcy5fd29ya2VyLnRlcm1pbmF0ZSgpLHRoaXMuX3dvcmtlci5vbm1lc3NhZ2U9bnVsbCl9Z2V0IHVwZGF0ZUludGVydmFsKCl7cmV0dXJuIHRoaXMuX3VwZGF0ZUludGVydmFsfXNldCB1cGRhdGVJbnRlcnZhbCh0KXt2YXIgZTt0aGlzLl91cGRhdGVJbnRlcnZhbD1NYXRoLm1heCh0LHRoaXMuX21pbmltdW1VcGRhdGVJbnRlcnZhbCksXCJ3b3JrZXJcIj09PXRoaXMuX3R5cGUmJihudWxsPT09KGU9dGhpcy5fd29ya2VyKXx8dm9pZCAwPT09ZXx8ZS5wb3N0TWVzc2FnZSgxZTMqdGhpcy5fdXBkYXRlSW50ZXJ2YWwpKX1nZXQgdHlwZSgpe3JldHVybiB0aGlzLl90eXBlfXNldCB0eXBlKHQpe3RoaXMuX2Rpc3Bvc2VDbG9jaygpLHRoaXMuX3R5cGU9dCx0aGlzLl9jcmVhdGVDbG9jaygpfWRpc3Bvc2UoKXt0aGlzLl9kaXNwb3NlQ2xvY2soKX19ZnVuY3Rpb24gb2kodCl7cmV0dXJuIEVuKHQpfWZ1bmN0aW9uIHJpKHQpe3JldHVybiBNbih0KX1mdW5jdGlvbiBhaSh0KXtyZXR1cm4gUm4odCl9ZnVuY3Rpb24gY2kodCl7cmV0dXJuIE9uKHQpfWZ1bmN0aW9uIGhpKHQsZSl7cmV0dXJuXCJ2YWx1ZVwiPT09dHx8b2koZSl8fHJpKGUpfHxmdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIEdlfShlKX1mdW5jdGlvbiBsaSh0LC4uLmUpe2lmKCFlLmxlbmd0aClyZXR1cm4gdDtjb25zdCBzPWUuc2hpZnQoKTtpZihQbih0KSYmUG4ocykpZm9yKGNvbnN0IGUgaW4gcyloaShlLHNbZV0pP3RbZV09c1tlXTpQbihzW2VdKT8odFtlXXx8T2JqZWN0LmFzc2lnbih0LHtbZV06e319KSxsaSh0W2VdLHNbZV0pKTpPYmplY3QuYXNzaWduKHQse1tlXTpzW2VdfSk7cmV0dXJuIGxpKHQsLi4uZSl9ZnVuY3Rpb24gdWkodCxlLHM9W10sbil7Y29uc3QgaT17fSxvPUFycmF5LmZyb20oZSk7aWYoUG4ob1swXSkmJm4mJiFSZWZsZWN0LmhhcyhvWzBdLG4pJiYoT2JqZWN0LmtleXMob1swXSkuc29tZSgoZT0+UmVmbGVjdC5oYXModCxlKSkpfHwobGkoaSx7W25dOm9bMF19KSxzLnNwbGljZShzLmluZGV4T2YobiksMSksby5zaGlmdCgpKSksMT09PW8ubGVuZ3RoJiZQbihvWzBdKSlsaShpLG9bMF0pO2Vsc2UgZm9yKGxldCB0PTA7dDxzLmxlbmd0aDt0KyspSW4ob1t0XSkmJihpW3NbdF1dPW9bdF0pO3JldHVybiBsaSh0LGkpfWZ1bmN0aW9uIHBpKHQsZSl7cmV0dXJuIEZuKHQpP2U6dH1mdW5jdGlvbiBkaSh0LGUpe3JldHVybiBlLmZvckVhY2goKGU9PntSZWZsZWN0Lmhhcyh0LGUpJiZkZWxldGUgdFtlXX0pKSx0fWNsYXNzIGZpe2NvbnN0cnVjdG9yKCl7dGhpcy5kZWJ1Zz0hMSx0aGlzLl93YXNEaXNwb3NlZD0hMX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm57fX1sb2coLi4udCl7KHRoaXMuZGVidWd8fHRpJiZ0aGlzLnRvU3RyaW5nKCk9PT10aS5UT05FX0RFQlVHX0NMQVNTKSYmSm4odGhpcywuLi50KX1kaXNwb3NlKCl7cmV0dXJuIHRoaXMuX3dhc0Rpc3Bvc2VkPSEwLHRoaXN9Z2V0IGRpc3Bvc2VkKCl7cmV0dXJuIHRoaXMuX3dhc0Rpc3Bvc2VkfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMubmFtZX19ZmkudmVyc2lvbj1pO2NvbnN0IF9pPTFlLTY7ZnVuY3Rpb24gbWkodCxlKXtyZXR1cm4gdD5lK19pfWZ1bmN0aW9uIGdpKHQsZSl7cmV0dXJuIG1pKHQsZSl8fHlpKHQsZSl9ZnVuY3Rpb24gdmkodCxlKXtyZXR1cm4gdCtfaTxlfWZ1bmN0aW9uIHlpKHQsZSl7cmV0dXJuIE1hdGguYWJzKHQtZSk8X2l9ZnVuY3Rpb24geGkodCxlLHMpe3JldHVybiBNYXRoLm1heChNYXRoLm1pbih0LHMpLGUpfWNsYXNzIHdpIGV4dGVuZHMgZml7Y29uc3RydWN0b3IoKXtzdXBlcigpLHRoaXMubmFtZT1cIlRpbWVsaW5lXCIsdGhpcy5fdGltZWxpbmU9W107Y29uc3QgdD11aSh3aS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJtZW1vcnlcIl0pO3RoaXMubWVtb3J5PXQubWVtb3J5LHRoaXMuaW5jcmVhc2luZz10LmluY3JlYXNpbmd9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJue21lbW9yeToxLzAsaW5jcmVhc2luZzohMX19Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLl90aW1lbGluZS5sZW5ndGh9YWRkKHQpe2lmKEJuKFJlZmxlY3QuaGFzKHQsXCJ0aW1lXCIpLFwiVGltZWxpbmU6IGV2ZW50cyBtdXN0IGhhdmUgYSB0aW1lIGF0dHJpYnV0ZVwiKSx0LnRpbWU9dC50aW1lLnZhbHVlT2YoKSx0aGlzLmluY3JlYXNpbmcmJnRoaXMubGVuZ3RoKXtjb25zdCBlPXRoaXMuX3RpbWVsaW5lW3RoaXMubGVuZ3RoLTFdO0JuKGdpKHQudGltZSxlLnRpbWUpLFwiVGhlIHRpbWUgbXVzdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdGhlIGxhc3Qgc2NoZWR1bGVkIHRpbWVcIiksdGhpcy5fdGltZWxpbmUucHVzaCh0KX1lbHNle2NvbnN0IGU9dGhpcy5fc2VhcmNoKHQudGltZSk7dGhpcy5fdGltZWxpbmUuc3BsaWNlKGUrMSwwLHQpfWlmKHRoaXMubGVuZ3RoPnRoaXMubWVtb3J5KXtjb25zdCB0PXRoaXMubGVuZ3RoLXRoaXMubWVtb3J5O3RoaXMuX3RpbWVsaW5lLnNwbGljZSgwLHQpfXJldHVybiB0aGlzfXJlbW92ZSh0KXtjb25zdCBlPXRoaXMuX3RpbWVsaW5lLmluZGV4T2YodCk7cmV0dXJuLTEhPT1lJiZ0aGlzLl90aW1lbGluZS5zcGxpY2UoZSwxKSx0aGlzfWdldCh0LGU9XCJ0aW1lXCIpe2NvbnN0IHM9dGhpcy5fc2VhcmNoKHQsZSk7cmV0dXJuLTEhPT1zP3RoaXMuX3RpbWVsaW5lW3NdOm51bGx9cGVlaygpe3JldHVybiB0aGlzLl90aW1lbGluZVswXX1zaGlmdCgpe3JldHVybiB0aGlzLl90aW1lbGluZS5zaGlmdCgpfWdldEFmdGVyKHQsZT1cInRpbWVcIil7Y29uc3Qgcz10aGlzLl9zZWFyY2godCxlKTtyZXR1cm4gcysxPHRoaXMuX3RpbWVsaW5lLmxlbmd0aD90aGlzLl90aW1lbGluZVtzKzFdOm51bGx9Z2V0QmVmb3JlKHQpe2NvbnN0IGU9dGhpcy5fdGltZWxpbmUubGVuZ3RoO2lmKGU+MCYmdGhpcy5fdGltZWxpbmVbZS0xXS50aW1lPHQpcmV0dXJuIHRoaXMuX3RpbWVsaW5lW2UtMV07Y29uc3Qgcz10aGlzLl9zZWFyY2godCk7cmV0dXJuIHMtMT49MD90aGlzLl90aW1lbGluZVtzLTFdOm51bGx9Y2FuY2VsKHQpe2lmKHRoaXMuX3RpbWVsaW5lLmxlbmd0aD4xKXtsZXQgZT10aGlzLl9zZWFyY2godCk7aWYoZT49MClpZih5aSh0aGlzLl90aW1lbGluZVtlXS50aW1lLHQpKXtmb3IobGV0IHM9ZTtzPj0wJiZ5aSh0aGlzLl90aW1lbGluZVtzXS50aW1lLHQpO3MtLSllPXM7dGhpcy5fdGltZWxpbmU9dGhpcy5fdGltZWxpbmUuc2xpY2UoMCxlKX1lbHNlIHRoaXMuX3RpbWVsaW5lPXRoaXMuX3RpbWVsaW5lLnNsaWNlKDAsZSsxKTtlbHNlIHRoaXMuX3RpbWVsaW5lPVtdfWVsc2UgMT09PXRoaXMuX3RpbWVsaW5lLmxlbmd0aCYmZ2kodGhpcy5fdGltZWxpbmVbMF0udGltZSx0KSYmKHRoaXMuX3RpbWVsaW5lPVtdKTtyZXR1cm4gdGhpc31jYW5jZWxCZWZvcmUodCl7Y29uc3QgZT10aGlzLl9zZWFyY2godCk7cmV0dXJuIGU+PTAmJih0aGlzLl90aW1lbGluZT10aGlzLl90aW1lbGluZS5zbGljZShlKzEpKSx0aGlzfXByZXZpb3VzRXZlbnQodCl7Y29uc3QgZT10aGlzLl90aW1lbGluZS5pbmRleE9mKHQpO3JldHVybiBlPjA/dGhpcy5fdGltZWxpbmVbZS0xXTpudWxsfV9zZWFyY2godCxlPVwidGltZVwiKXtpZigwPT09dGhpcy5fdGltZWxpbmUubGVuZ3RoKXJldHVybi0xO2xldCBzPTA7Y29uc3Qgbj10aGlzLl90aW1lbGluZS5sZW5ndGg7bGV0IGk9bjtpZihuPjAmJnRoaXMuX3RpbWVsaW5lW24tMV1bZV08PXQpcmV0dXJuIG4tMTtmb3IoO3M8aTspe2xldCBuPU1hdGguZmxvb3IocysoaS1zKS8yKTtjb25zdCBvPXRoaXMuX3RpbWVsaW5lW25dLHI9dGhpcy5fdGltZWxpbmVbbisxXTtpZih5aShvW2VdLHQpKXtmb3IobGV0IHM9bjtzPHRoaXMuX3RpbWVsaW5lLmxlbmd0aCYmeWkodGhpcy5fdGltZWxpbmVbc11bZV0sdCk7cysrKW49cztyZXR1cm4gbn1pZih2aShvW2VdLHQpJiZtaShyW2VdLHQpKXJldHVybiBuO21pKG9bZV0sdCk/aT1uOnM9bisxfXJldHVybi0xfV9pdGVyYXRlKHQsZT0wLHM9dGhpcy5fdGltZWxpbmUubGVuZ3RoLTEpe3RoaXMuX3RpbWVsaW5lLnNsaWNlKGUscysxKS5mb3JFYWNoKHQpfWZvckVhY2godCl7cmV0dXJuIHRoaXMuX2l0ZXJhdGUodCksdGhpc31mb3JFYWNoQmVmb3JlKHQsZSl7Y29uc3Qgcz10aGlzLl9zZWFyY2godCk7cmV0dXJuLTEhPT1zJiZ0aGlzLl9pdGVyYXRlKGUsMCxzKSx0aGlzfWZvckVhY2hBZnRlcih0LGUpe2NvbnN0IHM9dGhpcy5fc2VhcmNoKHQpO3JldHVybiB0aGlzLl9pdGVyYXRlKGUscysxKSx0aGlzfWZvckVhY2hCZXR3ZWVuKHQsZSxzKXtsZXQgbj10aGlzLl9zZWFyY2godCksaT10aGlzLl9zZWFyY2goZSk7cmV0dXJuLTEhPT1uJiYtMSE9PWk/KHRoaXMuX3RpbWVsaW5lW25dLnRpbWUhPT10JiYobis9MSksdGhpcy5fdGltZWxpbmVbaV0udGltZT09PWUmJihpLT0xKSx0aGlzLl9pdGVyYXRlKHMsbixpKSk6LTE9PT1uJiZ0aGlzLl9pdGVyYXRlKHMsMCxpKSx0aGlzfWZvckVhY2hGcm9tKHQsZSl7bGV0IHM9dGhpcy5fc2VhcmNoKHQpO2Zvcig7cz49MCYmdGhpcy5fdGltZWxpbmVbc10udGltZT49dDspcy0tO3JldHVybiB0aGlzLl9pdGVyYXRlKGUscysxKSx0aGlzfWZvckVhY2hBdFRpbWUodCxlKXtjb25zdCBzPXRoaXMuX3NlYXJjaCh0KTtpZigtMSE9PXMmJnlpKHRoaXMuX3RpbWVsaW5lW3NdLnRpbWUsdCkpe2xldCBuPXM7Zm9yKGxldCBlPXM7ZT49MCYmeWkodGhpcy5fdGltZWxpbmVbZV0udGltZSx0KTtlLS0pbj1lO3RoaXMuX2l0ZXJhdGUoKHQ9PntlKHQpfSksbixzKX1yZXR1cm4gdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl90aW1lbGluZT1bXSx0aGlzfX1jb25zdCBiaT1bXTtmdW5jdGlvbiBUaSh0KXtiaS5wdXNoKHQpfWNvbnN0IFNpPVtdO2Z1bmN0aW9uIGtpKHQpe1NpLnB1c2godCl9Y2xhc3MgQWkgZXh0ZW5kcyBmaXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5uYW1lPVwiRW1pdHRlclwifW9uKHQsZSl7cmV0dXJuIHQuc3BsaXQoL1xcVysvKS5mb3JFYWNoKCh0PT57Rm4odGhpcy5fZXZlbnRzKSYmKHRoaXMuX2V2ZW50cz17fSksdGhpcy5fZXZlbnRzLmhhc093blByb3BlcnR5KHQpfHwodGhpcy5fZXZlbnRzW3RdPVtdKSx0aGlzLl9ldmVudHNbdF0ucHVzaChlKX0pKSx0aGlzfW9uY2UodCxlKXtjb25zdCBzPSguLi5uKT0+e2UoLi4ubiksdGhpcy5vZmYodCxzKX07cmV0dXJuIHRoaXMub24odCxzKSx0aGlzfW9mZih0LGUpe3JldHVybiB0LnNwbGl0KC9cXFcrLykuZm9yRWFjaCgodD0+e2lmKEZuKHRoaXMuX2V2ZW50cykmJih0aGlzLl9ldmVudHM9e30pLHRoaXMuX2V2ZW50cy5oYXNPd25Qcm9wZXJ0eSh0KSlpZihGbihlKSl0aGlzLl9ldmVudHNbdF09W107ZWxzZXtjb25zdCBzPXRoaXMuX2V2ZW50c1t0XTtmb3IobGV0IHQ9cy5sZW5ndGgtMTt0Pj0wO3QtLSlzW3RdPT09ZSYmcy5zcGxpY2UodCwxKX19KSksdGhpc31lbWl0KHQsLi4uZSl7aWYodGhpcy5fZXZlbnRzJiZ0aGlzLl9ldmVudHMuaGFzT3duUHJvcGVydHkodCkpe2NvbnN0IHM9dGhpcy5fZXZlbnRzW3RdLnNsaWNlKDApO2ZvcihsZXQgdD0wLG49cy5sZW5ndGg7dDxuO3QrKylzW3RdLmFwcGx5KHRoaXMsZSl9cmV0dXJuIHRoaXN9c3RhdGljIG1peGluKHQpe1tcIm9uXCIsXCJvbmNlXCIsXCJvZmZcIixcImVtaXRcIl0uZm9yRWFjaCgoZT0+e2NvbnN0IHM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihBaS5wcm90b3R5cGUsZSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLGUscyl9KSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fZXZlbnRzPXZvaWQgMCx0aGlzfX1jbGFzcyBDaSBleHRlbmRzIEFpe2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLmlzT2ZmbGluZT0hMX10b0pTT04oKXtyZXR1cm57fX19Y2xhc3MgRGkgZXh0ZW5kcyBDaXtjb25zdHJ1Y3Rvcigpe3ZhciB0LGU7c3VwZXIoKSx0aGlzLm5hbWU9XCJDb250ZXh0XCIsdGhpcy5fY29uc3RhbnRzPW5ldyBNYXAsdGhpcy5fdGltZW91dHM9bmV3IHdpLHRoaXMuX3RpbWVvdXRJZHM9MCx0aGlzLl9pbml0aWFsaXplZD0hMSx0aGlzLl9jbG9zZVN0YXJ0ZWQ9ITEsdGhpcy5pc09mZmxpbmU9ITEsdGhpcy5fd29ya2xldFByb21pc2U9bnVsbDtjb25zdCBzPXVpKERpLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImNvbnRleHRcIl0pO3MuY29udGV4dD8odGhpcy5fY29udGV4dD1zLmNvbnRleHQsdGhpcy5fbGF0ZW5jeUhpbnQ9KG51bGw9PT0odD1hcmd1bWVudHNbMF0pfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmxhdGVuY3lIaW50KXx8XCJcIik6KHRoaXMuX2NvbnRleHQ9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBwbih0KX0oe2xhdGVuY3lIaW50OnMubGF0ZW5jeUhpbnR9KSx0aGlzLl9sYXRlbmN5SGludD1zLmxhdGVuY3lIaW50KSx0aGlzLl90aWNrZXI9bmV3IGlpKHRoaXMuZW1pdC5iaW5kKHRoaXMsXCJ0aWNrXCIpLHMuY2xvY2tTb3VyY2Uscy51cGRhdGVJbnRlcnZhbCx0aGlzLl9jb250ZXh0LnNhbXBsZVJhdGUpLHRoaXMub24oXCJ0aWNrXCIsdGhpcy5fdGltZW91dExvb3AuYmluZCh0aGlzKSksdGhpcy5fY29udGV4dC5vbnN0YXRlY2hhbmdlPSgpPT57dGhpcy5lbWl0KFwic3RhdGVjaGFuZ2VcIix0aGlzLnN0YXRlKX0sdGhpc1sobnVsbD09PShlPWFyZ3VtZW50c1swXSl8fHZvaWQgMD09PWU/dm9pZCAwOmUuaGFzT3duUHJvcGVydHkoXCJ1cGRhdGVJbnRlcnZhbFwiKSk/XCJfbG9va0FoZWFkXCI6XCJsb29rQWhlYWRcIl09cy5sb29rQWhlYWR9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJue2Nsb2NrU291cmNlOlwid29ya2VyXCIsbGF0ZW5jeUhpbnQ6XCJpbnRlcmFjdGl2ZVwiLGxvb2tBaGVhZDouMSx1cGRhdGVJbnRlcnZhbDouMDV9fWluaXRpYWxpemUoKXt2YXIgdDtyZXR1cm4gdGhpcy5faW5pdGlhbGl6ZWR8fCh0PXRoaXMsYmkuZm9yRWFjaCgoZT0+ZSh0KSkpLHRoaXMuX2luaXRpYWxpemVkPSEwKSx0aGlzfWNyZWF0ZUFuYWx5c2VyKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3JlYXRlQW5hbHlzZXIoKX1jcmVhdGVPc2NpbGxhdG9yKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpfWNyZWF0ZUJ1ZmZlclNvdXJjZSgpe3JldHVybiB0aGlzLl9jb250ZXh0LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpfWNyZWF0ZUJpcXVhZEZpbHRlcigpe3JldHVybiB0aGlzLl9jb250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpfWNyZWF0ZUJ1ZmZlcih0LGUscyl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3JlYXRlQnVmZmVyKHQsZSxzKX1jcmVhdGVDaGFubmVsTWVyZ2VyKHQpe3JldHVybiB0aGlzLl9jb250ZXh0LmNyZWF0ZUNoYW5uZWxNZXJnZXIodCl9Y3JlYXRlQ2hhbm5lbFNwbGl0dGVyKHQpe3JldHVybiB0aGlzLl9jb250ZXh0LmNyZWF0ZUNoYW5uZWxTcGxpdHRlcih0KX1jcmVhdGVDb25zdGFudFNvdXJjZSgpe3JldHVybiB0aGlzLl9jb250ZXh0LmNyZWF0ZUNvbnN0YW50U291cmNlKCl9Y3JlYXRlQ29udm9sdmVyKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3JlYXRlQ29udm9sdmVyKCl9Y3JlYXRlRGVsYXkodCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3JlYXRlRGVsYXkodCl9Y3JlYXRlRHluYW1pY3NDb21wcmVzc29yKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3JlYXRlRHluYW1pY3NDb21wcmVzc29yKCl9Y3JlYXRlR2Fpbigpe3JldHVybiB0aGlzLl9jb250ZXh0LmNyZWF0ZUdhaW4oKX1jcmVhdGVJSVJGaWx0ZXIodCxlKXtyZXR1cm4gdGhpcy5fY29udGV4dC5jcmVhdGVJSVJGaWx0ZXIodCxlKX1jcmVhdGVQYW5uZXIoKXtyZXR1cm4gdGhpcy5fY29udGV4dC5jcmVhdGVQYW5uZXIoKX1jcmVhdGVQZXJpb2RpY1dhdmUodCxlLHMpe3JldHVybiB0aGlzLl9jb250ZXh0LmNyZWF0ZVBlcmlvZGljV2F2ZSh0LGUscyl9Y3JlYXRlU3RlcmVvUGFubmVyKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3JlYXRlU3RlcmVvUGFubmVyKCl9Y3JlYXRlV2F2ZVNoYXBlcigpe3JldHVybiB0aGlzLl9jb250ZXh0LmNyZWF0ZVdhdmVTaGFwZXIoKX1jcmVhdGVNZWRpYVN0cmVhbVNvdXJjZSh0KXtyZXR1cm4gQm4oY2kodGhpcy5fY29udGV4dCksXCJOb3QgYXZhaWxhYmxlIGlmIE9mZmxpbmVBdWRpb0NvbnRleHRcIiksdGhpcy5fY29udGV4dC5jcmVhdGVNZWRpYVN0cmVhbVNvdXJjZSh0KX1jcmVhdGVNZWRpYUVsZW1lbnRTb3VyY2UodCl7cmV0dXJuIEJuKGNpKHRoaXMuX2NvbnRleHQpLFwiTm90IGF2YWlsYWJsZSBpZiBPZmZsaW5lQXVkaW9Db250ZXh0XCIpLHRoaXMuX2NvbnRleHQuY3JlYXRlTWVkaWFFbGVtZW50U291cmNlKHQpfWNyZWF0ZU1lZGlhU3RyZWFtRGVzdGluYXRpb24oKXtyZXR1cm4gQm4oY2kodGhpcy5fY29udGV4dCksXCJOb3QgYXZhaWxhYmxlIGlmIE9mZmxpbmVBdWRpb0NvbnRleHRcIiksdGhpcy5fY29udGV4dC5jcmVhdGVNZWRpYVN0cmVhbURlc3RpbmF0aW9uKCl9ZGVjb2RlQXVkaW9EYXRhKHQpe3JldHVybiB0aGlzLl9jb250ZXh0LmRlY29kZUF1ZGlvRGF0YSh0KX1nZXQgY3VycmVudFRpbWUoKXtyZXR1cm4gdGhpcy5fY29udGV4dC5jdXJyZW50VGltZX1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5fY29udGV4dC5zdGF0ZX1nZXQgc2FtcGxlUmF0ZSgpe3JldHVybiB0aGlzLl9jb250ZXh0LnNhbXBsZVJhdGV9Z2V0IGxpc3RlbmVyKCl7cmV0dXJuIHRoaXMuaW5pdGlhbGl6ZSgpLHRoaXMuX2xpc3RlbmVyfXNldCBsaXN0ZW5lcih0KXtCbighdGhpcy5faW5pdGlhbGl6ZWQsXCJUaGUgbGlzdGVuZXIgY2Fubm90IGJlIHNldCBhZnRlciBpbml0aWFsaXphdGlvbi5cIiksdGhpcy5fbGlzdGVuZXI9dH1nZXQgdHJhbnNwb3J0KCl7cmV0dXJuIHRoaXMuaW5pdGlhbGl6ZSgpLHRoaXMuX3RyYW5zcG9ydH1zZXQgdHJhbnNwb3J0KHQpe0JuKCF0aGlzLl9pbml0aWFsaXplZCxcIlRoZSB0cmFuc3BvcnQgY2Fubm90IGJlIHNldCBhZnRlciBpbml0aWFsaXphdGlvbi5cIiksdGhpcy5fdHJhbnNwb3J0PXR9Z2V0IGRyYXcoKXtyZXR1cm4gdGhpcy5pbml0aWFsaXplKCksdGhpcy5fZHJhd31zZXQgZHJhdyh0KXtCbighdGhpcy5faW5pdGlhbGl6ZWQsXCJEcmF3IGNhbm5vdCBiZSBzZXQgYWZ0ZXIgaW5pdGlhbGl6YXRpb24uXCIpLHRoaXMuX2RyYXc9dH1nZXQgZGVzdGluYXRpb24oKXtyZXR1cm4gdGhpcy5pbml0aWFsaXplKCksdGhpcy5fZGVzdGluYXRpb259c2V0IGRlc3RpbmF0aW9uKHQpe0JuKCF0aGlzLl9pbml0aWFsaXplZCxcIlRoZSBkZXN0aW5hdGlvbiBjYW5ub3QgYmUgc2V0IGFmdGVyIGluaXRpYWxpemF0aW9uLlwiKSx0aGlzLl9kZXN0aW5hdGlvbj10fWNyZWF0ZUF1ZGlvV29ya2xldE5vZGUodCxlKXtyZXR1cm4gZnVuY3Rpb24odCxlLHMpe3JldHVybiBCbihJbihrbiksXCJUaGlzIG5vZGUgb25seSB3b3JrcyBpbiBhIHNlY3VyZSBjb250ZXh0IChodHRwcyBvciBsb2NhbGhvc3QpXCIpLG5ldyBrbih0LGUscyl9KHRoaXMucmF3Q29udGV4dCx0LGUpfWFkZEF1ZGlvV29ya2xldE1vZHVsZSh0KXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtCbihJbih0aGlzLnJhd0NvbnRleHQuYXVkaW9Xb3JrbGV0KSxcIkF1ZGlvV29ya2xldE5vZGUgaXMgb25seSBhdmFpbGFibGUgaW4gYSBzZWN1cmUgY29udGV4dCAoaHR0cHMgb3IgbG9jYWxob3N0KVwiKSx0aGlzLl93b3JrbGV0UHJvbWlzZXx8KHRoaXMuX3dvcmtsZXRQcm9taXNlPXRoaXMucmF3Q29udGV4dC5hdWRpb1dvcmtsZXQuYWRkTW9kdWxlKHQpKSx5aWVsZCB0aGlzLl93b3JrbGV0UHJvbWlzZX0pKX13b3JrbGV0c0FyZVJlYWR5KCl7cmV0dXJuIG5pKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24qKCl7KHlpZWxkIHRoaXMuX3dvcmtsZXRQcm9taXNlKT90aGlzLl93b3JrbGV0UHJvbWlzZTpQcm9taXNlLnJlc29sdmUoKX0pKX1nZXQgdXBkYXRlSW50ZXJ2YWwoKXtyZXR1cm4gdGhpcy5fdGlja2VyLnVwZGF0ZUludGVydmFsfXNldCB1cGRhdGVJbnRlcnZhbCh0KXt0aGlzLl90aWNrZXIudXBkYXRlSW50ZXJ2YWw9dH1nZXQgY2xvY2tTb3VyY2UoKXtyZXR1cm4gdGhpcy5fdGlja2VyLnR5cGV9c2V0IGNsb2NrU291cmNlKHQpe3RoaXMuX3RpY2tlci50eXBlPXR9Z2V0IGxvb2tBaGVhZCgpe3JldHVybiB0aGlzLl9sb29rQWhlYWR9c2V0IGxvb2tBaGVhZCh0KXt0aGlzLl9sb29rQWhlYWQ9dCx0aGlzLnVwZGF0ZUludGVydmFsPXQ/dC8yOi4wMX1nZXQgbGF0ZW5jeUhpbnQoKXtyZXR1cm4gdGhpcy5fbGF0ZW5jeUhpbnR9Z2V0IHJhd0NvbnRleHQoKXtyZXR1cm4gdGhpcy5fY29udGV4dH1ub3coKXtyZXR1cm4gdGhpcy5fY29udGV4dC5jdXJyZW50VGltZSt0aGlzLl9sb29rQWhlYWR9aW1tZWRpYXRlKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuY3VycmVudFRpbWV9cmVzdW1lKCl7cmV0dXJuIGNpKHRoaXMuX2NvbnRleHQpP3RoaXMuX2NvbnRleHQucmVzdW1lKCk6UHJvbWlzZS5yZXNvbHZlKCl9Y2xvc2UoKXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXt2YXIgdDtjaSh0aGlzLl9jb250ZXh0KSYmXCJjbG9zZWRcIiE9PXRoaXMuc3RhdGUmJiF0aGlzLl9jbG9zZVN0YXJ0ZWQmJih0aGlzLl9jbG9zZVN0YXJ0ZWQ9ITAseWllbGQgdGhpcy5fY29udGV4dC5jbG9zZSgpKSx0aGlzLl9pbml0aWFsaXplZCYmKHQ9dGhpcyxTaS5mb3JFYWNoKChlPT5lKHQpKSkpfSkpfWdldENvbnN0YW50KHQpe2lmKHRoaXMuX2NvbnN0YW50cy5oYXModCkpcmV0dXJuIHRoaXMuX2NvbnN0YW50cy5nZXQodCk7e2NvbnN0IGU9dGhpcy5fY29udGV4dC5jcmVhdGVCdWZmZXIoMSwxMjgsdGhpcy5fY29udGV4dC5zYW1wbGVSYXRlKSxzPWUuZ2V0Q2hhbm5lbERhdGEoMCk7Zm9yKGxldCBlPTA7ZTxzLmxlbmd0aDtlKyspc1tlXT10O2NvbnN0IG49dGhpcy5fY29udGV4dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtyZXR1cm4gbi5jaGFubmVsQ291bnQ9MSxuLmNoYW5uZWxDb3VudE1vZGU9XCJleHBsaWNpdFwiLG4uYnVmZmVyPWUsbi5sb29wPSEwLG4uc3RhcnQoMCksdGhpcy5fY29uc3RhbnRzLnNldCh0LG4pLG59fWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3RpY2tlci5kaXNwb3NlKCksdGhpcy5fdGltZW91dHMuZGlzcG9zZSgpLE9iamVjdC5rZXlzKHRoaXMuX2NvbnN0YW50cykubWFwKCh0PT50aGlzLl9jb25zdGFudHNbdF0uZGlzY29ubmVjdCgpKSksdGhpcy5jbG9zZSgpLHRoaXN9X3RpbWVvdXRMb29wKCl7Y29uc3QgdD10aGlzLm5vdygpO2xldCBlPXRoaXMuX3RpbWVvdXRzLnBlZWsoKTtmb3IoO3RoaXMuX3RpbWVvdXRzLmxlbmd0aCYmZSYmZS50aW1lPD10OyllLmNhbGxiYWNrKCksdGhpcy5fdGltZW91dHMuc2hpZnQoKSxlPXRoaXMuX3RpbWVvdXRzLnBlZWsoKX1zZXRUaW1lb3V0KHQsZSl7dGhpcy5fdGltZW91dElkcysrO2NvbnN0IHM9dGhpcy5ub3coKTtyZXR1cm4gdGhpcy5fdGltZW91dHMuYWRkKHtjYWxsYmFjazp0LGlkOnRoaXMuX3RpbWVvdXRJZHMsdGltZTpzK2V9KSx0aGlzLl90aW1lb3V0SWRzfWNsZWFyVGltZW91dCh0KXtyZXR1cm4gdGhpcy5fdGltZW91dHMuZm9yRWFjaCgoZT0+e2UuaWQ9PT10JiZ0aGlzLl90aW1lb3V0cy5yZW1vdmUoZSl9KSksdGhpc31jbGVhckludGVydmFsKHQpe3JldHVybiB0aGlzLmNsZWFyVGltZW91dCh0KX1zZXRJbnRlcnZhbCh0LGUpe2NvbnN0IHM9Kyt0aGlzLl90aW1lb3V0SWRzLG49KCk9Pntjb25zdCBpPXRoaXMubm93KCk7dGhpcy5fdGltZW91dHMuYWRkKHtjYWxsYmFjazooKT0+e3QoKSxuKCl9LGlkOnMsdGltZTppK2V9KX07cmV0dXJuIG4oKSxzfX1mdW5jdGlvbiBPaSh0LGUpe0xuKGUpP2UuZm9yRWFjaCgoZT0+T2kodCxlKSkpOk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsd3JpdGFibGU6ITF9KX1mdW5jdGlvbiBNaSh0LGUpe0xuKGUpP2UuZm9yRWFjaCgoZT0+TWkodCxlKSkpOk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3dyaXRhYmxlOiEwfSl9Y29uc3QgRWk9KCk9Pnt9O2NsYXNzIFJpIGV4dGVuZHMgZml7Y29uc3RydWN0b3IoKXtzdXBlcigpLHRoaXMubmFtZT1cIlRvbmVBdWRpb0J1ZmZlclwiLHRoaXMub25sb2FkPUVpO2NvbnN0IHQ9dWkoUmkuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsXCIsXCJvbmxvYWRcIixcIm9uZXJyb3JcIl0pO3RoaXMucmV2ZXJzZT10LnJldmVyc2UsdGhpcy5vbmxvYWQ9dC5vbmxvYWQsem4odC51cmwpP3RoaXMubG9hZCh0LnVybCkuY2F0Y2godC5vbmVycm9yKTp0LnVybCYmdGhpcy5zZXQodC51cmwpfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybntvbmVycm9yOkVpLG9ubG9hZDpFaSxyZXZlcnNlOiExfX1nZXQgc2FtcGxlUmF0ZSgpe3JldHVybiB0aGlzLl9idWZmZXI/dGhpcy5fYnVmZmVyLnNhbXBsZVJhdGU6VmkoKS5zYW1wbGVSYXRlfXNldCh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFJpP3QubG9hZGVkP3RoaXMuX2J1ZmZlcj10LmdldCgpOnQub25sb2FkPSgpPT57dGhpcy5zZXQodCksdGhpcy5vbmxvYWQodGhpcyl9OnRoaXMuX2J1ZmZlcj10LHRoaXMuX3JldmVyc2VkJiZ0aGlzLl9yZXZlcnNlKCksdGhpc31nZXQoKXtyZXR1cm4gdGhpcy5fYnVmZmVyfWxvYWQodCl7cmV0dXJuIG5pKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24qKCl7Y29uc3QgZT1SaS5sb2FkKHQpLnRoZW4oKHQ9Pnt0aGlzLnNldCh0KSx0aGlzLm9ubG9hZCh0aGlzKX0pKTtSaS5kb3dubG9hZHMucHVzaChlKTt0cnl7eWllbGQgZX1maW5hbGx5e2NvbnN0IHQ9UmkuZG93bmxvYWRzLmluZGV4T2YoZSk7UmkuZG93bmxvYWRzLnNwbGljZSh0LDEpfXJldHVybiB0aGlzfSkpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2J1ZmZlcj12b2lkIDAsdGhpc31mcm9tQXJyYXkodCl7Y29uc3QgZT1Mbih0KSYmdFswXS5sZW5ndGg+MCxzPWU/dC5sZW5ndGg6MSxuPWU/dFswXS5sZW5ndGg6dC5sZW5ndGgsaT1WaSgpLG89aS5jcmVhdGVCdWZmZXIocyxuLGkuc2FtcGxlUmF0ZSkscj1lfHwxIT09cz90Olt0XTtmb3IobGV0IHQ9MDt0PHM7dCsrKW8uY29weVRvQ2hhbm5lbChyW3RdLHQpO3JldHVybiB0aGlzLl9idWZmZXI9byx0aGlzfXRvTW9ubyh0KXtpZihObih0KSl0aGlzLmZyb21BcnJheSh0aGlzLnRvQXJyYXkodCkpO2Vsc2V7bGV0IHQ9bmV3IEZsb2F0MzJBcnJheSh0aGlzLmxlbmd0aCk7Y29uc3QgZT10aGlzLm51bWJlck9mQ2hhbm5lbHM7Zm9yKGxldCBzPTA7czxlO3MrKyl7Y29uc3QgZT10aGlzLnRvQXJyYXkocyk7Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKyspdFtzXSs9ZVtzXX10PXQubWFwKCh0PT50L2UpKSx0aGlzLmZyb21BcnJheSh0KX1yZXR1cm4gdGhpc310b0FycmF5KHQpe2lmKE5uKHQpKXJldHVybiB0aGlzLmdldENoYW5uZWxEYXRhKHQpO2lmKDE9PT10aGlzLm51bWJlck9mQ2hhbm5lbHMpcmV0dXJuIHRoaXMudG9BcnJheSgwKTt7Y29uc3QgdD1bXTtmb3IobGV0IGU9MDtlPHRoaXMubnVtYmVyT2ZDaGFubmVscztlKyspdFtlXT10aGlzLmdldENoYW5uZWxEYXRhKGUpO3JldHVybiB0fX1nZXRDaGFubmVsRGF0YSh0KXtyZXR1cm4gdGhpcy5fYnVmZmVyP3RoaXMuX2J1ZmZlci5nZXRDaGFubmVsRGF0YSh0KTpuZXcgRmxvYXQzMkFycmF5KDApfXNsaWNlKHQsZT10aGlzLmR1cmF0aW9uKXtCbih0aGlzLmxvYWRlZCxcIkJ1ZmZlciBpcyBub3QgbG9hZGVkXCIpO2NvbnN0IHM9TWF0aC5mbG9vcih0KnRoaXMuc2FtcGxlUmF0ZSksbj1NYXRoLmZsb29yKGUqdGhpcy5zYW1wbGVSYXRlKTtCbihzPG4sXCJUaGUgc3RhcnQgdGltZSBtdXN0IGJlIGxlc3MgdGhhbiB0aGUgZW5kIHRpbWVcIik7Y29uc3QgaT1uLXMsbz1WaSgpLmNyZWF0ZUJ1ZmZlcih0aGlzLm51bWJlck9mQ2hhbm5lbHMsaSx0aGlzLnNhbXBsZVJhdGUpO2ZvcihsZXQgdD0wO3Q8dGhpcy5udW1iZXJPZkNoYW5uZWxzO3QrKylvLmNvcHlUb0NoYW5uZWwodGhpcy5nZXRDaGFubmVsRGF0YSh0KS5zdWJhcnJheShzLG4pLHQpO3JldHVybiBuZXcgUmkobyl9X3JldmVyc2UoKXtpZih0aGlzLmxvYWRlZClmb3IobGV0IHQ9MDt0PHRoaXMubnVtYmVyT2ZDaGFubmVsczt0KyspdGhpcy5nZXRDaGFubmVsRGF0YSh0KS5yZXZlcnNlKCk7cmV0dXJuIHRoaXN9Z2V0IGxvYWRlZCgpe3JldHVybiB0aGlzLmxlbmd0aD4wfWdldCBkdXJhdGlvbigpe3JldHVybiB0aGlzLl9idWZmZXI/dGhpcy5fYnVmZmVyLmR1cmF0aW9uOjB9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLl9idWZmZXI/dGhpcy5fYnVmZmVyLmxlbmd0aDowfWdldCBudW1iZXJPZkNoYW5uZWxzKCl7cmV0dXJuIHRoaXMuX2J1ZmZlcj90aGlzLl9idWZmZXIubnVtYmVyT2ZDaGFubmVsczowfWdldCByZXZlcnNlKCl7cmV0dXJuIHRoaXMuX3JldmVyc2VkfXNldCByZXZlcnNlKHQpe3RoaXMuX3JldmVyc2VkIT09dCYmKHRoaXMuX3JldmVyc2VkPXQsdGhpcy5fcmV2ZXJzZSgpKX1zdGF0aWMgZnJvbUFycmF5KHQpe3JldHVybihuZXcgUmkpLmZyb21BcnJheSh0KX1zdGF0aWMgZnJvbVVybCh0KXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtjb25zdCBlPW5ldyBSaTtyZXR1cm4geWllbGQgZS5sb2FkKHQpfSkpfXN0YXRpYyBsb2FkKHQpe3JldHVybiBuaSh0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKigpe2NvbnN0IGU9dC5tYXRjaCgvXFxbKFteXFxdXFxbXStcXHwuKylcXF0kLyk7aWYoZSl7Y29uc3Qgcz1lWzFdLnNwbGl0KFwifFwiKTtsZXQgbj1zWzBdO2Zvcihjb25zdCB0IG9mIHMpaWYoUmkuc3VwcG9ydHNUeXBlKHQpKXtuPXQ7YnJlYWt9dD10LnJlcGxhY2UoZVswXSxuKX1jb25zdCBzPVwiXCI9PT1SaS5iYXNlVXJsfHxSaS5iYXNlVXJsLmVuZHNXaXRoKFwiL1wiKT9SaS5iYXNlVXJsOlJpLmJhc2VVcmwrXCIvXCIsbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtuLmhyZWY9cyt0LG4ucGF0aG5hbWU9KG4ucGF0aG5hbWUrbi5oYXNoKS5zcGxpdChcIi9cIikubWFwKGVuY29kZVVSSUNvbXBvbmVudCkuam9pbihcIi9cIik7Y29uc3QgaT15aWVsZCBmZXRjaChuLmhyZWYpO2lmKCFpLm9rKXRocm93IG5ldyBFcnJvcihgY291bGQgbm90IGxvYWQgdXJsOiAke3R9YCk7Y29uc3Qgbz15aWVsZCBpLmFycmF5QnVmZmVyKCk7cmV0dXJuIHlpZWxkIFZpKCkuZGVjb2RlQXVkaW9EYXRhKG8pfSkpfXN0YXRpYyBzdXBwb3J0c1R5cGUodCl7Y29uc3QgZT10LnNwbGl0KFwiLlwiKSxzPWVbZS5sZW5ndGgtMV07cmV0dXJuXCJcIiE9PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhdWRpb1wiKS5jYW5QbGF5VHlwZShcImF1ZGlvL1wiK3MpfXN0YXRpYyBsb2FkZWQoKXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtmb3IoeWllbGQgUHJvbWlzZS5yZXNvbHZlKCk7UmkuZG93bmxvYWRzLmxlbmd0aDspeWllbGQgUmkuZG93bmxvYWRzWzBdfSkpfX1SaS5iYXNlVXJsPVwiXCIsUmkuZG93bmxvYWRzPVtdO2NsYXNzIHFpIGV4dGVuZHMgRGl7Y29uc3RydWN0b3IoKXt2YXIgdCxlLHM7c3VwZXIoe2Nsb2NrU291cmNlOlwib2ZmbGluZVwiLGNvbnRleHQ6YWkoYXJndW1lbnRzWzBdKT9hcmd1bWVudHNbMF06KHQ9YXJndW1lbnRzWzBdLGU9YXJndW1lbnRzWzFdKmFyZ3VtZW50c1syXSxzPWFyZ3VtZW50c1syXSxuZXcgRG4odCxlLHMpKSxsb29rQWhlYWQ6MCx1cGRhdGVJbnRlcnZhbDphaShhcmd1bWVudHNbMF0pPzEyOC9hcmd1bWVudHNbMF0uc2FtcGxlUmF0ZToxMjgvYXJndW1lbnRzWzJdfSksdGhpcy5uYW1lPVwiT2ZmbGluZUNvbnRleHRcIix0aGlzLl9jdXJyZW50VGltZT0wLHRoaXMuaXNPZmZsaW5lPSEwLHRoaXMuX2R1cmF0aW9uPWFpKGFyZ3VtZW50c1swXSk/YXJndW1lbnRzWzBdLmxlbmd0aC9hcmd1bWVudHNbMF0uc2FtcGxlUmF0ZTphcmd1bWVudHNbMV19bm93KCl7cmV0dXJuIHRoaXMuX2N1cnJlbnRUaW1lfWdldCBjdXJyZW50VGltZSgpe3JldHVybiB0aGlzLl9jdXJyZW50VGltZX1fcmVuZGVyQ2xvY2sodCl7cmV0dXJuIG5pKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24qKCl7bGV0IGU9MDtmb3IoO3RoaXMuX2R1cmF0aW9uLXRoaXMuX2N1cnJlbnRUaW1lPj0wOyl7dGhpcy5lbWl0KFwidGlja1wiKSx0aGlzLl9jdXJyZW50VGltZSs9MTI4L3RoaXMuc2FtcGxlUmF0ZSxlKys7Y29uc3Qgcz1NYXRoLmZsb29yKHRoaXMuc2FtcGxlUmF0ZS8xMjgpO3QmJmUlcz09MCYmKHlpZWxkIG5ldyBQcm9taXNlKCh0PT5zZXRUaW1lb3V0KHQsMSkpKSl9fSkpfXJlbmRlcih0PSEwKXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXt5aWVsZCB0aGlzLndvcmtsZXRzQXJlUmVhZHkoKSx5aWVsZCB0aGlzLl9yZW5kZXJDbG9jayh0KTtjb25zdCBlPXlpZWxkIHRoaXMuX2NvbnRleHQuc3RhcnRSZW5kZXJpbmcoKTtyZXR1cm4gbmV3IFJpKGUpfSkpfWNsb3NlKCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpfX1jb25zdCBGaT1uZXcgY2xhc3MgZXh0ZW5kcyBDaXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5sb29rQWhlYWQ9MCx0aGlzLmxhdGVuY3lIaW50PTAsdGhpcy5pc09mZmxpbmU9ITF9Y3JlYXRlQW5hbHlzZXIoKXtyZXR1cm57fX1jcmVhdGVPc2NpbGxhdG9yKCl7cmV0dXJue319Y3JlYXRlQnVmZmVyU291cmNlKCl7cmV0dXJue319Y3JlYXRlQmlxdWFkRmlsdGVyKCl7cmV0dXJue319Y3JlYXRlQnVmZmVyKHQsZSxzKXtyZXR1cm57fX1jcmVhdGVDaGFubmVsTWVyZ2VyKHQpe3JldHVybnt9fWNyZWF0ZUNoYW5uZWxTcGxpdHRlcih0KXtyZXR1cm57fX1jcmVhdGVDb25zdGFudFNvdXJjZSgpe3JldHVybnt9fWNyZWF0ZUNvbnZvbHZlcigpe3JldHVybnt9fWNyZWF0ZURlbGF5KHQpe3JldHVybnt9fWNyZWF0ZUR5bmFtaWNzQ29tcHJlc3Nvcigpe3JldHVybnt9fWNyZWF0ZUdhaW4oKXtyZXR1cm57fX1jcmVhdGVJSVJGaWx0ZXIodCxlKXtyZXR1cm57fX1jcmVhdGVQYW5uZXIoKXtyZXR1cm57fX1jcmVhdGVQZXJpb2RpY1dhdmUodCxlLHMpe3JldHVybnt9fWNyZWF0ZVN0ZXJlb1Bhbm5lcigpe3JldHVybnt9fWNyZWF0ZVdhdmVTaGFwZXIoKXtyZXR1cm57fX1jcmVhdGVNZWRpYVN0cmVhbVNvdXJjZSh0KXtyZXR1cm57fX1jcmVhdGVNZWRpYUVsZW1lbnRTb3VyY2UodCl7cmV0dXJue319Y3JlYXRlTWVkaWFTdHJlYW1EZXN0aW5hdGlvbigpe3JldHVybnt9fWRlY29kZUF1ZGlvRGF0YSh0KXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHt9KX1jcmVhdGVBdWRpb1dvcmtsZXROb2RlKHQsZSl7cmV0dXJue319Z2V0IHJhd0NvbnRleHQoKXtyZXR1cm57fX1hZGRBdWRpb1dvcmtsZXRNb2R1bGUodCl7cmV0dXJuIG5pKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24qKCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpfSkpfXJlc3VtZSgpe3JldHVybiBQcm9taXNlLnJlc29sdmUoKX1zZXRUaW1lb3V0KHQsZSl7cmV0dXJuIDB9Y2xlYXJUaW1lb3V0KHQpe3JldHVybiB0aGlzfXNldEludGVydmFsKHQsZSl7cmV0dXJuIDB9Y2xlYXJJbnRlcnZhbCh0KXtyZXR1cm4gdGhpc31nZXRDb25zdGFudCh0KXtyZXR1cm57fX1nZXQgY3VycmVudFRpbWUoKXtyZXR1cm4gMH1nZXQgc3RhdGUoKXtyZXR1cm57fX1nZXQgc2FtcGxlUmF0ZSgpe3JldHVybiAwfWdldCBsaXN0ZW5lcigpe3JldHVybnt9fWdldCB0cmFuc3BvcnQoKXtyZXR1cm57fX1nZXQgZHJhdygpe3JldHVybnt9fXNldCBkcmF3KHQpe31nZXQgZGVzdGluYXRpb24oKXtyZXR1cm57fX1zZXQgZGVzdGluYXRpb24odCl7fW5vdygpe3JldHVybiAwfWltbWVkaWF0ZSgpe3JldHVybiAwfX07bGV0IElpPUZpO2Z1bmN0aW9uIFZpKCl7cmV0dXJuIElpPT09RmkmJmVpJiZOaShuZXcgRGkpLElpfWZ1bmN0aW9uIE5pKHQsZT0hMSl7ZSYmSWkuZGlzcG9zZSgpLElpPWNpKHQpP25ldyBEaSh0KTphaSh0KT9uZXcgcWkodCk6dH1mdW5jdGlvbiBQaSgpe3JldHVybiBJaS5yZXN1bWUoKX1pZih0aSYmIXRpLlRPTkVfU0lMRU5DRV9MT0dHSU5HKXtsZXQgdD1cInZcIjtcImRldlwiPT09aSYmKHQ9XCJcIik7Y29uc3QgZT1gICogVG9uZS5qcyAke3R9JHtpfSAqIGA7Y29uc29sZS5sb2coYCVjJHtlfWAsXCJiYWNrZ3JvdW5kOiAjMDAwOyBjb2xvcjogI2ZmZlwiKX1mdW5jdGlvbiBqaSh0KXtyZXR1cm4gTWF0aC5wb3coMTAsdC8yMCl9ZnVuY3Rpb24gTGkodCl7cmV0dXJuIE1hdGgubG9nKHQpL01hdGguTE4xMCoyMH1mdW5jdGlvbiB6aSh0KXtyZXR1cm4gTWF0aC5wb3coMix0LzEyKX1sZXQgV2k9NDQwO2Z1bmN0aW9uIEJpKHQpe3JldHVybiBNYXRoLnJvdW5kKFVpKHQpKX1mdW5jdGlvbiBVaSh0KXtyZXR1cm4gNjkrMTIqTWF0aC5sb2cyKHQvV2kpfWZ1bmN0aW9uIEdpKHQpe3JldHVybiBXaSpNYXRoLnBvdygyLCh0LTY5KS8xMil9Y2xhc3MgUWkgZXh0ZW5kcyBmaXtjb25zdHJ1Y3Rvcih0LGUscyl7c3VwZXIoKSx0aGlzLmRlZmF1bHRVbml0cz1cInNcIix0aGlzLl92YWw9ZSx0aGlzLl91bml0cz1zLHRoaXMuY29udGV4dD10LHRoaXMuX2V4cHJlc3Npb25zPXRoaXMuX2dldEV4cHJlc3Npb25zKCl9X2dldEV4cHJlc3Npb25zKCl7cmV0dXJue2h6OnttZXRob2Q6dD0+dGhpcy5fZnJlcXVlbmN5VG9Vbml0cyhwYXJzZUZsb2F0KHQpKSxyZWdleHA6L14oXFxkKyg/OlxcLlxcZCspPyloeiQvaX0saTp7bWV0aG9kOnQ9PnRoaXMuX3RpY2tzVG9Vbml0cyhwYXJzZUludCh0LDEwKSkscmVnZXhwOi9eKFxcZCspaSQvaX0sbTp7bWV0aG9kOnQ9PnRoaXMuX2JlYXRzVG9Vbml0cyhwYXJzZUludCh0LDEwKSp0aGlzLl9nZXRUaW1lU2lnbmF0dXJlKCkpLHJlZ2V4cDovXihcXGQrKW0kL2l9LG46e21ldGhvZDoodCxlKT0+e2NvbnN0IHM9cGFyc2VJbnQodCwxMCksbj1cIi5cIj09PWU/MS41OjE7cmV0dXJuIDE9PT1zP3RoaXMuX2JlYXRzVG9Vbml0cyh0aGlzLl9nZXRUaW1lU2lnbmF0dXJlKCkpKm46dGhpcy5fYmVhdHNUb1VuaXRzKDQvcykqbn0scmVnZXhwOi9eKFxcZCspbihcXC4/KSQvaX0sbnVtYmVyOnttZXRob2Q6dD0+dGhpcy5fZXhwcmVzc2lvbnNbdGhpcy5kZWZhdWx0VW5pdHNdLm1ldGhvZC5jYWxsKHRoaXMsdCkscmVnZXhwOi9eKFxcZCsoPzpcXC5cXGQrKT8pJC99LHM6e21ldGhvZDp0PT50aGlzLl9zZWNvbmRzVG9Vbml0cyhwYXJzZUZsb2F0KHQpKSxyZWdleHA6L14oXFxkKyg/OlxcLlxcZCspPylzJC99LHNhbXBsZXM6e21ldGhvZDp0PT5wYXJzZUludCh0LDEwKS90aGlzLmNvbnRleHQuc2FtcGxlUmF0ZSxyZWdleHA6L14oXFxkKylzYW1wbGVzJC99LHQ6e21ldGhvZDp0PT57Y29uc3QgZT1wYXJzZUludCh0LDEwKTtyZXR1cm4gdGhpcy5fYmVhdHNUb1VuaXRzKDgvKDMqTWF0aC5mbG9vcihlKSkpfSxyZWdleHA6L14oXFxkKyl0JC9pfSx0cjp7bWV0aG9kOih0LGUscyk9PntsZXQgbj0wO3JldHVybiB0JiZcIjBcIiE9PXQmJihuKz10aGlzLl9iZWF0c1RvVW5pdHModGhpcy5fZ2V0VGltZVNpZ25hdHVyZSgpKnBhcnNlRmxvYXQodCkpKSxlJiZcIjBcIiE9PWUmJihuKz10aGlzLl9iZWF0c1RvVW5pdHMocGFyc2VGbG9hdChlKSkpLHMmJlwiMFwiIT09cyYmKG4rPXRoaXMuX2JlYXRzVG9Vbml0cyhwYXJzZUZsb2F0KHMpLzQpKSxufSxyZWdleHA6L14oXFxkKyg/OlxcLlxcZCspPyk6KFxcZCsoPzpcXC5cXGQrKT8pOj8oXFxkKyg/OlxcLlxcZCspPyk/JC99fX12YWx1ZU9mKCl7aWYodGhpcy5fdmFsIGluc3RhbmNlb2YgUWkmJnRoaXMuZnJvbVR5cGUodGhpcy5fdmFsKSxGbih0aGlzLl92YWwpKXJldHVybiB0aGlzLl9ub0FyZygpO2lmKHpuKHRoaXMuX3ZhbCkmJkZuKHRoaXMuX3VuaXRzKSl7Zm9yKGNvbnN0IHQgaW4gdGhpcy5fZXhwcmVzc2lvbnMpaWYodGhpcy5fZXhwcmVzc2lvbnNbdF0ucmVnZXhwLnRlc3QodGhpcy5fdmFsLnRyaW0oKSkpe3RoaXMuX3VuaXRzPXQ7YnJlYWt9fWVsc2UgaWYoUG4odGhpcy5fdmFsKSl7bGV0IHQ9MDtmb3IoY29uc3QgZSBpbiB0aGlzLl92YWwpaWYoSW4odGhpcy5fdmFsW2VdKSl7Y29uc3Qgcz10aGlzLl92YWxbZV07dCs9bmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5jb250ZXh0LGUpLnZhbHVlT2YoKSpzfXJldHVybiB0fWlmKEluKHRoaXMuX3VuaXRzKSl7Y29uc3QgdD10aGlzLl9leHByZXNzaW9uc1t0aGlzLl91bml0c10sZT10aGlzLl92YWwudG9TdHJpbmcoKS50cmltKCkubWF0Y2godC5yZWdleHApO3JldHVybiBlP3QubWV0aG9kLmFwcGx5KHRoaXMsZS5zbGljZSgxKSk6dC5tZXRob2QuY2FsbCh0aGlzLHRoaXMuX3ZhbCl9cmV0dXJuIHpuKHRoaXMuX3ZhbCk/cGFyc2VGbG9hdCh0aGlzLl92YWwpOnRoaXMuX3ZhbH1fZnJlcXVlbmN5VG9Vbml0cyh0KXtyZXR1cm4gMS90fV9iZWF0c1RvVW5pdHModCl7cmV0dXJuIDYwL3RoaXMuX2dldEJwbSgpKnR9X3NlY29uZHNUb1VuaXRzKHQpe3JldHVybiB0fV90aWNrc1RvVW5pdHModCl7cmV0dXJuIHQqdGhpcy5fYmVhdHNUb1VuaXRzKDEpL3RoaXMuX2dldFBQUSgpfV9ub0FyZygpe3JldHVybiB0aGlzLl9ub3coKX1fZ2V0QnBtKCl7cmV0dXJuIHRoaXMuY29udGV4dC50cmFuc3BvcnQuYnBtLnZhbHVlfV9nZXRUaW1lU2lnbmF0dXJlKCl7cmV0dXJuIHRoaXMuY29udGV4dC50cmFuc3BvcnQudGltZVNpZ25hdHVyZX1fZ2V0UFBRKCl7cmV0dXJuIHRoaXMuY29udGV4dC50cmFuc3BvcnQuUFBRfWZyb21UeXBlKHQpe3N3aXRjaCh0aGlzLl91bml0cz12b2lkIDAsdGhpcy5kZWZhdWx0VW5pdHMpe2Nhc2VcInNcIjp0aGlzLl92YWw9dC50b1NlY29uZHMoKTticmVhaztjYXNlXCJpXCI6dGhpcy5fdmFsPXQudG9UaWNrcygpO2JyZWFrO2Nhc2VcImh6XCI6dGhpcy5fdmFsPXQudG9GcmVxdWVuY3koKTticmVhaztjYXNlXCJtaWRpXCI6dGhpcy5fdmFsPXQudG9NaWRpKCl9cmV0dXJuIHRoaXN9dG9GcmVxdWVuY3koKXtyZXR1cm4gMS90aGlzLnRvU2Vjb25kcygpfXRvU2FtcGxlcygpe3JldHVybiB0aGlzLnRvU2Vjb25kcygpKnRoaXMuY29udGV4dC5zYW1wbGVSYXRlfXRvTWlsbGlzZWNvbmRzKCl7cmV0dXJuIDFlMyp0aGlzLnRvU2Vjb25kcygpfX1jbGFzcyBaaSBleHRlbmRzIFFpe2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLm5hbWU9XCJUaW1lQ2xhc3NcIn1fZ2V0RXhwcmVzc2lvbnMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihzdXBlci5fZ2V0RXhwcmVzc2lvbnMoKSx7bm93OnttZXRob2Q6dD0+dGhpcy5fbm93KCkrbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5jb250ZXh0LHQpLnZhbHVlT2YoKSxyZWdleHA6L15cXCsoLispL30scXVhbnRpemU6e21ldGhvZDp0PT57Y29uc3QgZT1uZXcgWmkodGhpcy5jb250ZXh0LHQpLnZhbHVlT2YoKTtyZXR1cm4gdGhpcy5fc2Vjb25kc1RvVW5pdHModGhpcy5jb250ZXh0LnRyYW5zcG9ydC5uZXh0U3ViZGl2aXNpb24oZSkpfSxyZWdleHA6L15AKC4rKS99fSl9cXVhbnRpemUodCxlPTEpe2NvbnN0IHM9bmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5jb250ZXh0LHQpLnZhbHVlT2YoKSxuPXRoaXMudmFsdWVPZigpO3JldHVybiBuKyhNYXRoLnJvdW5kKG4vcykqcy1uKSplfXRvTm90YXRpb24oKXtjb25zdCB0PXRoaXMudG9TZWNvbmRzKCksZT1bXCIxbVwiXTtmb3IobGV0IHQ9MTt0PDk7dCsrKXtjb25zdCBzPU1hdGgucG93KDIsdCk7ZS5wdXNoKHMrXCJuLlwiKSxlLnB1c2gocytcIm5cIiksZS5wdXNoKHMrXCJ0XCIpfWUucHVzaChcIjBcIik7bGV0IHM9ZVswXSxuPW5ldyBaaSh0aGlzLmNvbnRleHQsZVswXSkudG9TZWNvbmRzKCk7cmV0dXJuIGUuZm9yRWFjaCgoZT0+e2NvbnN0IGk9bmV3IFppKHRoaXMuY29udGV4dCxlKS50b1NlY29uZHMoKTtNYXRoLmFicyhpLXQpPE1hdGguYWJzKG4tdCkmJihzPWUsbj1pKX0pKSxzfXRvQmFyc0JlYXRzU2l4dGVlbnRocygpe2NvbnN0IHQ9dGhpcy5fYmVhdHNUb1VuaXRzKDEpO2xldCBlPXRoaXMudmFsdWVPZigpL3Q7ZT1wYXJzZUZsb2F0KGUudG9GaXhlZCg0KSk7Y29uc3Qgcz1NYXRoLmZsb29yKGUvdGhpcy5fZ2V0VGltZVNpZ25hdHVyZSgpKTtsZXQgbj1lJTEqNDtlPU1hdGguZmxvb3IoZSkldGhpcy5fZ2V0VGltZVNpZ25hdHVyZSgpO2NvbnN0IGk9bi50b1N0cmluZygpO3JldHVybiBpLmxlbmd0aD4zJiYobj1wYXJzZUZsb2F0KHBhcnNlRmxvYXQoaSkudG9GaXhlZCgzKSkpLFtzLGUsbl0uam9pbihcIjpcIil9dG9UaWNrcygpe2NvbnN0IHQ9dGhpcy5fYmVhdHNUb1VuaXRzKDEpO3JldHVybiB0aGlzLnZhbHVlT2YoKS90KnRoaXMuX2dldFBQUSgpfXRvU2Vjb25kcygpe3JldHVybiB0aGlzLnZhbHVlT2YoKX10b01pZGkoKXtyZXR1cm4gQmkodGhpcy50b0ZyZXF1ZW5jeSgpKX1fbm93KCl7cmV0dXJuIHRoaXMuY29udGV4dC5ub3coKX19ZnVuY3Rpb24gWGkodCxlKXtyZXR1cm4gbmV3IFppKFZpKCksdCxlKX1jbGFzcyBZaSBleHRlbmRzIFppe2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLm5hbWU9XCJGcmVxdWVuY3lcIix0aGlzLmRlZmF1bHRVbml0cz1cImh6XCJ9c3RhdGljIGdldCBBNCgpe3JldHVybiBXaX1zdGF0aWMgc2V0IEE0KHQpeyFmdW5jdGlvbih0KXtXaT10fSh0KX1fZ2V0RXhwcmVzc2lvbnMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbih7fSxzdXBlci5fZ2V0RXhwcmVzc2lvbnMoKSx7bWlkaTp7cmVnZXhwOi9eKFxcZCsoPzpcXC5cXGQrKT9taWRpKS8sbWV0aG9kKHQpe3JldHVyblwibWlkaVwiPT09dGhpcy5kZWZhdWx0VW5pdHM/dDpZaS5tdG9mKHQpfX0sbm90ZTp7cmVnZXhwOi9eKFthLWddezF9KD86YnwjfCMjfHh8YmJ8IyMjfCN4fHgjfGJiYik/KSgtP1swLTldKykvaSxtZXRob2QodCxlKXtjb25zdCBzPSRpW3QudG9Mb3dlckNhc2UoKV0rMTIqKHBhcnNlSW50KGUsMTApKzEpO3JldHVyblwibWlkaVwiPT09dGhpcy5kZWZhdWx0VW5pdHM/czpZaS5tdG9mKHMpfX0sdHI6e3JlZ2V4cDovXihcXGQrKD86XFwuXFxkKyk/KTooXFxkKyg/OlxcLlxcZCspPyk6PyhcXGQrKD86XFwuXFxkKyk/KT8vLG1ldGhvZCh0LGUscyl7bGV0IG49MTtyZXR1cm4gdCYmXCIwXCIhPT10JiYobio9dGhpcy5fYmVhdHNUb1VuaXRzKHRoaXMuX2dldFRpbWVTaWduYXR1cmUoKSpwYXJzZUZsb2F0KHQpKSksZSYmXCIwXCIhPT1lJiYobio9dGhpcy5fYmVhdHNUb1VuaXRzKHBhcnNlRmxvYXQoZSkpKSxzJiZcIjBcIiE9PXMmJihuKj10aGlzLl9iZWF0c1RvVW5pdHMocGFyc2VGbG9hdChzKS80KSksbn19fSl9dHJhbnNwb3NlKHQpe3JldHVybiBuZXcgWWkodGhpcy5jb250ZXh0LHRoaXMudmFsdWVPZigpKnppKHQpKX1oYXJtb25pemUodCl7cmV0dXJuIHQubWFwKCh0PT50aGlzLnRyYW5zcG9zZSh0KSkpfXRvTWlkaSgpe3JldHVybiBCaSh0aGlzLnZhbHVlT2YoKSl9dG9Ob3RlKCl7Y29uc3QgdD10aGlzLnRvRnJlcXVlbmN5KCksZT1NYXRoLmxvZzIodC9ZaS5BNCk7bGV0IHM9TWF0aC5yb3VuZCgxMiplKSs1Nztjb25zdCBuPU1hdGguZmxvb3Iocy8xMik7cmV0dXJuIG48MCYmKHMrPS0xMipuKSxIaVtzJTEyXStuLnRvU3RyaW5nKCl9dG9TZWNvbmRzKCl7cmV0dXJuIDEvc3VwZXIudG9TZWNvbmRzKCl9dG9UaWNrcygpe2NvbnN0IHQ9dGhpcy5fYmVhdHNUb1VuaXRzKDEpLGU9dGhpcy52YWx1ZU9mKCkvdDtyZXR1cm4gTWF0aC5mbG9vcihlKnRoaXMuX2dldFBQUSgpKX1fbm9BcmcoKXtyZXR1cm4gMH1fZnJlcXVlbmN5VG9Vbml0cyh0KXtyZXR1cm4gdH1fdGlja3NUb1VuaXRzKHQpe3JldHVybiAxLyg2MCp0Lyh0aGlzLl9nZXRCcG0oKSp0aGlzLl9nZXRQUFEoKSkpfV9iZWF0c1RvVW5pdHModCl7cmV0dXJuIDEvc3VwZXIuX2JlYXRzVG9Vbml0cyh0KX1fc2Vjb25kc1RvVW5pdHModCl7cmV0dXJuIDEvdH1zdGF0aWMgbXRvZih0KXtyZXR1cm4gR2kodCl9c3RhdGljIGZ0b20odCl7cmV0dXJuIEJpKHQpfX1jb25zdCAkaT17Y2JiYjotMyxjYmI6LTIsY2I6LTEsYzowLFwiYyNcIjoxLGN4OjIsXCJjIyNcIjoyLFwiYyMjI1wiOjMsXCJjeCNcIjozLFwiYyN4XCI6MyxkYmJiOi0xLGRiYjowLGRiOjEsZDoyLFwiZCNcIjozLGR4OjQsXCJkIyNcIjo0LFwiZCMjI1wiOjUsXCJkeCNcIjo1LFwiZCN4XCI6NSxlYmJiOjEsZWJiOjIsZWI6MyxlOjQsXCJlI1wiOjUsZXg6NixcImUjI1wiOjYsXCJlIyMjXCI6NyxcImV4I1wiOjcsXCJlI3hcIjo3LGZiYmI6MixmYmI6MyxmYjo0LGY6NSxcImYjXCI6NixmeDo3LFwiZiMjXCI6NyxcImYjIyNcIjo4LFwiZngjXCI6OCxcImYjeFwiOjgsZ2JiYjo0LGdiYjo1LGdiOjYsZzo3LFwiZyNcIjo4LGd4OjksXCJnIyNcIjo5LFwiZyMjI1wiOjEwLFwiZ3gjXCI6MTAsXCJnI3hcIjoxMCxhYmJiOjYsYWJiOjcsYWI6OCxhOjksXCJhI1wiOjEwLGF4OjExLFwiYSMjXCI6MTEsXCJhIyMjXCI6MTIsXCJheCNcIjoxMixcImEjeFwiOjEyLGJiYmI6OCxiYmI6OSxiYjoxMCxiOjExLFwiYiNcIjoxMixieDoxMyxcImIjI1wiOjEzLFwiYiMjI1wiOjE0LFwiYngjXCI6MTQsXCJiI3hcIjoxNH0sSGk9W1wiQ1wiLFwiQyNcIixcIkRcIixcIkQjXCIsXCJFXCIsXCJGXCIsXCJGI1wiLFwiR1wiLFwiRyNcIixcIkFcIixcIkEjXCIsXCJCXCJdO2Z1bmN0aW9uIEppKHQsZSl7cmV0dXJuIG5ldyBZaShWaSgpLHQsZSl9Y2xhc3MgS2kgZXh0ZW5kcyBaaXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5uYW1lPVwiVHJhbnNwb3J0VGltZVwifV9ub3coKXtyZXR1cm4gdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5zZWNvbmRzfX1mdW5jdGlvbiB0byh0LGUpe3JldHVybiBuZXcgS2koVmkoKSx0LGUpfWNsYXNzIGVvIGV4dGVuZHMgZml7Y29uc3RydWN0b3IoKXtzdXBlcigpO2NvbnN0IHQ9dWkoZW8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiY29udGV4dFwiXSk7dGhpcy5kZWZhdWx0Q29udGV4dD90aGlzLmNvbnRleHQ9dGhpcy5kZWZhdWx0Q29udGV4dDp0aGlzLmNvbnRleHQ9dC5jb250ZXh0fXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybntjb250ZXh0OlZpKCl9fW5vdygpe3JldHVybiB0aGlzLmNvbnRleHQuY3VycmVudFRpbWUrdGhpcy5jb250ZXh0Lmxvb2tBaGVhZH1pbW1lZGlhdGUoKXtyZXR1cm4gdGhpcy5jb250ZXh0LmN1cnJlbnRUaW1lfWdldCBzYW1wbGVUaW1lKCl7cmV0dXJuIDEvdGhpcy5jb250ZXh0LnNhbXBsZVJhdGV9Z2V0IGJsb2NrVGltZSgpe3JldHVybiAxMjgvdGhpcy5jb250ZXh0LnNhbXBsZVJhdGV9dG9TZWNvbmRzKHQpe3JldHVybiBZbih0KSxuZXcgWmkodGhpcy5jb250ZXh0LHQpLnRvU2Vjb25kcygpfXRvRnJlcXVlbmN5KHQpe3JldHVybiBuZXcgWWkodGhpcy5jb250ZXh0LHQpLnRvRnJlcXVlbmN5KCl9dG9UaWNrcyh0KXtyZXR1cm4gbmV3IEtpKHRoaXMuY29udGV4dCx0KS50b1RpY2tzKCl9X2dldFBhcnRpYWxQcm9wZXJ0aWVzKHQpe2NvbnN0IGU9dGhpcy5nZXQoKTtyZXR1cm4gT2JqZWN0LmtleXMoZSkuZm9yRWFjaCgocz0+e0ZuKHRbc10pJiZkZWxldGUgZVtzXX0pKSxlfWdldCgpe2NvbnN0IHQ9dGhpcy5jb25zdHJ1Y3Rvci5nZXREZWZhdWx0cygpO3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKChlPT57aWYoUmVmbGVjdC5oYXModGhpcyxlKSl7Y29uc3Qgcz10aGlzW2VdO0luKHMpJiZJbihzLnZhbHVlKSYmSW4ocy5zZXRWYWx1ZUF0VGltZSk/dFtlXT1zLnZhbHVlOnMgaW5zdGFuY2VvZiBlbz90W2VdPXMuX2dldFBhcnRpYWxQcm9wZXJ0aWVzKHRbZV0pOkxuKHMpfHxObihzKXx8em4ocyl8fGpuKHMpP3RbZV09czpkZWxldGUgdFtlXX19KSksdH1zZXQodCl7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZvckVhY2goKGU9PntSZWZsZWN0Lmhhcyh0aGlzLGUpJiZJbih0aGlzW2VdKSYmKHRoaXNbZV0mJkluKHRoaXNbZV0udmFsdWUpJiZJbih0aGlzW2VdLnNldFZhbHVlQXRUaW1lKT90aGlzW2VdLnZhbHVlIT09dFtlXSYmKHRoaXNbZV0udmFsdWU9dFtlXSk6dGhpc1tlXWluc3RhbmNlb2YgZW8/dGhpc1tlXS5zZXQodFtlXSk6dGhpc1tlXT10W2VdKX0pKSx0aGlzfX1jbGFzcyBzbyBleHRlbmRzIHdpe2NvbnN0cnVjdG9yKHQ9XCJzdG9wcGVkXCIpe3N1cGVyKCksdGhpcy5uYW1lPVwiU3RhdGVUaW1lbGluZVwiLHRoaXMuX2luaXRpYWw9dCx0aGlzLnNldFN0YXRlQXRUaW1lKHRoaXMuX2luaXRpYWwsMCl9Z2V0VmFsdWVBdFRpbWUodCl7Y29uc3QgZT10aGlzLmdldCh0KTtyZXR1cm4gbnVsbCE9PWU/ZS5zdGF0ZTp0aGlzLl9pbml0aWFsfXNldFN0YXRlQXRUaW1lKHQsZSxzKXtyZXR1cm4gVW4oZSwwKSx0aGlzLmFkZChPYmplY3QuYXNzaWduKHt9LHMse3N0YXRlOnQsdGltZTplfSkpLHRoaXN9Z2V0TGFzdFN0YXRlKHQsZSl7Zm9yKGxldCBzPXRoaXMuX3NlYXJjaChlKTtzPj0wO3MtLSl7Y29uc3QgZT10aGlzLl90aW1lbGluZVtzXTtpZihlLnN0YXRlPT09dClyZXR1cm4gZX19Z2V0TmV4dFN0YXRlKHQsZSl7Y29uc3Qgcz10aGlzLl9zZWFyY2goZSk7aWYoLTEhPT1zKWZvcihsZXQgZT1zO2U8dGhpcy5fdGltZWxpbmUubGVuZ3RoO2UrKyl7Y29uc3Qgcz10aGlzLl90aW1lbGluZVtlXTtpZihzLnN0YXRlPT09dClyZXR1cm4gc319fWNsYXNzIG5vIGV4dGVuZHMgZW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShuby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJwYXJhbVwiLFwidW5pdHNcIixcImNvbnZlcnRcIl0pKSx0aGlzLm5hbWU9XCJQYXJhbVwiLHRoaXMub3ZlcnJpZGRlbj0hMSx0aGlzLl9taW5PdXRwdXQ9MWUtNztjb25zdCB0PXVpKG5vLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInBhcmFtXCIsXCJ1bml0c1wiLFwiY29udmVydFwiXSk7Zm9yKEJuKEluKHQucGFyYW0pJiYob2kodC5wYXJhbSl8fHQucGFyYW0gaW5zdGFuY2VvZiBubyksXCJwYXJhbSBtdXN0IGJlIGFuIEF1ZGlvUGFyYW1cIik7IW9pKHQucGFyYW0pOyl0LnBhcmFtPXQucGFyYW0uX3BhcmFtO3RoaXMuX3N3YXBwYWJsZT0hIUluKHQuc3dhcHBhYmxlKSYmdC5zd2FwcGFibGUsdGhpcy5fc3dhcHBhYmxlPyh0aGlzLmlucHV0PXRoaXMuY29udGV4dC5jcmVhdGVHYWluKCksdGhpcy5fcGFyYW09dC5wYXJhbSx0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5fcGFyYW0pKTp0aGlzLl9wYXJhbT10aGlzLmlucHV0PXQucGFyYW0sdGhpcy5fZXZlbnRzPW5ldyB3aSgxZTMpLHRoaXMuX2luaXRpYWxWYWx1ZT10aGlzLl9wYXJhbS5kZWZhdWx0VmFsdWUsdGhpcy51bml0cz10LnVuaXRzLHRoaXMuY29udmVydD10LmNvbnZlcnQsdGhpcy5fbWluVmFsdWU9dC5taW5WYWx1ZSx0aGlzLl9tYXhWYWx1ZT10Lm1heFZhbHVlLEluKHQudmFsdWUpJiZ0LnZhbHVlIT09dGhpcy5fdG9UeXBlKHRoaXMuX2luaXRpYWxWYWx1ZSkmJnRoaXMuc2V0VmFsdWVBdFRpbWUodC52YWx1ZSwwKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihlby5nZXREZWZhdWx0cygpLHtjb252ZXJ0OiEwLHVuaXRzOlwibnVtYmVyXCJ9KX1nZXQgdmFsdWUoKXtjb25zdCB0PXRoaXMubm93KCk7cmV0dXJuIHRoaXMuZ2V0VmFsdWVBdFRpbWUodCl9c2V0IHZhbHVlKHQpe3RoaXMuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHRoaXMubm93KCkpLHRoaXMuc2V0VmFsdWVBdFRpbWUodCx0aGlzLm5vdygpKX1nZXQgbWluVmFsdWUoKXtyZXR1cm4gSW4odGhpcy5fbWluVmFsdWUpP3RoaXMuX21pblZhbHVlOlwidGltZVwiPT09dGhpcy51bml0c3x8XCJmcmVxdWVuY3lcIj09PXRoaXMudW5pdHN8fFwibm9ybWFsUmFuZ2VcIj09PXRoaXMudW5pdHN8fFwicG9zaXRpdmVcIj09PXRoaXMudW5pdHN8fFwidHJhbnNwb3J0VGltZVwiPT09dGhpcy51bml0c3x8XCJ0aWNrc1wiPT09dGhpcy51bml0c3x8XCJicG1cIj09PXRoaXMudW5pdHN8fFwiaGVydHpcIj09PXRoaXMudW5pdHN8fFwic2FtcGxlc1wiPT09dGhpcy51bml0cz8wOlwiYXVkaW9SYW5nZVwiPT09dGhpcy51bml0cz8tMTpcImRlY2liZWxzXCI9PT10aGlzLnVuaXRzPy0xLzA6dGhpcy5fcGFyYW0ubWluVmFsdWV9Z2V0IG1heFZhbHVlKCl7cmV0dXJuIEluKHRoaXMuX21heFZhbHVlKT90aGlzLl9tYXhWYWx1ZTpcIm5vcm1hbFJhbmdlXCI9PT10aGlzLnVuaXRzfHxcImF1ZGlvUmFuZ2VcIj09PXRoaXMudW5pdHM/MTp0aGlzLl9wYXJhbS5tYXhWYWx1ZX1faXModCxlKXtyZXR1cm4gdGhpcy51bml0cz09PWV9X2Fzc2VydFJhbmdlKHQpe3JldHVybiBJbih0aGlzLm1heFZhbHVlKSYmSW4odGhpcy5taW5WYWx1ZSkmJlVuKHQsdGhpcy5fZnJvbVR5cGUodGhpcy5taW5WYWx1ZSksdGhpcy5fZnJvbVR5cGUodGhpcy5tYXhWYWx1ZSkpLHR9X2Zyb21UeXBlKHQpe3JldHVybiB0aGlzLmNvbnZlcnQmJiF0aGlzLm92ZXJyaWRkZW4/dGhpcy5faXModCxcInRpbWVcIik/dGhpcy50b1NlY29uZHModCk6dGhpcy5faXModCxcImRlY2liZWxzXCIpP2ppKHQpOnRoaXMuX2lzKHQsXCJmcmVxdWVuY3lcIik/dGhpcy50b0ZyZXF1ZW5jeSh0KTp0OnRoaXMub3ZlcnJpZGRlbj8wOnR9X3RvVHlwZSh0KXtyZXR1cm4gdGhpcy5jb252ZXJ0JiZcImRlY2liZWxzXCI9PT10aGlzLnVuaXRzP0xpKHQpOnR9c2V0VmFsdWVBdFRpbWUodCxlKXtjb25zdCBzPXRoaXMudG9TZWNvbmRzKGUpLG49dGhpcy5fZnJvbVR5cGUodCk7cmV0dXJuIEJuKGlzRmluaXRlKG4pJiZpc0Zpbml0ZShzKSxgSW52YWxpZCBhcmd1bWVudChzKSB0byBzZXRWYWx1ZUF0VGltZTogJHtKU09OLnN0cmluZ2lmeSh0KX0sICR7SlNPTi5zdHJpbmdpZnkoZSl9YCksdGhpcy5fYXNzZXJ0UmFuZ2UobiksdGhpcy5sb2codGhpcy51bml0cyxcInNldFZhbHVlQXRUaW1lXCIsdCxzKSx0aGlzLl9ldmVudHMuYWRkKHt0aW1lOnMsdHlwZTpcInNldFZhbHVlQXRUaW1lXCIsdmFsdWU6bn0pLHRoaXMuX3BhcmFtLnNldFZhbHVlQXRUaW1lKG4scyksdGhpc31nZXRWYWx1ZUF0VGltZSh0KXtjb25zdCBlPU1hdGgubWF4KHRoaXMudG9TZWNvbmRzKHQpLDApLHM9dGhpcy5fZXZlbnRzLmdldEFmdGVyKGUpLG49dGhpcy5fZXZlbnRzLmdldChlKTtsZXQgaT10aGlzLl9pbml0aWFsVmFsdWU7aWYobnVsbD09PW4paT10aGlzLl9pbml0aWFsVmFsdWU7ZWxzZSBpZihcInNldFRhcmdldEF0VGltZVwiIT09bi50eXBlfHxudWxsIT09cyYmXCJzZXRWYWx1ZUF0VGltZVwiIT09cy50eXBlKWlmKG51bGw9PT1zKWk9bi52YWx1ZTtlbHNlIGlmKFwibGluZWFyUmFtcFRvVmFsdWVBdFRpbWVcIj09PXMudHlwZXx8XCJleHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lXCI9PT1zLnR5cGUpe2xldCB0PW4udmFsdWU7aWYoXCJzZXRUYXJnZXRBdFRpbWVcIj09PW4udHlwZSl7Y29uc3QgZT10aGlzLl9ldmVudHMuZ2V0QmVmb3JlKG4udGltZSk7dD1udWxsPT09ZT90aGlzLl9pbml0aWFsVmFsdWU6ZS52YWx1ZX1pPVwibGluZWFyUmFtcFRvVmFsdWVBdFRpbWVcIj09PXMudHlwZT90aGlzLl9saW5lYXJJbnRlcnBvbGF0ZShuLnRpbWUsdCxzLnRpbWUscy52YWx1ZSxlKTp0aGlzLl9leHBvbmVudGlhbEludGVycG9sYXRlKG4udGltZSx0LHMudGltZSxzLnZhbHVlLGUpfWVsc2UgaT1uLnZhbHVlO2Vsc2V7Y29uc3QgdD10aGlzLl9ldmVudHMuZ2V0QmVmb3JlKG4udGltZSk7bGV0IHM7cz1udWxsPT09dD90aGlzLl9pbml0aWFsVmFsdWU6dC52YWx1ZSxcInNldFRhcmdldEF0VGltZVwiPT09bi50eXBlJiYoaT10aGlzLl9leHBvbmVudGlhbEFwcHJvYWNoKG4udGltZSxzLG4udmFsdWUsbi5jb25zdGFudCxlKSl9cmV0dXJuIHRoaXMuX3RvVHlwZShpKX1zZXRSYW1wUG9pbnQodCl7dD10aGlzLnRvU2Vjb25kcyh0KTtsZXQgZT10aGlzLmdldFZhbHVlQXRUaW1lKHQpO3JldHVybiB0aGlzLmNhbmNlbEFuZEhvbGRBdFRpbWUodCksMD09PXRoaXMuX2Zyb21UeXBlKGUpJiYoZT10aGlzLl90b1R5cGUodGhpcy5fbWluT3V0cHV0KSksdGhpcy5zZXRWYWx1ZUF0VGltZShlLHQpLHRoaXN9bGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCxlKXtjb25zdCBzPXRoaXMuX2Zyb21UeXBlKHQpLG49dGhpcy50b1NlY29uZHMoZSk7cmV0dXJuIEJuKGlzRmluaXRlKHMpJiZpc0Zpbml0ZShuKSxgSW52YWxpZCBhcmd1bWVudChzKSB0byBsaW5lYXJSYW1wVG9WYWx1ZUF0VGltZTogJHtKU09OLnN0cmluZ2lmeSh0KX0sICR7SlNPTi5zdHJpbmdpZnkoZSl9YCksdGhpcy5fYXNzZXJ0UmFuZ2UocyksdGhpcy5fZXZlbnRzLmFkZCh7dGltZTpuLHR5cGU6XCJsaW5lYXJSYW1wVG9WYWx1ZUF0VGltZVwiLHZhbHVlOnN9KSx0aGlzLmxvZyh0aGlzLnVuaXRzLFwibGluZWFyUmFtcFRvVmFsdWVBdFRpbWVcIix0LG4pLHRoaXMuX3BhcmFtLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHMsbiksdGhpc31leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKHQsZSl7bGV0IHM9dGhpcy5fZnJvbVR5cGUodCk7cz15aShzLDApP3RoaXMuX21pbk91dHB1dDpzLHRoaXMuX2Fzc2VydFJhbmdlKHMpO2NvbnN0IG49dGhpcy50b1NlY29uZHMoZSk7cmV0dXJuIEJuKGlzRmluaXRlKHMpJiZpc0Zpbml0ZShuKSxgSW52YWxpZCBhcmd1bWVudChzKSB0byBleHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lOiAke0pTT04uc3RyaW5naWZ5KHQpfSwgJHtKU09OLnN0cmluZ2lmeShlKX1gKSx0aGlzLl9ldmVudHMuYWRkKHt0aW1lOm4sdHlwZTpcImV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWVcIix2YWx1ZTpzfSksdGhpcy5sb2codGhpcy51bml0cyxcImV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWVcIix0LG4pLHRoaXMuX3BhcmFtLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUocyxuKSx0aGlzfWV4cG9uZW50aWFsUmFtcFRvKHQsZSxzKXtyZXR1cm4gcz10aGlzLnRvU2Vjb25kcyhzKSx0aGlzLnNldFJhbXBQb2ludChzKSx0aGlzLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodCxzK3RoaXMudG9TZWNvbmRzKGUpKSx0aGlzfWxpbmVhclJhbXBUbyh0LGUscyl7cmV0dXJuIHM9dGhpcy50b1NlY29uZHMocyksdGhpcy5zZXRSYW1wUG9pbnQocyksdGhpcy5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh0LHMrdGhpcy50b1NlY29uZHMoZSkpLHRoaXN9dGFyZ2V0UmFtcFRvKHQsZSxzKXtyZXR1cm4gcz10aGlzLnRvU2Vjb25kcyhzKSx0aGlzLnNldFJhbXBQb2ludChzKSx0aGlzLmV4cG9uZW50aWFsQXBwcm9hY2hWYWx1ZUF0VGltZSh0LHMsZSksdGhpc31leHBvbmVudGlhbEFwcHJvYWNoVmFsdWVBdFRpbWUodCxlLHMpe2U9dGhpcy50b1NlY29uZHMoZSkscz10aGlzLnRvU2Vjb25kcyhzKTtjb25zdCBuPU1hdGgubG9nKHMrMSkvTWF0aC5sb2coMjAwKTtyZXR1cm4gdGhpcy5zZXRUYXJnZXRBdFRpbWUodCxlLG4pLHRoaXMuY2FuY2VsQW5kSG9sZEF0VGltZShlKy45KnMpLHRoaXMubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCxlK3MpLHRoaXN9c2V0VGFyZ2V0QXRUaW1lKHQsZSxzKXtjb25zdCBuPXRoaXMuX2Zyb21UeXBlKHQpO0JuKGlzRmluaXRlKHMpJiZzPjAsXCJ0aW1lQ29uc3RhbnQgbXVzdCBiZSBhIG51bWJlciBncmVhdGVyIHRoYW4gMFwiKTtjb25zdCBpPXRoaXMudG9TZWNvbmRzKGUpO3JldHVybiB0aGlzLl9hc3NlcnRSYW5nZShuKSxCbihpc0Zpbml0ZShuKSYmaXNGaW5pdGUoaSksYEludmFsaWQgYXJndW1lbnQocykgdG8gc2V0VGFyZ2V0QXRUaW1lOiAke0pTT04uc3RyaW5naWZ5KHQpfSwgJHtKU09OLnN0cmluZ2lmeShlKX1gKSx0aGlzLl9ldmVudHMuYWRkKHtjb25zdGFudDpzLHRpbWU6aSx0eXBlOlwic2V0VGFyZ2V0QXRUaW1lXCIsdmFsdWU6bn0pLHRoaXMubG9nKHRoaXMudW5pdHMsXCJzZXRUYXJnZXRBdFRpbWVcIix0LGkscyksdGhpcy5fcGFyYW0uc2V0VGFyZ2V0QXRUaW1lKG4saSxzKSx0aGlzfXNldFZhbHVlQ3VydmVBdFRpbWUodCxlLHMsbj0xKXtzPXRoaXMudG9TZWNvbmRzKHMpLGU9dGhpcy50b1NlY29uZHMoZSk7Y29uc3QgaT10aGlzLl9mcm9tVHlwZSh0WzBdKSpuO3RoaXMuc2V0VmFsdWVBdFRpbWUodGhpcy5fdG9UeXBlKGkpLGUpO2NvbnN0IG89cy8odC5sZW5ndGgtMSk7Zm9yKGxldCBzPTE7czx0Lmxlbmd0aDtzKyspe2NvbnN0IGk9dGhpcy5fZnJvbVR5cGUodFtzXSkqbjt0aGlzLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMuX3RvVHlwZShpKSxlK3Mqbyl9cmV0dXJuIHRoaXN9Y2FuY2VsU2NoZWR1bGVkVmFsdWVzKHQpe2NvbnN0IGU9dGhpcy50b1NlY29uZHModCk7cmV0dXJuIEJuKGlzRmluaXRlKGUpLGBJbnZhbGlkIGFyZ3VtZW50IHRvIGNhbmNlbFNjaGVkdWxlZFZhbHVlczogJHtKU09OLnN0cmluZ2lmeSh0KX1gKSx0aGlzLl9ldmVudHMuY2FuY2VsKGUpLHRoaXMuX3BhcmFtLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhlKSx0aGlzLmxvZyh0aGlzLnVuaXRzLFwiY2FuY2VsU2NoZWR1bGVkVmFsdWVzXCIsZSksdGhpc31jYW5jZWxBbmRIb2xkQXRUaW1lKHQpe2NvbnN0IGU9dGhpcy50b1NlY29uZHModCkscz10aGlzLl9mcm9tVHlwZSh0aGlzLmdldFZhbHVlQXRUaW1lKGUpKTtCbihpc0Zpbml0ZShlKSxgSW52YWxpZCBhcmd1bWVudCB0byBjYW5jZWxBbmRIb2xkQXRUaW1lOiAke0pTT04uc3RyaW5naWZ5KHQpfWApLHRoaXMubG9nKHRoaXMudW5pdHMsXCJjYW5jZWxBbmRIb2xkQXRUaW1lXCIsZSxcInZhbHVlPVwiK3MpO2NvbnN0IG49dGhpcy5fZXZlbnRzLmdldChlKSxpPXRoaXMuX2V2ZW50cy5nZXRBZnRlcihlKTtyZXR1cm4gbiYmeWkobi50aW1lLGUpP2k/KHRoaXMuX3BhcmFtLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhpLnRpbWUpLHRoaXMuX2V2ZW50cy5jYW5jZWwoaS50aW1lKSk6KHRoaXMuX3BhcmFtLmNhbmNlbEFuZEhvbGRBdFRpbWUoZSksdGhpcy5fZXZlbnRzLmNhbmNlbChlK3RoaXMuc2FtcGxlVGltZSkpOmkmJih0aGlzLl9wYXJhbS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMoaS50aW1lKSx0aGlzLl9ldmVudHMuY2FuY2VsKGkudGltZSksXCJsaW5lYXJSYW1wVG9WYWx1ZUF0VGltZVwiPT09aS50eXBlP3RoaXMubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy5fdG9UeXBlKHMpLGUpOlwiZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZVwiPT09aS50eXBlJiZ0aGlzLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodGhpcy5fdG9UeXBlKHMpLGUpKSx0aGlzLl9ldmVudHMuYWRkKHt0aW1lOmUsdHlwZTpcInNldFZhbHVlQXRUaW1lXCIsdmFsdWU6c30pLHRoaXMuX3BhcmFtLnNldFZhbHVlQXRUaW1lKHMsZSksdGhpc31yYW1wVG8odCxlPS4xLHMpe3JldHVyblwiZnJlcXVlbmN5XCI9PT10aGlzLnVuaXRzfHxcImJwbVwiPT09dGhpcy51bml0c3x8XCJkZWNpYmVsc1wiPT09dGhpcy51bml0cz90aGlzLmV4cG9uZW50aWFsUmFtcFRvKHQsZSxzKTp0aGlzLmxpbmVhclJhbXBUbyh0LGUscyksdGhpc31hcHBseSh0KXtjb25zdCBlPXRoaXMuY29udGV4dC5jdXJyZW50VGltZTt0LnNldFZhbHVlQXRUaW1lKHRoaXMuZ2V0VmFsdWVBdFRpbWUoZSksZSk7Y29uc3Qgcz10aGlzLl9ldmVudHMuZ2V0KGUpO2lmKHMmJlwic2V0VGFyZ2V0QXRUaW1lXCI9PT1zLnR5cGUpe2NvbnN0IG49dGhpcy5fZXZlbnRzLmdldEFmdGVyKHMudGltZSksaT1uP24udGltZTplKzIsbz0oaS1lKS8xMDtmb3IobGV0IHM9ZTtzPGk7cys9byl0LmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMuZ2V0VmFsdWVBdFRpbWUocykscyl9cmV0dXJuIHRoaXMuX2V2ZW50cy5mb3JFYWNoQWZ0ZXIodGhpcy5jb250ZXh0LmN1cnJlbnRUaW1lLChlPT57XCJjYW5jZWxTY2hlZHVsZWRWYWx1ZXNcIj09PWUudHlwZT90LmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhlLnRpbWUpOlwic2V0VGFyZ2V0QXRUaW1lXCI9PT1lLnR5cGU/dC5zZXRUYXJnZXRBdFRpbWUoZS52YWx1ZSxlLnRpbWUsZS5jb25zdGFudCk6dFtlLnR5cGVdKGUudmFsdWUsZS50aW1lKX0pKSx0aGlzfXNldFBhcmFtKHQpe0JuKHRoaXMuX3N3YXBwYWJsZSxcIlRoZSBQYXJhbSBtdXN0IGJlIGFzc2lnbmVkIGFzICdzd2FwcGFibGUnIGluIHRoZSBjb25zdHJ1Y3RvclwiKTtjb25zdCBlPXRoaXMuaW5wdXQ7cmV0dXJuIGUuZGlzY29ubmVjdCh0aGlzLl9wYXJhbSksdGhpcy5hcHBseSh0KSx0aGlzLl9wYXJhbT10LGUuY29ubmVjdCh0aGlzLl9wYXJhbSksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9ldmVudHMuZGlzcG9zZSgpLHRoaXN9Z2V0IGRlZmF1bHRWYWx1ZSgpe3JldHVybiB0aGlzLl90b1R5cGUodGhpcy5fcGFyYW0uZGVmYXVsdFZhbHVlKX1fZXhwb25lbnRpYWxBcHByb2FjaCh0LGUscyxuLGkpe3JldHVybiBzKyhlLXMpKk1hdGguZXhwKC0oaS10KS9uKX1fbGluZWFySW50ZXJwb2xhdGUodCxlLHMsbixpKXtyZXR1cm4gZSsoaS10KS8ocy10KSoobi1lKX1fZXhwb25lbnRpYWxJbnRlcnBvbGF0ZSh0LGUscyxuLGkpe3JldHVybiBlKk1hdGgucG93KG4vZSwoaS10KS8ocy10KSl9fWNsYXNzIGlvIGV4dGVuZHMgZW97Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuX2ludGVybmFsQ2hhbm5lbHM9W119Z2V0IG51bWJlck9mSW5wdXRzKCl7cmV0dXJuIEluKHRoaXMuaW5wdXQpP29pKHRoaXMuaW5wdXQpfHx0aGlzLmlucHV0IGluc3RhbmNlb2Ygbm8/MTp0aGlzLmlucHV0Lm51bWJlck9mSW5wdXRzOjB9Z2V0IG51bWJlck9mT3V0cHV0cygpe3JldHVybiBJbih0aGlzLm91dHB1dCk/dGhpcy5vdXRwdXQubnVtYmVyT2ZPdXRwdXRzOjB9X2lzQXVkaW9Ob2RlKHQpe3JldHVybiBJbih0KSYmKHQgaW5zdGFuY2VvZiBpb3x8cmkodCkpfV9nZXRJbnRlcm5hbE5vZGVzKCl7Y29uc3QgdD10aGlzLl9pbnRlcm5hbENoYW5uZWxzLnNsaWNlKDApO3JldHVybiB0aGlzLl9pc0F1ZGlvTm9kZSh0aGlzLmlucHV0KSYmdC5wdXNoKHRoaXMuaW5wdXQpLHRoaXMuX2lzQXVkaW9Ob2RlKHRoaXMub3V0cHV0KSYmdGhpcy5pbnB1dCE9PXRoaXMub3V0cHV0JiZ0LnB1c2godGhpcy5vdXRwdXQpLHR9X3NldENoYW5uZWxQcm9wZXJ0aWVzKHQpe3RoaXMuX2dldEludGVybmFsTm9kZXMoKS5mb3JFYWNoKChlPT57ZS5jaGFubmVsQ291bnQ9dC5jaGFubmVsQ291bnQsZS5jaGFubmVsQ291bnRNb2RlPXQuY2hhbm5lbENvdW50TW9kZSxlLmNoYW5uZWxJbnRlcnByZXRhdGlvbj10LmNoYW5uZWxJbnRlcnByZXRhdGlvbn0pKX1fZ2V0Q2hhbm5lbFByb3BlcnRpZXMoKXtjb25zdCB0PXRoaXMuX2dldEludGVybmFsTm9kZXMoKTtCbih0Lmxlbmd0aD4wLFwiVG9uZUF1ZGlvTm9kZSBkb2VzIG5vdCBoYXZlIGFueSBpbnRlcm5hbCBub2Rlc1wiKTtjb25zdCBlPXRbMF07cmV0dXJue2NoYW5uZWxDb3VudDplLmNoYW5uZWxDb3VudCxjaGFubmVsQ291bnRNb2RlOmUuY2hhbm5lbENvdW50TW9kZSxjaGFubmVsSW50ZXJwcmV0YXRpb246ZS5jaGFubmVsSW50ZXJwcmV0YXRpb259fWdldCBjaGFubmVsQ291bnQoKXtyZXR1cm4gdGhpcy5fZ2V0Q2hhbm5lbFByb3BlcnRpZXMoKS5jaGFubmVsQ291bnR9c2V0IGNoYW5uZWxDb3VudCh0KXtjb25zdCBlPXRoaXMuX2dldENoYW5uZWxQcm9wZXJ0aWVzKCk7dGhpcy5fc2V0Q2hhbm5lbFByb3BlcnRpZXMoT2JqZWN0LmFzc2lnbihlLHtjaGFubmVsQ291bnQ6dH0pKX1nZXQgY2hhbm5lbENvdW50TW9kZSgpe3JldHVybiB0aGlzLl9nZXRDaGFubmVsUHJvcGVydGllcygpLmNoYW5uZWxDb3VudE1vZGV9c2V0IGNoYW5uZWxDb3VudE1vZGUodCl7Y29uc3QgZT10aGlzLl9nZXRDaGFubmVsUHJvcGVydGllcygpO3RoaXMuX3NldENoYW5uZWxQcm9wZXJ0aWVzKE9iamVjdC5hc3NpZ24oZSx7Y2hhbm5lbENvdW50TW9kZTp0fSkpfWdldCBjaGFubmVsSW50ZXJwcmV0YXRpb24oKXtyZXR1cm4gdGhpcy5fZ2V0Q2hhbm5lbFByb3BlcnRpZXMoKS5jaGFubmVsSW50ZXJwcmV0YXRpb259c2V0IGNoYW5uZWxJbnRlcnByZXRhdGlvbih0KXtjb25zdCBlPXRoaXMuX2dldENoYW5uZWxQcm9wZXJ0aWVzKCk7dGhpcy5fc2V0Q2hhbm5lbFByb3BlcnRpZXMoT2JqZWN0LmFzc2lnbihlLHtjaGFubmVsSW50ZXJwcmV0YXRpb246dH0pKX1jb25uZWN0KHQsZT0wLHM9MCl7cmV0dXJuIHJvKHRoaXMsdCxlLHMpLHRoaXN9dG9EZXN0aW5hdGlvbigpe3JldHVybiB0aGlzLmNvbm5lY3QodGhpcy5jb250ZXh0LmRlc3RpbmF0aW9uKSx0aGlzfXRvTWFzdGVyKCl7cmV0dXJuIEtuKFwidG9NYXN0ZXIoKSBoYXMgYmVlbiByZW5hbWVkIHRvRGVzdGluYXRpb24oKVwiKSx0aGlzLnRvRGVzdGluYXRpb24oKX1kaXNjb25uZWN0KHQsZT0wLHM9MCl7cmV0dXJuIGFvKHRoaXMsdCxlLHMpLHRoaXN9Y2hhaW4oLi4udCl7cmV0dXJuIG9vKHRoaXMsLi4udCksdGhpc31mYW4oLi4udCl7cmV0dXJuIHQuZm9yRWFjaCgodD0+dGhpcy5jb25uZWN0KHQpKSksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSxJbih0aGlzLmlucHV0KSYmKHRoaXMuaW5wdXQgaW5zdGFuY2VvZiBpbz90aGlzLmlucHV0LmRpc3Bvc2UoKTpyaSh0aGlzLmlucHV0KSYmdGhpcy5pbnB1dC5kaXNjb25uZWN0KCkpLEluKHRoaXMub3V0cHV0KSYmKHRoaXMub3V0cHV0IGluc3RhbmNlb2YgaW8/dGhpcy5vdXRwdXQuZGlzcG9zZSgpOnJpKHRoaXMub3V0cHV0KSYmdGhpcy5vdXRwdXQuZGlzY29ubmVjdCgpKSx0aGlzLl9pbnRlcm5hbENoYW5uZWxzPVtdLHRoaXN9fWZ1bmN0aW9uIG9vKC4uLnQpe2NvbnN0IGU9dC5zaGlmdCgpO3QucmVkdWNlKCgodCxlKT0+KHQgaW5zdGFuY2VvZiBpbz90LmNvbm5lY3QoZSk6cmkodCkmJnJvKHQsZSksZSkpLGUpfWZ1bmN0aW9uIHJvKHQsZSxzPTAsbj0wKXtmb3IoQm4oSW4odCksXCJDYW5ub3QgY29ubmVjdCBmcm9tIHVuZGVmaW5lZCBub2RlXCIpLEJuKEluKGUpLFwiQ2Fubm90IGNvbm5lY3QgdG8gdW5kZWZpbmVkIG5vZGVcIiksKGUgaW5zdGFuY2VvZiBpb3x8cmkoZSkpJiZCbihlLm51bWJlck9mSW5wdXRzPjAsXCJDYW5ub3QgY29ubmVjdCB0byBub2RlIHdpdGggbm8gaW5wdXRzXCIpLEJuKHQubnVtYmVyT2ZPdXRwdXRzPjAsXCJDYW5ub3QgY29ubmVjdCBmcm9tIG5vZGUgd2l0aCBubyBvdXRwdXRzXCIpO2UgaW5zdGFuY2VvZiBpb3x8ZSBpbnN0YW5jZW9mIG5vOylJbihlLmlucHV0KSYmKGU9ZS5pbnB1dCk7Zm9yKDt0IGluc3RhbmNlb2YgaW87KUluKHQub3V0cHV0KSYmKHQ9dC5vdXRwdXQpO29pKGUpP3QuY29ubmVjdChlLHMpOnQuY29ubmVjdChlLHMsbil9ZnVuY3Rpb24gYW8odCxlLHM9MCxuPTApe2lmKEluKGUpKWZvcig7ZSBpbnN0YW5jZW9mIGlvOyllPWUuaW5wdXQ7Zm9yKDshcmkodCk7KUluKHQub3V0cHV0KSYmKHQ9dC5vdXRwdXQpO29pKGUpP3QuZGlzY29ubmVjdChlLHMpOnJpKGUpP3QuZGlzY29ubmVjdChlLHMsbik6dC5kaXNjb25uZWN0KCl9ZnVuY3Rpb24gY28oLi4udCl7Y29uc3QgZT10LnBvcCgpO0luKGUpJiZ0LmZvckVhY2goKHQ9PnJvKHQsZSkpKX1jbGFzcyBobyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoaG8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZ2FpblwiLFwidW5pdHNcIl0pKSx0aGlzLm5hbWU9XCJHYWluXCIsdGhpcy5fZ2Fpbk5vZGU9dGhpcy5jb250ZXh0LmNyZWF0ZUdhaW4oKSx0aGlzLmlucHV0PXRoaXMuX2dhaW5Ob2RlLHRoaXMub3V0cHV0PXRoaXMuX2dhaW5Ob2RlO2NvbnN0IHQ9dWkoaG8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZ2FpblwiLFwidW5pdHNcIl0pO3RoaXMuZ2Fpbj1uZXcgbm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGNvbnZlcnQ6dC5jb252ZXJ0LHBhcmFtOnRoaXMuX2dhaW5Ob2RlLmdhaW4sdW5pdHM6dC51bml0cyx2YWx1ZTp0LmdhaW4sbWluVmFsdWU6dC5taW5WYWx1ZSxtYXhWYWx1ZTp0Lm1heFZhbHVlfSksT2kodGhpcyxcImdhaW5cIil9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7Y29udmVydDohMCxnYWluOjEsdW5pdHM6XCJnYWluXCJ9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9nYWluTm9kZS5kaXNjb25uZWN0KCksdGhpcy5nYWluLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBsbyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMub25lbmRlZD1FaSx0aGlzLl9zdGFydFRpbWU9LTEsdGhpcy5fc3RvcFRpbWU9LTEsdGhpcy5fdGltZW91dD0tMSx0aGlzLm91dHB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46MH0pLHRoaXMuX2dhaW5Ob2RlPXRoaXMub3V0cHV0LHRoaXMuZ2V0U3RhdGVBdFRpbWU9ZnVuY3Rpb24odCl7Y29uc3QgZT10aGlzLnRvU2Vjb25kcyh0KTtyZXR1cm4tMSE9PXRoaXMuX3N0YXJ0VGltZSYmZT49dGhpcy5fc3RhcnRUaW1lJiYoLTE9PT10aGlzLl9zdG9wVGltZXx8ZTw9dGhpcy5fc3RvcFRpbWUpP1wic3RhcnRlZFwiOlwic3RvcHBlZFwifSx0aGlzLl9mYWRlSW49dC5mYWRlSW4sdGhpcy5fZmFkZU91dD10LmZhZGVPdXQsdGhpcy5fY3VydmU9dC5jdXJ2ZSx0aGlzLm9uZW5kZWQ9dC5vbmVuZGVkfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGlvLmdldERlZmF1bHRzKCkse2N1cnZlOlwibGluZWFyXCIsZmFkZUluOjAsZmFkZU91dDowLG9uZW5kZWQ6RWl9KX1fc3RhcnRHYWluKHQsZT0xKXtCbigtMT09PXRoaXMuX3N0YXJ0VGltZSxcIlNvdXJjZSBjYW5ub3QgYmUgc3RhcnRlZCBtb3JlIHRoYW4gb25jZVwiKTtjb25zdCBzPXRoaXMudG9TZWNvbmRzKHRoaXMuX2ZhZGVJbik7cmV0dXJuIHRoaXMuX3N0YXJ0VGltZT10K3MsdGhpcy5fc3RhcnRUaW1lPU1hdGgubWF4KHRoaXMuX3N0YXJ0VGltZSx0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpLHM+MD8odGhpcy5fZ2Fpbk5vZGUuZ2Fpbi5zZXRWYWx1ZUF0VGltZSgwLHQpLFwibGluZWFyXCI9PT10aGlzLl9jdXJ2ZT90aGlzLl9nYWluTm9kZS5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKGUsdCtzKTp0aGlzLl9nYWluTm9kZS5nYWluLmV4cG9uZW50aWFsQXBwcm9hY2hWYWx1ZUF0VGltZShlLHQscykpOnRoaXMuX2dhaW5Ob2RlLmdhaW4uc2V0VmFsdWVBdFRpbWUoZSx0KSx0aGlzfXN0b3AodCl7cmV0dXJuIHRoaXMubG9nKFwic3RvcFwiLHQpLHRoaXMuX3N0b3BHYWluKHRoaXMudG9TZWNvbmRzKHQpKSx0aGlzfV9zdG9wR2Fpbih0KXtCbigtMSE9PXRoaXMuX3N0YXJ0VGltZSxcIidzdGFydCcgbXVzdCBiZSBjYWxsZWQgYmVmb3JlICdzdG9wJ1wiKSx0aGlzLmNhbmNlbFN0b3AoKTtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHRoaXMuX2ZhZGVPdXQpO3JldHVybiB0aGlzLl9zdG9wVGltZT10aGlzLnRvU2Vjb25kcyh0KStlLHRoaXMuX3N0b3BUaW1lPU1hdGgubWF4KHRoaXMuX3N0b3BUaW1lLHRoaXMubm93KCkpLGU+MD9cImxpbmVhclwiPT09dGhpcy5fY3VydmU/dGhpcy5fZ2Fpbk5vZGUuZ2Fpbi5saW5lYXJSYW1wVG8oMCxlLHQpOnRoaXMuX2dhaW5Ob2RlLmdhaW4udGFyZ2V0UmFtcFRvKDAsZSx0KToodGhpcy5fZ2Fpbk5vZGUuZ2Fpbi5jYW5jZWxBbmRIb2xkQXRUaW1lKHQpLHRoaXMuX2dhaW5Ob2RlLmdhaW4uc2V0VmFsdWVBdFRpbWUoMCx0KSksdGhpcy5jb250ZXh0LmNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KSx0aGlzLl90aW1lb3V0PXRoaXMuY29udGV4dC5zZXRUaW1lb3V0KCgoKT0+e2NvbnN0IHQ9XCJleHBvbmVudGlhbFwiPT09dGhpcy5fY3VydmU/MiplOjA7dGhpcy5fc3RvcFNvdXJjZSh0aGlzLm5vdygpK3QpLHRoaXMuX29uZW5kZWQoKX0pLHRoaXMuX3N0b3BUaW1lLXRoaXMuY29udGV4dC5jdXJyZW50VGltZSksdGhpc31fb25lbmRlZCgpe2lmKHRoaXMub25lbmRlZCE9PUVpJiYodGhpcy5vbmVuZGVkKHRoaXMpLHRoaXMub25lbmRlZD1FaSwhdGhpcy5jb250ZXh0LmlzT2ZmbGluZSkpe2NvbnN0IHQ9KCk9PnRoaXMuZGlzcG9zZSgpO3ZvaWQgMCE9PXdpbmRvdy5yZXF1ZXN0SWRsZUNhbGxiYWNrP3dpbmRvdy5yZXF1ZXN0SWRsZUNhbGxiYWNrKHQpOnNldFRpbWVvdXQodCwxZTMpfX1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5nZXRTdGF0ZUF0VGltZSh0aGlzLm5vdygpKX1jYW5jZWxTdG9wKCl7cmV0dXJuIHRoaXMubG9nKFwiY2FuY2VsU3RvcFwiKSxCbigtMSE9PXRoaXMuX3N0YXJ0VGltZSxcIlNvdXJjZSBpcyBub3Qgc3RhcnRlZFwiKSx0aGlzLl9nYWluTm9kZS5nYWluLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0aGlzLl9zdGFydFRpbWUrdGhpcy5zYW1wbGVUaW1lKSx0aGlzLmNvbnRleHQuY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVvdXQpLHRoaXMuX3N0b3BUaW1lPS0xLHRoaXN9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fZ2Fpbk5vZGUuZGlzcG9zZSgpLHRoaXMub25lbmRlZD1FaSx0aGlzfX1jbGFzcyB1byBleHRlbmRzIGxve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkodW8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wib2Zmc2V0XCJdKSksdGhpcy5uYW1lPVwiVG9uZUNvbnN0YW50U291cmNlXCIsdGhpcy5fc291cmNlPXRoaXMuY29udGV4dC5jcmVhdGVDb25zdGFudFNvdXJjZSgpO2NvbnN0IHQ9dWkodW8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wib2Zmc2V0XCJdKTtybyh0aGlzLl9zb3VyY2UsdGhpcy5fZ2Fpbk5vZGUpLHRoaXMub2Zmc2V0PW5ldyBubyh7Y29udGV4dDp0aGlzLmNvbnRleHQsY29udmVydDp0LmNvbnZlcnQscGFyYW06dGhpcy5fc291cmNlLm9mZnNldCx1bml0czp0LnVuaXRzLHZhbHVlOnQub2Zmc2V0LG1pblZhbHVlOnQubWluVmFsdWUsbWF4VmFsdWU6dC5tYXhWYWx1ZX0pfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGxvLmdldERlZmF1bHRzKCkse2NvbnZlcnQ6ITAsb2Zmc2V0OjEsdW5pdHM6XCJudW1iZXJcIn0pfXN0YXJ0KHQpe2NvbnN0IGU9dGhpcy50b1NlY29uZHModCk7cmV0dXJuIHRoaXMubG9nKFwic3RhcnRcIixlKSx0aGlzLl9zdGFydEdhaW4oZSksdGhpcy5fc291cmNlLnN0YXJ0KGUpLHRoaXN9X3N0b3BTb3VyY2UodCl7dGhpcy5fc291cmNlLnN0b3AodCl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksXCJzdGFydGVkXCI9PT10aGlzLnN0YXRlJiZ0aGlzLnN0b3AoKSx0aGlzLl9zb3VyY2UuZGlzY29ubmVjdCgpLHRoaXMub2Zmc2V0LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBwbyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkocG8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widmFsdWVcIixcInVuaXRzXCJdKSksdGhpcy5uYW1lPVwiU2lnbmFsXCIsdGhpcy5vdmVycmlkZT0hMDtjb25zdCB0PXVpKHBvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZhbHVlXCIsXCJ1bml0c1wiXSk7dGhpcy5vdXRwdXQ9dGhpcy5fY29uc3RhbnRTb3VyY2U9bmV3IHVvKHtjb250ZXh0OnRoaXMuY29udGV4dCxjb252ZXJ0OnQuY29udmVydCxvZmZzZXQ6dC52YWx1ZSx1bml0czp0LnVuaXRzLG1pblZhbHVlOnQubWluVmFsdWUsbWF4VmFsdWU6dC5tYXhWYWx1ZX0pLHRoaXMuX2NvbnN0YW50U291cmNlLnN0YXJ0KDApLHRoaXMuaW5wdXQ9dGhpcy5fcGFyYW09dGhpcy5fY29uc3RhbnRTb3VyY2Uub2Zmc2V0fXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGlvLmdldERlZmF1bHRzKCkse2NvbnZlcnQ6ITAsdW5pdHM6XCJudW1iZXJcIix2YWx1ZTowfSl9Y29ubmVjdCh0LGU9MCxzPTApe3JldHVybiBmbyh0aGlzLHQsZSxzKSx0aGlzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3BhcmFtLmRpc3Bvc2UoKSx0aGlzLl9jb25zdGFudFNvdXJjZS5kaXNwb3NlKCksdGhpc31zZXRWYWx1ZUF0VGltZSh0LGUpe3JldHVybiB0aGlzLl9wYXJhbS5zZXRWYWx1ZUF0VGltZSh0LGUpLHRoaXN9Z2V0VmFsdWVBdFRpbWUodCl7cmV0dXJuIHRoaXMuX3BhcmFtLmdldFZhbHVlQXRUaW1lKHQpfXNldFJhbXBQb2ludCh0KXtyZXR1cm4gdGhpcy5fcGFyYW0uc2V0UmFtcFBvaW50KHQpLHRoaXN9bGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCxlKXtyZXR1cm4gdGhpcy5fcGFyYW0ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCxlKSx0aGlzfWV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUodCxlKXtyZXR1cm4gdGhpcy5fcGFyYW0uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSh0LGUpLHRoaXN9ZXhwb25lbnRpYWxSYW1wVG8odCxlLHMpe3JldHVybiB0aGlzLl9wYXJhbS5leHBvbmVudGlhbFJhbXBUbyh0LGUscyksdGhpc31saW5lYXJSYW1wVG8odCxlLHMpe3JldHVybiB0aGlzLl9wYXJhbS5saW5lYXJSYW1wVG8odCxlLHMpLHRoaXN9dGFyZ2V0UmFtcFRvKHQsZSxzKXtyZXR1cm4gdGhpcy5fcGFyYW0udGFyZ2V0UmFtcFRvKHQsZSxzKSx0aGlzfWV4cG9uZW50aWFsQXBwcm9hY2hWYWx1ZUF0VGltZSh0LGUscyl7cmV0dXJuIHRoaXMuX3BhcmFtLmV4cG9uZW50aWFsQXBwcm9hY2hWYWx1ZUF0VGltZSh0LGUscyksdGhpc31zZXRUYXJnZXRBdFRpbWUodCxlLHMpe3JldHVybiB0aGlzLl9wYXJhbS5zZXRUYXJnZXRBdFRpbWUodCxlLHMpLHRoaXN9c2V0VmFsdWVDdXJ2ZUF0VGltZSh0LGUscyxuKXtyZXR1cm4gdGhpcy5fcGFyYW0uc2V0VmFsdWVDdXJ2ZUF0VGltZSh0LGUscyxuKSx0aGlzfWNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0KXtyZXR1cm4gdGhpcy5fcGFyYW0uY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHQpLHRoaXN9Y2FuY2VsQW5kSG9sZEF0VGltZSh0KXtyZXR1cm4gdGhpcy5fcGFyYW0uY2FuY2VsQW5kSG9sZEF0VGltZSh0KSx0aGlzfXJhbXBUbyh0LGUscyl7cmV0dXJuIHRoaXMuX3BhcmFtLnJhbXBUbyh0LGUscyksdGhpc31nZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5fcGFyYW0udmFsdWV9c2V0IHZhbHVlKHQpe3RoaXMuX3BhcmFtLnZhbHVlPXR9Z2V0IGNvbnZlcnQoKXtyZXR1cm4gdGhpcy5fcGFyYW0uY29udmVydH1zZXQgY29udmVydCh0KXt0aGlzLl9wYXJhbS5jb252ZXJ0PXR9Z2V0IHVuaXRzKCl7cmV0dXJuIHRoaXMuX3BhcmFtLnVuaXRzfWdldCBvdmVycmlkZGVuKCl7cmV0dXJuIHRoaXMuX3BhcmFtLm92ZXJyaWRkZW59c2V0IG92ZXJyaWRkZW4odCl7dGhpcy5fcGFyYW0ub3ZlcnJpZGRlbj10fWdldCBtYXhWYWx1ZSgpe3JldHVybiB0aGlzLl9wYXJhbS5tYXhWYWx1ZX1nZXQgbWluVmFsdWUoKXtyZXR1cm4gdGhpcy5fcGFyYW0ubWluVmFsdWV9YXBwbHkodCl7cmV0dXJuIHRoaXMuX3BhcmFtLmFwcGx5KHQpLHRoaXN9fWZ1bmN0aW9uIGZvKHQsZSxzLG4peyhlIGluc3RhbmNlb2Ygbm98fG9pKGUpfHxlIGluc3RhbmNlb2YgcG8mJmUub3ZlcnJpZGUpJiYoZS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMoMCksZS5zZXRWYWx1ZUF0VGltZSgwLDApLGUgaW5zdGFuY2VvZiBwbyYmKGUub3ZlcnJpZGRlbj0hMCkpLHJvKHQsZSxzLG4pfWNsYXNzIF9vIGV4dGVuZHMgbm97Y29uc3RydWN0b3IoKXtzdXBlcih1aShfby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ2YWx1ZVwiXSkpLHRoaXMubmFtZT1cIlRpY2tQYXJhbVwiLHRoaXMuX2V2ZW50cz1uZXcgd2koMS8wKSx0aGlzLl9tdWx0aXBsaWVyPTE7Y29uc3QgdD11aShfby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ2YWx1ZVwiXSk7dGhpcy5fbXVsdGlwbGllcj10Lm11bHRpcGxpZXIsdGhpcy5fZXZlbnRzLmNhbmNlbCgwKSx0aGlzLl9ldmVudHMuYWRkKHt0aWNrczowLHRpbWU6MCx0eXBlOlwic2V0VmFsdWVBdFRpbWVcIix2YWx1ZTp0aGlzLl9mcm9tVHlwZSh0LnZhbHVlKX0pLHRoaXMuc2V0VmFsdWVBdFRpbWUodC52YWx1ZSwwKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihuby5nZXREZWZhdWx0cygpLHttdWx0aXBsaWVyOjEsdW5pdHM6XCJoZXJ0elwiLHZhbHVlOjF9KX1zZXRUYXJnZXRBdFRpbWUodCxlLHMpe2U9dGhpcy50b1NlY29uZHMoZSksdGhpcy5zZXRSYW1wUG9pbnQoZSk7Y29uc3Qgbj10aGlzLl9mcm9tVHlwZSh0KSxpPXRoaXMuX2V2ZW50cy5nZXQoZSksbz1NYXRoLnJvdW5kKE1hdGgubWF4KDEvcywxKSk7Zm9yKGxldCB0PTA7dDw9bzt0Kyspe2NvbnN0IG89cyp0K2Uscj10aGlzLl9leHBvbmVudGlhbEFwcHJvYWNoKGkudGltZSxpLnZhbHVlLG4scyxvKTt0aGlzLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMuX3RvVHlwZShyKSxvKX1yZXR1cm4gdGhpc31zZXRWYWx1ZUF0VGltZSh0LGUpe2NvbnN0IHM9dGhpcy50b1NlY29uZHMoZSk7c3VwZXIuc2V0VmFsdWVBdFRpbWUodCxlKTtjb25zdCBuPXRoaXMuX2V2ZW50cy5nZXQocyksaT10aGlzLl9ldmVudHMucHJldmlvdXNFdmVudChuKSxvPXRoaXMuX2dldFRpY2tzVW50aWxFdmVudChpLHMpO3JldHVybiBuLnRpY2tzPU1hdGgubWF4KG8sMCksdGhpc31saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh0LGUpe2NvbnN0IHM9dGhpcy50b1NlY29uZHMoZSk7c3VwZXIubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCxlKTtjb25zdCBuPXRoaXMuX2V2ZW50cy5nZXQocyksaT10aGlzLl9ldmVudHMucHJldmlvdXNFdmVudChuKSxvPXRoaXMuX2dldFRpY2tzVW50aWxFdmVudChpLHMpO3JldHVybiBuLnRpY2tzPU1hdGgubWF4KG8sMCksdGhpc31leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKHQsZSl7ZT10aGlzLnRvU2Vjb25kcyhlKTtjb25zdCBzPXRoaXMuX2Zyb21UeXBlKHQpLG49dGhpcy5fZXZlbnRzLmdldChlKSxpPU1hdGgucm91bmQoTWF0aC5tYXgoMTAqKGUtbi50aW1lKSwxKSksbz0oZS1uLnRpbWUpL2k7Zm9yKGxldCB0PTA7dDw9aTt0Kyspe2NvbnN0IGk9byp0K24udGltZSxyPXRoaXMuX2V4cG9uZW50aWFsSW50ZXJwb2xhdGUobi50aW1lLG4udmFsdWUsZSxzLGkpO3RoaXMubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy5fdG9UeXBlKHIpLGkpfXJldHVybiB0aGlzfV9nZXRUaWNrc1VudGlsRXZlbnQodCxlKXtpZihudWxsPT09dCl0PXt0aWNrczowLHRpbWU6MCx0eXBlOlwic2V0VmFsdWVBdFRpbWVcIix2YWx1ZTowfTtlbHNlIGlmKEZuKHQudGlja3MpKXtjb25zdCBlPXRoaXMuX2V2ZW50cy5wcmV2aW91c0V2ZW50KHQpO3QudGlja3M9dGhpcy5fZ2V0VGlja3NVbnRpbEV2ZW50KGUsdC50aW1lKX1jb25zdCBzPXRoaXMuX2Zyb21UeXBlKHRoaXMuZ2V0VmFsdWVBdFRpbWUodC50aW1lKSk7bGV0IG49dGhpcy5fZnJvbVR5cGUodGhpcy5nZXRWYWx1ZUF0VGltZShlKSk7Y29uc3QgaT10aGlzLl9ldmVudHMuZ2V0KGUpO3JldHVybiBpJiZpLnRpbWU9PT1lJiZcInNldFZhbHVlQXRUaW1lXCI9PT1pLnR5cGUmJihuPXRoaXMuX2Zyb21UeXBlKHRoaXMuZ2V0VmFsdWVBdFRpbWUoZS10aGlzLnNhbXBsZVRpbWUpKSksLjUqKGUtdC50aW1lKSoocytuKSt0LnRpY2tzfWdldFRpY2tzQXRUaW1lKHQpe2NvbnN0IGU9dGhpcy50b1NlY29uZHModCkscz10aGlzLl9ldmVudHMuZ2V0KGUpO3JldHVybiBNYXRoLm1heCh0aGlzLl9nZXRUaWNrc1VudGlsRXZlbnQocyxlKSwwKX1nZXREdXJhdGlvbk9mVGlja3ModCxlKXtjb25zdCBzPXRoaXMudG9TZWNvbmRzKGUpLG49dGhpcy5nZXRUaWNrc0F0VGltZShlKTtyZXR1cm4gdGhpcy5nZXRUaW1lT2ZUaWNrKG4rdCktc31nZXRUaW1lT2ZUaWNrKHQpe2NvbnN0IGU9dGhpcy5fZXZlbnRzLmdldCh0LFwidGlja3NcIikscz10aGlzLl9ldmVudHMuZ2V0QWZ0ZXIodCxcInRpY2tzXCIpO2lmKGUmJmUudGlja3M9PT10KXJldHVybiBlLnRpbWU7aWYoZSYmcyYmXCJsaW5lYXJSYW1wVG9WYWx1ZUF0VGltZVwiPT09cy50eXBlJiZlLnZhbHVlIT09cy52YWx1ZSl7Y29uc3Qgbj10aGlzLl9mcm9tVHlwZSh0aGlzLmdldFZhbHVlQXRUaW1lKGUudGltZSkpLGk9KHRoaXMuX2Zyb21UeXBlKHRoaXMuZ2V0VmFsdWVBdFRpbWUocy50aW1lKSktbikvKHMudGltZS1lLnRpbWUpLG89TWF0aC5zcXJ0KE1hdGgucG93KG4sMiktMippKihlLnRpY2tzLXQpKSxyPSgtbitvKS9pLGE9KC1uLW8pL2k7cmV0dXJuKHI+MD9yOmEpK2UudGltZX1yZXR1cm4gZT8wPT09ZS52YWx1ZT8xLzA6ZS50aW1lKyh0LWUudGlja3MpL2UudmFsdWU6dC90aGlzLl9pbml0aWFsVmFsdWV9dGlja3NUb1RpbWUodCxlKXtyZXR1cm4gdGhpcy5nZXREdXJhdGlvbk9mVGlja3ModCxlKX10aW1lVG9UaWNrcyh0LGUpe2NvbnN0IHM9dGhpcy50b1NlY29uZHMoZSksbj10aGlzLnRvU2Vjb25kcyh0KSxpPXRoaXMuZ2V0VGlja3NBdFRpbWUocyk7cmV0dXJuIHRoaXMuZ2V0VGlja3NBdFRpbWUocytuKS1pfV9mcm9tVHlwZSh0KXtyZXR1cm5cImJwbVwiPT09dGhpcy51bml0cyYmdGhpcy5tdWx0aXBsaWVyPzEvKDYwL3QvdGhpcy5tdWx0aXBsaWVyKTpzdXBlci5fZnJvbVR5cGUodCl9X3RvVHlwZSh0KXtyZXR1cm5cImJwbVwiPT09dGhpcy51bml0cyYmdGhpcy5tdWx0aXBsaWVyP3QvdGhpcy5tdWx0aXBsaWVyKjYwOnN1cGVyLl90b1R5cGUodCl9Z2V0IG11bHRpcGxpZXIoKXtyZXR1cm4gdGhpcy5fbXVsdGlwbGllcn1zZXQgbXVsdGlwbGllcih0KXtjb25zdCBlPXRoaXMudmFsdWU7dGhpcy5fbXVsdGlwbGllcj10LHRoaXMuY2FuY2VsU2NoZWR1bGVkVmFsdWVzKDApLHRoaXMuc2V0VmFsdWVBdFRpbWUoZSwwKX19Y2xhc3MgbW8gZXh0ZW5kcyBwb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKG1vLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZhbHVlXCJdKSksdGhpcy5uYW1lPVwiVGlja1NpZ25hbFwiO2NvbnN0IHQ9dWkobW8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widmFsdWVcIl0pO3RoaXMuaW5wdXQ9dGhpcy5fcGFyYW09bmV3IF9vKHtjb250ZXh0OnRoaXMuY29udGV4dCxjb252ZXJ0OnQuY29udmVydCxtdWx0aXBsaWVyOnQubXVsdGlwbGllcixwYXJhbTp0aGlzLl9jb25zdGFudFNvdXJjZS5vZmZzZXQsdW5pdHM6dC51bml0cyx2YWx1ZTp0LnZhbHVlfSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24ocG8uZ2V0RGVmYXVsdHMoKSx7bXVsdGlwbGllcjoxLHVuaXRzOlwiaGVydHpcIix2YWx1ZToxfSl9dGlja3NUb1RpbWUodCxlKXtyZXR1cm4gdGhpcy5fcGFyYW0udGlja3NUb1RpbWUodCxlKX10aW1lVG9UaWNrcyh0LGUpe3JldHVybiB0aGlzLl9wYXJhbS50aW1lVG9UaWNrcyh0LGUpfWdldFRpbWVPZlRpY2sodCl7cmV0dXJuIHRoaXMuX3BhcmFtLmdldFRpbWVPZlRpY2sodCl9Z2V0RHVyYXRpb25PZlRpY2tzKHQsZSl7cmV0dXJuIHRoaXMuX3BhcmFtLmdldER1cmF0aW9uT2ZUaWNrcyh0LGUpfWdldFRpY2tzQXRUaW1lKHQpe3JldHVybiB0aGlzLl9wYXJhbS5nZXRUaWNrc0F0VGltZSh0KX1nZXQgbXVsdGlwbGllcigpe3JldHVybiB0aGlzLl9wYXJhbS5tdWx0aXBsaWVyfXNldCBtdWx0aXBsaWVyKHQpe3RoaXMuX3BhcmFtLm11bHRpcGxpZXI9dH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9wYXJhbS5kaXNwb3NlKCksdGhpc319Y2xhc3MgZ28gZXh0ZW5kcyBlb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKGdvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiXSkpLHRoaXMubmFtZT1cIlRpY2tTb3VyY2VcIix0aGlzLl9zdGF0ZT1uZXcgc28sdGhpcy5fdGlja09mZnNldD1uZXcgd2ksdGhpcy5fdGlja3NBdFRpbWU9bmV3IHdpLHRoaXMuX3NlY29uZHNBdFRpbWU9bmV3IHdpO2NvbnN0IHQ9dWkoZ28uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCJdKTt0aGlzLmZyZXF1ZW5jeT1uZXcgbW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOnQudW5pdHMsdmFsdWU6dC5mcmVxdWVuY3l9KSxPaSh0aGlzLFwiZnJlcXVlbmN5XCIpLHRoaXMuX3N0YXRlLnNldFN0YXRlQXRUaW1lKFwic3RvcHBlZFwiLDApLHRoaXMuc2V0VGlja3NBdFRpbWUoMCwwKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbih7ZnJlcXVlbmN5OjEsdW5pdHM6XCJoZXJ0elwifSxlby5nZXREZWZhdWx0cygpKX1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5nZXRTdGF0ZUF0VGltZSh0aGlzLm5vdygpKX1zdGFydCh0LGUpe2NvbnN0IHM9dGhpcy50b1NlY29uZHModCk7cmV0dXJuXCJzdGFydGVkXCIhPT10aGlzLl9zdGF0ZS5nZXRWYWx1ZUF0VGltZShzKSYmKHRoaXMuX3N0YXRlLnNldFN0YXRlQXRUaW1lKFwic3RhcnRlZFwiLHMpLEluKGUpJiZ0aGlzLnNldFRpY2tzQXRUaW1lKGUscyksdGhpcy5fdGlja3NBdFRpbWUuY2FuY2VsKHMpLHRoaXMuX3NlY29uZHNBdFRpbWUuY2FuY2VsKHMpKSx0aGlzfXN0b3AodCl7Y29uc3QgZT10aGlzLnRvU2Vjb25kcyh0KTtpZihcInN0b3BwZWRcIj09PXRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKGUpKXtjb25zdCB0PXRoaXMuX3N0YXRlLmdldChlKTt0JiZ0LnRpbWU+MCYmKHRoaXMuX3RpY2tPZmZzZXQuY2FuY2VsKHQudGltZSksdGhpcy5fc3RhdGUuY2FuY2VsKHQudGltZSkpfXJldHVybiB0aGlzLl9zdGF0ZS5jYW5jZWwoZSksdGhpcy5fc3RhdGUuc2V0U3RhdGVBdFRpbWUoXCJzdG9wcGVkXCIsZSksdGhpcy5zZXRUaWNrc0F0VGltZSgwLGUpLHRoaXMuX3RpY2tzQXRUaW1lLmNhbmNlbChlKSx0aGlzLl9zZWNvbmRzQXRUaW1lLmNhbmNlbChlKSx0aGlzfXBhdXNlKHQpe2NvbnN0IGU9dGhpcy50b1NlY29uZHModCk7cmV0dXJuXCJzdGFydGVkXCI9PT10aGlzLl9zdGF0ZS5nZXRWYWx1ZUF0VGltZShlKSYmKHRoaXMuX3N0YXRlLnNldFN0YXRlQXRUaW1lKFwicGF1c2VkXCIsZSksdGhpcy5fdGlja3NBdFRpbWUuY2FuY2VsKGUpLHRoaXMuX3NlY29uZHNBdFRpbWUuY2FuY2VsKGUpKSx0aGlzfWNhbmNlbCh0KXtyZXR1cm4gdD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLl9zdGF0ZS5jYW5jZWwodCksdGhpcy5fdGlja09mZnNldC5jYW5jZWwodCksdGhpcy5fdGlja3NBdFRpbWUuY2FuY2VsKHQpLHRoaXMuX3NlY29uZHNBdFRpbWUuY2FuY2VsKHQpLHRoaXN9Z2V0VGlja3NBdFRpbWUodCl7Y29uc3QgZT10aGlzLnRvU2Vjb25kcyh0KSxzPXRoaXMuX3N0YXRlLmdldExhc3RTdGF0ZShcInN0b3BwZWRcIixlKSxuPXRoaXMuX3RpY2tzQXRUaW1lLmdldChlKSxpPXtzdGF0ZTpcInBhdXNlZFwiLHRpbWU6ZX07dGhpcy5fc3RhdGUuYWRkKGkpO2xldCBvPW58fHMscj1uP24udGlja3M6MCxhPW51bGw7cmV0dXJuIHRoaXMuX3N0YXRlLmZvckVhY2hCZXR3ZWVuKG8udGltZSxlK3RoaXMuc2FtcGxlVGltZSwodD0+e2xldCBlPW8udGltZTtjb25zdCBzPXRoaXMuX3RpY2tPZmZzZXQuZ2V0KHQudGltZSk7cyYmcy50aW1lPj1vLnRpbWUmJihyPXMudGlja3MsZT1zLnRpbWUpLFwic3RhcnRlZFwiPT09by5zdGF0ZSYmXCJzdGFydGVkXCIhPT10LnN0YXRlJiYocis9dGhpcy5mcmVxdWVuY3kuZ2V0VGlja3NBdFRpbWUodC50aW1lKS10aGlzLmZyZXF1ZW5jeS5nZXRUaWNrc0F0VGltZShlKSx0LnRpbWUhPT1pLnRpbWUmJihhPXtzdGF0ZTp0LnN0YXRlLHRpbWU6dC50aW1lLHRpY2tzOnJ9KSksbz10fSkpLHRoaXMuX3N0YXRlLnJlbW92ZShpKSxhJiZ0aGlzLl90aWNrc0F0VGltZS5hZGQoYSkscn1nZXQgdGlja3MoKXtyZXR1cm4gdGhpcy5nZXRUaWNrc0F0VGltZSh0aGlzLm5vdygpKX1zZXQgdGlja3ModCl7dGhpcy5zZXRUaWNrc0F0VGltZSh0LHRoaXMubm93KCkpfWdldCBzZWNvbmRzKCl7cmV0dXJuIHRoaXMuZ2V0U2Vjb25kc0F0VGltZSh0aGlzLm5vdygpKX1zZXQgc2Vjb25kcyh0KXtjb25zdCBlPXRoaXMubm93KCkscz10aGlzLmZyZXF1ZW5jeS50aW1lVG9UaWNrcyh0LGUpO3RoaXMuc2V0VGlja3NBdFRpbWUocyxlKX1nZXRTZWNvbmRzQXRUaW1lKHQpe3Q9dGhpcy50b1NlY29uZHModCk7Y29uc3QgZT10aGlzLl9zdGF0ZS5nZXRMYXN0U3RhdGUoXCJzdG9wcGVkXCIsdCkscz17c3RhdGU6XCJwYXVzZWRcIix0aW1lOnR9O3RoaXMuX3N0YXRlLmFkZChzKTtjb25zdCBuPXRoaXMuX3NlY29uZHNBdFRpbWUuZ2V0KHQpO2xldCBpPW58fGUsbz1uP24uc2Vjb25kczowLHI9bnVsbDtyZXR1cm4gdGhpcy5fc3RhdGUuZm9yRWFjaEJldHdlZW4oaS50aW1lLHQrdGhpcy5zYW1wbGVUaW1lLCh0PT57bGV0IGU9aS50aW1lO2NvbnN0IG49dGhpcy5fdGlja09mZnNldC5nZXQodC50aW1lKTtuJiZuLnRpbWU+PWkudGltZSYmKG89bi5zZWNvbmRzLGU9bi50aW1lKSxcInN0YXJ0ZWRcIj09PWkuc3RhdGUmJlwic3RhcnRlZFwiIT09dC5zdGF0ZSYmKG8rPXQudGltZS1lLHQudGltZSE9PXMudGltZSYmKHI9e3N0YXRlOnQuc3RhdGUsdGltZTp0LnRpbWUsc2Vjb25kczpvfSkpLGk9dH0pKSx0aGlzLl9zdGF0ZS5yZW1vdmUocyksciYmdGhpcy5fc2Vjb25kc0F0VGltZS5hZGQociksb31zZXRUaWNrc0F0VGltZSh0LGUpe3JldHVybiBlPXRoaXMudG9TZWNvbmRzKGUpLHRoaXMuX3RpY2tPZmZzZXQuY2FuY2VsKGUpLHRoaXMuX3RpY2tPZmZzZXQuYWRkKHtzZWNvbmRzOnRoaXMuZnJlcXVlbmN5LmdldER1cmF0aW9uT2ZUaWNrcyh0LGUpLHRpY2tzOnQsdGltZTplfSksdGhpcy5fdGlja3NBdFRpbWUuY2FuY2VsKGUpLHRoaXMuX3NlY29uZHNBdFRpbWUuY2FuY2VsKGUpLHRoaXN9Z2V0U3RhdGVBdFRpbWUodCl7cmV0dXJuIHQ9dGhpcy50b1NlY29uZHModCksdGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUodCl9Z2V0VGltZU9mVGljayh0LGU9dGhpcy5ub3coKSl7Y29uc3Qgcz10aGlzLl90aWNrT2Zmc2V0LmdldChlKSxuPXRoaXMuX3N0YXRlLmdldChlKSxpPU1hdGgubWF4KHMudGltZSxuLnRpbWUpLG89dGhpcy5mcmVxdWVuY3kuZ2V0VGlja3NBdFRpbWUoaSkrdC1zLnRpY2tzO3JldHVybiB0aGlzLmZyZXF1ZW5jeS5nZXRUaW1lT2ZUaWNrKG8pfWZvckVhY2hUaWNrQmV0d2Vlbih0LGUscyl7bGV0IG49dGhpcy5fc3RhdGUuZ2V0KHQpO3RoaXMuX3N0YXRlLmZvckVhY2hCZXR3ZWVuKHQsZSwoZT0+e24mJlwic3RhcnRlZFwiPT09bi5zdGF0ZSYmXCJzdGFydGVkXCIhPT1lLnN0YXRlJiZ0aGlzLmZvckVhY2hUaWNrQmV0d2VlbihNYXRoLm1heChuLnRpbWUsdCksZS50aW1lLXRoaXMuc2FtcGxlVGltZSxzKSxuPWV9KSk7bGV0IGk9bnVsbDtpZihuJiZcInN0YXJ0ZWRcIj09PW4uc3RhdGUpe2NvbnN0IG89TWF0aC5tYXgobi50aW1lLHQpLHI9dGhpcy5mcmVxdWVuY3kuZ2V0VGlja3NBdFRpbWUobyksYT1yLXRoaXMuZnJlcXVlbmN5LmdldFRpY2tzQXRUaW1lKG4udGltZSk7bGV0IGM9TWF0aC5jZWlsKGEpLWE7Yz15aShjLDEpPzA6YztsZXQgaD10aGlzLmZyZXF1ZW5jeS5nZXRUaW1lT2ZUaWNrKHIrYyk7Zm9yKDtoPGU7KXt0cnl7cyhoLE1hdGgucm91bmQodGhpcy5nZXRUaWNrc0F0VGltZShoKSkpfWNhdGNoKHQpe2k9dDticmVha31oKz10aGlzLmZyZXF1ZW5jeS5nZXREdXJhdGlvbk9mVGlja3MoMSxoKX19aWYoaSl0aHJvdyBpO3JldHVybiB0aGlzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3N0YXRlLmRpc3Bvc2UoKSx0aGlzLl90aWNrT2Zmc2V0LmRpc3Bvc2UoKSx0aGlzLl90aWNrc0F0VGltZS5kaXNwb3NlKCksdGhpcy5fc2Vjb25kc0F0VGltZS5kaXNwb3NlKCksdGhpcy5mcmVxdWVuY3kuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIHZvIGV4dGVuZHMgZW97Y29uc3RydWN0b3IoKXtzdXBlcih1aSh2by5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjYWxsYmFja1wiLFwiZnJlcXVlbmN5XCJdKSksdGhpcy5uYW1lPVwiQ2xvY2tcIix0aGlzLmNhbGxiYWNrPUVpLHRoaXMuX2xhc3RVcGRhdGU9MCx0aGlzLl9zdGF0ZT1uZXcgc28oXCJzdG9wcGVkXCIpLHRoaXMuX2JvdW5kTG9vcD10aGlzLl9sb29wLmJpbmQodGhpcyk7Y29uc3QgdD11aSh2by5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjYWxsYmFja1wiLFwiZnJlcXVlbmN5XCJdKTt0aGlzLmNhbGxiYWNrPXQuY2FsbGJhY2ssdGhpcy5fdGlja1NvdXJjZT1uZXcgZ28oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGZyZXF1ZW5jeTp0LmZyZXF1ZW5jeSx1bml0czp0LnVuaXRzfSksdGhpcy5fbGFzdFVwZGF0ZT0wLHRoaXMuZnJlcXVlbmN5PXRoaXMuX3RpY2tTb3VyY2UuZnJlcXVlbmN5LE9pKHRoaXMsXCJmcmVxdWVuY3lcIiksdGhpcy5fc3RhdGUuc2V0U3RhdGVBdFRpbWUoXCJzdG9wcGVkXCIsMCksdGhpcy5jb250ZXh0Lm9uKFwidGlja1wiLHRoaXMuX2JvdW5kTG9vcCl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oZW8uZ2V0RGVmYXVsdHMoKSx7Y2FsbGJhY2s6RWksZnJlcXVlbmN5OjEsdW5pdHM6XCJoZXJ0elwifSl9Z2V0IHN0YXRlKCl7cmV0dXJuIHRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKHRoaXMubm93KCkpfXN0YXJ0KHQsZSl7R24odGhpcy5jb250ZXh0KTtjb25zdCBzPXRoaXMudG9TZWNvbmRzKHQpO3JldHVybiB0aGlzLmxvZyhcInN0YXJ0XCIscyksXCJzdGFydGVkXCIhPT10aGlzLl9zdGF0ZS5nZXRWYWx1ZUF0VGltZShzKSYmKHRoaXMuX3N0YXRlLnNldFN0YXRlQXRUaW1lKFwic3RhcnRlZFwiLHMpLHRoaXMuX3RpY2tTb3VyY2Uuc3RhcnQocyxlKSxzPHRoaXMuX2xhc3RVcGRhdGUmJnRoaXMuZW1pdChcInN0YXJ0XCIscyxlKSksdGhpc31zdG9wKHQpe2NvbnN0IGU9dGhpcy50b1NlY29uZHModCk7cmV0dXJuIHRoaXMubG9nKFwic3RvcFwiLGUpLHRoaXMuX3N0YXRlLmNhbmNlbChlKSx0aGlzLl9zdGF0ZS5zZXRTdGF0ZUF0VGltZShcInN0b3BwZWRcIixlKSx0aGlzLl90aWNrU291cmNlLnN0b3AoZSksZTx0aGlzLl9sYXN0VXBkYXRlJiZ0aGlzLmVtaXQoXCJzdG9wXCIsZSksdGhpc31wYXVzZSh0KXtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHQpO3JldHVyblwic3RhcnRlZFwiPT09dGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUoZSkmJih0aGlzLl9zdGF0ZS5zZXRTdGF0ZUF0VGltZShcInBhdXNlZFwiLGUpLHRoaXMuX3RpY2tTb3VyY2UucGF1c2UoZSksZTx0aGlzLl9sYXN0VXBkYXRlJiZ0aGlzLmVtaXQoXCJwYXVzZVwiLGUpKSx0aGlzfWdldCB0aWNrcygpe3JldHVybiBNYXRoLmNlaWwodGhpcy5nZXRUaWNrc0F0VGltZSh0aGlzLm5vdygpKSl9c2V0IHRpY2tzKHQpe3RoaXMuX3RpY2tTb3VyY2UudGlja3M9dH1nZXQgc2Vjb25kcygpe3JldHVybiB0aGlzLl90aWNrU291cmNlLnNlY29uZHN9c2V0IHNlY29uZHModCl7dGhpcy5fdGlja1NvdXJjZS5zZWNvbmRzPXR9Z2V0U2Vjb25kc0F0VGltZSh0KXtyZXR1cm4gdGhpcy5fdGlja1NvdXJjZS5nZXRTZWNvbmRzQXRUaW1lKHQpfXNldFRpY2tzQXRUaW1lKHQsZSl7cmV0dXJuIHRoaXMuX3RpY2tTb3VyY2Uuc2V0VGlja3NBdFRpbWUodCxlKSx0aGlzfWdldFRpbWVPZlRpY2sodCxlPXRoaXMubm93KCkpe3JldHVybiB0aGlzLl90aWNrU291cmNlLmdldFRpbWVPZlRpY2sodCxlKX1nZXRUaWNrc0F0VGltZSh0KXtyZXR1cm4gdGhpcy5fdGlja1NvdXJjZS5nZXRUaWNrc0F0VGltZSh0KX1uZXh0VGlja1RpbWUodCxlKXtjb25zdCBzPXRoaXMudG9TZWNvbmRzKGUpLG49dGhpcy5nZXRUaWNrc0F0VGltZShzKTtyZXR1cm4gdGhpcy5fdGlja1NvdXJjZS5nZXRUaW1lT2ZUaWNrKG4rdCxzKX1fbG9vcCgpe2NvbnN0IHQ9dGhpcy5fbGFzdFVwZGF0ZSxlPXRoaXMubm93KCk7dGhpcy5fbGFzdFVwZGF0ZT1lLHRoaXMubG9nKFwibG9vcFwiLHQsZSksdCE9PWUmJih0aGlzLl9zdGF0ZS5mb3JFYWNoQmV0d2Vlbih0LGUsKHQ9Pntzd2l0Y2godC5zdGF0ZSl7Y2FzZVwic3RhcnRlZFwiOmNvbnN0IGU9dGhpcy5fdGlja1NvdXJjZS5nZXRUaWNrc0F0VGltZSh0LnRpbWUpO3RoaXMuZW1pdChcInN0YXJ0XCIsdC50aW1lLGUpO2JyZWFrO2Nhc2VcInN0b3BwZWRcIjowIT09dC50aW1lJiZ0aGlzLmVtaXQoXCJzdG9wXCIsdC50aW1lKTticmVhaztjYXNlXCJwYXVzZWRcIjp0aGlzLmVtaXQoXCJwYXVzZVwiLHQudGltZSl9fSkpLHRoaXMuX3RpY2tTb3VyY2UuZm9yRWFjaFRpY2tCZXR3ZWVuKHQsZSwoKHQsZSk9Pnt0aGlzLmNhbGxiYWNrKHQsZSl9KSkpfWdldFN0YXRlQXRUaW1lKHQpe2NvbnN0IGU9dGhpcy50b1NlY29uZHModCk7cmV0dXJuIHRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKGUpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuY29udGV4dC5vZmYoXCJ0aWNrXCIsdGhpcy5fYm91bmRMb29wKSx0aGlzLl90aWNrU291cmNlLmRpc3Bvc2UoKSx0aGlzLl9zdGF0ZS5kaXNwb3NlKCksdGhpc319QWkubWl4aW4odm8pO2NsYXNzIHlvIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aSh5by5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJkZWxheVRpbWVcIixcIm1heERlbGF5XCJdKSksdGhpcy5uYW1lPVwiRGVsYXlcIjtjb25zdCB0PXVpKHlvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImRlbGF5VGltZVwiLFwibWF4RGVsYXlcIl0pLGU9dGhpcy50b1NlY29uZHModC5tYXhEZWxheSk7dGhpcy5fbWF4RGVsYXk9TWF0aC5tYXgoZSx0aGlzLnRvU2Vjb25kcyh0LmRlbGF5VGltZSkpLHRoaXMuX2RlbGF5Tm9kZT10aGlzLmlucHV0PXRoaXMub3V0cHV0PXRoaXMuY29udGV4dC5jcmVhdGVEZWxheShlKSx0aGlzLmRlbGF5VGltZT1uZXcgbm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHBhcmFtOnRoaXMuX2RlbGF5Tm9kZS5kZWxheVRpbWUsdW5pdHM6XCJ0aW1lXCIsdmFsdWU6dC5kZWxheVRpbWUsbWluVmFsdWU6MCxtYXhWYWx1ZTp0aGlzLm1heERlbGF5fSksT2kodGhpcyxcImRlbGF5VGltZVwiKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtkZWxheVRpbWU6MCxtYXhEZWxheToxfSl9Z2V0IG1heERlbGF5KCl7cmV0dXJuIHRoaXMuX21heERlbGF5fWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2RlbGF5Tm9kZS5kaXNjb25uZWN0KCksdGhpcy5kZWxheVRpbWUuZGlzcG9zZSgpLHRoaXN9fWZ1bmN0aW9uIHhvKHQsZSxzPTIsbj1WaSgpLnNhbXBsZVJhdGUpe3JldHVybiBuaSh0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKigpe2NvbnN0IGk9VmkoKSxvPW5ldyBxaShzLGUsbik7TmkobykseWllbGQgdChvKTtjb25zdCByPW8ucmVuZGVyKCk7TmkoaSk7Y29uc3QgYT15aWVsZCByO3JldHVybiBuZXcgUmkoYSl9KSl9Y2xhc3Mgd28gZXh0ZW5kcyBmaXtjb25zdHJ1Y3Rvcigpe3N1cGVyKCksdGhpcy5uYW1lPVwiVG9uZUF1ZGlvQnVmZmVyc1wiLHRoaXMuX2J1ZmZlcnM9bmV3IE1hcCx0aGlzLl9sb2FkaW5nQ291bnQ9MDtjb25zdCB0PXVpKHdvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInVybHNcIixcIm9ubG9hZFwiLFwiYmFzZVVybFwiXSxcInVybHNcIik7dGhpcy5iYXNlVXJsPXQuYmFzZVVybCxPYmplY3Qua2V5cyh0LnVybHMpLmZvckVhY2goKGU9Pnt0aGlzLl9sb2FkaW5nQ291bnQrKztjb25zdCBzPXQudXJsc1tlXTt0aGlzLmFkZChlLHMsdGhpcy5fYnVmZmVyTG9hZGVkLmJpbmQodGhpcyx0Lm9ubG9hZCksdC5vbmVycm9yKX0pKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm57YmFzZVVybDpcIlwiLG9uZXJyb3I6RWksb25sb2FkOkVpLHVybHM6e319fWhhcyh0KXtyZXR1cm4gdGhpcy5fYnVmZmVycy5oYXModC50b1N0cmluZygpKX1nZXQodCl7cmV0dXJuIEJuKHRoaXMuaGFzKHQpLGBUb25lQXVkaW9CdWZmZXJzIGhhcyBubyBidWZmZXIgbmFtZWQ6ICR7dH1gKSx0aGlzLl9idWZmZXJzLmdldCh0LnRvU3RyaW5nKCkpfV9idWZmZXJMb2FkZWQodCl7dGhpcy5fbG9hZGluZ0NvdW50LS0sMD09PXRoaXMuX2xvYWRpbmdDb3VudCYmdCYmdCgpfWdldCBsb2FkZWQoKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9idWZmZXJzKS5ldmVyeSgoKFt0LGVdKT0+ZS5sb2FkZWQpKX1hZGQodCxlLHM9RWksbj1FaSl7cmV0dXJuIHpuKGUpPyh0aGlzLmJhc2VVcmwmJlwiZGF0YTphdWRpby9cIj09PWUudHJpbSgpLnN1YnN0cmluZygwLDExKS50b0xvd2VyQ2FzZSgpJiYodGhpcy5iYXNlVXJsPVwiXCIpLHRoaXMuX2J1ZmZlcnMuc2V0KHQudG9TdHJpbmcoKSxuZXcgUmkodGhpcy5iYXNlVXJsK2UscyxuKSkpOnRoaXMuX2J1ZmZlcnMuc2V0KHQudG9TdHJpbmcoKSxuZXcgUmkoZSxzLG4pKSx0aGlzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2J1ZmZlcnMuZm9yRWFjaCgodD0+dC5kaXNwb3NlKCkpKSx0aGlzLl9idWZmZXJzLmNsZWFyKCksdGhpc319Y2xhc3MgYm8gZXh0ZW5kcyBZaXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5uYW1lPVwiTWlkaUNsYXNzXCIsdGhpcy5kZWZhdWx0VW5pdHM9XCJtaWRpXCJ9X2ZyZXF1ZW5jeVRvVW5pdHModCl7cmV0dXJuIEJpKHN1cGVyLl9mcmVxdWVuY3lUb1VuaXRzKHQpKX1fdGlja3NUb1VuaXRzKHQpe3JldHVybiBCaShzdXBlci5fdGlja3NUb1VuaXRzKHQpKX1fYmVhdHNUb1VuaXRzKHQpe3JldHVybiBCaShzdXBlci5fYmVhdHNUb1VuaXRzKHQpKX1fc2Vjb25kc1RvVW5pdHModCl7cmV0dXJuIEJpKHN1cGVyLl9zZWNvbmRzVG9Vbml0cyh0KSl9dG9NaWRpKCl7cmV0dXJuIHRoaXMudmFsdWVPZigpfXRvRnJlcXVlbmN5KCl7cmV0dXJuIEdpKHRoaXMudG9NaWRpKCkpfXRyYW5zcG9zZSh0KXtyZXR1cm4gbmV3IGJvKHRoaXMuY29udGV4dCx0aGlzLnRvTWlkaSgpK3QpfX1mdW5jdGlvbiBUbyh0LGUpe3JldHVybiBuZXcgYm8oVmkoKSx0LGUpfWNsYXNzIFNvIGV4dGVuZHMgS2l7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMubmFtZT1cIlRpY2tzXCIsdGhpcy5kZWZhdWx0VW5pdHM9XCJpXCJ9X25vdygpe3JldHVybiB0aGlzLmNvbnRleHQudHJhbnNwb3J0LnRpY2tzfV9iZWF0c1RvVW5pdHModCl7cmV0dXJuIHRoaXMuX2dldFBQUSgpKnR9X3NlY29uZHNUb1VuaXRzKHQpe3JldHVybiBNYXRoLmZsb29yKHQvKDYwL3RoaXMuX2dldEJwbSgpKSp0aGlzLl9nZXRQUFEoKSl9X3RpY2tzVG9Vbml0cyh0KXtyZXR1cm4gdH10b1RpY2tzKCl7cmV0dXJuIHRoaXMudmFsdWVPZigpfXRvU2Vjb25kcygpe3JldHVybiB0aGlzLnZhbHVlT2YoKS90aGlzLl9nZXRQUFEoKSooNjAvdGhpcy5fZ2V0QnBtKCkpfX1mdW5jdGlvbiBrbyh0LGUpe3JldHVybiBuZXcgU28oVmkoKSx0LGUpfWNsYXNzIEFvIGV4dGVuZHMgZW97Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMubmFtZT1cIkRyYXdcIix0aGlzLmV4cGlyYXRpb249LjI1LHRoaXMuYW50aWNpcGF0aW9uPS4wMDgsdGhpcy5fZXZlbnRzPW5ldyB3aSx0aGlzLl9ib3VuZERyYXdMb29wPXRoaXMuX2RyYXdMb29wLmJpbmQodGhpcyksdGhpcy5fYW5pbWF0aW9uRnJhbWU9LTF9c2NoZWR1bGUodCxlKXtyZXR1cm4gdGhpcy5fZXZlbnRzLmFkZCh7Y2FsbGJhY2s6dCx0aW1lOnRoaXMudG9TZWNvbmRzKGUpfSksMT09PXRoaXMuX2V2ZW50cy5sZW5ndGgmJih0aGlzLl9hbmltYXRpb25GcmFtZT1yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5fYm91bmREcmF3TG9vcCkpLHRoaXN9Y2FuY2VsKHQpe3JldHVybiB0aGlzLl9ldmVudHMuY2FuY2VsKHRoaXMudG9TZWNvbmRzKHQpKSx0aGlzfV9kcmF3TG9vcCgpe2NvbnN0IHQ9dGhpcy5jb250ZXh0LmN1cnJlbnRUaW1lO2Zvcig7dGhpcy5fZXZlbnRzLmxlbmd0aCYmdGhpcy5fZXZlbnRzLnBlZWsoKS50aW1lLXRoaXMuYW50aWNpcGF0aW9uPD10Oyl7Y29uc3QgZT10aGlzLl9ldmVudHMuc2hpZnQoKTtlJiZ0LWUudGltZTw9dGhpcy5leHBpcmF0aW9uJiZlLmNhbGxiYWNrKCl9dGhpcy5fZXZlbnRzLmxlbmd0aD4wJiYodGhpcy5fYW5pbWF0aW9uRnJhbWU9cmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuX2JvdW5kRHJhd0xvb3ApKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9ldmVudHMuZGlzcG9zZSgpLGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuX2FuaW1hdGlvbkZyYW1lKSx0aGlzfX1UaSgodD0+e3QuZHJhdz1uZXcgQW8oe2NvbnRleHQ6dH0pfSkpLGtpKCh0PT57dC5kcmF3LmRpc3Bvc2UoKX0pKTtjbGFzcyBDbyBleHRlbmRzIGZpe2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLm5hbWU9XCJJbnRlcnZhbFRpbWVsaW5lXCIsdGhpcy5fcm9vdD1udWxsLHRoaXMuX2xlbmd0aD0wfWFkZCh0KXtCbihJbih0LnRpbWUpLFwiRXZlbnRzIG11c3QgaGF2ZSBhIHRpbWUgcHJvcGVydHlcIiksQm4oSW4odC5kdXJhdGlvbiksXCJFdmVudHMgbXVzdCBoYXZlIGEgZHVyYXRpb24gcGFyYW1ldGVyXCIpLHQudGltZT10LnRpbWUudmFsdWVPZigpO2xldCBlPW5ldyBEbyh0LnRpbWUsdC50aW1lK3QuZHVyYXRpb24sdCk7Zm9yKG51bGw9PT10aGlzLl9yb290P3RoaXMuX3Jvb3Q9ZTp0aGlzLl9yb290Lmluc2VydChlKSx0aGlzLl9sZW5ndGgrKztudWxsIT09ZTspZS51cGRhdGVIZWlnaHQoKSxlLnVwZGF0ZU1heCgpLHRoaXMuX3JlYmFsYW5jZShlKSxlPWUucGFyZW50O3JldHVybiB0aGlzfXJlbW92ZSh0KXtpZihudWxsIT09dGhpcy5fcm9vdCl7Y29uc3QgZT1bXTt0aGlzLl9yb290LnNlYXJjaCh0LnRpbWUsZSk7Zm9yKGNvbnN0IHMgb2YgZSlpZihzLmV2ZW50PT09dCl7dGhpcy5fcmVtb3ZlTm9kZShzKSx0aGlzLl9sZW5ndGgtLTticmVha319cmV0dXJuIHRoaXN9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLl9sZW5ndGh9Y2FuY2VsKHQpe3JldHVybiB0aGlzLmZvckVhY2hGcm9tKHQsKHQ9PnRoaXMucmVtb3ZlKHQpKSksdGhpc31fc2V0Um9vdCh0KXt0aGlzLl9yb290PXQsbnVsbCE9PXRoaXMuX3Jvb3QmJih0aGlzLl9yb290LnBhcmVudD1udWxsKX1fcmVwbGFjZU5vZGVJblBhcmVudCh0LGUpe251bGwhPT10LnBhcmVudD8odC5pc0xlZnRDaGlsZCgpP3QucGFyZW50LmxlZnQ9ZTp0LnBhcmVudC5yaWdodD1lLHRoaXMuX3JlYmFsYW5jZSh0LnBhcmVudCkpOnRoaXMuX3NldFJvb3QoZSl9X3JlbW92ZU5vZGUodCl7aWYobnVsbD09PXQubGVmdCYmbnVsbD09PXQucmlnaHQpdGhpcy5fcmVwbGFjZU5vZGVJblBhcmVudCh0LG51bGwpO2Vsc2UgaWYobnVsbD09PXQucmlnaHQpdGhpcy5fcmVwbGFjZU5vZGVJblBhcmVudCh0LHQubGVmdCk7ZWxzZSBpZihudWxsPT09dC5sZWZ0KXRoaXMuX3JlcGxhY2VOb2RlSW5QYXJlbnQodCx0LnJpZ2h0KTtlbHNle2xldCBlLHM9bnVsbDtpZih0LmdldEJhbGFuY2UoKT4wKWlmKG51bGw9PT10LmxlZnQucmlnaHQpZT10LmxlZnQsZS5yaWdodD10LnJpZ2h0LHM9ZTtlbHNle2ZvcihlPXQubGVmdC5yaWdodDtudWxsIT09ZS5yaWdodDspZT1lLnJpZ2h0O2UucGFyZW50JiYoZS5wYXJlbnQucmlnaHQ9ZS5sZWZ0LHM9ZS5wYXJlbnQsZS5sZWZ0PXQubGVmdCxlLnJpZ2h0PXQucmlnaHQpfWVsc2UgaWYobnVsbD09PXQucmlnaHQubGVmdCllPXQucmlnaHQsZS5sZWZ0PXQubGVmdCxzPWU7ZWxzZXtmb3IoZT10LnJpZ2h0LmxlZnQ7bnVsbCE9PWUubGVmdDspZT1lLmxlZnQ7ZS5wYXJlbnQmJihlLnBhcmVudC5sZWZ0PWUucmlnaHQscz1lLnBhcmVudCxlLmxlZnQ9dC5sZWZ0LGUucmlnaHQ9dC5yaWdodCl9bnVsbCE9PXQucGFyZW50P3QuaXNMZWZ0Q2hpbGQoKT90LnBhcmVudC5sZWZ0PWU6dC5wYXJlbnQucmlnaHQ9ZTp0aGlzLl9zZXRSb290KGUpLHMmJnRoaXMuX3JlYmFsYW5jZShzKX10LmRpc3Bvc2UoKX1fcm90YXRlTGVmdCh0KXtjb25zdCBlPXQucGFyZW50LHM9dC5pc0xlZnRDaGlsZCgpLG49dC5yaWdodDtuJiYodC5yaWdodD1uLmxlZnQsbi5sZWZ0PXQpLG51bGwhPT1lP3M/ZS5sZWZ0PW46ZS5yaWdodD1uOnRoaXMuX3NldFJvb3Qobil9X3JvdGF0ZVJpZ2h0KHQpe2NvbnN0IGU9dC5wYXJlbnQscz10LmlzTGVmdENoaWxkKCksbj10LmxlZnQ7biYmKHQubGVmdD1uLnJpZ2h0LG4ucmlnaHQ9dCksbnVsbCE9PWU/cz9lLmxlZnQ9bjplLnJpZ2h0PW46dGhpcy5fc2V0Um9vdChuKX1fcmViYWxhbmNlKHQpe2NvbnN0IGU9dC5nZXRCYWxhbmNlKCk7ZT4xJiZ0LmxlZnQ/dC5sZWZ0LmdldEJhbGFuY2UoKTwwP3RoaXMuX3JvdGF0ZUxlZnQodC5sZWZ0KTp0aGlzLl9yb3RhdGVSaWdodCh0KTplPC0xJiZ0LnJpZ2h0JiYodC5yaWdodC5nZXRCYWxhbmNlKCk+MD90aGlzLl9yb3RhdGVSaWdodCh0LnJpZ2h0KTp0aGlzLl9yb3RhdGVMZWZ0KHQpKX1nZXQodCl7aWYobnVsbCE9PXRoaXMuX3Jvb3Qpe2NvbnN0IGU9W107aWYodGhpcy5fcm9vdC5zZWFyY2godCxlKSxlLmxlbmd0aD4wKXtsZXQgdD1lWzBdO2ZvcihsZXQgcz0xO3M8ZS5sZW5ndGg7cysrKWVbc10ubG93PnQubG93JiYodD1lW3NdKTtyZXR1cm4gdC5ldmVudH19cmV0dXJuIG51bGx9Zm9yRWFjaCh0KXtpZihudWxsIT09dGhpcy5fcm9vdCl7Y29uc3QgZT1bXTt0aGlzLl9yb290LnRyYXZlcnNlKCh0PT5lLnB1c2godCkpKSxlLmZvckVhY2goKGU9PntlLmV2ZW50JiZ0KGUuZXZlbnQpfSkpfXJldHVybiB0aGlzfWZvckVhY2hBdFRpbWUodCxlKXtpZihudWxsIT09dGhpcy5fcm9vdCl7Y29uc3Qgcz1bXTt0aGlzLl9yb290LnNlYXJjaCh0LHMpLHMuZm9yRWFjaCgodD0+e3QuZXZlbnQmJmUodC5ldmVudCl9KSl9cmV0dXJuIHRoaXN9Zm9yRWFjaEZyb20odCxlKXtpZihudWxsIT09dGhpcy5fcm9vdCl7Y29uc3Qgcz1bXTt0aGlzLl9yb290LnNlYXJjaEFmdGVyKHQscykscy5mb3JFYWNoKCh0PT57dC5ldmVudCYmZSh0LmV2ZW50KX0pKX1yZXR1cm4gdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSxudWxsIT09dGhpcy5fcm9vdCYmdGhpcy5fcm9vdC50cmF2ZXJzZSgodD0+dC5kaXNwb3NlKCkpKSx0aGlzLl9yb290PW51bGwsdGhpc319Y2xhc3MgRG97Y29uc3RydWN0b3IodCxlLHMpe3RoaXMuX2xlZnQ9bnVsbCx0aGlzLl9yaWdodD1udWxsLHRoaXMucGFyZW50PW51bGwsdGhpcy5oZWlnaHQ9MCx0aGlzLmV2ZW50PXMsdGhpcy5sb3c9dCx0aGlzLmhpZ2g9ZSx0aGlzLm1heD10aGlzLmhpZ2h9aW5zZXJ0KHQpe3QubG93PD10aGlzLmxvdz9udWxsPT09dGhpcy5sZWZ0P3RoaXMubGVmdD10OnRoaXMubGVmdC5pbnNlcnQodCk6bnVsbD09PXRoaXMucmlnaHQ/dGhpcy5yaWdodD10OnRoaXMucmlnaHQuaW5zZXJ0KHQpfXNlYXJjaCh0LGUpe3Q+dGhpcy5tYXh8fChudWxsIT09dGhpcy5sZWZ0JiZ0aGlzLmxlZnQuc2VhcmNoKHQsZSksdGhpcy5sb3c8PXQmJnRoaXMuaGlnaD50JiZlLnB1c2godGhpcyksdGhpcy5sb3c+dHx8bnVsbCE9PXRoaXMucmlnaHQmJnRoaXMucmlnaHQuc2VhcmNoKHQsZSkpfXNlYXJjaEFmdGVyKHQsZSl7dGhpcy5sb3c+PXQmJihlLnB1c2godGhpcyksbnVsbCE9PXRoaXMubGVmdCYmdGhpcy5sZWZ0LnNlYXJjaEFmdGVyKHQsZSkpLG51bGwhPT10aGlzLnJpZ2h0JiZ0aGlzLnJpZ2h0LnNlYXJjaEFmdGVyKHQsZSl9dHJhdmVyc2UodCl7dCh0aGlzKSxudWxsIT09dGhpcy5sZWZ0JiZ0aGlzLmxlZnQudHJhdmVyc2UodCksbnVsbCE9PXRoaXMucmlnaHQmJnRoaXMucmlnaHQudHJhdmVyc2UodCl9dXBkYXRlSGVpZ2h0KCl7bnVsbCE9PXRoaXMubGVmdCYmbnVsbCE9PXRoaXMucmlnaHQ/dGhpcy5oZWlnaHQ9TWF0aC5tYXgodGhpcy5sZWZ0LmhlaWdodCx0aGlzLnJpZ2h0LmhlaWdodCkrMTpudWxsIT09dGhpcy5yaWdodD90aGlzLmhlaWdodD10aGlzLnJpZ2h0LmhlaWdodCsxOm51bGwhPT10aGlzLmxlZnQ/dGhpcy5oZWlnaHQ9dGhpcy5sZWZ0LmhlaWdodCsxOnRoaXMuaGVpZ2h0PTB9dXBkYXRlTWF4KCl7dGhpcy5tYXg9dGhpcy5oaWdoLG51bGwhPT10aGlzLmxlZnQmJih0aGlzLm1heD1NYXRoLm1heCh0aGlzLm1heCx0aGlzLmxlZnQubWF4KSksbnVsbCE9PXRoaXMucmlnaHQmJih0aGlzLm1heD1NYXRoLm1heCh0aGlzLm1heCx0aGlzLnJpZ2h0Lm1heCkpfWdldEJhbGFuY2UoKXtsZXQgdD0wO3JldHVybiBudWxsIT09dGhpcy5sZWZ0JiZudWxsIT09dGhpcy5yaWdodD90PXRoaXMubGVmdC5oZWlnaHQtdGhpcy5yaWdodC5oZWlnaHQ6bnVsbCE9PXRoaXMubGVmdD90PXRoaXMubGVmdC5oZWlnaHQrMTpudWxsIT09dGhpcy5yaWdodCYmKHQ9LSh0aGlzLnJpZ2h0LmhlaWdodCsxKSksdH1pc0xlZnRDaGlsZCgpe3JldHVybiBudWxsIT09dGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LmxlZnQ9PT10aGlzfWdldCBsZWZ0KCl7cmV0dXJuIHRoaXMuX2xlZnR9c2V0IGxlZnQodCl7dGhpcy5fbGVmdD10LG51bGwhPT10JiYodC5wYXJlbnQ9dGhpcyksdGhpcy51cGRhdGVIZWlnaHQoKSx0aGlzLnVwZGF0ZU1heCgpfWdldCByaWdodCgpe3JldHVybiB0aGlzLl9yaWdodH1zZXQgcmlnaHQodCl7dGhpcy5fcmlnaHQ9dCxudWxsIT09dCYmKHQucGFyZW50PXRoaXMpLHRoaXMudXBkYXRlSGVpZ2h0KCksdGhpcy51cGRhdGVNYXgoKX1kaXNwb3NlKCl7dGhpcy5wYXJlbnQ9bnVsbCx0aGlzLl9sZWZ0PW51bGwsdGhpcy5fcmlnaHQ9bnVsbCx0aGlzLmV2ZW50PW51bGx9fWNsYXNzIE9vIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShPby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ2b2x1bWVcIl0pKSx0aGlzLm5hbWU9XCJWb2x1bWVcIjtjb25zdCB0PXVpKE9vLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZvbHVtZVwiXSk7dGhpcy5pbnB1dD10aGlzLm91dHB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46dC52b2x1bWUsdW5pdHM6XCJkZWNpYmVsc1wifSksdGhpcy52b2x1bWU9dGhpcy5vdXRwdXQuZ2FpbixPaSh0aGlzLFwidm9sdW1lXCIpLHRoaXMuX3VubXV0ZWRWb2x1bWU9dC52b2x1bWUsdGhpcy5tdXRlPXQubXV0ZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHttdXRlOiExLHZvbHVtZTowfSl9Z2V0IG11dGUoKXtyZXR1cm4gdGhpcy52b2x1bWUudmFsdWU9PT0tMS8wfXNldCBtdXRlKHQpeyF0aGlzLm11dGUmJnQ/KHRoaXMuX3VubXV0ZWRWb2x1bWU9dGhpcy52b2x1bWUudmFsdWUsdGhpcy52b2x1bWUudmFsdWU9LTEvMCk6dGhpcy5tdXRlJiYhdCYmKHRoaXMudm9sdW1lLnZhbHVlPXRoaXMuX3VubXV0ZWRWb2x1bWUpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuaW5wdXQuZGlzcG9zZSgpLHRoaXMudm9sdW1lLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBNbyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoTW8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJEZXN0aW5hdGlvblwiLHRoaXMuaW5wdXQ9bmV3IE9vKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMub3V0cHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLnZvbHVtZT10aGlzLmlucHV0LnZvbHVtZTtjb25zdCB0PXVpKE1vLmdldERlZmF1bHRzKCksYXJndW1lbnRzKTtvbyh0aGlzLmlucHV0LHRoaXMub3V0cHV0LHRoaXMuY29udGV4dC5yYXdDb250ZXh0LmRlc3RpbmF0aW9uKSx0aGlzLm11dGU9dC5tdXRlLHRoaXMuX2ludGVybmFsQ2hhbm5lbHM9W3RoaXMuaW5wdXQsdGhpcy5jb250ZXh0LnJhd0NvbnRleHQuZGVzdGluYXRpb24sdGhpcy5vdXRwdXRdfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGlvLmdldERlZmF1bHRzKCkse211dGU6ITEsdm9sdW1lOjB9KX1nZXQgbXV0ZSgpe3JldHVybiB0aGlzLmlucHV0Lm11dGV9c2V0IG11dGUodCl7dGhpcy5pbnB1dC5tdXRlPXR9Y2hhaW4oLi4udCl7cmV0dXJuIHRoaXMuaW5wdXQuZGlzY29ubmVjdCgpLHQudW5zaGlmdCh0aGlzLmlucHV0KSx0LnB1c2godGhpcy5vdXRwdXQpLG9vKC4uLnQpLHRoaXN9Z2V0IG1heENoYW5uZWxDb3VudCgpe3JldHVybiB0aGlzLmNvbnRleHQucmF3Q29udGV4dC5kZXN0aW5hdGlvbi5tYXhDaGFubmVsQ291bnR9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy52b2x1bWUuZGlzcG9zZSgpLHRoaXN9fVRpKCh0PT57dC5kZXN0aW5hdGlvbj1uZXcgTW8oe2NvbnRleHQ6dH0pfSkpLGtpKCh0PT57dC5kZXN0aW5hdGlvbi5kaXNwb3NlKCl9KSk7Y2xhc3MgRW8gZXh0ZW5kcyBmaXtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMubmFtZT1cIlRpbWVsaW5lVmFsdWVcIix0aGlzLl90aW1lbGluZT1uZXcgd2koe21lbW9yeToxMH0pLHRoaXMuX2luaXRpYWxWYWx1ZT10fXNldCh0LGUpe3JldHVybiB0aGlzLl90aW1lbGluZS5hZGQoe3ZhbHVlOnQsdGltZTplfSksdGhpc31nZXQodCl7Y29uc3QgZT10aGlzLl90aW1lbGluZS5nZXQodCk7cmV0dXJuIGU/ZS52YWx1ZTp0aGlzLl9pbml0aWFsVmFsdWV9fWNsYXNzIFJvIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcihPYmplY3QuYXNzaWduKHVpKFJvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImNvbnRleHRcIl0pKSl9Y29ubmVjdCh0LGU9MCxzPTApe3JldHVybiBmbyh0aGlzLHQsZSxzKSx0aGlzfX1jbGFzcyBxbyBleHRlbmRzIFJve2NvbnN0cnVjdG9yKCl7c3VwZXIoT2JqZWN0LmFzc2lnbih1aShxby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJtYXBwaW5nXCIsXCJsZW5ndGhcIl0pKSksdGhpcy5uYW1lPVwiV2F2ZVNoYXBlclwiLHRoaXMuX3NoYXBlcj10aGlzLmNvbnRleHQuY3JlYXRlV2F2ZVNoYXBlcigpLHRoaXMuaW5wdXQ9dGhpcy5fc2hhcGVyLHRoaXMub3V0cHV0PXRoaXMuX3NoYXBlcjtjb25zdCB0PXVpKHFvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcIm1hcHBpbmdcIixcImxlbmd0aFwiXSk7TG4odC5tYXBwaW5nKXx8dC5tYXBwaW5nIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5P3RoaXMuY3VydmU9RmxvYXQzMkFycmF5LmZyb20odC5tYXBwaW5nKTpWbih0Lm1hcHBpbmcpJiZ0aGlzLnNldE1hcCh0Lm1hcHBpbmcsdC5sZW5ndGgpfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKHBvLmdldERlZmF1bHRzKCkse2xlbmd0aDoxMDI0fSl9c2V0TWFwKHQsZT0xMDI0KXtjb25zdCBzPW5ldyBGbG9hdDMyQXJyYXkoZSk7Zm9yKGxldCBuPTAsaT1lO248aTtuKyspe2NvbnN0IGU9bi8oaS0xKSoyLTE7c1tuXT10KGUsbil9cmV0dXJuIHRoaXMuY3VydmU9cyx0aGlzfWdldCBjdXJ2ZSgpe3JldHVybiB0aGlzLl9zaGFwZXIuY3VydmV9c2V0IGN1cnZlKHQpe3RoaXMuX3NoYXBlci5jdXJ2ZT10fWdldCBvdmVyc2FtcGxlKCl7cmV0dXJuIHRoaXMuX3NoYXBlci5vdmVyc2FtcGxlfXNldCBvdmVyc2FtcGxlKHQpe0JuKFtcIm5vbmVcIixcIjJ4XCIsXCI0eFwiXS5zb21lKChlPT5lLmluY2x1ZGVzKHQpKSksXCJvdmVyc2FtcGxpbmcgbXVzdCBiZSBlaXRoZXIgJ25vbmUnLCAnMngnLCBvciAnNHgnXCIpLHRoaXMuX3NoYXBlci5vdmVyc2FtcGxlPXR9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fc2hhcGVyLmRpc2Nvbm5lY3QoKSx0aGlzfX1jbGFzcyBGbyBleHRlbmRzIFJve2NvbnN0cnVjdG9yKCl7c3VwZXIoT2JqZWN0LmFzc2lnbih1aShGby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ2YWx1ZVwiXSkpKSx0aGlzLm5hbWU9XCJQb3dcIjtjb25zdCB0PXVpKEZvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZhbHVlXCJdKTt0aGlzLl9leHBvbmVudFNjYWxlcj10aGlzLmlucHV0PXRoaXMub3V0cHV0PW5ldyBxbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsbWFwcGluZzp0aGlzLl9leHBGdW5jKHQudmFsdWUpLGxlbmd0aDo4MTkyfSksdGhpcy5fZXhwb25lbnQ9dC52YWx1ZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihSby5nZXREZWZhdWx0cygpLHt2YWx1ZToxfSl9X2V4cEZ1bmModCl7cmV0dXJuIGU9Pk1hdGgucG93KE1hdGguYWJzKGUpLHQpfWdldCB2YWx1ZSgpe3JldHVybiB0aGlzLl9leHBvbmVudH1zZXQgdmFsdWUodCl7dGhpcy5fZXhwb25lbnQ9dCx0aGlzLl9leHBvbmVudFNjYWxlci5zZXRNYXAodGhpcy5fZXhwRnVuYyh0aGlzLl9leHBvbmVudCkpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2V4cG9uZW50U2NhbGVyLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBJb3tjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuaWQ9SW8uX2V2ZW50SWQrKyx0aGlzLl9yZW1haW5kZXJUaW1lPTA7Y29uc3Qgcz1PYmplY3QuYXNzaWduKElvLmdldERlZmF1bHRzKCksZSk7dGhpcy50cmFuc3BvcnQ9dCx0aGlzLmNhbGxiYWNrPXMuY2FsbGJhY2ssdGhpcy5fb25jZT1zLm9uY2UsdGhpcy50aW1lPU1hdGguZmxvb3Iocy50aW1lKSx0aGlzLl9yZW1haW5kZXJUaW1lPXMudGltZS10aGlzLnRpbWV9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJue2NhbGxiYWNrOkVpLG9uY2U6ITEsdGltZTowfX1nZXQgZmxvYXRUaW1lKCl7cmV0dXJuIHRoaXMudGltZSt0aGlzLl9yZW1haW5kZXJUaW1lfWludm9rZSh0KXtpZih0aGlzLmNhbGxiYWNrKXtjb25zdCBlPXRoaXMudHJhbnNwb3J0LmJwbS5nZXREdXJhdGlvbk9mVGlja3MoMSx0KTt0aGlzLmNhbGxiYWNrKHQrdGhpcy5fcmVtYWluZGVyVGltZSplKSx0aGlzLl9vbmNlJiZ0aGlzLnRyYW5zcG9ydC5jbGVhcih0aGlzLmlkKX19ZGlzcG9zZSgpe3JldHVybiB0aGlzLmNhbGxiYWNrPXZvaWQgMCx0aGlzfX1Jby5fZXZlbnRJZD0wO2NsYXNzIFZvIGV4dGVuZHMgSW97Y29uc3RydWN0b3IodCxlKXtzdXBlcih0LGUpLHRoaXMuX2N1cnJlbnRJZD0tMSx0aGlzLl9uZXh0SWQ9LTEsdGhpcy5fbmV4dFRpY2s9dGhpcy50aW1lLHRoaXMuX2JvdW5kUmVzdGFydD10aGlzLl9yZXN0YXJ0LmJpbmQodGhpcyk7Y29uc3Qgcz1PYmplY3QuYXNzaWduKFZvLmdldERlZmF1bHRzKCksZSk7dGhpcy5kdXJhdGlvbj1zLmR1cmF0aW9uLHRoaXMuX2ludGVydmFsPXMuaW50ZXJ2YWwsdGhpcy5fbmV4dFRpY2s9cy50aW1lLHRoaXMudHJhbnNwb3J0Lm9uKFwic3RhcnRcIix0aGlzLl9ib3VuZFJlc3RhcnQpLHRoaXMudHJhbnNwb3J0Lm9uKFwibG9vcFN0YXJ0XCIsdGhpcy5fYm91bmRSZXN0YXJ0KSx0aGlzLnRyYW5zcG9ydC5vbihcInRpY2tzXCIsdGhpcy5fYm91bmRSZXN0YXJ0KSx0aGlzLmNvbnRleHQ9dGhpcy50cmFuc3BvcnQuY29udGV4dCx0aGlzLl9yZXN0YXJ0KCl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oe30sSW8uZ2V0RGVmYXVsdHMoKSx7ZHVyYXRpb246MS8wLGludGVydmFsOjEsb25jZTohMX0pfWludm9rZSh0KXt0aGlzLl9jcmVhdGVFdmVudHModCksc3VwZXIuaW52b2tlKHQpfV9jcmVhdGVFdmVudCgpe3JldHVybiB2aSh0aGlzLl9uZXh0VGljayx0aGlzLmZsb2F0VGltZSt0aGlzLmR1cmF0aW9uKT90aGlzLnRyYW5zcG9ydC5zY2hlZHVsZU9uY2UodGhpcy5pbnZva2UuYmluZCh0aGlzKSxuZXcgU28odGhpcy5jb250ZXh0LHRoaXMuX25leHRUaWNrKS50b1NlY29uZHMoKSk6LTF9X2NyZWF0ZUV2ZW50cyh0KXt2aSh0aGlzLl9uZXh0VGljayt0aGlzLl9pbnRlcnZhbCx0aGlzLmZsb2F0VGltZSt0aGlzLmR1cmF0aW9uKSYmKHRoaXMuX25leHRUaWNrKz10aGlzLl9pbnRlcnZhbCx0aGlzLl9jdXJyZW50SWQ9dGhpcy5fbmV4dElkLHRoaXMuX25leHRJZD10aGlzLnRyYW5zcG9ydC5zY2hlZHVsZU9uY2UodGhpcy5pbnZva2UuYmluZCh0aGlzKSxuZXcgU28odGhpcy5jb250ZXh0LHRoaXMuX25leHRUaWNrKS50b1NlY29uZHMoKSkpfV9yZXN0YXJ0KHQpe3RoaXMudHJhbnNwb3J0LmNsZWFyKHRoaXMuX2N1cnJlbnRJZCksdGhpcy50cmFuc3BvcnQuY2xlYXIodGhpcy5fbmV4dElkKSx0aGlzLl9uZXh0VGljaz10aGlzLmZsb2F0VGltZTtjb25zdCBlPXRoaXMudHJhbnNwb3J0LmdldFRpY2tzQXRUaW1lKHQpO21pKGUsdGhpcy50aW1lKSYmKHRoaXMuX25leHRUaWNrPXRoaXMuZmxvYXRUaW1lK01hdGguY2VpbCgoZS10aGlzLmZsb2F0VGltZSkvdGhpcy5faW50ZXJ2YWwpKnRoaXMuX2ludGVydmFsKSx0aGlzLl9jdXJyZW50SWQ9dGhpcy5fY3JlYXRlRXZlbnQoKSx0aGlzLl9uZXh0VGljays9dGhpcy5faW50ZXJ2YWwsdGhpcy5fbmV4dElkPXRoaXMuX2NyZWF0ZUV2ZW50KCl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy50cmFuc3BvcnQuY2xlYXIodGhpcy5fY3VycmVudElkKSx0aGlzLnRyYW5zcG9ydC5jbGVhcih0aGlzLl9uZXh0SWQpLHRoaXMudHJhbnNwb3J0Lm9mZihcInN0YXJ0XCIsdGhpcy5fYm91bmRSZXN0YXJ0KSx0aGlzLnRyYW5zcG9ydC5vZmYoXCJsb29wU3RhcnRcIix0aGlzLl9ib3VuZFJlc3RhcnQpLHRoaXMudHJhbnNwb3J0Lm9mZihcInRpY2tzXCIsdGhpcy5fYm91bmRSZXN0YXJ0KSx0aGlzfX1jbGFzcyBObyBleHRlbmRzIGVve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoTm8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJUcmFuc3BvcnRcIix0aGlzLl9sb29wPW5ldyBFbyghMSksdGhpcy5fbG9vcFN0YXJ0PTAsdGhpcy5fbG9vcEVuZD0wLHRoaXMuX3NjaGVkdWxlZEV2ZW50cz17fSx0aGlzLl90aW1lbGluZT1uZXcgd2ksdGhpcy5fcmVwZWF0ZWRFdmVudHM9bmV3IENvLHRoaXMuX3N5bmNlZFNpZ25hbHM9W10sdGhpcy5fc3dpbmdBbW91bnQ9MDtjb25zdCB0PXVpKE5vLmdldERlZmF1bHRzKCksYXJndW1lbnRzKTt0aGlzLl9wcHE9dC5wcHEsdGhpcy5fY2xvY2s9bmV3IHZvKHtjYWxsYmFjazp0aGlzLl9wcm9jZXNzVGljay5iaW5kKHRoaXMpLGNvbnRleHQ6dGhpcy5jb250ZXh0LGZyZXF1ZW5jeTowLHVuaXRzOlwiYnBtXCJ9KSx0aGlzLl9iaW5kQ2xvY2tFdmVudHMoKSx0aGlzLmJwbT10aGlzLl9jbG9jay5mcmVxdWVuY3ksdGhpcy5fY2xvY2suZnJlcXVlbmN5Lm11bHRpcGxpZXI9dC5wcHEsdGhpcy5icG0uc2V0VmFsdWVBdFRpbWUodC5icG0sMCksT2kodGhpcyxcImJwbVwiKSx0aGlzLl90aW1lU2lnbmF0dXJlPXQudGltZVNpZ25hdHVyZSx0aGlzLl9zd2luZ1RpY2tzPXQucHBxLzJ9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oZW8uZ2V0RGVmYXVsdHMoKSx7YnBtOjEyMCxsb29wRW5kOlwiNG1cIixsb29wU3RhcnQ6MCxwcHE6MTkyLHN3aW5nOjAsc3dpbmdTdWJkaXZpc2lvbjpcIjhuXCIsdGltZVNpZ25hdHVyZTo0fSl9X3Byb2Nlc3NUaWNrKHQsZSl7aWYodGhpcy5fbG9vcC5nZXQodCkmJmU+PXRoaXMuX2xvb3BFbmQmJih0aGlzLmVtaXQoXCJsb29wRW5kXCIsdCksdGhpcy5fY2xvY2suc2V0VGlja3NBdFRpbWUodGhpcy5fbG9vcFN0YXJ0LHQpLGU9dGhpcy5fbG9vcFN0YXJ0LHRoaXMuZW1pdChcImxvb3BTdGFydFwiLHQsdGhpcy5fY2xvY2suZ2V0U2Vjb25kc0F0VGltZSh0KSksdGhpcy5lbWl0KFwibG9vcFwiLHQpKSx0aGlzLl9zd2luZ0Ftb3VudD4wJiZlJXRoaXMuX3BwcSE9MCYmZSUoMip0aGlzLl9zd2luZ1RpY2tzKSE9MCl7Y29uc3Qgcz1lJSgyKnRoaXMuX3N3aW5nVGlja3MpLygyKnRoaXMuX3N3aW5nVGlja3MpLG49TWF0aC5zaW4ocypNYXRoLlBJKSp0aGlzLl9zd2luZ0Ftb3VudDt0Kz1uZXcgU28odGhpcy5jb250ZXh0LDIqdGhpcy5fc3dpbmdUaWNrcy8zKS50b1NlY29uZHMoKSpufVhuKCEwKSx0aGlzLl90aW1lbGluZS5mb3JFYWNoQXRUaW1lKGUsKGU9PmUuaW52b2tlKHQpKSksWG4oITEpfXNjaGVkdWxlKHQsZSl7Y29uc3Qgcz1uZXcgSW8odGhpcyx7Y2FsbGJhY2s6dCx0aW1lOm5ldyBLaSh0aGlzLmNvbnRleHQsZSkudG9UaWNrcygpfSk7cmV0dXJuIHRoaXMuX2FkZEV2ZW50KHMsdGhpcy5fdGltZWxpbmUpfXNjaGVkdWxlUmVwZWF0KHQsZSxzLG49MS8wKXtjb25zdCBpPW5ldyBWbyh0aGlzLHtjYWxsYmFjazp0LGR1cmF0aW9uOm5ldyBaaSh0aGlzLmNvbnRleHQsbikudG9UaWNrcygpLGludGVydmFsOm5ldyBaaSh0aGlzLmNvbnRleHQsZSkudG9UaWNrcygpLHRpbWU6bmV3IEtpKHRoaXMuY29udGV4dCxzKS50b1RpY2tzKCl9KTtyZXR1cm4gdGhpcy5fYWRkRXZlbnQoaSx0aGlzLl9yZXBlYXRlZEV2ZW50cyl9c2NoZWR1bGVPbmNlKHQsZSl7Y29uc3Qgcz1uZXcgSW8odGhpcyx7Y2FsbGJhY2s6dCxvbmNlOiEwLHRpbWU6bmV3IEtpKHRoaXMuY29udGV4dCxlKS50b1RpY2tzKCl9KTtyZXR1cm4gdGhpcy5fYWRkRXZlbnQocyx0aGlzLl90aW1lbGluZSl9Y2xlYXIodCl7aWYodGhpcy5fc2NoZWR1bGVkRXZlbnRzLmhhc093blByb3BlcnR5KHQpKXtjb25zdCBlPXRoaXMuX3NjaGVkdWxlZEV2ZW50c1t0LnRvU3RyaW5nKCldO2UudGltZWxpbmUucmVtb3ZlKGUuZXZlbnQpLGUuZXZlbnQuZGlzcG9zZSgpLGRlbGV0ZSB0aGlzLl9zY2hlZHVsZWRFdmVudHNbdC50b1N0cmluZygpXX1yZXR1cm4gdGhpc31fYWRkRXZlbnQodCxlKXtyZXR1cm4gdGhpcy5fc2NoZWR1bGVkRXZlbnRzW3QuaWQudG9TdHJpbmcoKV09e2V2ZW50OnQsdGltZWxpbmU6ZX0sZS5hZGQodCksdC5pZH1jYW5jZWwodD0wKXtjb25zdCBlPXRoaXMudG9UaWNrcyh0KTtyZXR1cm4gdGhpcy5fdGltZWxpbmUuZm9yRWFjaEZyb20oZSwodD0+dGhpcy5jbGVhcih0LmlkKSkpLHRoaXMuX3JlcGVhdGVkRXZlbnRzLmZvckVhY2hGcm9tKGUsKHQ9PnRoaXMuY2xlYXIodC5pZCkpKSx0aGlzfV9iaW5kQ2xvY2tFdmVudHMoKXt0aGlzLl9jbG9jay5vbihcInN0YXJ0XCIsKCh0LGUpPT57ZT1uZXcgU28odGhpcy5jb250ZXh0LGUpLnRvU2Vjb25kcygpLHRoaXMuZW1pdChcInN0YXJ0XCIsdCxlKX0pKSx0aGlzLl9jbG9jay5vbihcInN0b3BcIiwodD0+e3RoaXMuZW1pdChcInN0b3BcIix0KX0pKSx0aGlzLl9jbG9jay5vbihcInBhdXNlXCIsKHQ9Pnt0aGlzLmVtaXQoXCJwYXVzZVwiLHQpfSkpfWdldCBzdGF0ZSgpe3JldHVybiB0aGlzLl9jbG9jay5nZXRTdGF0ZUF0VGltZSh0aGlzLm5vdygpKX1zdGFydCh0LGUpe2xldCBzO3JldHVybiB0aGlzLmNvbnRleHQucmVzdW1lKCksSW4oZSkmJihzPXRoaXMudG9UaWNrcyhlKSksdGhpcy5fY2xvY2suc3RhcnQodCxzKSx0aGlzfXN0b3AodCl7cmV0dXJuIHRoaXMuX2Nsb2NrLnN0b3AodCksdGhpc31wYXVzZSh0KXtyZXR1cm4gdGhpcy5fY2xvY2sucGF1c2UodCksdGhpc310b2dnbGUodCl7cmV0dXJuIHQ9dGhpcy50b1NlY29uZHModCksXCJzdGFydGVkXCIhPT10aGlzLl9jbG9jay5nZXRTdGF0ZUF0VGltZSh0KT90aGlzLnN0YXJ0KHQpOnRoaXMuc3RvcCh0KSx0aGlzfWdldCB0aW1lU2lnbmF0dXJlKCl7cmV0dXJuIHRoaXMuX3RpbWVTaWduYXR1cmV9c2V0IHRpbWVTaWduYXR1cmUodCl7TG4odCkmJih0PXRbMF0vdFsxXSo0KSx0aGlzLl90aW1lU2lnbmF0dXJlPXR9Z2V0IGxvb3BTdGFydCgpe3JldHVybiBuZXcgWmkodGhpcy5jb250ZXh0LHRoaXMuX2xvb3BTdGFydCxcImlcIikudG9TZWNvbmRzKCl9c2V0IGxvb3BTdGFydCh0KXt0aGlzLl9sb29wU3RhcnQ9dGhpcy50b1RpY2tzKHQpfWdldCBsb29wRW5kKCl7cmV0dXJuIG5ldyBaaSh0aGlzLmNvbnRleHQsdGhpcy5fbG9vcEVuZCxcImlcIikudG9TZWNvbmRzKCl9c2V0IGxvb3BFbmQodCl7dGhpcy5fbG9vcEVuZD10aGlzLnRvVGlja3ModCl9Z2V0IGxvb3AoKXtyZXR1cm4gdGhpcy5fbG9vcC5nZXQodGhpcy5ub3coKSl9c2V0IGxvb3AodCl7dGhpcy5fbG9vcC5zZXQodCx0aGlzLm5vdygpKX1zZXRMb29wUG9pbnRzKHQsZSl7cmV0dXJuIHRoaXMubG9vcFN0YXJ0PXQsdGhpcy5sb29wRW5kPWUsdGhpc31nZXQgc3dpbmcoKXtyZXR1cm4gdGhpcy5fc3dpbmdBbW91bnR9c2V0IHN3aW5nKHQpe3RoaXMuX3N3aW5nQW1vdW50PXR9Z2V0IHN3aW5nU3ViZGl2aXNpb24oKXtyZXR1cm4gbmV3IFNvKHRoaXMuY29udGV4dCx0aGlzLl9zd2luZ1RpY2tzKS50b05vdGF0aW9uKCl9c2V0IHN3aW5nU3ViZGl2aXNpb24odCl7dGhpcy5fc3dpbmdUaWNrcz10aGlzLnRvVGlja3ModCl9Z2V0IHBvc2l0aW9uKCl7Y29uc3QgdD10aGlzLm5vdygpLGU9dGhpcy5fY2xvY2suZ2V0VGlja3NBdFRpbWUodCk7cmV0dXJuIG5ldyBTbyh0aGlzLmNvbnRleHQsZSkudG9CYXJzQmVhdHNTaXh0ZWVudGhzKCl9c2V0IHBvc2l0aW9uKHQpe2NvbnN0IGU9dGhpcy50b1RpY2tzKHQpO3RoaXMudGlja3M9ZX1nZXQgc2Vjb25kcygpe3JldHVybiB0aGlzLl9jbG9jay5zZWNvbmRzfXNldCBzZWNvbmRzKHQpe2NvbnN0IGU9dGhpcy5ub3coKSxzPXRoaXMuX2Nsb2NrLmZyZXF1ZW5jeS50aW1lVG9UaWNrcyh0LGUpO3RoaXMudGlja3M9c31nZXQgcHJvZ3Jlc3MoKXtpZih0aGlzLmxvb3Ape2NvbnN0IHQ9dGhpcy5ub3coKTtyZXR1cm4odGhpcy5fY2xvY2suZ2V0VGlja3NBdFRpbWUodCktdGhpcy5fbG9vcFN0YXJ0KS8odGhpcy5fbG9vcEVuZC10aGlzLl9sb29wU3RhcnQpfXJldHVybiAwfWdldCB0aWNrcygpe3JldHVybiB0aGlzLl9jbG9jay50aWNrc31zZXQgdGlja3ModCl7aWYodGhpcy5fY2xvY2sudGlja3MhPT10KXtjb25zdCBlPXRoaXMubm93KCk7aWYoXCJzdGFydGVkXCI9PT10aGlzLnN0YXRlKXtjb25zdCBzPXRoaXMuX2Nsb2NrLmdldFRpY2tzQXRUaW1lKGUpLG49ZSt0aGlzLl9jbG9jay5mcmVxdWVuY3kuZ2V0RHVyYXRpb25PZlRpY2tzKE1hdGguY2VpbChzKS1zLGUpO3RoaXMuZW1pdChcInN0b3BcIixuKSx0aGlzLl9jbG9jay5zZXRUaWNrc0F0VGltZSh0LG4pLHRoaXMuZW1pdChcInN0YXJ0XCIsbix0aGlzLl9jbG9jay5nZXRTZWNvbmRzQXRUaW1lKG4pKX1lbHNlIHRoaXMuZW1pdChcInRpY2tzXCIsZSksdGhpcy5fY2xvY2suc2V0VGlja3NBdFRpbWUodCxlKX19Z2V0VGlja3NBdFRpbWUodCl7cmV0dXJuIHRoaXMuX2Nsb2NrLmdldFRpY2tzQXRUaW1lKHQpfWdldFNlY29uZHNBdFRpbWUodCl7cmV0dXJuIHRoaXMuX2Nsb2NrLmdldFNlY29uZHNBdFRpbWUodCl9Z2V0IFBQUSgpe3JldHVybiB0aGlzLl9jbG9jay5mcmVxdWVuY3kubXVsdGlwbGllcn1zZXQgUFBRKHQpe3RoaXMuX2Nsb2NrLmZyZXF1ZW5jeS5tdWx0aXBsaWVyPXR9bmV4dFN1YmRpdmlzaW9uKHQpe2lmKHQ9dGhpcy50b1RpY2tzKHQpLFwic3RhcnRlZFwiIT09dGhpcy5zdGF0ZSlyZXR1cm4gMDt7Y29uc3QgZT10aGlzLm5vdygpLHM9dC10aGlzLmdldFRpY2tzQXRUaW1lKGUpJXQ7cmV0dXJuIHRoaXMuX2Nsb2NrLm5leHRUaWNrVGltZShzLGUpfX1zeW5jU2lnbmFsKHQsZSl7Y29uc3Qgcz10aGlzLm5vdygpO2xldCBuPXRoaXMuYnBtLGk9MS8oNjAvbi5nZXRWYWx1ZUF0VGltZShzKS90aGlzLlBQUSksbz1bXTtpZihcInRpbWVcIj09PXQudW5pdHMpe2NvbnN0IHQ9MS82NC9pLGU9bmV3IGhvKHQpLHM9bmV3IEZvKC0xKSxyPW5ldyBobyh0KTtuLmNoYWluKGUscyxyKSxuPXIsaT0xL2ksbz1bZSxzLHJdfWV8fChlPTAhPT10LmdldFZhbHVlQXRUaW1lKHMpP3QuZ2V0VmFsdWVBdFRpbWUocykvaTowKTtjb25zdCByPW5ldyBobyhlKTtyZXR1cm4gbi5jb25uZWN0KHIpLHIuY29ubmVjdCh0Ll9wYXJhbSksby5wdXNoKHIpLHRoaXMuX3N5bmNlZFNpZ25hbHMucHVzaCh7aW5pdGlhbDp0LnZhbHVlLG5vZGVzOm8sc2lnbmFsOnR9KSx0LnZhbHVlPTAsdGhpc311bnN5bmNTaWduYWwodCl7Zm9yKGxldCBlPXRoaXMuX3N5bmNlZFNpZ25hbHMubGVuZ3RoLTE7ZT49MDtlLS0pe2NvbnN0IHM9dGhpcy5fc3luY2VkU2lnbmFsc1tlXTtzLnNpZ25hbD09PXQmJihzLm5vZGVzLmZvckVhY2goKHQ9PnQuZGlzcG9zZSgpKSkscy5zaWduYWwudmFsdWU9cy5pbml0aWFsLHRoaXMuX3N5bmNlZFNpZ25hbHMuc3BsaWNlKGUsMSkpfXJldHVybiB0aGlzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2Nsb2NrLmRpc3Bvc2UoKSxNaSh0aGlzLFwiYnBtXCIpLHRoaXMuX3RpbWVsaW5lLmRpc3Bvc2UoKSx0aGlzLl9yZXBlYXRlZEV2ZW50cy5kaXNwb3NlKCksdGhpc319QWkubWl4aW4oTm8pLFRpKCh0PT57dC50cmFuc3BvcnQ9bmV3IE5vKHtjb250ZXh0OnR9KX0pKSxraSgodD0+e3QudHJhbnNwb3J0LmRpc3Bvc2UoKX0pKTtjbGFzcyBQbyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMuaW5wdXQ9dm9pZCAwLHRoaXMuX3N0YXRlPW5ldyBzbyhcInN0b3BwZWRcIiksdGhpcy5fc3luY2VkPSExLHRoaXMuX3NjaGVkdWxlZD1bXSx0aGlzLl9zeW5jZWRTdGFydD1FaSx0aGlzLl9zeW5jZWRTdG9wPUVpLHRoaXMuX3N0YXRlLm1lbW9yeT0xMDAsdGhpcy5fc3RhdGUuaW5jcmVhc2luZz0hMCx0aGlzLl92b2x1bWU9dGhpcy5vdXRwdXQ9bmV3IE9vKHtjb250ZXh0OnRoaXMuY29udGV4dCxtdXRlOnQubXV0ZSx2b2x1bWU6dC52b2x1bWV9KSx0aGlzLnZvbHVtZT10aGlzLl92b2x1bWUudm9sdW1lLE9pKHRoaXMsXCJ2b2x1bWVcIiksdGhpcy5vbnN0b3A9dC5vbnN0b3B9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7bXV0ZTohMSxvbnN0b3A6RWksdm9sdW1lOjB9KX1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5fc3luY2VkP1wic3RhcnRlZFwiPT09dGhpcy5jb250ZXh0LnRyYW5zcG9ydC5zdGF0ZT90aGlzLl9zdGF0ZS5nZXRWYWx1ZUF0VGltZSh0aGlzLmNvbnRleHQudHJhbnNwb3J0LnNlY29uZHMpOlwic3RvcHBlZFwiOnRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKHRoaXMubm93KCkpfWdldCBtdXRlKCl7cmV0dXJuIHRoaXMuX3ZvbHVtZS5tdXRlfXNldCBtdXRlKHQpe3RoaXMuX3ZvbHVtZS5tdXRlPXR9X2NsYW1wVG9DdXJyZW50VGltZSh0KXtyZXR1cm4gdGhpcy5fc3luY2VkP3Q6TWF0aC5tYXgodCx0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpfXN0YXJ0KHQsZSxzKXtsZXQgbj1Gbih0KSYmdGhpcy5fc3luY2VkP3RoaXMuY29udGV4dC50cmFuc3BvcnQuc2Vjb25kczp0aGlzLnRvU2Vjb25kcyh0KTtpZihuPXRoaXMuX2NsYW1wVG9DdXJyZW50VGltZShuKSx0aGlzLl9zeW5jZWR8fFwic3RhcnRlZFwiIT09dGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUobikpaWYodGhpcy5sb2coXCJzdGFydFwiLG4pLHRoaXMuX3N0YXRlLnNldFN0YXRlQXRUaW1lKFwic3RhcnRlZFwiLG4pLHRoaXMuX3N5bmNlZCl7Y29uc3QgdD10aGlzLl9zdGF0ZS5nZXQobik7dCYmKHQub2Zmc2V0PXRoaXMudG9TZWNvbmRzKHBpKGUsMCkpLHQuZHVyYXRpb249cz90aGlzLnRvU2Vjb25kcyhzKTp2b2lkIDApO2NvbnN0IGk9dGhpcy5jb250ZXh0LnRyYW5zcG9ydC5zY2hlZHVsZSgodD0+e3RoaXMuX3N0YXJ0KHQsZSxzKX0pLG4pO3RoaXMuX3NjaGVkdWxlZC5wdXNoKGkpLFwic3RhcnRlZFwiPT09dGhpcy5jb250ZXh0LnRyYW5zcG9ydC5zdGF0ZSYmdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5nZXRTZWNvbmRzQXRUaW1lKHRoaXMuaW1tZWRpYXRlKCkpPm4mJnRoaXMuX3N5bmNlZFN0YXJ0KHRoaXMubm93KCksdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5zZWNvbmRzKX1lbHNlIEduKHRoaXMuY29udGV4dCksdGhpcy5fc3RhcnQobixlLHMpO2Vsc2UgQm4obWkobix0aGlzLl9zdGF0ZS5nZXQobikudGltZSksXCJTdGFydCB0aW1lIG11c3QgYmUgc3RyaWN0bHkgZ3JlYXRlciB0aGFuIHByZXZpb3VzIHN0YXJ0IHRpbWVcIiksdGhpcy5fc3RhdGUuY2FuY2VsKG4pLHRoaXMuX3N0YXRlLnNldFN0YXRlQXRUaW1lKFwic3RhcnRlZFwiLG4pLHRoaXMubG9nKFwicmVzdGFydFwiLG4pLHRoaXMucmVzdGFydChuLGUscyk7cmV0dXJuIHRoaXN9c3RvcCh0KXtsZXQgZT1Gbih0KSYmdGhpcy5fc3luY2VkP3RoaXMuY29udGV4dC50cmFuc3BvcnQuc2Vjb25kczp0aGlzLnRvU2Vjb25kcyh0KTtpZihlPXRoaXMuX2NsYW1wVG9DdXJyZW50VGltZShlKSxcInN0YXJ0ZWRcIj09PXRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKGUpfHxJbih0aGlzLl9zdGF0ZS5nZXROZXh0U3RhdGUoXCJzdGFydGVkXCIsZSkpKXtpZih0aGlzLmxvZyhcInN0b3BcIixlKSx0aGlzLl9zeW5jZWQpe2NvbnN0IHQ9dGhpcy5jb250ZXh0LnRyYW5zcG9ydC5zY2hlZHVsZSh0aGlzLl9zdG9wLmJpbmQodGhpcyksZSk7dGhpcy5fc2NoZWR1bGVkLnB1c2godCl9ZWxzZSB0aGlzLl9zdG9wKGUpO3RoaXMuX3N0YXRlLmNhbmNlbChlKSx0aGlzLl9zdGF0ZS5zZXRTdGF0ZUF0VGltZShcInN0b3BwZWRcIixlKX1yZXR1cm4gdGhpc31yZXN0YXJ0KHQsZSxzKXtyZXR1cm4gdD10aGlzLnRvU2Vjb25kcyh0KSxcInN0YXJ0ZWRcIj09PXRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKHQpJiYodGhpcy5fc3RhdGUuY2FuY2VsKHQpLHRoaXMuX3Jlc3RhcnQodCxlLHMpKSx0aGlzfXN5bmMoKXtyZXR1cm4gdGhpcy5fc3luY2VkfHwodGhpcy5fc3luY2VkPSEwLHRoaXMuX3N5bmNlZFN0YXJ0PSh0LGUpPT57aWYobWkoZSwwKSl7Y29uc3Qgcz10aGlzLl9zdGF0ZS5nZXQoZSk7aWYocyYmXCJzdGFydGVkXCI9PT1zLnN0YXRlJiZzLnRpbWUhPT1lKXtjb25zdCBuPWUtdGhpcy50b1NlY29uZHMocy50aW1lKTtsZXQgaTtzLmR1cmF0aW9uJiYoaT10aGlzLnRvU2Vjb25kcyhzLmR1cmF0aW9uKS1uKSx0aGlzLl9zdGFydCh0LHRoaXMudG9TZWNvbmRzKHMub2Zmc2V0KStuLGkpfX19LHRoaXMuX3N5bmNlZFN0b3A9dD0+e2NvbnN0IGU9dGhpcy5jb250ZXh0LnRyYW5zcG9ydC5nZXRTZWNvbmRzQXRUaW1lKE1hdGgubWF4KHQtdGhpcy5zYW1wbGVUaW1lLDApKTtcInN0YXJ0ZWRcIj09PXRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKGUpJiZ0aGlzLl9zdG9wKHQpfSx0aGlzLmNvbnRleHQudHJhbnNwb3J0Lm9uKFwic3RhcnRcIix0aGlzLl9zeW5jZWRTdGFydCksdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5vbihcImxvb3BTdGFydFwiLHRoaXMuX3N5bmNlZFN0YXJ0KSx0aGlzLmNvbnRleHQudHJhbnNwb3J0Lm9uKFwic3RvcFwiLHRoaXMuX3N5bmNlZFN0b3ApLHRoaXMuY29udGV4dC50cmFuc3BvcnQub24oXCJwYXVzZVwiLHRoaXMuX3N5bmNlZFN0b3ApLHRoaXMuY29udGV4dC50cmFuc3BvcnQub24oXCJsb29wRW5kXCIsdGhpcy5fc3luY2VkU3RvcCkpLHRoaXN9dW5zeW5jKCl7cmV0dXJuIHRoaXMuX3N5bmNlZCYmKHRoaXMuY29udGV4dC50cmFuc3BvcnQub2ZmKFwic3RvcFwiLHRoaXMuX3N5bmNlZFN0b3ApLHRoaXMuY29udGV4dC50cmFuc3BvcnQub2ZmKFwicGF1c2VcIix0aGlzLl9zeW5jZWRTdG9wKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0Lm9mZihcImxvb3BFbmRcIix0aGlzLl9zeW5jZWRTdG9wKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0Lm9mZihcInN0YXJ0XCIsdGhpcy5fc3luY2VkU3RhcnQpLHRoaXMuY29udGV4dC50cmFuc3BvcnQub2ZmKFwibG9vcFN0YXJ0XCIsdGhpcy5fc3luY2VkU3RhcnQpKSx0aGlzLl9zeW5jZWQ9ITEsdGhpcy5fc2NoZWR1bGVkLmZvckVhY2goKHQ9PnRoaXMuY29udGV4dC50cmFuc3BvcnQuY2xlYXIodCkpKSx0aGlzLl9zY2hlZHVsZWQ9W10sdGhpcy5fc3RhdGUuY2FuY2VsKDApLHRoaXMuX3N0b3AoMCksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLm9uc3RvcD1FaSx0aGlzLnVuc3luYygpLHRoaXMuX3ZvbHVtZS5kaXNwb3NlKCksdGhpcy5fc3RhdGUuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIGpvIGV4dGVuZHMgbG97Y29uc3RydWN0b3IoKXtzdXBlcih1aShqby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ1cmxcIixcIm9ubG9hZFwiXSkpLHRoaXMubmFtZT1cIlRvbmVCdWZmZXJTb3VyY2VcIix0aGlzLl9zb3VyY2U9dGhpcy5jb250ZXh0LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpLHRoaXMuX2ludGVybmFsQ2hhbm5lbHM9W3RoaXMuX3NvdXJjZV0sdGhpcy5fc291cmNlU3RhcnRlZD0hMSx0aGlzLl9zb3VyY2VTdG9wcGVkPSExO2NvbnN0IHQ9dWkoam8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsXCIsXCJvbmxvYWRcIl0pO3JvKHRoaXMuX3NvdXJjZSx0aGlzLl9nYWluTm9kZSksdGhpcy5fc291cmNlLm9uZW5kZWQ9KCk9PnRoaXMuX3N0b3BTb3VyY2UoKSx0aGlzLnBsYXliYWNrUmF0ZT1uZXcgbm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHBhcmFtOnRoaXMuX3NvdXJjZS5wbGF5YmFja1JhdGUsdW5pdHM6XCJwb3NpdGl2ZVwiLHZhbHVlOnQucGxheWJhY2tSYXRlfSksdGhpcy5sb29wPXQubG9vcCx0aGlzLmxvb3BTdGFydD10Lmxvb3BTdGFydCx0aGlzLmxvb3BFbmQ9dC5sb29wRW5kLHRoaXMuX2J1ZmZlcj1uZXcgUmkodC51cmwsdC5vbmxvYWQsdC5vbmVycm9yKSx0aGlzLl9pbnRlcm5hbENoYW5uZWxzLnB1c2godGhpcy5fc291cmNlKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihsby5nZXREZWZhdWx0cygpLHt1cmw6bmV3IFJpLGxvb3A6ITEsbG9vcEVuZDowLGxvb3BTdGFydDowLG9ubG9hZDpFaSxvbmVycm9yOkVpLHBsYXliYWNrUmF0ZToxfSl9Z2V0IGZhZGVJbigpe3JldHVybiB0aGlzLl9mYWRlSW59c2V0IGZhZGVJbih0KXt0aGlzLl9mYWRlSW49dH1nZXQgZmFkZU91dCgpe3JldHVybiB0aGlzLl9mYWRlT3V0fXNldCBmYWRlT3V0KHQpe3RoaXMuX2ZhZGVPdXQ9dH1nZXQgY3VydmUoKXtyZXR1cm4gdGhpcy5fY3VydmV9c2V0IGN1cnZlKHQpe3RoaXMuX2N1cnZlPXR9c3RhcnQodCxlLHMsbj0xKXtCbih0aGlzLmJ1ZmZlci5sb2FkZWQsXCJidWZmZXIgaXMgZWl0aGVyIG5vdCBzZXQgb3Igbm90IGxvYWRlZFwiKTtjb25zdCBpPXRoaXMudG9TZWNvbmRzKHQpO3RoaXMuX3N0YXJ0R2FpbihpLG4pLGU9dGhpcy5sb29wP3BpKGUsdGhpcy5sb29wU3RhcnQpOnBpKGUsMCk7bGV0IG89TWF0aC5tYXgodGhpcy50b1NlY29uZHMoZSksMCk7aWYodGhpcy5sb29wKXtjb25zdCB0PXRoaXMudG9TZWNvbmRzKHRoaXMubG9vcEVuZCl8fHRoaXMuYnVmZmVyLmR1cmF0aW9uLGU9dGhpcy50b1NlY29uZHModGhpcy5sb29wU3RhcnQpLHM9dC1lO2dpKG8sdCkmJihvPShvLWUpJXMrZSkseWkobyx0aGlzLmJ1ZmZlci5kdXJhdGlvbikmJihvPTApfWlmKHRoaXMuX3NvdXJjZS5idWZmZXI9dGhpcy5idWZmZXIuZ2V0KCksdGhpcy5fc291cmNlLmxvb3BFbmQ9dGhpcy50b1NlY29uZHModGhpcy5sb29wRW5kKXx8dGhpcy5idWZmZXIuZHVyYXRpb24sdmkobyx0aGlzLmJ1ZmZlci5kdXJhdGlvbikmJih0aGlzLl9zb3VyY2VTdGFydGVkPSEwLHRoaXMuX3NvdXJjZS5zdGFydChpLG8pKSxJbihzKSl7bGV0IHQ9dGhpcy50b1NlY29uZHMocyk7dD1NYXRoLm1heCh0LDApLHRoaXMuc3RvcChpK3QpfXJldHVybiB0aGlzfV9zdG9wU291cmNlKHQpeyF0aGlzLl9zb3VyY2VTdG9wcGVkJiZ0aGlzLl9zb3VyY2VTdGFydGVkJiYodGhpcy5fc291cmNlU3RvcHBlZD0hMCx0aGlzLl9zb3VyY2Uuc3RvcCh0aGlzLnRvU2Vjb25kcyh0KSksdGhpcy5fb25lbmRlZCgpKX1nZXQgbG9vcFN0YXJ0KCl7cmV0dXJuIHRoaXMuX3NvdXJjZS5sb29wU3RhcnR9c2V0IGxvb3BTdGFydCh0KXt0aGlzLl9zb3VyY2UubG9vcFN0YXJ0PXRoaXMudG9TZWNvbmRzKHQpfWdldCBsb29wRW5kKCl7cmV0dXJuIHRoaXMuX3NvdXJjZS5sb29wRW5kfXNldCBsb29wRW5kKHQpe3RoaXMuX3NvdXJjZS5sb29wRW5kPXRoaXMudG9TZWNvbmRzKHQpfWdldCBidWZmZXIoKXtyZXR1cm4gdGhpcy5fYnVmZmVyfXNldCBidWZmZXIodCl7dGhpcy5fYnVmZmVyLnNldCh0KX1nZXQgbG9vcCgpe3JldHVybiB0aGlzLl9zb3VyY2UubG9vcH1zZXQgbG9vcCh0KXt0aGlzLl9zb3VyY2UubG9vcD10LHRoaXMuX3NvdXJjZVN0YXJ0ZWQmJnRoaXMuY2FuY2VsU3RvcCgpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3NvdXJjZS5vbmVuZGVkPW51bGwsdGhpcy5fc291cmNlLmRpc2Nvbm5lY3QoKSx0aGlzLl9idWZmZXIuZGlzcG9zZSgpLHRoaXMucGxheWJhY2tSYXRlLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBMbyBleHRlbmRzIFBve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoTG8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widHlwZVwiXSkpLHRoaXMubmFtZT1cIk5vaXNlXCIsdGhpcy5fc291cmNlPW51bGw7Y29uc3QgdD11aShMby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ0eXBlXCJdKTt0aGlzLl9wbGF5YmFja1JhdGU9dC5wbGF5YmFja1JhdGUsdGhpcy50eXBlPXQudHlwZSx0aGlzLl9mYWRlSW49dC5mYWRlSW4sdGhpcy5fZmFkZU91dD10LmZhZGVPdXR9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oUG8uZ2V0RGVmYXVsdHMoKSx7ZmFkZUluOjAsZmFkZU91dDowLHBsYXliYWNrUmF0ZToxLHR5cGU6XCJ3aGl0ZVwifSl9Z2V0IHR5cGUoKXtyZXR1cm4gdGhpcy5fdHlwZX1zZXQgdHlwZSh0KXtpZihCbih0IGluIEJvLFwiTm9pc2U6IGludmFsaWQgdHlwZTogXCIrdCksdGhpcy5fdHlwZSE9PXQmJih0aGlzLl90eXBlPXQsXCJzdGFydGVkXCI9PT10aGlzLnN0YXRlKSl7Y29uc3QgdD10aGlzLm5vdygpO3RoaXMuX3N0b3AodCksdGhpcy5fc3RhcnQodCl9fWdldCBwbGF5YmFja1JhdGUoKXtyZXR1cm4gdGhpcy5fcGxheWJhY2tSYXRlfXNldCBwbGF5YmFja1JhdGUodCl7dGhpcy5fcGxheWJhY2tSYXRlPXQsdGhpcy5fc291cmNlJiYodGhpcy5fc291cmNlLnBsYXliYWNrUmF0ZS52YWx1ZT10KX1fc3RhcnQodCl7Y29uc3QgZT1Cb1t0aGlzLl90eXBlXTt0aGlzLl9zb3VyY2U9bmV3IGpvKHt1cmw6ZSxjb250ZXh0OnRoaXMuY29udGV4dCxmYWRlSW46dGhpcy5fZmFkZUluLGZhZGVPdXQ6dGhpcy5fZmFkZU91dCxsb29wOiEwLG9uZW5kZWQ6KCk9PnRoaXMub25zdG9wKHRoaXMpLHBsYXliYWNrUmF0ZTp0aGlzLl9wbGF5YmFja1JhdGV9KS5jb25uZWN0KHRoaXMub3V0cHV0KSx0aGlzLl9zb3VyY2Uuc3RhcnQodGhpcy50b1NlY29uZHModCksTWF0aC5yYW5kb20oKSooZS5kdXJhdGlvbi0uMDAxKSl9X3N0b3AodCl7dGhpcy5fc291cmNlJiYodGhpcy5fc291cmNlLnN0b3AodGhpcy50b1NlY29uZHModCkpLHRoaXMuX3NvdXJjZT1udWxsKX1nZXQgZmFkZUluKCl7cmV0dXJuIHRoaXMuX2ZhZGVJbn1zZXQgZmFkZUluKHQpe3RoaXMuX2ZhZGVJbj10LHRoaXMuX3NvdXJjZSYmKHRoaXMuX3NvdXJjZS5mYWRlSW49dGhpcy5fZmFkZUluKX1nZXQgZmFkZU91dCgpe3JldHVybiB0aGlzLl9mYWRlT3V0fXNldCBmYWRlT3V0KHQpe3RoaXMuX2ZhZGVPdXQ9dCx0aGlzLl9zb3VyY2UmJih0aGlzLl9zb3VyY2UuZmFkZU91dD10aGlzLl9mYWRlT3V0KX1fcmVzdGFydCh0KXt0aGlzLl9zdG9wKHQpLHRoaXMuX3N0YXJ0KHQpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3NvdXJjZSYmdGhpcy5fc291cmNlLmRpc2Nvbm5lY3QoKSx0aGlzfX1jb25zdCB6bz0yMjA1MDAsV289e2Jyb3duOm51bGwscGluazpudWxsLHdoaXRlOm51bGx9LEJvPXtnZXQgYnJvd24oKXtpZighV28uYnJvd24pe2NvbnN0IHQ9W107Zm9yKGxldCBlPTA7ZTwyO2UrKyl7Y29uc3Qgcz1uZXcgRmxvYXQzMkFycmF5KHpvKTt0W2VdPXM7bGV0IG49MDtmb3IobGV0IHQ9MDt0PHpvO3QrKyl7Y29uc3QgZT0yKk1hdGgucmFuZG9tKCktMTtzW3RdPShuKy4wMiplKS8xLjAyLG49c1t0XSxzW3RdKj0zLjV9fVdvLmJyb3duPShuZXcgUmkpLmZyb21BcnJheSh0KX1yZXR1cm4gV28uYnJvd259LGdldCBwaW5rKCl7aWYoIVdvLnBpbmspe2NvbnN0IHQ9W107Zm9yKGxldCBlPTA7ZTwyO2UrKyl7Y29uc3Qgcz1uZXcgRmxvYXQzMkFycmF5KHpvKTtsZXQgbixpLG8scixhLGMsaDt0W2VdPXMsbj1pPW89cj1hPWM9aD0wO2ZvcihsZXQgdD0wO3Q8em87dCsrKXtjb25zdCBlPTIqTWF0aC5yYW5kb20oKS0xO249Ljk5ODg2Km4rLjA1NTUxNzkqZSxpPS45OTMzMippKy4wNzUwNzU5KmUsbz0uOTY5Km8rLjE1Mzg1MiplLHI9Ljg2NjUqcisuMzEwNDg1NiplLGE9LjU1KmErLjUzMjk1MjIqZSxjPS0uNzYxNipjLS4wMTY4OTgqZSxzW3RdPW4raStvK3IrYStjK2grLjUzNjIqZSxzW3RdKj0uMTEsaD0uMTE1OTI2KmV9fVdvLnBpbms9KG5ldyBSaSkuZnJvbUFycmF5KHQpfXJldHVybiBXby5waW5rfSxnZXQgd2hpdGUoKXtpZighV28ud2hpdGUpe2NvbnN0IHQ9W107Zm9yKGxldCBlPTA7ZTwyO2UrKyl7Y29uc3Qgcz1uZXcgRmxvYXQzMkFycmF5KHpvKTt0W2VdPXM7Zm9yKGxldCB0PTA7dDx6bzt0Kyspc1t0XT0yKk1hdGgucmFuZG9tKCktMX1Xby53aGl0ZT0obmV3IFJpKS5mcm9tQXJyYXkodCl9cmV0dXJuIFdvLndoaXRlfX07Y2xhc3MgVW8gZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFVvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZvbHVtZVwiXSkpLHRoaXMubmFtZT1cIlVzZXJNZWRpYVwiO2NvbnN0IHQ9dWkoVW8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widm9sdW1lXCJdKTt0aGlzLl92b2x1bWU9dGhpcy5vdXRwdXQ9bmV3IE9vKHtjb250ZXh0OnRoaXMuY29udGV4dCx2b2x1bWU6dC52b2x1bWV9KSx0aGlzLnZvbHVtZT10aGlzLl92b2x1bWUudm9sdW1lLE9pKHRoaXMsXCJ2b2x1bWVcIiksdGhpcy5tdXRlPXQubXV0ZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHttdXRlOiExLHZvbHVtZTowfSl9b3Blbih0KXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtCbihVby5zdXBwb3J0ZWQsXCJVc2VyTWVkaWEgaXMgbm90IHN1cHBvcnRlZFwiKSxcInN0YXJ0ZWRcIj09PXRoaXMuc3RhdGUmJnRoaXMuY2xvc2UoKTtjb25zdCBlPXlpZWxkIFVvLmVudW1lcmF0ZURldmljZXMoKTtObih0KT90aGlzLl9kZXZpY2U9ZVt0XToodGhpcy5fZGV2aWNlPWUuZmluZCgoZT0+ZS5sYWJlbD09PXR8fGUuZGV2aWNlSWQ9PT10KSksIXRoaXMuX2RldmljZSYmZS5sZW5ndGg+MCYmKHRoaXMuX2RldmljZT1lWzBdKSxCbihJbih0aGlzLl9kZXZpY2UpLGBObyBtYXRjaGluZyBkZXZpY2UgJHt0fWApKTtjb25zdCBzPXthdWRpbzp7ZWNob0NhbmNlbGxhdGlvbjohMSxzYW1wbGVSYXRlOnRoaXMuY29udGV4dC5zYW1wbGVSYXRlLG5vaXNlU3VwcHJlc3Npb246ITEsbW96Tm9pc2VTdXBwcmVzc2lvbjohMX19O3RoaXMuX2RldmljZSYmKHMuYXVkaW8uZGV2aWNlSWQ9dGhpcy5fZGV2aWNlLmRldmljZUlkKTtjb25zdCBuPXlpZWxkIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHMpO2lmKCF0aGlzLl9zdHJlYW0pe3RoaXMuX3N0cmVhbT1uO2NvbnN0IHQ9dGhpcy5jb250ZXh0LmNyZWF0ZU1lZGlhU3RyZWFtU291cmNlKG4pO3JvKHQsdGhpcy5vdXRwdXQpLHRoaXMuX21lZGlhU3RyZWFtPXR9cmV0dXJuIHRoaXN9KSl9Y2xvc2UoKXtyZXR1cm4gdGhpcy5fc3RyZWFtJiZ0aGlzLl9tZWRpYVN0cmVhbSYmKHRoaXMuX3N0cmVhbS5nZXRBdWRpb1RyYWNrcygpLmZvckVhY2goKHQ9Pnt0LnN0b3AoKX0pKSx0aGlzLl9zdHJlYW09dm9pZCAwLHRoaXMuX21lZGlhU3RyZWFtLmRpc2Nvbm5lY3QoKSx0aGlzLl9tZWRpYVN0cmVhbT12b2lkIDApLHRoaXMuX2RldmljZT12b2lkIDAsdGhpc31zdGF0aWMgZW51bWVyYXRlRGV2aWNlcygpe3JldHVybiBuaSh0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKigpe3JldHVybih5aWVsZCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmVudW1lcmF0ZURldmljZXMoKSkuZmlsdGVyKCh0PT5cImF1ZGlvaW5wdXRcIj09PXQua2luZCkpfSkpfWdldCBzdGF0ZSgpe3JldHVybiB0aGlzLl9zdHJlYW0mJnRoaXMuX3N0cmVhbS5hY3RpdmU/XCJzdGFydGVkXCI6XCJzdG9wcGVkXCJ9Z2V0IGRldmljZUlkKCl7cmV0dXJuIHRoaXMuX2RldmljZT90aGlzLl9kZXZpY2UuZGV2aWNlSWQ6dm9pZCAwfWdldCBncm91cElkKCl7cmV0dXJuIHRoaXMuX2RldmljZT90aGlzLl9kZXZpY2UuZ3JvdXBJZDp2b2lkIDB9Z2V0IGxhYmVsKCl7cmV0dXJuIHRoaXMuX2RldmljZT90aGlzLl9kZXZpY2UubGFiZWw6dm9pZCAwfWdldCBtdXRlKCl7cmV0dXJuIHRoaXMuX3ZvbHVtZS5tdXRlfXNldCBtdXRlKHQpe3RoaXMuX3ZvbHVtZS5tdXRlPXR9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5jbG9zZSgpLHRoaXMuX3ZvbHVtZS5kaXNwb3NlKCksdGhpcy52b2x1bWUuZGlzcG9zZSgpLHRoaXN9c3RhdGljIGdldCBzdXBwb3J0ZWQoKXtyZXR1cm4gSW4obmF2aWdhdG9yLm1lZGlhRGV2aWNlcykmJkluKG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKX19ZnVuY3Rpb24gR28odCxlKXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtjb25zdCBzPWUvdC5jb250ZXh0LnNhbXBsZVJhdGUsbj1uZXcgcWkoMSxzLHQuY29udGV4dC5zYW1wbGVSYXRlKTtyZXR1cm4gbmV3IHQuY29uc3RydWN0b3IoT2JqZWN0LmFzc2lnbih0LmdldCgpLHtmcmVxdWVuY3k6Mi9zLGRldHVuZTowLGNvbnRleHQ6bn0pKS50b0Rlc3RpbmF0aW9uKCkuc3RhcnQoMCksKHlpZWxkIG4ucmVuZGVyKCkpLmdldENoYW5uZWxEYXRhKDApfSkpfWNsYXNzIFFvIGV4dGVuZHMgbG97Y29uc3RydWN0b3IoKXtzdXBlcih1aShRby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcInR5cGVcIl0pKSx0aGlzLm5hbWU9XCJUb25lT3NjaWxsYXRvck5vZGVcIix0aGlzLl9vc2NpbGxhdG9yPXRoaXMuY29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCksdGhpcy5faW50ZXJuYWxDaGFubmVscz1bdGhpcy5fb3NjaWxsYXRvcl07Y29uc3QgdD11aShRby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcInR5cGVcIl0pO3JvKHRoaXMuX29zY2lsbGF0b3IsdGhpcy5fZ2Fpbk5vZGUpLHRoaXMudHlwZT10LnR5cGUsdGhpcy5mcmVxdWVuY3k9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLl9vc2NpbGxhdG9yLmZyZXF1ZW5jeSx1bml0czpcImZyZXF1ZW5jeVwiLHZhbHVlOnQuZnJlcXVlbmN5fSksdGhpcy5kZXR1bmU9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLl9vc2NpbGxhdG9yLmRldHVuZSx1bml0czpcImNlbnRzXCIsdmFsdWU6dC5kZXR1bmV9KSxPaSh0aGlzLFtcImZyZXF1ZW5jeVwiLFwiZGV0dW5lXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihsby5nZXREZWZhdWx0cygpLHtkZXR1bmU6MCxmcmVxdWVuY3k6NDQwLHR5cGU6XCJzaW5lXCJ9KX1zdGFydCh0KXtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHQpO3JldHVybiB0aGlzLmxvZyhcInN0YXJ0XCIsZSksdGhpcy5fc3RhcnRHYWluKGUpLHRoaXMuX29zY2lsbGF0b3Iuc3RhcnQoZSksdGhpc31fc3RvcFNvdXJjZSh0KXt0aGlzLl9vc2NpbGxhdG9yLnN0b3AodCl9c2V0UGVyaW9kaWNXYXZlKHQpe3JldHVybiB0aGlzLl9vc2NpbGxhdG9yLnNldFBlcmlvZGljV2F2ZSh0KSx0aGlzfWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuX29zY2lsbGF0b3IudHlwZX1zZXQgdHlwZSh0KXt0aGlzLl9vc2NpbGxhdG9yLnR5cGU9dH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSxcInN0YXJ0ZWRcIj09PXRoaXMuc3RhdGUmJnRoaXMuc3RvcCgpLHRoaXMuX29zY2lsbGF0b3IuZGlzY29ubmVjdCgpLHRoaXMuZnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLmRldHVuZS5kaXNwb3NlKCksdGhpc319Y2xhc3MgWm8gZXh0ZW5kcyBQb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFpvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwidHlwZVwiXSkpLHRoaXMubmFtZT1cIk9zY2lsbGF0b3JcIix0aGlzLl9vc2NpbGxhdG9yPW51bGw7Y29uc3QgdD11aShaby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcInR5cGVcIl0pO3RoaXMuZnJlcXVlbmN5PW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJmcmVxdWVuY3lcIix2YWx1ZTp0LmZyZXF1ZW5jeX0pLE9pKHRoaXMsXCJmcmVxdWVuY3lcIiksdGhpcy5kZXR1bmU9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcImNlbnRzXCIsdmFsdWU6dC5kZXR1bmV9KSxPaSh0aGlzLFwiZGV0dW5lXCIpLHRoaXMuX3BhcnRpYWxzPXQucGFydGlhbHMsdGhpcy5fcGFydGlhbENvdW50PXQucGFydGlhbENvdW50LHRoaXMuX3R5cGU9dC50eXBlLHQucGFydGlhbENvdW50JiZcImN1c3RvbVwiIT09dC50eXBlJiYodGhpcy5fdHlwZT10aGlzLmJhc2VUeXBlK3QucGFydGlhbENvdW50LnRvU3RyaW5nKCkpLHRoaXMucGhhc2U9dC5waGFzZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihQby5nZXREZWZhdWx0cygpLHtkZXR1bmU6MCxmcmVxdWVuY3k6NDQwLHBhcnRpYWxDb3VudDowLHBhcnRpYWxzOltdLHBoYXNlOjAsdHlwZTpcInNpbmVcIn0pfV9zdGFydCh0KXtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHQpLHM9bmV3IFFvKHtjb250ZXh0OnRoaXMuY29udGV4dCxvbmVuZGVkOigpPT50aGlzLm9uc3RvcCh0aGlzKX0pO3RoaXMuX29zY2lsbGF0b3I9cyx0aGlzLl93YXZlP3RoaXMuX29zY2lsbGF0b3Iuc2V0UGVyaW9kaWNXYXZlKHRoaXMuX3dhdmUpOnRoaXMuX29zY2lsbGF0b3IudHlwZT10aGlzLl90eXBlLHRoaXMuX29zY2lsbGF0b3IuY29ubmVjdCh0aGlzLm91dHB1dCksdGhpcy5mcmVxdWVuY3kuY29ubmVjdCh0aGlzLl9vc2NpbGxhdG9yLmZyZXF1ZW5jeSksdGhpcy5kZXR1bmUuY29ubmVjdCh0aGlzLl9vc2NpbGxhdG9yLmRldHVuZSksdGhpcy5fb3NjaWxsYXRvci5zdGFydChlKX1fc3RvcCh0KXtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHQpO3RoaXMuX29zY2lsbGF0b3ImJnRoaXMuX29zY2lsbGF0b3Iuc3RvcChlKX1fcmVzdGFydCh0KXtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHQpO3JldHVybiB0aGlzLmxvZyhcInJlc3RhcnRcIixlKSx0aGlzLl9vc2NpbGxhdG9yJiZ0aGlzLl9vc2NpbGxhdG9yLmNhbmNlbFN0b3AoKSx0aGlzLl9zdGF0ZS5jYW5jZWwoZSksdGhpc31zeW5jRnJlcXVlbmN5KCl7cmV0dXJuIHRoaXMuY29udGV4dC50cmFuc3BvcnQuc3luY1NpZ25hbCh0aGlzLmZyZXF1ZW5jeSksdGhpc311bnN5bmNGcmVxdWVuY3koKXtyZXR1cm4gdGhpcy5jb250ZXh0LnRyYW5zcG9ydC51bnN5bmNTaWduYWwodGhpcy5mcmVxdWVuY3kpLHRoaXN9X2dldENhY2hlZFBlcmlvZGljV2F2ZSgpe2lmKFwiY3VzdG9tXCI9PT10aGlzLl90eXBlKXJldHVybiBaby5fcGVyaW9kaWNXYXZlQ2FjaGUuZmluZCgodD0+e3JldHVybiB0LnBoYXNlPT09dGhpcy5fcGhhc2UmJihlPXQucGFydGlhbHMscz10aGlzLl9wYXJ0aWFscyxlLmxlbmd0aD09PXMubGVuZ3RoJiZlLmV2ZXJ5KCgodCxlKT0+c1tlXT09PXQpKSk7dmFyIGUsc30pKTt7Y29uc3QgdD1aby5fcGVyaW9kaWNXYXZlQ2FjaGUuZmluZCgodD0+dC50eXBlPT09dGhpcy5fdHlwZSYmdC5waGFzZT09PXRoaXMuX3BoYXNlKSk7cmV0dXJuIHRoaXMuX3BhcnRpYWxDb3VudD10P3QucGFydGlhbENvdW50OnRoaXMuX3BhcnRpYWxDb3VudCx0fX1nZXQgdHlwZSgpe3JldHVybiB0aGlzLl90eXBlfXNldCB0eXBlKHQpe3RoaXMuX3R5cGU9dDtjb25zdCBlPS0xIT09W1wic2luZVwiLFwic3F1YXJlXCIsXCJzYXd0b290aFwiLFwidHJpYW5nbGVcIl0uaW5kZXhPZih0KTtpZigwPT09dGhpcy5fcGhhc2UmJmUpdGhpcy5fd2F2ZT12b2lkIDAsdGhpcy5fcGFydGlhbENvdW50PTAsbnVsbCE9PXRoaXMuX29zY2lsbGF0b3ImJih0aGlzLl9vc2NpbGxhdG9yLnR5cGU9dCk7ZWxzZXtjb25zdCBlPXRoaXMuX2dldENhY2hlZFBlcmlvZGljV2F2ZSgpO2lmKEluKGUpKXtjb25zdHtwYXJ0aWFsczp0LHdhdmU6c309ZTt0aGlzLl93YXZlPXMsdGhpcy5fcGFydGlhbHM9dCxudWxsIT09dGhpcy5fb3NjaWxsYXRvciYmdGhpcy5fb3NjaWxsYXRvci5zZXRQZXJpb2RpY1dhdmUodGhpcy5fd2F2ZSl9ZWxzZXtjb25zdFtlLHNdPXRoaXMuX2dldFJlYWxJbWFnaW5hcnkodCx0aGlzLl9waGFzZSksbj10aGlzLmNvbnRleHQuY3JlYXRlUGVyaW9kaWNXYXZlKGUscyk7dGhpcy5fd2F2ZT1uLG51bGwhPT10aGlzLl9vc2NpbGxhdG9yJiZ0aGlzLl9vc2NpbGxhdG9yLnNldFBlcmlvZGljV2F2ZSh0aGlzLl93YXZlKSxaby5fcGVyaW9kaWNXYXZlQ2FjaGUucHVzaCh7aW1hZzpzLHBhcnRpYWxDb3VudDp0aGlzLl9wYXJ0aWFsQ291bnQscGFydGlhbHM6dGhpcy5fcGFydGlhbHMscGhhc2U6dGhpcy5fcGhhc2UscmVhbDplLHR5cGU6dGhpcy5fdHlwZSx3YXZlOnRoaXMuX3dhdmV9KSxaby5fcGVyaW9kaWNXYXZlQ2FjaGUubGVuZ3RoPjEwMCYmWm8uX3BlcmlvZGljV2F2ZUNhY2hlLnNoaWZ0KCl9fX1nZXQgYmFzZVR5cGUoKXtyZXR1cm4gdGhpcy5fdHlwZS5yZXBsYWNlKHRoaXMucGFydGlhbENvdW50LnRvU3RyaW5nKCksXCJcIil9c2V0IGJhc2VUeXBlKHQpe3RoaXMucGFydGlhbENvdW50JiZcImN1c3RvbVwiIT09dGhpcy5fdHlwZSYmXCJjdXN0b21cIiE9PXQ/dGhpcy50eXBlPXQrdGhpcy5wYXJ0aWFsQ291bnQ6dGhpcy50eXBlPXR9Z2V0IHBhcnRpYWxDb3VudCgpe3JldHVybiB0aGlzLl9wYXJ0aWFsQ291bnR9c2V0IHBhcnRpYWxDb3VudCh0KXtVbih0LDApO2xldCBlPXRoaXMuX3R5cGU7Y29uc3Qgcz0vXihzaW5lfHRyaWFuZ2xlfHNxdWFyZXxzYXd0b290aCkoXFxkKykkLy5leGVjKHRoaXMuX3R5cGUpO2lmKHMmJihlPXNbMV0pLFwiY3VzdG9tXCIhPT10aGlzLl90eXBlKXRoaXMudHlwZT0wPT09dD9lOmUrdC50b1N0cmluZygpO2Vsc2V7Y29uc3QgZT1uZXcgRmxvYXQzMkFycmF5KHQpO3RoaXMuX3BhcnRpYWxzLmZvckVhY2goKCh0LHMpPT5lW3NdPXQpKSx0aGlzLl9wYXJ0aWFscz1BcnJheS5mcm9tKGUpLHRoaXMudHlwZT10aGlzLl90eXBlfX1fZ2V0UmVhbEltYWdpbmFyeSh0LGUpe2xldCBzPTIwNDg7Y29uc3Qgbj1uZXcgRmxvYXQzMkFycmF5KHMpLGk9bmV3IEZsb2F0MzJBcnJheShzKTtsZXQgbz0xO2lmKFwiY3VzdG9tXCI9PT10KXtpZihvPXRoaXMuX3BhcnRpYWxzLmxlbmd0aCsxLHRoaXMuX3BhcnRpYWxDb3VudD10aGlzLl9wYXJ0aWFscy5sZW5ndGgscz1vLDA9PT10aGlzLl9wYXJ0aWFscy5sZW5ndGgpcmV0dXJuW24saV19ZWxzZXtjb25zdCBlPS9eKHNpbmV8dHJpYW5nbGV8c3F1YXJlfHNhd3Rvb3RoKShcXGQrKSQvLmV4ZWModCk7ZT8obz1wYXJzZUludChlWzJdLDEwKSsxLHRoaXMuX3BhcnRpYWxDb3VudD1wYXJzZUludChlWzJdLDEwKSx0PWVbMV0sbz1NYXRoLm1heChvLDIpLHM9byk6dGhpcy5fcGFydGlhbENvdW50PTAsdGhpcy5fcGFydGlhbHM9W119Zm9yKGxldCByPTE7cjxzOysrcil7Y29uc3Qgcz0yLyhyKk1hdGguUEkpO2xldCBhO3N3aXRjaCh0KXtjYXNlXCJzaW5lXCI6YT1yPD1vPzE6MCx0aGlzLl9wYXJ0aWFsc1tyLTFdPWE7YnJlYWs7Y2FzZVwic3F1YXJlXCI6YT0xJnI/MipzOjAsdGhpcy5fcGFydGlhbHNbci0xXT1hO2JyZWFrO2Nhc2VcInNhd3Rvb3RoXCI6YT1zKigxJnI/MTotMSksdGhpcy5fcGFydGlhbHNbci0xXT1hO2JyZWFrO2Nhc2VcInRyaWFuZ2xlXCI6YT0xJnI/cypzKjIqKHItMT4+MSYxPy0xOjEpOjAsdGhpcy5fcGFydGlhbHNbci0xXT1hO2JyZWFrO2Nhc2VcImN1c3RvbVwiOmE9dGhpcy5fcGFydGlhbHNbci0xXTticmVhaztkZWZhdWx0OnRocm93IG5ldyBUeXBlRXJyb3IoXCJPc2NpbGxhdG9yOiBpbnZhbGlkIHR5cGU6IFwiK3QpfTAhPT1hPyhuW3JdPS1hKk1hdGguc2luKGUqciksaVtyXT1hKk1hdGguY29zKGUqcikpOihuW3JdPTAsaVtyXT0wKX1yZXR1cm5bbixpXX1faW52ZXJzZUZGVCh0LGUscyl7bGV0IG49MDtjb25zdCBpPXQubGVuZ3RoO2ZvcihsZXQgbz0wO288aTtvKyspbis9dFtvXSpNYXRoLmNvcyhvKnMpK2Vbb10qTWF0aC5zaW4obypzKTtyZXR1cm4gbn1nZXRJbml0aWFsVmFsdWUoKXtjb25zdFt0LGVdPXRoaXMuX2dldFJlYWxJbWFnaW5hcnkodGhpcy5fdHlwZSwwKTtsZXQgcz0wO2NvbnN0IG49MipNYXRoLlBJO2ZvcihsZXQgaT0wO2k8MzI7aSsrKXM9TWF0aC5tYXgodGhpcy5faW52ZXJzZUZGVCh0LGUsaS8zMipuKSxzKTtyZXR1cm4geGkoLXRoaXMuX2ludmVyc2VGRlQodCxlLHRoaXMuX3BoYXNlKS9zLC0xLDEpfWdldCBwYXJ0aWFscygpe3JldHVybiB0aGlzLl9wYXJ0aWFscy5zbGljZSgwLHRoaXMucGFydGlhbENvdW50KX1zZXQgcGFydGlhbHModCl7dGhpcy5fcGFydGlhbHM9dCx0aGlzLl9wYXJ0aWFsQ291bnQ9dGhpcy5fcGFydGlhbHMubGVuZ3RoLHQubGVuZ3RoJiYodGhpcy50eXBlPVwiY3VzdG9tXCIpfWdldCBwaGFzZSgpe3JldHVybiB0aGlzLl9waGFzZSooMTgwL01hdGguUEkpfXNldCBwaGFzZSh0KXt0aGlzLl9waGFzZT10Kk1hdGguUEkvMTgwLHRoaXMudHlwZT10aGlzLl90eXBlfWFzQXJyYXkodD0xMDI0KXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtyZXR1cm4gR28odGhpcyx0KX0pKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSxudWxsIT09dGhpcy5fb3NjaWxsYXRvciYmdGhpcy5fb3NjaWxsYXRvci5kaXNwb3NlKCksdGhpcy5fd2F2ZT12b2lkIDAsdGhpcy5mcmVxdWVuY3kuZGlzcG9zZSgpLHRoaXMuZGV0dW5lLmRpc3Bvc2UoKSx0aGlzfX1aby5fcGVyaW9kaWNXYXZlQ2FjaGU9W107Y2xhc3MgWG8gZXh0ZW5kcyBSb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5uYW1lPVwiQXVkaW9Ub0dhaW5cIix0aGlzLl9ub3JtPW5ldyBxbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsbWFwcGluZzp0PT4odCsxKS8yfSksdGhpcy5pbnB1dD10aGlzLl9ub3JtLHRoaXMub3V0cHV0PXRoaXMuX25vcm19ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fbm9ybS5kaXNwb3NlKCksdGhpc319Y2xhc3MgWW8gZXh0ZW5kcyBwb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKE9iamVjdC5hc3NpZ24odWkoWW8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widmFsdWVcIl0pKSksdGhpcy5uYW1lPVwiTXVsdGlwbHlcIix0aGlzLm92ZXJyaWRlPSExO2NvbnN0IHQ9dWkoWW8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widmFsdWVcIl0pO3RoaXMuX211bHQ9dGhpcy5pbnB1dD10aGlzLm91dHB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LG1pblZhbHVlOnQubWluVmFsdWUsbWF4VmFsdWU6dC5tYXhWYWx1ZX0pLHRoaXMuZmFjdG9yPXRoaXMuX3BhcmFtPXRoaXMuX211bHQuZ2Fpbix0aGlzLmZhY3Rvci5zZXRWYWx1ZUF0VGltZSh0LnZhbHVlLDApfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKHBvLmdldERlZmF1bHRzKCkse3ZhbHVlOjB9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9tdWx0LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyAkbyBleHRlbmRzIFBve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoJG8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJ0eXBlXCIsXCJtb2R1bGF0aW9uVHlwZVwiXSkpLHRoaXMubmFtZT1cIkFNT3NjaWxsYXRvclwiLHRoaXMuX21vZHVsYXRpb25TY2FsZT1uZXcgWG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fbW9kdWxhdGlvbk5vZGU9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pO2NvbnN0IHQ9dWkoJG8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJ0eXBlXCIsXCJtb2R1bGF0aW9uVHlwZVwiXSk7dGhpcy5fY2Fycmllcj1uZXcgWm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGRldHVuZTp0LmRldHVuZSxmcmVxdWVuY3k6dC5mcmVxdWVuY3ksb25zdG9wOigpPT50aGlzLm9uc3RvcCh0aGlzKSxwaGFzZTp0LnBoYXNlLHR5cGU6dC50eXBlfSksdGhpcy5mcmVxdWVuY3k9dGhpcy5fY2Fycmllci5mcmVxdWVuY3ksdGhpcy5kZXR1bmU9dGhpcy5fY2Fycmllci5kZXR1bmUsdGhpcy5fbW9kdWxhdG9yPW5ldyBabyh7Y29udGV4dDp0aGlzLmNvbnRleHQscGhhc2U6dC5waGFzZSx0eXBlOnQubW9kdWxhdGlvblR5cGV9KSx0aGlzLmhhcm1vbmljaXR5PW5ldyBZbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJwb3NpdGl2ZVwiLHZhbHVlOnQuaGFybW9uaWNpdHl9KSx0aGlzLmZyZXF1ZW5jeS5jaGFpbih0aGlzLmhhcm1vbmljaXR5LHRoaXMuX21vZHVsYXRvci5mcmVxdWVuY3kpLHRoaXMuX21vZHVsYXRvci5jaGFpbih0aGlzLl9tb2R1bGF0aW9uU2NhbGUsdGhpcy5fbW9kdWxhdGlvbk5vZGUuZ2FpbiksdGhpcy5fY2Fycmllci5jaGFpbih0aGlzLl9tb2R1bGF0aW9uTm9kZSx0aGlzLm91dHB1dCksT2kodGhpcyxbXCJmcmVxdWVuY3lcIixcImRldHVuZVwiLFwiaGFybW9uaWNpdHlcIl0pfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKFpvLmdldERlZmF1bHRzKCkse2hhcm1vbmljaXR5OjEsbW9kdWxhdGlvblR5cGU6XCJzcXVhcmVcIn0pfV9zdGFydCh0KXt0aGlzLl9tb2R1bGF0b3Iuc3RhcnQodCksdGhpcy5fY2Fycmllci5zdGFydCh0KX1fc3RvcCh0KXt0aGlzLl9tb2R1bGF0b3Iuc3RvcCh0KSx0aGlzLl9jYXJyaWVyLnN0b3AodCl9X3Jlc3RhcnQodCl7dGhpcy5fbW9kdWxhdG9yLnJlc3RhcnQodCksdGhpcy5fY2Fycmllci5yZXN0YXJ0KHQpfWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuX2NhcnJpZXIudHlwZX1zZXQgdHlwZSh0KXt0aGlzLl9jYXJyaWVyLnR5cGU9dH1nZXQgYmFzZVR5cGUoKXtyZXR1cm4gdGhpcy5fY2Fycmllci5iYXNlVHlwZX1zZXQgYmFzZVR5cGUodCl7dGhpcy5fY2Fycmllci5iYXNlVHlwZT10fWdldCBwYXJ0aWFsQ291bnQoKXtyZXR1cm4gdGhpcy5fY2Fycmllci5wYXJ0aWFsQ291bnR9c2V0IHBhcnRpYWxDb3VudCh0KXt0aGlzLl9jYXJyaWVyLnBhcnRpYWxDb3VudD10fWdldCBtb2R1bGF0aW9uVHlwZSgpe3JldHVybiB0aGlzLl9tb2R1bGF0b3IudHlwZX1zZXQgbW9kdWxhdGlvblR5cGUodCl7dGhpcy5fbW9kdWxhdG9yLnR5cGU9dH1nZXQgcGhhc2UoKXtyZXR1cm4gdGhpcy5fY2Fycmllci5waGFzZX1zZXQgcGhhc2UodCl7dGhpcy5fY2Fycmllci5waGFzZT10LHRoaXMuX21vZHVsYXRvci5waGFzZT10fWdldCBwYXJ0aWFscygpe3JldHVybiB0aGlzLl9jYXJyaWVyLnBhcnRpYWxzfXNldCBwYXJ0aWFscyh0KXt0aGlzLl9jYXJyaWVyLnBhcnRpYWxzPXR9YXNBcnJheSh0PTEwMjQpe3JldHVybiBuaSh0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKigpe3JldHVybiBHbyh0aGlzLHQpfSkpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuZnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLmRldHVuZS5kaXNwb3NlKCksdGhpcy5oYXJtb25pY2l0eS5kaXNwb3NlKCksdGhpcy5fY2Fycmllci5kaXNwb3NlKCksdGhpcy5fbW9kdWxhdG9yLmRpc3Bvc2UoKSx0aGlzLl9tb2R1bGF0aW9uTm9kZS5kaXNwb3NlKCksdGhpcy5fbW9kdWxhdGlvblNjYWxlLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBIbyBleHRlbmRzIFBve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoSG8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJ0eXBlXCIsXCJtb2R1bGF0aW9uVHlwZVwiXSkpLHRoaXMubmFtZT1cIkZNT3NjaWxsYXRvclwiLHRoaXMuX21vZHVsYXRpb25Ob2RlPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHQsZ2FpbjowfSk7Y29uc3QgdD11aShIby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcInR5cGVcIixcIm1vZHVsYXRpb25UeXBlXCJdKTt0aGlzLl9jYXJyaWVyPW5ldyBabyh7Y29udGV4dDp0aGlzLmNvbnRleHQsZGV0dW5lOnQuZGV0dW5lLGZyZXF1ZW5jeTowLG9uc3RvcDooKT0+dGhpcy5vbnN0b3AodGhpcykscGhhc2U6dC5waGFzZSx0eXBlOnQudHlwZX0pLHRoaXMuZGV0dW5lPXRoaXMuX2NhcnJpZXIuZGV0dW5lLHRoaXMuZnJlcXVlbmN5PW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJmcmVxdWVuY3lcIix2YWx1ZTp0LmZyZXF1ZW5jeX0pLHRoaXMuX21vZHVsYXRvcj1uZXcgWm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHBoYXNlOnQucGhhc2UsdHlwZTp0Lm1vZHVsYXRpb25UeXBlfSksdGhpcy5oYXJtb25pY2l0eT1uZXcgWW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwicG9zaXRpdmVcIix2YWx1ZTp0Lmhhcm1vbmljaXR5fSksdGhpcy5tb2R1bGF0aW9uSW5kZXg9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcInBvc2l0aXZlXCIsdmFsdWU6dC5tb2R1bGF0aW9uSW5kZXh9KSx0aGlzLmZyZXF1ZW5jeS5jb25uZWN0KHRoaXMuX2NhcnJpZXIuZnJlcXVlbmN5KSx0aGlzLmZyZXF1ZW5jeS5jaGFpbih0aGlzLmhhcm1vbmljaXR5LHRoaXMuX21vZHVsYXRvci5mcmVxdWVuY3kpLHRoaXMuZnJlcXVlbmN5LmNoYWluKHRoaXMubW9kdWxhdGlvbkluZGV4LHRoaXMuX21vZHVsYXRpb25Ob2RlKSx0aGlzLl9tb2R1bGF0b3IuY29ubmVjdCh0aGlzLl9tb2R1bGF0aW9uTm9kZS5nYWluKSx0aGlzLl9tb2R1bGF0aW9uTm9kZS5jb25uZWN0KHRoaXMuX2NhcnJpZXIuZnJlcXVlbmN5KSx0aGlzLl9jYXJyaWVyLmNvbm5lY3QodGhpcy5vdXRwdXQpLHRoaXMuZGV0dW5lLmNvbm5lY3QodGhpcy5fbW9kdWxhdG9yLmRldHVuZSksT2kodGhpcyxbXCJtb2R1bGF0aW9uSW5kZXhcIixcImZyZXF1ZW5jeVwiLFwiZGV0dW5lXCIsXCJoYXJtb25pY2l0eVwiXSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oWm8uZ2V0RGVmYXVsdHMoKSx7aGFybW9uaWNpdHk6MSxtb2R1bGF0aW9uSW5kZXg6Mixtb2R1bGF0aW9uVHlwZTpcInNxdWFyZVwifSl9X3N0YXJ0KHQpe3RoaXMuX21vZHVsYXRvci5zdGFydCh0KSx0aGlzLl9jYXJyaWVyLnN0YXJ0KHQpfV9zdG9wKHQpe3RoaXMuX21vZHVsYXRvci5zdG9wKHQpLHRoaXMuX2NhcnJpZXIuc3RvcCh0KX1fcmVzdGFydCh0KXtyZXR1cm4gdGhpcy5fbW9kdWxhdG9yLnJlc3RhcnQodCksdGhpcy5fY2Fycmllci5yZXN0YXJ0KHQpLHRoaXN9Z2V0IHR5cGUoKXtyZXR1cm4gdGhpcy5fY2Fycmllci50eXBlfXNldCB0eXBlKHQpe3RoaXMuX2NhcnJpZXIudHlwZT10fWdldCBiYXNlVHlwZSgpe3JldHVybiB0aGlzLl9jYXJyaWVyLmJhc2VUeXBlfXNldCBiYXNlVHlwZSh0KXt0aGlzLl9jYXJyaWVyLmJhc2VUeXBlPXR9Z2V0IHBhcnRpYWxDb3VudCgpe3JldHVybiB0aGlzLl9jYXJyaWVyLnBhcnRpYWxDb3VudH1zZXQgcGFydGlhbENvdW50KHQpe3RoaXMuX2NhcnJpZXIucGFydGlhbENvdW50PXR9Z2V0IG1vZHVsYXRpb25UeXBlKCl7cmV0dXJuIHRoaXMuX21vZHVsYXRvci50eXBlfXNldCBtb2R1bGF0aW9uVHlwZSh0KXt0aGlzLl9tb2R1bGF0b3IudHlwZT10fWdldCBwaGFzZSgpe3JldHVybiB0aGlzLl9jYXJyaWVyLnBoYXNlfXNldCBwaGFzZSh0KXt0aGlzLl9jYXJyaWVyLnBoYXNlPXQsdGhpcy5fbW9kdWxhdG9yLnBoYXNlPXR9Z2V0IHBhcnRpYWxzKCl7cmV0dXJuIHRoaXMuX2NhcnJpZXIucGFydGlhbHN9c2V0IHBhcnRpYWxzKHQpe3RoaXMuX2NhcnJpZXIucGFydGlhbHM9dH1hc0FycmF5KHQ9MTAyNCl7cmV0dXJuIG5pKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24qKCl7cmV0dXJuIEdvKHRoaXMsdCl9KSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5mcmVxdWVuY3kuZGlzcG9zZSgpLHRoaXMuaGFybW9uaWNpdHkuZGlzcG9zZSgpLHRoaXMuX2NhcnJpZXIuZGlzcG9zZSgpLHRoaXMuX21vZHVsYXRvci5kaXNwb3NlKCksdGhpcy5fbW9kdWxhdGlvbk5vZGUuZGlzcG9zZSgpLHRoaXMubW9kdWxhdGlvbkluZGV4LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBKbyBleHRlbmRzIFBve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoSm8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJ3aWR0aFwiXSkpLHRoaXMubmFtZT1cIlB1bHNlT3NjaWxsYXRvclwiLHRoaXMuX3dpZHRoR2F0ZT1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46MH0pLHRoaXMuX3RocmVzaD1uZXcgcW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LG1hcHBpbmc6dD0+dDw9MD8tMToxfSk7Y29uc3QgdD11aShKby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcIndpZHRoXCJdKTt0aGlzLndpZHRoPW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJhdWRpb1JhbmdlXCIsdmFsdWU6dC53aWR0aH0pLHRoaXMuX3RyaWFuZ2xlPW5ldyBabyh7Y29udGV4dDp0aGlzLmNvbnRleHQsZGV0dW5lOnQuZGV0dW5lLGZyZXF1ZW5jeTp0LmZyZXF1ZW5jeSxvbnN0b3A6KCk9PnRoaXMub25zdG9wKHRoaXMpLHBoYXNlOnQucGhhc2UsdHlwZTpcInRyaWFuZ2xlXCJ9KSx0aGlzLmZyZXF1ZW5jeT10aGlzLl90cmlhbmdsZS5mcmVxdWVuY3ksdGhpcy5kZXR1bmU9dGhpcy5fdHJpYW5nbGUuZGV0dW5lLHRoaXMuX3RyaWFuZ2xlLmNoYWluKHRoaXMuX3RocmVzaCx0aGlzLm91dHB1dCksdGhpcy53aWR0aC5jaGFpbih0aGlzLl93aWR0aEdhdGUsdGhpcy5fdGhyZXNoKSxPaSh0aGlzLFtcIndpZHRoXCIsXCJmcmVxdWVuY3lcIixcImRldHVuZVwiXSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oUG8uZ2V0RGVmYXVsdHMoKSx7ZGV0dW5lOjAsZnJlcXVlbmN5OjQ0MCxwaGFzZTowLHR5cGU6XCJwdWxzZVwiLHdpZHRoOi4yfSl9X3N0YXJ0KHQpe3Q9dGhpcy50b1NlY29uZHModCksdGhpcy5fdHJpYW5nbGUuc3RhcnQodCksdGhpcy5fd2lkdGhHYXRlLmdhaW4uc2V0VmFsdWVBdFRpbWUoMSx0KX1fc3RvcCh0KXt0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX3RyaWFuZ2xlLnN0b3AodCksdGhpcy5fd2lkdGhHYXRlLmdhaW4uY2FuY2VsU2NoZWR1bGVkVmFsdWVzKHQpLHRoaXMuX3dpZHRoR2F0ZS5nYWluLnNldFZhbHVlQXRUaW1lKDAsdCl9X3Jlc3RhcnQodCl7dGhpcy5fdHJpYW5nbGUucmVzdGFydCh0KSx0aGlzLl93aWR0aEdhdGUuZ2Fpbi5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModCksdGhpcy5fd2lkdGhHYXRlLmdhaW4uc2V0VmFsdWVBdFRpbWUoMSx0KX1nZXQgcGhhc2UoKXtyZXR1cm4gdGhpcy5fdHJpYW5nbGUucGhhc2V9c2V0IHBoYXNlKHQpe3RoaXMuX3RyaWFuZ2xlLnBoYXNlPXR9Z2V0IHR5cGUoKXtyZXR1cm5cInB1bHNlXCJ9Z2V0IGJhc2VUeXBlKCl7cmV0dXJuXCJwdWxzZVwifWdldCBwYXJ0aWFscygpe3JldHVybltdfWdldCBwYXJ0aWFsQ291bnQoKXtyZXR1cm4gMH1zZXQgY2FycmllclR5cGUodCl7dGhpcy5fdHJpYW5nbGUudHlwZT10fWFzQXJyYXkodD0xMDI0KXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtyZXR1cm4gR28odGhpcyx0KX0pKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl90cmlhbmdsZS5kaXNwb3NlKCksdGhpcy53aWR0aC5kaXNwb3NlKCksdGhpcy5fd2lkdGhHYXRlLmRpc3Bvc2UoKSx0aGlzLl90aHJlc2guZGlzcG9zZSgpLHRoaXN9fWNsYXNzIEtvIGV4dGVuZHMgUG97Y29uc3RydWN0b3IoKXtzdXBlcih1aShLby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcInR5cGVcIixcInNwcmVhZFwiXSkpLHRoaXMubmFtZT1cIkZhdE9zY2lsbGF0b3JcIix0aGlzLl9vc2NpbGxhdG9ycz1bXTtjb25zdCB0PXVpKEtvLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwidHlwZVwiLFwic3ByZWFkXCJdKTt0aGlzLmZyZXF1ZW5jeT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiZnJlcXVlbmN5XCIsdmFsdWU6dC5mcmVxdWVuY3l9KSx0aGlzLmRldHVuZT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiY2VudHNcIix2YWx1ZTp0LmRldHVuZX0pLHRoaXMuX3NwcmVhZD10LnNwcmVhZCx0aGlzLl90eXBlPXQudHlwZSx0aGlzLl9waGFzZT10LnBoYXNlLHRoaXMuX3BhcnRpYWxzPXQucGFydGlhbHMsdGhpcy5fcGFydGlhbENvdW50PXQucGFydGlhbENvdW50LHRoaXMuY291bnQ9dC5jb3VudCxPaSh0aGlzLFtcImZyZXF1ZW5jeVwiLFwiZGV0dW5lXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihaby5nZXREZWZhdWx0cygpLHtjb3VudDozLHNwcmVhZDoyMCx0eXBlOlwic2F3dG9vdGhcIn0pfV9zdGFydCh0KXt0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX2ZvckVhY2goKGU9PmUuc3RhcnQodCkpKX1fc3RvcCh0KXt0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX2ZvckVhY2goKGU9PmUuc3RvcCh0KSkpfV9yZXN0YXJ0KHQpe3RoaXMuX2ZvckVhY2goKGU9PmUucmVzdGFydCh0KSkpfV9mb3JFYWNoKHQpe2ZvcihsZXQgZT0wO2U8dGhpcy5fb3NjaWxsYXRvcnMubGVuZ3RoO2UrKyl0KHRoaXMuX29zY2lsbGF0b3JzW2VdLGUpfWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuX3R5cGV9c2V0IHR5cGUodCl7dGhpcy5fdHlwZT10LHRoaXMuX2ZvckVhY2goKGU9PmUudHlwZT10KSl9Z2V0IHNwcmVhZCgpe3JldHVybiB0aGlzLl9zcHJlYWR9c2V0IHNwcmVhZCh0KXtpZih0aGlzLl9zcHJlYWQ9dCx0aGlzLl9vc2NpbGxhdG9ycy5sZW5ndGg+MSl7Y29uc3QgZT0tdC8yLHM9dC8odGhpcy5fb3NjaWxsYXRvcnMubGVuZ3RoLTEpO3RoaXMuX2ZvckVhY2goKCh0LG4pPT50LmRldHVuZS52YWx1ZT1lK3MqbikpfX1nZXQgY291bnQoKXtyZXR1cm4gdGhpcy5fb3NjaWxsYXRvcnMubGVuZ3RofXNldCBjb3VudCh0KXtpZihVbih0LDEpLHRoaXMuX29zY2lsbGF0b3JzLmxlbmd0aCE9PXQpe3RoaXMuX2ZvckVhY2goKHQ9PnQuZGlzcG9zZSgpKSksdGhpcy5fb3NjaWxsYXRvcnM9W107Zm9yKGxldCBlPTA7ZTx0O2UrKyl7Y29uc3Qgcz1uZXcgWm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZvbHVtZTotNi0xLjEqdCx0eXBlOnRoaXMuX3R5cGUscGhhc2U6dGhpcy5fcGhhc2UrZS90KjM2MCxwYXJ0aWFsQ291bnQ6dGhpcy5fcGFydGlhbENvdW50LG9uc3RvcDowPT09ZT8oKT0+dGhpcy5vbnN0b3AodGhpcyk6RWl9KTtcImN1c3RvbVwiPT09dGhpcy50eXBlJiYocy5wYXJ0aWFscz10aGlzLl9wYXJ0aWFscyksdGhpcy5mcmVxdWVuY3kuY29ubmVjdChzLmZyZXF1ZW5jeSksdGhpcy5kZXR1bmUuY29ubmVjdChzLmRldHVuZSkscy5kZXR1bmUub3ZlcnJpZGRlbj0hMSxzLmNvbm5lY3QodGhpcy5vdXRwdXQpLHRoaXMuX29zY2lsbGF0b3JzW2VdPXN9dGhpcy5zcHJlYWQ9dGhpcy5fc3ByZWFkLFwic3RhcnRlZFwiPT09dGhpcy5zdGF0ZSYmdGhpcy5fZm9yRWFjaCgodD0+dC5zdGFydCgpKSl9fWdldCBwaGFzZSgpe3JldHVybiB0aGlzLl9waGFzZX1zZXQgcGhhc2UodCl7dGhpcy5fcGhhc2U9dCx0aGlzLl9mb3JFYWNoKCgodCxlKT0+dC5waGFzZT10aGlzLl9waGFzZStlL3RoaXMuY291bnQqMzYwKSl9Z2V0IGJhc2VUeXBlKCl7cmV0dXJuIHRoaXMuX29zY2lsbGF0b3JzWzBdLmJhc2VUeXBlfXNldCBiYXNlVHlwZSh0KXt0aGlzLl9mb3JFYWNoKChlPT5lLmJhc2VUeXBlPXQpKSx0aGlzLl90eXBlPXRoaXMuX29zY2lsbGF0b3JzWzBdLnR5cGV9Z2V0IHBhcnRpYWxzKCl7cmV0dXJuIHRoaXMuX29zY2lsbGF0b3JzWzBdLnBhcnRpYWxzfXNldCBwYXJ0aWFscyh0KXt0aGlzLl9wYXJ0aWFscz10LHRoaXMuX3BhcnRpYWxDb3VudD10aGlzLl9wYXJ0aWFscy5sZW5ndGgsdC5sZW5ndGgmJih0aGlzLl90eXBlPVwiY3VzdG9tXCIsdGhpcy5fZm9yRWFjaCgoZT0+ZS5wYXJ0aWFscz10KSkpfWdldCBwYXJ0aWFsQ291bnQoKXtyZXR1cm4gdGhpcy5fb3NjaWxsYXRvcnNbMF0ucGFydGlhbENvdW50fXNldCBwYXJ0aWFsQ291bnQodCl7dGhpcy5fcGFydGlhbENvdW50PXQsdGhpcy5fZm9yRWFjaCgoZT0+ZS5wYXJ0aWFsQ291bnQ9dCkpLHRoaXMuX3R5cGU9dGhpcy5fb3NjaWxsYXRvcnNbMF0udHlwZX1hc0FycmF5KHQ9MTAyNCl7cmV0dXJuIG5pKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24qKCl7cmV0dXJuIEdvKHRoaXMsdCl9KSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5mcmVxdWVuY3kuZGlzcG9zZSgpLHRoaXMuZGV0dW5lLmRpc3Bvc2UoKSx0aGlzLl9mb3JFYWNoKCh0PT50LmRpc3Bvc2UoKSkpLHRoaXN9fWNsYXNzIHRyIGV4dGVuZHMgUG97Y29uc3RydWN0b3IoKXtzdXBlcih1aSh0ci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcIm1vZHVsYXRpb25GcmVxdWVuY3lcIl0pKSx0aGlzLm5hbWU9XCJQV01Pc2NpbGxhdG9yXCIsdGhpcy5zb3VyY2VUeXBlPVwicHdtXCIsdGhpcy5fc2NhbGU9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZToyfSk7Y29uc3QgdD11aSh0ci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcIm1vZHVsYXRpb25GcmVxdWVuY3lcIl0pO3RoaXMuX3B1bHNlPW5ldyBKbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsZnJlcXVlbmN5OnQubW9kdWxhdGlvbkZyZXF1ZW5jeX0pLHRoaXMuX3B1bHNlLmNhcnJpZXJUeXBlPVwic2luZVwiLHRoaXMubW9kdWxhdGlvbkZyZXF1ZW5jeT10aGlzLl9wdWxzZS5mcmVxdWVuY3ksdGhpcy5fbW9kdWxhdG9yPW5ldyBabyh7Y29udGV4dDp0aGlzLmNvbnRleHQsZGV0dW5lOnQuZGV0dW5lLGZyZXF1ZW5jeTp0LmZyZXF1ZW5jeSxvbnN0b3A6KCk9PnRoaXMub25zdG9wKHRoaXMpLHBoYXNlOnQucGhhc2V9KSx0aGlzLmZyZXF1ZW5jeT10aGlzLl9tb2R1bGF0b3IuZnJlcXVlbmN5LHRoaXMuZGV0dW5lPXRoaXMuX21vZHVsYXRvci5kZXR1bmUsdGhpcy5fbW9kdWxhdG9yLmNoYWluKHRoaXMuX3NjYWxlLHRoaXMuX3B1bHNlLndpZHRoKSx0aGlzLl9wdWxzZS5jb25uZWN0KHRoaXMub3V0cHV0KSxPaSh0aGlzLFtcIm1vZHVsYXRpb25GcmVxdWVuY3lcIixcImZyZXF1ZW5jeVwiLFwiZGV0dW5lXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihQby5nZXREZWZhdWx0cygpLHtkZXR1bmU6MCxmcmVxdWVuY3k6NDQwLG1vZHVsYXRpb25GcmVxdWVuY3k6LjQscGhhc2U6MCx0eXBlOlwicHdtXCJ9KX1fc3RhcnQodCl7dD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLl9tb2R1bGF0b3Iuc3RhcnQodCksdGhpcy5fcHVsc2Uuc3RhcnQodCl9X3N0b3AodCl7dD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLl9tb2R1bGF0b3Iuc3RvcCh0KSx0aGlzLl9wdWxzZS5zdG9wKHQpfV9yZXN0YXJ0KHQpe3RoaXMuX21vZHVsYXRvci5yZXN0YXJ0KHQpLHRoaXMuX3B1bHNlLnJlc3RhcnQodCl9Z2V0IHR5cGUoKXtyZXR1cm5cInB3bVwifWdldCBiYXNlVHlwZSgpe3JldHVyblwicHdtXCJ9Z2V0IHBhcnRpYWxzKCl7cmV0dXJuW119Z2V0IHBhcnRpYWxDb3VudCgpe3JldHVybiAwfWdldCBwaGFzZSgpe3JldHVybiB0aGlzLl9tb2R1bGF0b3IucGhhc2V9c2V0IHBoYXNlKHQpe3RoaXMuX21vZHVsYXRvci5waGFzZT10fWFzQXJyYXkodD0xMDI0KXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtyZXR1cm4gR28odGhpcyx0KX0pKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9wdWxzZS5kaXNwb3NlKCksdGhpcy5fc2NhbGUuZGlzcG9zZSgpLHRoaXMuX21vZHVsYXRvci5kaXNwb3NlKCksdGhpc319Y29uc3QgZXI9e2FtOiRvLGZhdDpLbyxmbTpIbyxvc2NpbGxhdG9yOlpvLHB1bHNlOkpvLHB3bTp0cn07Y2xhc3Mgc3IgZXh0ZW5kcyBQb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKHNyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwidHlwZVwiXSkpLHRoaXMubmFtZT1cIk9tbmlPc2NpbGxhdG9yXCI7Y29uc3QgdD11aShzci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcInR5cGVcIl0pO3RoaXMuZnJlcXVlbmN5PW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJmcmVxdWVuY3lcIix2YWx1ZTp0LmZyZXF1ZW5jeX0pLHRoaXMuZGV0dW5lPW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJjZW50c1wiLHZhbHVlOnQuZGV0dW5lfSksT2kodGhpcyxbXCJmcmVxdWVuY3lcIixcImRldHVuZVwiXSksdGhpcy5zZXQodCl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oWm8uZ2V0RGVmYXVsdHMoKSxIby5nZXREZWZhdWx0cygpLCRvLmdldERlZmF1bHRzKCksS28uZ2V0RGVmYXVsdHMoKSxKby5nZXREZWZhdWx0cygpLHRyLmdldERlZmF1bHRzKCkpfV9zdGFydCh0KXt0aGlzLl9vc2NpbGxhdG9yLnN0YXJ0KHQpfV9zdG9wKHQpe3RoaXMuX29zY2lsbGF0b3Iuc3RvcCh0KX1fcmVzdGFydCh0KXtyZXR1cm4gdGhpcy5fb3NjaWxsYXRvci5yZXN0YXJ0KHQpLHRoaXN9Z2V0IHR5cGUoKXtsZXQgdD1cIlwiO3JldHVybltcImFtXCIsXCJmbVwiLFwiZmF0XCJdLnNvbWUoKHQ9PnRoaXMuX3NvdXJjZVR5cGU9PT10KSkmJih0PXRoaXMuX3NvdXJjZVR5cGUpLHQrdGhpcy5fb3NjaWxsYXRvci50eXBlfXNldCB0eXBlKHQpe1wiZm1cIj09PXQuc3Vic3RyKDAsMik/KHRoaXMuX2NyZWF0ZU5ld09zY2lsbGF0b3IoXCJmbVwiKSx0aGlzLl9vc2NpbGxhdG9yPXRoaXMuX29zY2lsbGF0b3IsdGhpcy5fb3NjaWxsYXRvci50eXBlPXQuc3Vic3RyKDIpKTpcImFtXCI9PT10LnN1YnN0cigwLDIpPyh0aGlzLl9jcmVhdGVOZXdPc2NpbGxhdG9yKFwiYW1cIiksdGhpcy5fb3NjaWxsYXRvcj10aGlzLl9vc2NpbGxhdG9yLHRoaXMuX29zY2lsbGF0b3IudHlwZT10LnN1YnN0cigyKSk6XCJmYXRcIj09PXQuc3Vic3RyKDAsMyk/KHRoaXMuX2NyZWF0ZU5ld09zY2lsbGF0b3IoXCJmYXRcIiksdGhpcy5fb3NjaWxsYXRvcj10aGlzLl9vc2NpbGxhdG9yLHRoaXMuX29zY2lsbGF0b3IudHlwZT10LnN1YnN0cigzKSk6XCJwd21cIj09PXQ/KHRoaXMuX2NyZWF0ZU5ld09zY2lsbGF0b3IoXCJwd21cIiksdGhpcy5fb3NjaWxsYXRvcj10aGlzLl9vc2NpbGxhdG9yKTpcInB1bHNlXCI9PT10P3RoaXMuX2NyZWF0ZU5ld09zY2lsbGF0b3IoXCJwdWxzZVwiKToodGhpcy5fY3JlYXRlTmV3T3NjaWxsYXRvcihcIm9zY2lsbGF0b3JcIiksdGhpcy5fb3NjaWxsYXRvcj10aGlzLl9vc2NpbGxhdG9yLHRoaXMuX29zY2lsbGF0b3IudHlwZT10KX1nZXQgcGFydGlhbHMoKXtyZXR1cm4gdGhpcy5fb3NjaWxsYXRvci5wYXJ0aWFsc31zZXQgcGFydGlhbHModCl7dGhpcy5fZ2V0T3NjVHlwZSh0aGlzLl9vc2NpbGxhdG9yLFwicHVsc2VcIil8fHRoaXMuX2dldE9zY1R5cGUodGhpcy5fb3NjaWxsYXRvcixcInB3bVwiKXx8KHRoaXMuX29zY2lsbGF0b3IucGFydGlhbHM9dCl9Z2V0IHBhcnRpYWxDb3VudCgpe3JldHVybiB0aGlzLl9vc2NpbGxhdG9yLnBhcnRpYWxDb3VudH1zZXQgcGFydGlhbENvdW50KHQpe3RoaXMuX2dldE9zY1R5cGUodGhpcy5fb3NjaWxsYXRvcixcInB1bHNlXCIpfHx0aGlzLl9nZXRPc2NUeXBlKHRoaXMuX29zY2lsbGF0b3IsXCJwd21cIil8fCh0aGlzLl9vc2NpbGxhdG9yLnBhcnRpYWxDb3VudD10KX1zZXQodCl7cmV0dXJuIFJlZmxlY3QuaGFzKHQsXCJ0eXBlXCIpJiZ0LnR5cGUmJih0aGlzLnR5cGU9dC50eXBlKSxzdXBlci5zZXQodCksdGhpc31fY3JlYXRlTmV3T3NjaWxsYXRvcih0KXtpZih0IT09dGhpcy5fc291cmNlVHlwZSl7dGhpcy5fc291cmNlVHlwZT10O2NvbnN0IGU9ZXJbdF0scz10aGlzLm5vdygpO2lmKHRoaXMuX29zY2lsbGF0b3Ipe2NvbnN0IHQ9dGhpcy5fb3NjaWxsYXRvcjt0LnN0b3AocyksdGhpcy5jb250ZXh0LnNldFRpbWVvdXQoKCgpPT50LmRpc3Bvc2UoKSksdGhpcy5ibG9ja1RpbWUpfXRoaXMuX29zY2lsbGF0b3I9bmV3IGUoe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5mcmVxdWVuY3kuY29ubmVjdCh0aGlzLl9vc2NpbGxhdG9yLmZyZXF1ZW5jeSksdGhpcy5kZXR1bmUuY29ubmVjdCh0aGlzLl9vc2NpbGxhdG9yLmRldHVuZSksdGhpcy5fb3NjaWxsYXRvci5jb25uZWN0KHRoaXMub3V0cHV0KSx0aGlzLl9vc2NpbGxhdG9yLm9uc3RvcD0oKT0+dGhpcy5vbnN0b3AodGhpcyksXCJzdGFydGVkXCI9PT10aGlzLnN0YXRlJiZ0aGlzLl9vc2NpbGxhdG9yLnN0YXJ0KHMpfX1nZXQgcGhhc2UoKXtyZXR1cm4gdGhpcy5fb3NjaWxsYXRvci5waGFzZX1zZXQgcGhhc2UodCl7dGhpcy5fb3NjaWxsYXRvci5waGFzZT10fWdldCBzb3VyY2VUeXBlKCl7cmV0dXJuIHRoaXMuX3NvdXJjZVR5cGV9c2V0IHNvdXJjZVR5cGUodCl7bGV0IGU9XCJzaW5lXCI7XCJwd21cIiE9PXRoaXMuX29zY2lsbGF0b3IudHlwZSYmXCJwdWxzZVwiIT09dGhpcy5fb3NjaWxsYXRvci50eXBlJiYoZT10aGlzLl9vc2NpbGxhdG9yLnR5cGUpLFwiZm1cIj09PXQ/dGhpcy50eXBlPVwiZm1cIitlOlwiYW1cIj09PXQ/dGhpcy50eXBlPVwiYW1cIitlOlwiZmF0XCI9PT10P3RoaXMudHlwZT1cImZhdFwiK2U6XCJvc2NpbGxhdG9yXCI9PT10P3RoaXMudHlwZT1lOlwicHVsc2VcIj09PXQ/dGhpcy50eXBlPVwicHVsc2VcIjpcInB3bVwiPT09dCYmKHRoaXMudHlwZT1cInB3bVwiKX1fZ2V0T3NjVHlwZSh0LGUpe3JldHVybiB0IGluc3RhbmNlb2YgZXJbZV19Z2V0IGJhc2VUeXBlKCl7cmV0dXJuIHRoaXMuX29zY2lsbGF0b3IuYmFzZVR5cGV9c2V0IGJhc2VUeXBlKHQpe3RoaXMuX2dldE9zY1R5cGUodGhpcy5fb3NjaWxsYXRvcixcInB1bHNlXCIpfHx0aGlzLl9nZXRPc2NUeXBlKHRoaXMuX29zY2lsbGF0b3IsXCJwd21cIil8fFwicHVsc2VcIj09PXR8fFwicHdtXCI9PT10fHwodGhpcy5fb3NjaWxsYXRvci5iYXNlVHlwZT10KX1nZXQgd2lkdGgoKXtyZXR1cm4gdGhpcy5fZ2V0T3NjVHlwZSh0aGlzLl9vc2NpbGxhdG9yLFwicHVsc2VcIik/dGhpcy5fb3NjaWxsYXRvci53aWR0aDp2b2lkIDB9Z2V0IGNvdW50KCl7cmV0dXJuIHRoaXMuX2dldE9zY1R5cGUodGhpcy5fb3NjaWxsYXRvcixcImZhdFwiKT90aGlzLl9vc2NpbGxhdG9yLmNvdW50OnZvaWQgMH1zZXQgY291bnQodCl7dGhpcy5fZ2V0T3NjVHlwZSh0aGlzLl9vc2NpbGxhdG9yLFwiZmF0XCIpJiZObih0KSYmKHRoaXMuX29zY2lsbGF0b3IuY291bnQ9dCl9Z2V0IHNwcmVhZCgpe3JldHVybiB0aGlzLl9nZXRPc2NUeXBlKHRoaXMuX29zY2lsbGF0b3IsXCJmYXRcIik/dGhpcy5fb3NjaWxsYXRvci5zcHJlYWQ6dm9pZCAwfXNldCBzcHJlYWQodCl7dGhpcy5fZ2V0T3NjVHlwZSh0aGlzLl9vc2NpbGxhdG9yLFwiZmF0XCIpJiZObih0KSYmKHRoaXMuX29zY2lsbGF0b3Iuc3ByZWFkPXQpfWdldCBtb2R1bGF0aW9uVHlwZSgpe3JldHVybiB0aGlzLl9nZXRPc2NUeXBlKHRoaXMuX29zY2lsbGF0b3IsXCJmbVwiKXx8dGhpcy5fZ2V0T3NjVHlwZSh0aGlzLl9vc2NpbGxhdG9yLFwiYW1cIik/dGhpcy5fb3NjaWxsYXRvci5tb2R1bGF0aW9uVHlwZTp2b2lkIDB9c2V0IG1vZHVsYXRpb25UeXBlKHQpeyh0aGlzLl9nZXRPc2NUeXBlKHRoaXMuX29zY2lsbGF0b3IsXCJmbVwiKXx8dGhpcy5fZ2V0T3NjVHlwZSh0aGlzLl9vc2NpbGxhdG9yLFwiYW1cIikpJiZ6bih0KSYmKHRoaXMuX29zY2lsbGF0b3IubW9kdWxhdGlvblR5cGU9dCl9Z2V0IG1vZHVsYXRpb25JbmRleCgpe3JldHVybiB0aGlzLl9nZXRPc2NUeXBlKHRoaXMuX29zY2lsbGF0b3IsXCJmbVwiKT90aGlzLl9vc2NpbGxhdG9yLm1vZHVsYXRpb25JbmRleDp2b2lkIDB9Z2V0IGhhcm1vbmljaXR5KCl7cmV0dXJuIHRoaXMuX2dldE9zY1R5cGUodGhpcy5fb3NjaWxsYXRvcixcImZtXCIpfHx0aGlzLl9nZXRPc2NUeXBlKHRoaXMuX29zY2lsbGF0b3IsXCJhbVwiKT90aGlzLl9vc2NpbGxhdG9yLmhhcm1vbmljaXR5OnZvaWQgMH1nZXQgbW9kdWxhdGlvbkZyZXF1ZW5jeSgpe3JldHVybiB0aGlzLl9nZXRPc2NUeXBlKHRoaXMuX29zY2lsbGF0b3IsXCJwd21cIik/dGhpcy5fb3NjaWxsYXRvci5tb2R1bGF0aW9uRnJlcXVlbmN5OnZvaWQgMH1hc0FycmF5KHQ9MTAyNCl7cmV0dXJuIG5pKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24qKCl7cmV0dXJuIEdvKHRoaXMsdCl9KSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5kZXR1bmUuZGlzcG9zZSgpLHRoaXMuZnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLl9vc2NpbGxhdG9yLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBuciBleHRlbmRzIHBve2NvbnN0cnVjdG9yKCl7c3VwZXIoT2JqZWN0LmFzc2lnbih1aShuci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ2YWx1ZVwiXSkpKSx0aGlzLm92ZXJyaWRlPSExLHRoaXMubmFtZT1cIkFkZFwiLHRoaXMuX3N1bT1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5pbnB1dD10aGlzLl9zdW0sdGhpcy5vdXRwdXQ9dGhpcy5fc3VtLHRoaXMuYWRkZW5kPXRoaXMuX3BhcmFtLG9vKHRoaXMuX2NvbnN0YW50U291cmNlLHRoaXMuX3N1bSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24ocG8uZ2V0RGVmYXVsdHMoKSx7dmFsdWU6MH0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3N1bS5kaXNwb3NlKCksdGhpc319Y2xhc3MgaXIgZXh0ZW5kcyBSb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKE9iamVjdC5hc3NpZ24odWkoaXIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wibWluXCIsXCJtYXhcIl0pKSksdGhpcy5uYW1lPVwiU2NhbGVcIjtjb25zdCB0PXVpKGlyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcIm1pblwiLFwibWF4XCJdKTt0aGlzLl9tdWx0PXRoaXMuaW5wdXQ9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0Lm1heC10Lm1pbn0pLHRoaXMuX2FkZD10aGlzLm91dHB1dD1uZXcgbnIoe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOnQubWlufSksdGhpcy5fbWluPXQubWluLHRoaXMuX21heD10Lm1heCx0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5vdXRwdXQpfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKFJvLmdldERlZmF1bHRzKCkse21heDoxLG1pbjowfSl9Z2V0IG1pbigpe3JldHVybiB0aGlzLl9taW59c2V0IG1pbih0KXt0aGlzLl9taW49dCx0aGlzLl9zZXRSYW5nZSgpfWdldCBtYXgoKXtyZXR1cm4gdGhpcy5fbWF4fXNldCBtYXgodCl7dGhpcy5fbWF4PXQsdGhpcy5fc2V0UmFuZ2UoKX1fc2V0UmFuZ2UoKXt0aGlzLl9hZGQudmFsdWU9dGhpcy5fbWluLHRoaXMuX211bHQudmFsdWU9dGhpcy5fbWF4LXRoaXMuX21pbn1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9hZGQuZGlzcG9zZSgpLHRoaXMuX211bHQuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIG9yIGV4dGVuZHMgUm97Y29uc3RydWN0b3IoKXtzdXBlcihPYmplY3QuYXNzaWduKHVpKG9yLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSkpLHRoaXMubmFtZT1cIlplcm9cIix0aGlzLl9nYWluPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLm91dHB1dD10aGlzLl9nYWluLHRoaXMuaW5wdXQ9dm9pZCAwLHJvKHRoaXMuY29udGV4dC5nZXRDb25zdGFudCgwKSx0aGlzLl9nYWluKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSxhbyh0aGlzLmNvbnRleHQuZ2V0Q29uc3RhbnQoMCksdGhpcy5fZ2FpbiksdGhpc319Y2xhc3MgcnIgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKHJyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwibWluXCIsXCJtYXhcIl0pKSx0aGlzLm5hbWU9XCJMRk9cIix0aGlzLl9zdG9wcGVkVmFsdWU9MCx0aGlzLl91bml0cz1cIm51bWJlclwiLHRoaXMuY29udmVydD0hMCx0aGlzLl9mcm9tVHlwZT1uby5wcm90b3R5cGUuX2Zyb21UeXBlLHRoaXMuX3RvVHlwZT1uby5wcm90b3R5cGUuX3RvVHlwZSx0aGlzLl9pcz1uby5wcm90b3R5cGUuX2lzLHRoaXMuX2NsYW1wVmFsdWU9bm8ucHJvdG90eXBlLl9jbGFtcFZhbHVlO2NvbnN0IHQ9dWkocnIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJtaW5cIixcIm1heFwiXSk7dGhpcy5fb3NjaWxsYXRvcj1uZXcgWm8odCksdGhpcy5mcmVxdWVuY3k9dGhpcy5fb3NjaWxsYXRvci5mcmVxdWVuY3ksdGhpcy5fYW1wbGl0dWRlR2Fpbj1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46dC5hbXBsaXR1ZGUsdW5pdHM6XCJub3JtYWxSYW5nZVwifSksdGhpcy5hbXBsaXR1ZGU9dGhpcy5fYW1wbGl0dWRlR2Fpbi5nYWluLHRoaXMuX3N0b3BwZWRTaWduYWw9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcImF1ZGlvUmFuZ2VcIix2YWx1ZTowfSksdGhpcy5femVyb3M9bmV3IG9yKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2EyZz1uZXcgWG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fc2NhbGVyPXRoaXMub3V0cHV0PW5ldyBpcih7Y29udGV4dDp0aGlzLmNvbnRleHQsbWF4OnQubWF4LG1pbjp0Lm1pbn0pLHRoaXMudW5pdHM9dC51bml0cyx0aGlzLm1pbj10Lm1pbix0aGlzLm1heD10Lm1heCx0aGlzLl9vc2NpbGxhdG9yLmNoYWluKHRoaXMuX2FtcGxpdHVkZUdhaW4sdGhpcy5fYTJnLHRoaXMuX3NjYWxlciksdGhpcy5femVyb3MuY29ubmVjdCh0aGlzLl9hMmcpLHRoaXMuX3N0b3BwZWRTaWduYWwuY29ubmVjdCh0aGlzLl9hMmcpLE9pKHRoaXMsW1wiYW1wbGl0dWRlXCIsXCJmcmVxdWVuY3lcIl0pLHRoaXMucGhhc2U9dC5waGFzZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihaby5nZXREZWZhdWx0cygpLHthbXBsaXR1ZGU6MSxmcmVxdWVuY3k6XCI0blwiLG1heDoxLG1pbjowLHR5cGU6XCJzaW5lXCIsdW5pdHM6XCJudW1iZXJcIn0pfXN0YXJ0KHQpe3JldHVybiB0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX3N0b3BwZWRTaWduYWwuc2V0VmFsdWVBdFRpbWUoMCx0KSx0aGlzLl9vc2NpbGxhdG9yLnN0YXJ0KHQpLHRoaXN9c3RvcCh0KXtyZXR1cm4gdD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLl9zdG9wcGVkU2lnbmFsLnNldFZhbHVlQXRUaW1lKHRoaXMuX3N0b3BwZWRWYWx1ZSx0KSx0aGlzLl9vc2NpbGxhdG9yLnN0b3AodCksdGhpc31zeW5jKCl7cmV0dXJuIHRoaXMuX29zY2lsbGF0b3Iuc3luYygpLHRoaXMuX29zY2lsbGF0b3Iuc3luY0ZyZXF1ZW5jeSgpLHRoaXN9dW5zeW5jKCl7cmV0dXJuIHRoaXMuX29zY2lsbGF0b3IudW5zeW5jKCksdGhpcy5fb3NjaWxsYXRvci51bnN5bmNGcmVxdWVuY3koKSx0aGlzfV9zZXRTdG9wcGVkVmFsdWUoKXt0aGlzLl9zdG9wcGVkVmFsdWU9dGhpcy5fb3NjaWxsYXRvci5nZXRJbml0aWFsVmFsdWUoKSx0aGlzLl9zdG9wcGVkU2lnbmFsLnZhbHVlPXRoaXMuX3N0b3BwZWRWYWx1ZX1nZXQgbWluKCl7cmV0dXJuIHRoaXMuX3RvVHlwZSh0aGlzLl9zY2FsZXIubWluKX1zZXQgbWluKHQpe3Q9dGhpcy5fZnJvbVR5cGUodCksdGhpcy5fc2NhbGVyLm1pbj10fWdldCBtYXgoKXtyZXR1cm4gdGhpcy5fdG9UeXBlKHRoaXMuX3NjYWxlci5tYXgpfXNldCBtYXgodCl7dD10aGlzLl9mcm9tVHlwZSh0KSx0aGlzLl9zY2FsZXIubWF4PXR9Z2V0IHR5cGUoKXtyZXR1cm4gdGhpcy5fb3NjaWxsYXRvci50eXBlfXNldCB0eXBlKHQpe3RoaXMuX29zY2lsbGF0b3IudHlwZT10LHRoaXMuX3NldFN0b3BwZWRWYWx1ZSgpfWdldCBwYXJ0aWFscygpe3JldHVybiB0aGlzLl9vc2NpbGxhdG9yLnBhcnRpYWxzfXNldCBwYXJ0aWFscyh0KXt0aGlzLl9vc2NpbGxhdG9yLnBhcnRpYWxzPXQsdGhpcy5fc2V0U3RvcHBlZFZhbHVlKCl9Z2V0IHBoYXNlKCl7cmV0dXJuIHRoaXMuX29zY2lsbGF0b3IucGhhc2V9c2V0IHBoYXNlKHQpe3RoaXMuX29zY2lsbGF0b3IucGhhc2U9dCx0aGlzLl9zZXRTdG9wcGVkVmFsdWUoKX1nZXQgdW5pdHMoKXtyZXR1cm4gdGhpcy5fdW5pdHN9c2V0IHVuaXRzKHQpe2NvbnN0IGU9dGhpcy5taW4scz10aGlzLm1heDt0aGlzLl91bml0cz10LHRoaXMubWluPWUsdGhpcy5tYXg9c31nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5fb3NjaWxsYXRvci5zdGF0ZX1jb25uZWN0KHQsZSxzKXtyZXR1cm4odCBpbnN0YW5jZW9mIG5vfHx0IGluc3RhbmNlb2YgcG8pJiYodGhpcy5jb252ZXJ0PXQuY29udmVydCx0aGlzLnVuaXRzPXQudW5pdHMpLGZvKHRoaXMsdCxlLHMpLHRoaXN9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fb3NjaWxsYXRvci5kaXNwb3NlKCksdGhpcy5fc3RvcHBlZFNpZ25hbC5kaXNwb3NlKCksdGhpcy5femVyb3MuZGlzcG9zZSgpLHRoaXMuX3NjYWxlci5kaXNwb3NlKCksdGhpcy5fYTJnLmRpc3Bvc2UoKSx0aGlzLl9hbXBsaXR1ZGVHYWluLmRpc3Bvc2UoKSx0aGlzLmFtcGxpdHVkZS5kaXNwb3NlKCksdGhpc319ZnVuY3Rpb24gYXIodCxlPTEvMCl7Y29uc3Qgcz1uZXcgV2Vha01hcDtyZXR1cm4gZnVuY3Rpb24obixpKXtSZWZsZWN0LmRlZmluZVByb3BlcnR5KG4saSx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHMuZ2V0KHRoaXMpfSxzZXQ6ZnVuY3Rpb24obil7VW4obix0LGUpLHMuc2V0KHRoaXMsbil9fSl9fWZ1bmN0aW9uIGNyKHQsZT0xLzApe2NvbnN0IHM9bmV3IFdlYWtNYXA7cmV0dXJuIGZ1bmN0aW9uKG4saSl7UmVmbGVjdC5kZWZpbmVQcm9wZXJ0eShuLGkse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBzLmdldCh0aGlzKX0sc2V0OmZ1bmN0aW9uKG4pe1VuKHRoaXMudG9TZWNvbmRzKG4pLHQsZSkscy5zZXQodGhpcyxuKX19KX19Y2xhc3MgaHIgZXh0ZW5kcyBQb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKGhyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInVybFwiLFwib25sb2FkXCJdKSksdGhpcy5uYW1lPVwiUGxheWVyXCIsdGhpcy5fYWN0aXZlU291cmNlcz1uZXcgU2V0O2NvbnN0IHQ9dWkoaHIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsXCIsXCJvbmxvYWRcIl0pO3RoaXMuX2J1ZmZlcj1uZXcgUmkoe29ubG9hZDp0aGlzLl9vbmxvYWQuYmluZCh0aGlzLHQub25sb2FkKSxvbmVycm9yOnQub25lcnJvcixyZXZlcnNlOnQucmV2ZXJzZSx1cmw6dC51cmx9KSx0aGlzLmF1dG9zdGFydD10LmF1dG9zdGFydCx0aGlzLl9sb29wPXQubG9vcCx0aGlzLl9sb29wU3RhcnQ9dC5sb29wU3RhcnQsdGhpcy5fbG9vcEVuZD10Lmxvb3BFbmQsdGhpcy5fcGxheWJhY2tSYXRlPXQucGxheWJhY2tSYXRlLHRoaXMuZmFkZUluPXQuZmFkZUluLHRoaXMuZmFkZU91dD10LmZhZGVPdXR9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oUG8uZ2V0RGVmYXVsdHMoKSx7YXV0b3N0YXJ0OiExLGZhZGVJbjowLGZhZGVPdXQ6MCxsb29wOiExLGxvb3BFbmQ6MCxsb29wU3RhcnQ6MCxvbmxvYWQ6RWksb25lcnJvcjpFaSxwbGF5YmFja1JhdGU6MSxyZXZlcnNlOiExfSl9bG9hZCh0KXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtyZXR1cm4geWllbGQgdGhpcy5fYnVmZmVyLmxvYWQodCksdGhpcy5fb25sb2FkKCksdGhpc30pKX1fb25sb2FkKHQ9RWkpe3QoKSx0aGlzLmF1dG9zdGFydCYmdGhpcy5zdGFydCgpfV9vblNvdXJjZUVuZCh0KXt0aGlzLm9uc3RvcCh0aGlzKSx0aGlzLl9hY3RpdmVTb3VyY2VzLmRlbGV0ZSh0KSwwIT09dGhpcy5fYWN0aXZlU291cmNlcy5zaXplfHx0aGlzLl9zeW5jZWR8fFwic3RhcnRlZFwiIT09dGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUodGhpcy5ub3coKSl8fCh0aGlzLl9zdGF0ZS5jYW5jZWwodGhpcy5ub3coKSksdGhpcy5fc3RhdGUuc2V0U3RhdGVBdFRpbWUoXCJzdG9wcGVkXCIsdGhpcy5ub3coKSkpfXN0YXJ0KHQsZSxzKXtyZXR1cm4gc3VwZXIuc3RhcnQodCxlLHMpLHRoaXN9X3N0YXJ0KHQsZSxzKXtlPXRoaXMuX2xvb3A/cGkoZSx0aGlzLl9sb29wU3RhcnQpOnBpKGUsMCk7Y29uc3Qgbj10aGlzLnRvU2Vjb25kcyhlKSxpPXM7cz1waShzLE1hdGgubWF4KHRoaXMuX2J1ZmZlci5kdXJhdGlvbi1uLDApKTtsZXQgbz10aGlzLnRvU2Vjb25kcyhzKTtvLz10aGlzLl9wbGF5YmFja1JhdGUsdD10aGlzLnRvU2Vjb25kcyh0KTtjb25zdCByPW5ldyBqbyh7dXJsOnRoaXMuX2J1ZmZlcixjb250ZXh0OnRoaXMuY29udGV4dCxmYWRlSW46dGhpcy5mYWRlSW4sZmFkZU91dDp0aGlzLmZhZGVPdXQsbG9vcDp0aGlzLl9sb29wLGxvb3BFbmQ6dGhpcy5fbG9vcEVuZCxsb29wU3RhcnQ6dGhpcy5fbG9vcFN0YXJ0LG9uZW5kZWQ6dGhpcy5fb25Tb3VyY2VFbmQuYmluZCh0aGlzKSxwbGF5YmFja1JhdGU6dGhpcy5fcGxheWJhY2tSYXRlfSkuY29ubmVjdCh0aGlzLm91dHB1dCk7dGhpcy5fbG9vcHx8dGhpcy5fc3luY2VkfHwodGhpcy5fc3RhdGUuY2FuY2VsKHQrbyksdGhpcy5fc3RhdGUuc2V0U3RhdGVBdFRpbWUoXCJzdG9wcGVkXCIsdCtvLHtpbXBsaWNpdEVuZDohMH0pKSx0aGlzLl9hY3RpdmVTb3VyY2VzLmFkZChyKSx0aGlzLl9sb29wJiZGbihpKT9yLnN0YXJ0KHQsbik6ci5zdGFydCh0LG4sby10aGlzLnRvU2Vjb25kcyh0aGlzLmZhZGVPdXQpKX1fc3RvcCh0KXtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHQpO3RoaXMuX2FjdGl2ZVNvdXJjZXMuZm9yRWFjaCgodD0+dC5zdG9wKGUpKSl9cmVzdGFydCh0LGUscyl7cmV0dXJuIHN1cGVyLnJlc3RhcnQodCxlLHMpLHRoaXN9X3Jlc3RhcnQodCxlLHMpe3ZhciBuO251bGw9PT0obj1bLi4udGhpcy5fYWN0aXZlU291cmNlc10ucG9wKCkpfHx2b2lkIDA9PT1ufHxuLnN0b3AodCksdGhpcy5fc3RhcnQodCxlLHMpfXNlZWsodCxlKXtjb25zdCBzPXRoaXMudG9TZWNvbmRzKGUpO2lmKFwic3RhcnRlZFwiPT09dGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUocykpe2NvbnN0IGU9dGhpcy50b1NlY29uZHModCk7dGhpcy5fc3RvcChzKSx0aGlzLl9zdGFydChzLGUpfXJldHVybiB0aGlzfXNldExvb3BQb2ludHModCxlKXtyZXR1cm4gdGhpcy5sb29wU3RhcnQ9dCx0aGlzLmxvb3BFbmQ9ZSx0aGlzfWdldCBsb29wU3RhcnQoKXtyZXR1cm4gdGhpcy5fbG9vcFN0YXJ0fXNldCBsb29wU3RhcnQodCl7dGhpcy5fbG9vcFN0YXJ0PXQsdGhpcy5idWZmZXIubG9hZGVkJiZVbih0aGlzLnRvU2Vjb25kcyh0KSwwLHRoaXMuYnVmZmVyLmR1cmF0aW9uKSx0aGlzLl9hY3RpdmVTb3VyY2VzLmZvckVhY2goKGU9PntlLmxvb3BTdGFydD10fSkpfWdldCBsb29wRW5kKCl7cmV0dXJuIHRoaXMuX2xvb3BFbmR9c2V0IGxvb3BFbmQodCl7dGhpcy5fbG9vcEVuZD10LHRoaXMuYnVmZmVyLmxvYWRlZCYmVW4odGhpcy50b1NlY29uZHModCksMCx0aGlzLmJ1ZmZlci5kdXJhdGlvbiksdGhpcy5fYWN0aXZlU291cmNlcy5mb3JFYWNoKChlPT57ZS5sb29wRW5kPXR9KSl9Z2V0IGJ1ZmZlcigpe3JldHVybiB0aGlzLl9idWZmZXJ9c2V0IGJ1ZmZlcih0KXt0aGlzLl9idWZmZXIuc2V0KHQpfWdldCBsb29wKCl7cmV0dXJuIHRoaXMuX2xvb3B9c2V0IGxvb3AodCl7aWYodGhpcy5fbG9vcCE9PXQmJih0aGlzLl9sb29wPXQsdGhpcy5fYWN0aXZlU291cmNlcy5mb3JFYWNoKChlPT57ZS5sb29wPXR9KSksdCkpe2NvbnN0IHQ9dGhpcy5fc3RhdGUuZ2V0TmV4dFN0YXRlKFwic3RvcHBlZFwiLHRoaXMubm93KCkpO3QmJnRoaXMuX3N0YXRlLmNhbmNlbCh0LnRpbWUpfX1nZXQgcGxheWJhY2tSYXRlKCl7cmV0dXJuIHRoaXMuX3BsYXliYWNrUmF0ZX1zZXQgcGxheWJhY2tSYXRlKHQpe3RoaXMuX3BsYXliYWNrUmF0ZT10O2NvbnN0IGU9dGhpcy5ub3coKSxzPXRoaXMuX3N0YXRlLmdldE5leHRTdGF0ZShcInN0b3BwZWRcIixlKTtzJiZzLmltcGxpY2l0RW5kJiYodGhpcy5fc3RhdGUuY2FuY2VsKHMudGltZSksdGhpcy5fYWN0aXZlU291cmNlcy5mb3JFYWNoKCh0PT50LmNhbmNlbFN0b3AoKSkpKSx0aGlzLl9hY3RpdmVTb3VyY2VzLmZvckVhY2goKHM9PntzLnBsYXliYWNrUmF0ZS5zZXRWYWx1ZUF0VGltZSh0LGUpfSkpfWdldCByZXZlcnNlKCl7cmV0dXJuIHRoaXMuX2J1ZmZlci5yZXZlcnNlfXNldCByZXZlcnNlKHQpe3RoaXMuX2J1ZmZlci5yZXZlcnNlPXR9Z2V0IGxvYWRlZCgpe3JldHVybiB0aGlzLl9idWZmZXIubG9hZGVkfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2FjdGl2ZVNvdXJjZXMuZm9yRWFjaCgodD0+dC5kaXNwb3NlKCkpKSx0aGlzLl9hY3RpdmVTb3VyY2VzLmNsZWFyKCksdGhpcy5fYnVmZmVyLmRpc3Bvc2UoKSx0aGlzfX1zaShbY3IoMCldLGhyLnByb3RvdHlwZSxcImZhZGVJblwiLHZvaWQgMCksc2koW2NyKDApXSxoci5wcm90b3R5cGUsXCJmYWRlT3V0XCIsdm9pZCAwKTtjbGFzcyBsciBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkobHIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsc1wiLFwib25sb2FkXCJdLFwidXJsc1wiKSksdGhpcy5uYW1lPVwiUGxheWVyc1wiLHRoaXMuaW5wdXQ9dm9pZCAwLHRoaXMuX3BsYXllcnM9bmV3IE1hcDtjb25zdCB0PXVpKGxyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInVybHNcIixcIm9ubG9hZFwiXSxcInVybHNcIik7dGhpcy5fdm9sdW1lPXRoaXMub3V0cHV0PW5ldyBPbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdm9sdW1lOnQudm9sdW1lfSksdGhpcy52b2x1bWU9dGhpcy5fdm9sdW1lLnZvbHVtZSxPaSh0aGlzLFwidm9sdW1lXCIpLHRoaXMuX2J1ZmZlcnM9bmV3IHdvKHt1cmxzOnQudXJscyxvbmxvYWQ6dC5vbmxvYWQsYmFzZVVybDp0LmJhc2VVcmwsb25lcnJvcjp0Lm9uZXJyb3J9KSx0aGlzLm11dGU9dC5tdXRlLHRoaXMuX2ZhZGVJbj10LmZhZGVJbix0aGlzLl9mYWRlT3V0PXQuZmFkZU91dH1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihQby5nZXREZWZhdWx0cygpLHtiYXNlVXJsOlwiXCIsZmFkZUluOjAsZmFkZU91dDowLG11dGU6ITEsb25sb2FkOkVpLG9uZXJyb3I6RWksdXJsczp7fSx2b2x1bWU6MH0pfWdldCBtdXRlKCl7cmV0dXJuIHRoaXMuX3ZvbHVtZS5tdXRlfXNldCBtdXRlKHQpe3RoaXMuX3ZvbHVtZS5tdXRlPXR9Z2V0IGZhZGVJbigpe3JldHVybiB0aGlzLl9mYWRlSW59c2V0IGZhZGVJbih0KXt0aGlzLl9mYWRlSW49dCx0aGlzLl9wbGF5ZXJzLmZvckVhY2goKGU9PntlLmZhZGVJbj10fSkpfWdldCBmYWRlT3V0KCl7cmV0dXJuIHRoaXMuX2ZhZGVPdXR9c2V0IGZhZGVPdXQodCl7dGhpcy5fZmFkZU91dD10LHRoaXMuX3BsYXllcnMuZm9yRWFjaCgoZT0+e2UuZmFkZU91dD10fSkpfWdldCBzdGF0ZSgpe3JldHVybiBBcnJheS5mcm9tKHRoaXMuX3BsYXllcnMpLnNvbWUoKChbdCxlXSk9Plwic3RhcnRlZFwiPT09ZS5zdGF0ZSkpP1wic3RhcnRlZFwiOlwic3RvcHBlZFwifWhhcyh0KXtyZXR1cm4gdGhpcy5fYnVmZmVycy5oYXModCl9cGxheWVyKHQpe2lmKEJuKHRoaXMuaGFzKHQpLGBObyBQbGF5ZXIgd2l0aCB0aGUgbmFtZSAke3R9IGV4aXN0cyBvbiB0aGlzIG9iamVjdGApLCF0aGlzLl9wbGF5ZXJzLmhhcyh0KSl7Y29uc3QgZT1uZXcgaHIoe2NvbnRleHQ6dGhpcy5jb250ZXh0LGZhZGVJbjp0aGlzLl9mYWRlSW4sZmFkZU91dDp0aGlzLl9mYWRlT3V0LHVybDp0aGlzLl9idWZmZXJzLmdldCh0KX0pLmNvbm5lY3QodGhpcy5vdXRwdXQpO3RoaXMuX3BsYXllcnMuc2V0KHQsZSl9cmV0dXJuIHRoaXMuX3BsYXllcnMuZ2V0KHQpfWdldCBsb2FkZWQoKXtyZXR1cm4gdGhpcy5fYnVmZmVycy5sb2FkZWR9YWRkKHQsZSxzKXtyZXR1cm4gQm4oIXRoaXMuX2J1ZmZlcnMuaGFzKHQpLFwiQSBidWZmZXIgd2l0aCB0aGF0IG5hbWUgYWxyZWFkeSBleGlzdHMgb24gdGhpcyBvYmplY3RcIiksdGhpcy5fYnVmZmVycy5hZGQodCxlLHMpLHRoaXN9c3RvcEFsbCh0KXtyZXR1cm4gdGhpcy5fcGxheWVycy5mb3JFYWNoKChlPT5lLnN0b3AodCkpKSx0aGlzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3ZvbHVtZS5kaXNwb3NlKCksdGhpcy52b2x1bWUuZGlzcG9zZSgpLHRoaXMuX3BsYXllcnMuZm9yRWFjaCgodD0+dC5kaXNwb3NlKCkpKSx0aGlzLl9idWZmZXJzLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyB1ciBleHRlbmRzIFBve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkodXIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsXCIsXCJvbmxvYWRcIl0pKSx0aGlzLm5hbWU9XCJHcmFpblBsYXllclwiLHRoaXMuX2xvb3BTdGFydD0wLHRoaXMuX2xvb3BFbmQ9MCx0aGlzLl9hY3RpdmVTb3VyY2VzPVtdO2NvbnN0IHQ9dWkodXIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsXCIsXCJvbmxvYWRcIl0pO3RoaXMuYnVmZmVyPW5ldyBSaSh7b25sb2FkOnQub25sb2FkLG9uZXJyb3I6dC5vbmVycm9yLHJldmVyc2U6dC5yZXZlcnNlLHVybDp0LnVybH0pLHRoaXMuX2Nsb2NrPW5ldyB2byh7Y29udGV4dDp0aGlzLmNvbnRleHQsY2FsbGJhY2s6dGhpcy5fdGljay5iaW5kKHRoaXMpLGZyZXF1ZW5jeToxL3QuZ3JhaW5TaXplfSksdGhpcy5fcGxheWJhY2tSYXRlPXQucGxheWJhY2tSYXRlLHRoaXMuX2dyYWluU2l6ZT10LmdyYWluU2l6ZSx0aGlzLl9vdmVybGFwPXQub3ZlcmxhcCx0aGlzLmRldHVuZT10LmRldHVuZSx0aGlzLm92ZXJsYXA9dC5vdmVybGFwLHRoaXMubG9vcD10Lmxvb3AsdGhpcy5wbGF5YmFja1JhdGU9dC5wbGF5YmFja1JhdGUsdGhpcy5ncmFpblNpemU9dC5ncmFpblNpemUsdGhpcy5sb29wU3RhcnQ9dC5sb29wU3RhcnQsdGhpcy5sb29wRW5kPXQubG9vcEVuZCx0aGlzLnJldmVyc2U9dC5yZXZlcnNlLHRoaXMuX2Nsb2NrLm9uKFwic3RvcFwiLHRoaXMuX29uc3RvcC5iaW5kKHRoaXMpKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihQby5nZXREZWZhdWx0cygpLHtvbmxvYWQ6RWksb25lcnJvcjpFaSxvdmVybGFwOi4xLGdyYWluU2l6ZTouMixwbGF5YmFja1JhdGU6MSxkZXR1bmU6MCxsb29wOiExLGxvb3BTdGFydDowLGxvb3BFbmQ6MCxyZXZlcnNlOiExfSl9X3N0YXJ0KHQsZSxzKXtlPXBpKGUsMCksZT10aGlzLnRvU2Vjb25kcyhlKSx0PXRoaXMudG9TZWNvbmRzKHQpO2NvbnN0IG49MS90aGlzLl9jbG9jay5mcmVxdWVuY3kuZ2V0VmFsdWVBdFRpbWUodCk7dGhpcy5fY2xvY2suc3RhcnQodCxlL24pLHMmJnRoaXMuc3RvcCh0K3RoaXMudG9TZWNvbmRzKHMpKX1yZXN0YXJ0KHQsZSxzKXtyZXR1cm4gc3VwZXIucmVzdGFydCh0LGUscyksdGhpc31fcmVzdGFydCh0LGUscyl7dGhpcy5fc3RvcCh0KSx0aGlzLl9zdGFydCh0LGUscyl9X3N0b3AodCl7dGhpcy5fY2xvY2suc3RvcCh0KX1fb25zdG9wKHQpe3RoaXMuX2FjdGl2ZVNvdXJjZXMuZm9yRWFjaCgoZT0+e2UuZmFkZU91dD0wLGUuc3RvcCh0KX0pKSx0aGlzLm9uc3RvcCh0aGlzKX1fdGljayh0KXtjb25zdCBlPXRoaXMuX2Nsb2NrLmdldFRpY2tzQXRUaW1lKHQpLHM9ZSp0aGlzLl9ncmFpblNpemU7aWYodGhpcy5sb2coXCJvZmZzZXRcIixzKSwhdGhpcy5sb29wJiZzPnRoaXMuYnVmZmVyLmR1cmF0aW9uKXJldHVybiB2b2lkIHRoaXMuc3RvcCh0KTtjb25zdCBuPXM8dGhpcy5fb3ZlcmxhcD8wOnRoaXMuX292ZXJsYXAsaT1uZXcgam8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVybDp0aGlzLmJ1ZmZlcixmYWRlSW46bixmYWRlT3V0OnRoaXMuX292ZXJsYXAsbG9vcDp0aGlzLmxvb3AsbG9vcFN0YXJ0OnRoaXMuX2xvb3BTdGFydCxsb29wRW5kOnRoaXMuX2xvb3BFbmQscGxheWJhY2tSYXRlOnppKHRoaXMuZGV0dW5lLzEwMCl9KS5jb25uZWN0KHRoaXMub3V0cHV0KTtpLnN0YXJ0KHQsdGhpcy5fZ3JhaW5TaXplKmUpLGkuc3RvcCh0K3RoaXMuX2dyYWluU2l6ZS90aGlzLnBsYXliYWNrUmF0ZSksdGhpcy5fYWN0aXZlU291cmNlcy5wdXNoKGkpLGkub25lbmRlZD0oKT0+e2NvbnN0IHQ9dGhpcy5fYWN0aXZlU291cmNlcy5pbmRleE9mKGkpOy0xIT09dCYmdGhpcy5fYWN0aXZlU291cmNlcy5zcGxpY2UodCwxKX19Z2V0IHBsYXliYWNrUmF0ZSgpe3JldHVybiB0aGlzLl9wbGF5YmFja1JhdGV9c2V0IHBsYXliYWNrUmF0ZSh0KXtVbih0LC4wMDEpLHRoaXMuX3BsYXliYWNrUmF0ZT10LHRoaXMuZ3JhaW5TaXplPXRoaXMuX2dyYWluU2l6ZX1nZXQgbG9vcFN0YXJ0KCl7cmV0dXJuIHRoaXMuX2xvb3BTdGFydH1zZXQgbG9vcFN0YXJ0KHQpe3RoaXMuYnVmZmVyLmxvYWRlZCYmVW4odGhpcy50b1NlY29uZHModCksMCx0aGlzLmJ1ZmZlci5kdXJhdGlvbiksdGhpcy5fbG9vcFN0YXJ0PXRoaXMudG9TZWNvbmRzKHQpfWdldCBsb29wRW5kKCl7cmV0dXJuIHRoaXMuX2xvb3BFbmR9c2V0IGxvb3BFbmQodCl7dGhpcy5idWZmZXIubG9hZGVkJiZVbih0aGlzLnRvU2Vjb25kcyh0KSwwLHRoaXMuYnVmZmVyLmR1cmF0aW9uKSx0aGlzLl9sb29wRW5kPXRoaXMudG9TZWNvbmRzKHQpfWdldCByZXZlcnNlKCl7cmV0dXJuIHRoaXMuYnVmZmVyLnJldmVyc2V9c2V0IHJldmVyc2UodCl7dGhpcy5idWZmZXIucmV2ZXJzZT10fWdldCBncmFpblNpemUoKXtyZXR1cm4gdGhpcy5fZ3JhaW5TaXplfXNldCBncmFpblNpemUodCl7dGhpcy5fZ3JhaW5TaXplPXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuX2Nsb2NrLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZSh0aGlzLl9wbGF5YmFja1JhdGUvdGhpcy5fZ3JhaW5TaXplLHRoaXMubm93KCkpfWdldCBvdmVybGFwKCl7cmV0dXJuIHRoaXMuX292ZXJsYXB9c2V0IG92ZXJsYXAodCl7Y29uc3QgZT10aGlzLnRvU2Vjb25kcyh0KTtVbihlLDApLHRoaXMuX292ZXJsYXA9ZX1nZXQgbG9hZGVkKCl7cmV0dXJuIHRoaXMuYnVmZmVyLmxvYWRlZH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLmJ1ZmZlci5kaXNwb3NlKCksdGhpcy5fY2xvY2suZGlzcG9zZSgpLHRoaXMuX2FjdGl2ZVNvdXJjZXMuZm9yRWFjaCgodD0+dC5kaXNwb3NlKCkpKSx0aGlzfX1jbGFzcyBwciBleHRlbmRzIFJve2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLm5hbWU9XCJBYnNcIix0aGlzLl9hYnM9bmV3IHFvKHtjb250ZXh0OnRoaXMuY29udGV4dCxtYXBwaW5nOnQ9Pk1hdGguYWJzKHQpPC4wMDE/MDpNYXRoLmFicyh0KX0pLHRoaXMuaW5wdXQ9dGhpcy5fYWJzLHRoaXMub3V0cHV0PXRoaXMuX2Fic31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9hYnMuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIGRyIGV4dGVuZHMgUm97Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMubmFtZT1cIkdhaW5Ub0F1ZGlvXCIsdGhpcy5fbm9ybT1uZXcgcW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LG1hcHBpbmc6dD0+MipNYXRoLmFicyh0KS0xfSksdGhpcy5pbnB1dD10aGlzLl9ub3JtLHRoaXMub3V0cHV0PXRoaXMuX25vcm19ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fbm9ybS5kaXNwb3NlKCksdGhpc319Y2xhc3MgZnIgZXh0ZW5kcyBSb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5uYW1lPVwiTmVnYXRlXCIsdGhpcy5fbXVsdGlwbHk9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTotMX0pLHRoaXMuaW5wdXQ9dGhpcy5fbXVsdGlwbHksdGhpcy5vdXRwdXQ9dGhpcy5fbXVsdGlwbHl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fbXVsdGlwbHkuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIF9yIGV4dGVuZHMgcG97Y29uc3RydWN0b3IoKXtzdXBlcihPYmplY3QuYXNzaWduKHVpKF9yLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZhbHVlXCJdKSkpLHRoaXMub3ZlcnJpZGU9ITEsdGhpcy5uYW1lPVwiU3VidHJhY3RcIix0aGlzLl9zdW09bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuaW5wdXQ9dGhpcy5fc3VtLHRoaXMub3V0cHV0PXRoaXMuX3N1bSx0aGlzLl9uZWc9bmV3IGZyKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuc3VidHJhaGVuZD10aGlzLl9wYXJhbSxvbyh0aGlzLl9jb25zdGFudFNvdXJjZSx0aGlzLl9uZWcsdGhpcy5fc3VtKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihwby5nZXREZWZhdWx0cygpLHt2YWx1ZTowfSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fbmVnLmRpc3Bvc2UoKSx0aGlzLl9zdW0uZGlzcG9zZSgpLHRoaXN9fWNsYXNzIG1yIGV4dGVuZHMgUm97Y29uc3RydWN0b3IoKXtzdXBlcihPYmplY3QuYXNzaWduKHVpKG1yLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSkpLHRoaXMubmFtZT1cIkdyZWF0ZXJUaGFuWmVyb1wiLHRoaXMuX3RocmVzaD10aGlzLm91dHB1dD1uZXcgcW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGxlbmd0aDoxMjcsbWFwcGluZzp0PT50PD0wPzA6MX0pLHRoaXMuX3NjYWxlPXRoaXMuaW5wdXQ9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZToxZTR9KSx0aGlzLl9zY2FsZS5jb25uZWN0KHRoaXMuX3RocmVzaCl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fc2NhbGUuZGlzcG9zZSgpLHRoaXMuX3RocmVzaC5kaXNwb3NlKCksdGhpc319Y2xhc3MgZ3IgZXh0ZW5kcyBwb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKE9iamVjdC5hc3NpZ24odWkoZ3IuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widmFsdWVcIl0pKSksdGhpcy5uYW1lPVwiR3JlYXRlclRoYW5cIix0aGlzLm92ZXJyaWRlPSExO2NvbnN0IHQ9dWkoZ3IuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widmFsdWVcIl0pO3RoaXMuX3N1YnRyYWN0PXRoaXMuaW5wdXQ9bmV3IF9yKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0LnZhbHVlfSksdGhpcy5fZ3R6PXRoaXMub3V0cHV0PW5ldyBtcih7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLmNvbXBhcmF0b3I9dGhpcy5fcGFyYW09dGhpcy5fc3VidHJhY3Quc3VidHJhaGVuZCxPaSh0aGlzLFwiY29tcGFyYXRvclwiKSx0aGlzLl9zdWJ0cmFjdC5jb25uZWN0KHRoaXMuX2d0eil9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24ocG8uZ2V0RGVmYXVsdHMoKSx7dmFsdWU6MH0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2d0ei5kaXNwb3NlKCksdGhpcy5fc3VidHJhY3QuZGlzcG9zZSgpLHRoaXMuY29tcGFyYXRvci5kaXNwb3NlKCksdGhpc319Y2xhc3MgdnIgZXh0ZW5kcyBpcntjb25zdHJ1Y3Rvcigpe3N1cGVyKE9iamVjdC5hc3NpZ24odWkodnIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wibWluXCIsXCJtYXhcIixcImV4cG9uZW50XCJdKSkpLHRoaXMubmFtZT1cIlNjYWxlRXhwXCI7Y29uc3QgdD11aSh2ci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJtaW5cIixcIm1heFwiLFwiZXhwb25lbnRcIl0pO3RoaXMuaW5wdXQ9dGhpcy5fZXhwPW5ldyBGbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdmFsdWU6dC5leHBvbmVudH0pLHRoaXMuX2V4cC5jb25uZWN0KHRoaXMuX211bHQpfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGlyLmdldERlZmF1bHRzKCkse2V4cG9uZW50OjF9KX1nZXQgZXhwb25lbnQoKXtyZXR1cm4gdGhpcy5fZXhwLnZhbHVlfXNldCBleHBvbmVudCh0KXt0aGlzLl9leHAudmFsdWU9dH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9leHAuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIHlyIGV4dGVuZHMgcG97Y29uc3RydWN0b3IoKXtzdXBlcih1aShwby5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ2YWx1ZVwiLFwidW5pdHNcIl0pKSx0aGlzLm5hbWU9XCJTeW5jZWRTaWduYWxcIix0aGlzLm92ZXJyaWRlPSExO2NvbnN0IHQ9dWkocG8uZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widmFsdWVcIixcInVuaXRzXCJdKTt0aGlzLl9sYXN0VmFsPXQudmFsdWUsdGhpcy5fc3luY2VkPXRoaXMuY29udGV4dC50cmFuc3BvcnQuc2NoZWR1bGVSZXBlYXQodGhpcy5fb25UaWNrLmJpbmQodGhpcyksXCIxaVwiKSx0aGlzLl9zeW5jZWRDYWxsYmFjaz10aGlzLl9hbmNob3JWYWx1ZS5iaW5kKHRoaXMpLHRoaXMuY29udGV4dC50cmFuc3BvcnQub24oXCJzdGFydFwiLHRoaXMuX3N5bmNlZENhbGxiYWNrKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0Lm9uKFwicGF1c2VcIix0aGlzLl9zeW5jZWRDYWxsYmFjayksdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5vbihcInN0b3BcIix0aGlzLl9zeW5jZWRDYWxsYmFjayksdGhpcy5fY29uc3RhbnRTb3VyY2UuZGlzY29ubmVjdCgpLHRoaXMuX2NvbnN0YW50U291cmNlLnN0b3AoMCksdGhpcy5fY29uc3RhbnRTb3VyY2U9dGhpcy5vdXRwdXQ9bmV3IHVvKHtjb250ZXh0OnRoaXMuY29udGV4dCxvZmZzZXQ6dC52YWx1ZSx1bml0czp0LnVuaXRzfSkuc3RhcnQoMCksdGhpcy5zZXRWYWx1ZUF0VGltZSh0LnZhbHVlLDApfV9vblRpY2sodCl7Y29uc3QgZT1zdXBlci5nZXRWYWx1ZUF0VGltZSh0aGlzLmNvbnRleHQudHJhbnNwb3J0LnNlY29uZHMpO3RoaXMuX2xhc3RWYWwhPT1lJiYodGhpcy5fbGFzdFZhbD1lLHRoaXMuX2NvbnN0YW50U291cmNlLm9mZnNldC5zZXRWYWx1ZUF0VGltZShlLHQpKX1fYW5jaG9yVmFsdWUodCl7Y29uc3QgZT1zdXBlci5nZXRWYWx1ZUF0VGltZSh0aGlzLmNvbnRleHQudHJhbnNwb3J0LnNlY29uZHMpO3RoaXMuX2xhc3RWYWw9ZSx0aGlzLl9jb25zdGFudFNvdXJjZS5vZmZzZXQuY2FuY2VsQW5kSG9sZEF0VGltZSh0KSx0aGlzLl9jb25zdGFudFNvdXJjZS5vZmZzZXQuc2V0VmFsdWVBdFRpbWUoZSx0KX1nZXRWYWx1ZUF0VGltZSh0KXtjb25zdCBlPW5ldyBLaSh0aGlzLmNvbnRleHQsdCkudG9TZWNvbmRzKCk7cmV0dXJuIHN1cGVyLmdldFZhbHVlQXRUaW1lKGUpfXNldFZhbHVlQXRUaW1lKHQsZSl7Y29uc3Qgcz1uZXcgS2kodGhpcy5jb250ZXh0LGUpLnRvU2Vjb25kcygpO3JldHVybiBzdXBlci5zZXRWYWx1ZUF0VGltZSh0LHMpLHRoaXN9bGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodCxlKXtjb25zdCBzPW5ldyBLaSh0aGlzLmNvbnRleHQsZSkudG9TZWNvbmRzKCk7cmV0dXJuIHN1cGVyLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHQscyksdGhpc31leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKHQsZSl7Y29uc3Qgcz1uZXcgS2kodGhpcy5jb250ZXh0LGUpLnRvU2Vjb25kcygpO3JldHVybiBzdXBlci5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKHQscyksdGhpc31zZXRUYXJnZXRBdFRpbWUodCxlLHMpe2NvbnN0IG49bmV3IEtpKHRoaXMuY29udGV4dCxlKS50b1NlY29uZHMoKTtyZXR1cm4gc3VwZXIuc2V0VGFyZ2V0QXRUaW1lKHQsbixzKSx0aGlzfWNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0KXtjb25zdCBlPW5ldyBLaSh0aGlzLmNvbnRleHQsdCkudG9TZWNvbmRzKCk7cmV0dXJuIHN1cGVyLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhlKSx0aGlzfXNldFZhbHVlQ3VydmVBdFRpbWUodCxlLHMsbil7Y29uc3QgaT1uZXcgS2kodGhpcy5jb250ZXh0LGUpLnRvU2Vjb25kcygpO3JldHVybiBzPXRoaXMudG9TZWNvbmRzKHMpLHN1cGVyLnNldFZhbHVlQ3VydmVBdFRpbWUodCxpLHMsbiksdGhpc31jYW5jZWxBbmRIb2xkQXRUaW1lKHQpe2NvbnN0IGU9bmV3IEtpKHRoaXMuY29udGV4dCx0KS50b1NlY29uZHMoKTtyZXR1cm4gc3VwZXIuY2FuY2VsQW5kSG9sZEF0VGltZShlKSx0aGlzfXNldFJhbXBQb2ludCh0KXtjb25zdCBlPW5ldyBLaSh0aGlzLmNvbnRleHQsdCkudG9TZWNvbmRzKCk7cmV0dXJuIHN1cGVyLnNldFJhbXBQb2ludChlKSx0aGlzfWV4cG9uZW50aWFsUmFtcFRvKHQsZSxzKXtjb25zdCBuPW5ldyBLaSh0aGlzLmNvbnRleHQscykudG9TZWNvbmRzKCk7cmV0dXJuIHN1cGVyLmV4cG9uZW50aWFsUmFtcFRvKHQsZSxuKSx0aGlzfWxpbmVhclJhbXBUbyh0LGUscyl7Y29uc3Qgbj1uZXcgS2kodGhpcy5jb250ZXh0LHMpLnRvU2Vjb25kcygpO3JldHVybiBzdXBlci5saW5lYXJSYW1wVG8odCxlLG4pLHRoaXN9dGFyZ2V0UmFtcFRvKHQsZSxzKXtjb25zdCBuPW5ldyBLaSh0aGlzLmNvbnRleHQscykudG9TZWNvbmRzKCk7cmV0dXJuIHN1cGVyLnRhcmdldFJhbXBUbyh0LGUsbiksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0LmNsZWFyKHRoaXMuX3N5bmNlZCksdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5vZmYoXCJzdGFydFwiLHRoaXMuX3N5bmNlZENhbGxiYWNrKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0Lm9mZihcInBhdXNlXCIsdGhpcy5fc3luY2VkQ2FsbGJhY2spLHRoaXMuY29udGV4dC50cmFuc3BvcnQub2ZmKFwic3RvcFwiLHRoaXMuX3N5bmNlZENhbGxiYWNrKSx0aGlzLl9jb25zdGFudFNvdXJjZS5kaXNwb3NlKCksdGhpc319Y2xhc3MgeHIgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKHhyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImF0dGFja1wiLFwiZGVjYXlcIixcInN1c3RhaW5cIixcInJlbGVhc2VcIl0pKSx0aGlzLm5hbWU9XCJFbnZlbG9wZVwiLHRoaXMuX3NpZz1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOjB9KSx0aGlzLm91dHB1dD10aGlzLl9zaWcsdGhpcy5pbnB1dD12b2lkIDA7Y29uc3QgdD11aSh4ci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJhdHRhY2tcIixcImRlY2F5XCIsXCJzdXN0YWluXCIsXCJyZWxlYXNlXCJdKTt0aGlzLmF0dGFjaz10LmF0dGFjayx0aGlzLmRlY2F5PXQuZGVjYXksdGhpcy5zdXN0YWluPXQuc3VzdGFpbix0aGlzLnJlbGVhc2U9dC5yZWxlYXNlLHRoaXMuYXR0YWNrQ3VydmU9dC5hdHRhY2tDdXJ2ZSx0aGlzLnJlbGVhc2VDdXJ2ZT10LnJlbGVhc2VDdXJ2ZSx0aGlzLmRlY2F5Q3VydmU9dC5kZWNheUN1cnZlfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGlvLmdldERlZmF1bHRzKCkse2F0dGFjazouMDEsYXR0YWNrQ3VydmU6XCJsaW5lYXJcIixkZWNheTouMSxkZWNheUN1cnZlOlwiZXhwb25lbnRpYWxcIixyZWxlYXNlOjEscmVsZWFzZUN1cnZlOlwiZXhwb25lbnRpYWxcIixzdXN0YWluOi41fSl9Z2V0IHZhbHVlKCl7cmV0dXJuIHRoaXMuZ2V0VmFsdWVBdFRpbWUodGhpcy5ub3coKSl9X2dldEN1cnZlKHQsZSl7aWYoem4odCkpcmV0dXJuIHQ7e2xldCBzO2ZvcihzIGluIHdyKWlmKHdyW3NdW2VdPT09dClyZXR1cm4gcztyZXR1cm4gdH19X3NldEN1cnZlKHQsZSxzKXtpZih6bihzKSYmUmVmbGVjdC5oYXMod3Iscykpe2NvbnN0IG49d3Jbc107UG4obik/XCJfZGVjYXlDdXJ2ZVwiIT09dCYmKHRoaXNbdF09bltlXSk6dGhpc1t0XT1ufWVsc2V7aWYoIUxuKHMpfHxcIl9kZWNheUN1cnZlXCI9PT10KXRocm93IG5ldyBFcnJvcihcIkVudmVsb3BlOiBpbnZhbGlkIGN1cnZlOiBcIitzKTt0aGlzW3RdPXN9fWdldCBhdHRhY2tDdXJ2ZSgpe3JldHVybiB0aGlzLl9nZXRDdXJ2ZSh0aGlzLl9hdHRhY2tDdXJ2ZSxcIkluXCIpfXNldCBhdHRhY2tDdXJ2ZSh0KXt0aGlzLl9zZXRDdXJ2ZShcIl9hdHRhY2tDdXJ2ZVwiLFwiSW5cIix0KX1nZXQgcmVsZWFzZUN1cnZlKCl7cmV0dXJuIHRoaXMuX2dldEN1cnZlKHRoaXMuX3JlbGVhc2VDdXJ2ZSxcIk91dFwiKX1zZXQgcmVsZWFzZUN1cnZlKHQpe3RoaXMuX3NldEN1cnZlKFwiX3JlbGVhc2VDdXJ2ZVwiLFwiT3V0XCIsdCl9Z2V0IGRlY2F5Q3VydmUoKXtyZXR1cm4gdGhpcy5fZ2V0Q3VydmUodGhpcy5fZGVjYXlDdXJ2ZSxcIk91dFwiKX1zZXQgZGVjYXlDdXJ2ZSh0KXt0aGlzLl9zZXRDdXJ2ZShcIl9kZWNheUN1cnZlXCIsXCJPdXRcIix0KX10cmlnZ2VyQXR0YWNrKHQsZT0xKXt0aGlzLmxvZyhcInRyaWdnZXJBdHRhY2tcIix0LGUpLHQ9dGhpcy50b1NlY29uZHModCk7bGV0IHM9dGhpcy50b1NlY29uZHModGhpcy5hdHRhY2spO2NvbnN0IG49dGhpcy50b1NlY29uZHModGhpcy5kZWNheSksaT10aGlzLmdldFZhbHVlQXRUaW1lKHQpO2lmKGk+MCYmKHM9KDEtaSkvKDEvcykpLHM8dGhpcy5zYW1wbGVUaW1lKXRoaXMuX3NpZy5jYW5jZWxTY2hlZHVsZWRWYWx1ZXModCksdGhpcy5fc2lnLnNldFZhbHVlQXRUaW1lKGUsdCk7ZWxzZSBpZihcImxpbmVhclwiPT09dGhpcy5fYXR0YWNrQ3VydmUpdGhpcy5fc2lnLmxpbmVhclJhbXBUbyhlLHMsdCk7ZWxzZSBpZihcImV4cG9uZW50aWFsXCI9PT10aGlzLl9hdHRhY2tDdXJ2ZSl0aGlzLl9zaWcudGFyZ2V0UmFtcFRvKGUscyx0KTtlbHNle3RoaXMuX3NpZy5jYW5jZWxBbmRIb2xkQXRUaW1lKHQpO2xldCBuPXRoaXMuX2F0dGFja0N1cnZlO2ZvcihsZXQgdD0xO3Q8bi5sZW5ndGg7dCsrKWlmKG5bdC0xXTw9aSYmaTw9blt0XSl7bj10aGlzLl9hdHRhY2tDdXJ2ZS5zbGljZSh0KSxuWzBdPWk7YnJlYWt9dGhpcy5fc2lnLnNldFZhbHVlQ3VydmVBdFRpbWUobix0LHMsZSl9aWYobiYmdGhpcy5zdXN0YWluPDEpe2NvbnN0IGk9ZSp0aGlzLnN1c3RhaW4sbz10K3M7dGhpcy5sb2coXCJkZWNheVwiLG8pLFwibGluZWFyXCI9PT10aGlzLl9kZWNheUN1cnZlP3RoaXMuX3NpZy5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZShpLG4rbyk6dGhpcy5fc2lnLmV4cG9uZW50aWFsQXBwcm9hY2hWYWx1ZUF0VGltZShpLG8sbil9cmV0dXJuIHRoaXN9dHJpZ2dlclJlbGVhc2UodCl7dGhpcy5sb2coXCJ0cmlnZ2VyUmVsZWFzZVwiLHQpLHQ9dGhpcy50b1NlY29uZHModCk7Y29uc3QgZT10aGlzLmdldFZhbHVlQXRUaW1lKHQpO2lmKGU+MCl7Y29uc3Qgcz10aGlzLnRvU2Vjb25kcyh0aGlzLnJlbGVhc2UpO3M8dGhpcy5zYW1wbGVUaW1lP3RoaXMuX3NpZy5zZXRWYWx1ZUF0VGltZSgwLHQpOlwibGluZWFyXCI9PT10aGlzLl9yZWxlYXNlQ3VydmU/dGhpcy5fc2lnLmxpbmVhclJhbXBUbygwLHMsdCk6XCJleHBvbmVudGlhbFwiPT09dGhpcy5fcmVsZWFzZUN1cnZlP3RoaXMuX3NpZy50YXJnZXRSYW1wVG8oMCxzLHQpOihCbihMbih0aGlzLl9yZWxlYXNlQ3VydmUpLFwicmVsZWFzZUN1cnZlIG11c3QgYmUgZWl0aGVyICdsaW5lYXInLCAnZXhwb25lbnRpYWwnIG9yIGFuIGFycmF5XCIpLHRoaXMuX3NpZy5jYW5jZWxBbmRIb2xkQXRUaW1lKHQpLHRoaXMuX3NpZy5zZXRWYWx1ZUN1cnZlQXRUaW1lKHRoaXMuX3JlbGVhc2VDdXJ2ZSx0LHMsZSkpfXJldHVybiB0aGlzfWdldFZhbHVlQXRUaW1lKHQpe3JldHVybiB0aGlzLl9zaWcuZ2V0VmFsdWVBdFRpbWUodCl9dHJpZ2dlckF0dGFja1JlbGVhc2UodCxlLHM9MSl7cmV0dXJuIGU9dGhpcy50b1NlY29uZHMoZSksdGhpcy50cmlnZ2VyQXR0YWNrKGUscyksdGhpcy50cmlnZ2VyUmVsZWFzZShlK3RoaXMudG9TZWNvbmRzKHQpKSx0aGlzfWNhbmNlbCh0KXtyZXR1cm4gdGhpcy5fc2lnLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyh0aGlzLnRvU2Vjb25kcyh0KSksdGhpc31jb25uZWN0KHQsZT0wLHM9MCl7cmV0dXJuIGZvKHRoaXMsdCxlLHMpLHRoaXN9YXNBcnJheSh0PTEwMjQpe3JldHVybiBuaSh0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKigpe2NvbnN0IGU9dC90aGlzLmNvbnRleHQuc2FtcGxlUmF0ZSxzPW5ldyBxaSgxLGUsdGhpcy5jb250ZXh0LnNhbXBsZVJhdGUpLG49dGhpcy50b1NlY29uZHModGhpcy5hdHRhY2spK3RoaXMudG9TZWNvbmRzKHRoaXMuZGVjYXkpLGk9bit0aGlzLnRvU2Vjb25kcyh0aGlzLnJlbGVhc2UpLG89LjEqaSxyPWkrbyxhPW5ldyB0aGlzLmNvbnN0cnVjdG9yKE9iamVjdC5hc3NpZ24odGhpcy5nZXQoKSx7YXR0YWNrOmUqdGhpcy50b1NlY29uZHModGhpcy5hdHRhY2spL3IsZGVjYXk6ZSp0aGlzLnRvU2Vjb25kcyh0aGlzLmRlY2F5KS9yLHJlbGVhc2U6ZSp0aGlzLnRvU2Vjb25kcyh0aGlzLnJlbGVhc2UpL3IsY29udGV4dDpzfSkpO3JldHVybiBhLl9zaWcudG9EZXN0aW5hdGlvbigpLGEudHJpZ2dlckF0dGFja1JlbGVhc2UoZSoobitvKS9yLDApLCh5aWVsZCBzLnJlbmRlcigpKS5nZXRDaGFubmVsRGF0YSgwKX0pKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9zaWcuZGlzcG9zZSgpLHRoaXN9fXNpKFtjcigwKV0seHIucHJvdG90eXBlLFwiYXR0YWNrXCIsdm9pZCAwKSxzaShbY3IoMCldLHhyLnByb3RvdHlwZSxcImRlY2F5XCIsdm9pZCAwKSxzaShbYXIoMCwxKV0seHIucHJvdG90eXBlLFwic3VzdGFpblwiLHZvaWQgMCksc2koW2NyKDApXSx4ci5wcm90b3R5cGUsXCJyZWxlYXNlXCIsdm9pZCAwKTtjb25zdCB3cj0oKCk9Pntjb25zdCB0PTEyODtsZXQgZSxzO2NvbnN0IG49W107Zm9yKGU9MDtlPHQ7ZSsrKW5bZV09TWF0aC5zaW4oZS8xMjcqKE1hdGguUEkvMikpO2NvbnN0IGk9W107Zm9yKGU9MDtlPDEyNztlKyspe3M9ZS8xMjc7Y29uc3QgdD1NYXRoLnNpbihzKigyKk1hdGguUEkpKjYuNC1NYXRoLlBJLzIpKzE7aVtlXT10LzEwKy44MypzfWlbMTI3XT0xO2NvbnN0IG89W107Zm9yKGU9MDtlPHQ7ZSsrKW9bZV09TWF0aC5jZWlsKGUvMTI3KjUpLzU7Y29uc3Qgcj1bXTtmb3IoZT0wO2U8dDtlKyspcz1lLzEyNyxyW2VdPS41KigxLU1hdGguY29zKE1hdGguUEkqcykpO2NvbnN0IGE9W107Zm9yKGU9MDtlPHQ7ZSsrKXtzPWUvMTI3O2NvbnN0IHQ9NCpNYXRoLnBvdyhzLDMpKy4yLG49TWF0aC5jb3ModCpNYXRoLlBJKjIqcyk7YVtlXT1NYXRoLmFicyhuKigxLXMpKX1mdW5jdGlvbiBjKHQpe2NvbnN0IGU9bmV3IEFycmF5KHQubGVuZ3RoKTtmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrKyllW3NdPTEtdFtzXTtyZXR1cm4gZX1yZXR1cm57Ym91bmNlOntJbjpjKGEpLE91dDphfSxjb3NpbmU6e0luOm4sT3V0OihoPW4saC5zbGljZSgwKS5yZXZlcnNlKCkpfSxleHBvbmVudGlhbDpcImV4cG9uZW50aWFsXCIsbGluZWFyOlwibGluZWFyXCIscmlwcGxlOntJbjppLE91dDpjKGkpfSxzaW5lOntJbjpyLE91dDpjKHIpfSxzdGVwOntJbjpvLE91dDpjKG8pfX07dmFyIGh9KSgpO2NsYXNzIGJyIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShici5nZXREZWZhdWx0cygpLGFyZ3VtZW50cykpLHRoaXMuX3NjaGVkdWxlZEV2ZW50cz1bXSx0aGlzLl9zeW5jZWQ9ITEsdGhpcy5fb3JpZ2luYWxfdHJpZ2dlckF0dGFjaz10aGlzLnRyaWdnZXJBdHRhY2ssdGhpcy5fb3JpZ2luYWxfdHJpZ2dlclJlbGVhc2U9dGhpcy50cmlnZ2VyUmVsZWFzZSx0aGlzLl9zeW5jZWRSZWxlYXNlPXQ9PnRoaXMuX29yaWdpbmFsX3RyaWdnZXJSZWxlYXNlKHQpO2NvbnN0IHQ9dWkoYnIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpO3RoaXMuX3ZvbHVtZT10aGlzLm91dHB1dD1uZXcgT28oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZvbHVtZTp0LnZvbHVtZX0pLHRoaXMudm9sdW1lPXRoaXMuX3ZvbHVtZS52b2x1bWUsT2kodGhpcyxcInZvbHVtZVwiKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHt2b2x1bWU6MH0pfXN5bmMoKXtyZXR1cm4gdGhpcy5fc3luY1N0YXRlKCkmJih0aGlzLl9zeW5jTWV0aG9kKFwidHJpZ2dlckF0dGFja1wiLDEpLHRoaXMuX3N5bmNNZXRob2QoXCJ0cmlnZ2VyUmVsZWFzZVwiLDApLHRoaXMuY29udGV4dC50cmFuc3BvcnQub24oXCJzdG9wXCIsdGhpcy5fc3luY2VkUmVsZWFzZSksdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5vbihcInBhdXNlXCIsdGhpcy5fc3luY2VkUmVsZWFzZSksdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5vbihcImxvb3BFbmRcIix0aGlzLl9zeW5jZWRSZWxlYXNlKSksdGhpc31fc3luY1N0YXRlKCl7bGV0IHQ9ITE7cmV0dXJuIHRoaXMuX3N5bmNlZHx8KHRoaXMuX3N5bmNlZD0hMCx0PSEwKSx0fV9zeW5jTWV0aG9kKHQsZSl7Y29uc3Qgcz10aGlzW1wiX29yaWdpbmFsX1wiK3RdPXRoaXNbdF07dGhpc1t0XT0oLi4udCk9Pntjb25zdCBuPXRbZV0saT10aGlzLmNvbnRleHQudHJhbnNwb3J0LnNjaGVkdWxlKChuPT57dFtlXT1uLHMuYXBwbHkodGhpcyx0KX0pLG4pO3RoaXMuX3NjaGVkdWxlZEV2ZW50cy5wdXNoKGkpfX11bnN5bmMoKXtyZXR1cm4gdGhpcy5fc2NoZWR1bGVkRXZlbnRzLmZvckVhY2goKHQ9PnRoaXMuY29udGV4dC50cmFuc3BvcnQuY2xlYXIodCkpKSx0aGlzLl9zY2hlZHVsZWRFdmVudHM9W10sdGhpcy5fc3luY2VkJiYodGhpcy5fc3luY2VkPSExLHRoaXMudHJpZ2dlckF0dGFjaz10aGlzLl9vcmlnaW5hbF90cmlnZ2VyQXR0YWNrLHRoaXMudHJpZ2dlclJlbGVhc2U9dGhpcy5fb3JpZ2luYWxfdHJpZ2dlclJlbGVhc2UsdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5vZmYoXCJzdG9wXCIsdGhpcy5fc3luY2VkUmVsZWFzZSksdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5vZmYoXCJwYXVzZVwiLHRoaXMuX3N5bmNlZFJlbGVhc2UpLHRoaXMuY29udGV4dC50cmFuc3BvcnQub2ZmKFwibG9vcEVuZFwiLHRoaXMuX3N5bmNlZFJlbGVhc2UpKSx0aGlzfXRyaWdnZXJBdHRhY2tSZWxlYXNlKHQsZSxzLG4pe2NvbnN0IGk9dGhpcy50b1NlY29uZHMocyksbz10aGlzLnRvU2Vjb25kcyhlKTtyZXR1cm4gdGhpcy50cmlnZ2VyQXR0YWNrKHQsaSxuKSx0aGlzLnRyaWdnZXJSZWxlYXNlKGkrbyksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl92b2x1bWUuZGlzcG9zZSgpLHRoaXMudW5zeW5jKCksdGhpcy5fc2NoZWR1bGVkRXZlbnRzPVtdLHRoaXN9fWNsYXNzIFRyIGV4dGVuZHMgYnJ7Y29uc3RydWN0b3IoKXtzdXBlcih1aShUci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cykpO2NvbnN0IHQ9dWkoVHIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpO3RoaXMucG9ydGFtZW50bz10LnBvcnRhbWVudG8sdGhpcy5vbnNpbGVuY2U9dC5vbnNpbGVuY2V9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oYnIuZ2V0RGVmYXVsdHMoKSx7ZGV0dW5lOjAsb25zaWxlbmNlOkVpLHBvcnRhbWVudG86MH0pfXRyaWdnZXJBdHRhY2sodCxlLHM9MSl7dGhpcy5sb2coXCJ0cmlnZ2VyQXR0YWNrXCIsdCxlLHMpO2NvbnN0IG49dGhpcy50b1NlY29uZHMoZSk7cmV0dXJuIHRoaXMuX3RyaWdnZXJFbnZlbG9wZUF0dGFjayhuLHMpLHRoaXMuc2V0Tm90ZSh0LG4pLHRoaXN9dHJpZ2dlclJlbGVhc2UodCl7dGhpcy5sb2coXCJ0cmlnZ2VyUmVsZWFzZVwiLHQpO2NvbnN0IGU9dGhpcy50b1NlY29uZHModCk7cmV0dXJuIHRoaXMuX3RyaWdnZXJFbnZlbG9wZVJlbGVhc2UoZSksdGhpc31zZXROb3RlKHQsZSl7Y29uc3Qgcz10aGlzLnRvU2Vjb25kcyhlKSxuPXQgaW5zdGFuY2VvZiBZaT90LnRvRnJlcXVlbmN5KCk6dDtpZih0aGlzLnBvcnRhbWVudG8+MCYmdGhpcy5nZXRMZXZlbEF0VGltZShzKT4uMDUpe2NvbnN0IHQ9dGhpcy50b1NlY29uZHModGhpcy5wb3J0YW1lbnRvKTt0aGlzLmZyZXF1ZW5jeS5leHBvbmVudGlhbFJhbXBUbyhuLHQscyl9ZWxzZSB0aGlzLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZShuLHMpO3JldHVybiB0aGlzfX1zaShbY3IoMCldLFRyLnByb3RvdHlwZSxcInBvcnRhbWVudG9cIix2b2lkIDApO2NsYXNzIFNyIGV4dGVuZHMgeHJ7Y29uc3RydWN0b3IoKXtzdXBlcih1aShTci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJhdHRhY2tcIixcImRlY2F5XCIsXCJzdXN0YWluXCIsXCJyZWxlYXNlXCJdKSksdGhpcy5uYW1lPVwiQW1wbGl0dWRlRW52ZWxvcGVcIix0aGlzLl9nYWluTm9kZT1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46MH0pLHRoaXMub3V0cHV0PXRoaXMuX2dhaW5Ob2RlLHRoaXMuaW5wdXQ9dGhpcy5fZ2Fpbk5vZGUsdGhpcy5fc2lnLmNvbm5lY3QodGhpcy5fZ2Fpbk5vZGUuZ2FpbiksdGhpcy5vdXRwdXQ9dGhpcy5fZ2Fpbk5vZGUsdGhpcy5pbnB1dD10aGlzLl9nYWluTm9kZX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9nYWluTm9kZS5kaXNwb3NlKCksdGhpc319Y2xhc3Mga3IgZXh0ZW5kcyBUcntjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKGtyLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSksdGhpcy5uYW1lPVwiU3ludGhcIjtjb25zdCB0PXVpKGtyLmdldERlZmF1bHRzKCksYXJndW1lbnRzKTt0aGlzLm9zY2lsbGF0b3I9bmV3IHNyKE9iamVjdC5hc3NpZ24oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGRldHVuZTp0LmRldHVuZSxvbnN0b3A6KCk9PnRoaXMub25zaWxlbmNlKHRoaXMpfSx0Lm9zY2lsbGF0b3IpKSx0aGlzLmZyZXF1ZW5jeT10aGlzLm9zY2lsbGF0b3IuZnJlcXVlbmN5LHRoaXMuZGV0dW5lPXRoaXMub3NjaWxsYXRvci5kZXR1bmUsdGhpcy5lbnZlbG9wZT1uZXcgU3IoT2JqZWN0LmFzc2lnbih7Y29udGV4dDp0aGlzLmNvbnRleHR9LHQuZW52ZWxvcGUpKSx0aGlzLm9zY2lsbGF0b3IuY2hhaW4odGhpcy5lbnZlbG9wZSx0aGlzLm91dHB1dCksT2kodGhpcyxbXCJvc2NpbGxhdG9yXCIsXCJmcmVxdWVuY3lcIixcImRldHVuZVwiLFwiZW52ZWxvcGVcIl0pfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKFRyLmdldERlZmF1bHRzKCkse2VudmVsb3BlOk9iamVjdC5hc3NpZ24oZGkoeHIuZ2V0RGVmYXVsdHMoKSxPYmplY3Qua2V5cyhpby5nZXREZWZhdWx0cygpKSkse2F0dGFjazouMDA1LGRlY2F5Oi4xLHJlbGVhc2U6MSxzdXN0YWluOi4zfSksb3NjaWxsYXRvcjpPYmplY3QuYXNzaWduKGRpKHNyLmdldERlZmF1bHRzKCksWy4uLk9iamVjdC5rZXlzKFBvLmdldERlZmF1bHRzKCkpLFwiZnJlcXVlbmN5XCIsXCJkZXR1bmVcIl0pLHt0eXBlOlwidHJpYW5nbGVcIn0pfSl9X3RyaWdnZXJFbnZlbG9wZUF0dGFjayh0LGUpe2lmKHRoaXMuZW52ZWxvcGUudHJpZ2dlckF0dGFjayh0LGUpLHRoaXMub3NjaWxsYXRvci5zdGFydCh0KSwwPT09dGhpcy5lbnZlbG9wZS5zdXN0YWluKXtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHRoaXMuZW52ZWxvcGUuYXR0YWNrKSxzPXRoaXMudG9TZWNvbmRzKHRoaXMuZW52ZWxvcGUuZGVjYXkpO3RoaXMub3NjaWxsYXRvci5zdG9wKHQrZStzKX19X3RyaWdnZXJFbnZlbG9wZVJlbGVhc2UodCl7dGhpcy5lbnZlbG9wZS50cmlnZ2VyUmVsZWFzZSh0KSx0aGlzLm9zY2lsbGF0b3Iuc3RvcCh0K3RoaXMudG9TZWNvbmRzKHRoaXMuZW52ZWxvcGUucmVsZWFzZSkpfWdldExldmVsQXRUaW1lKHQpe3JldHVybiB0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuZW52ZWxvcGUuZ2V0VmFsdWVBdFRpbWUodCl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5vc2NpbGxhdG9yLmRpc3Bvc2UoKSx0aGlzLmVudmVsb3BlLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBBciBleHRlbmRzIFRye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoQXIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJNb2R1bGF0aW9uU3ludGhcIjtjb25zdCB0PXVpKEFyLmdldERlZmF1bHRzKCksYXJndW1lbnRzKTt0aGlzLl9jYXJyaWVyPW5ldyBrcih7Y29udGV4dDp0aGlzLmNvbnRleHQsb3NjaWxsYXRvcjp0Lm9zY2lsbGF0b3IsZW52ZWxvcGU6dC5lbnZlbG9wZSxvbnNpbGVuY2U6KCk9PnRoaXMub25zaWxlbmNlKHRoaXMpLHZvbHVtZTotMTB9KSx0aGlzLl9tb2R1bGF0b3I9bmV3IGtyKHtjb250ZXh0OnRoaXMuY29udGV4dCxvc2NpbGxhdG9yOnQubW9kdWxhdGlvbixlbnZlbG9wZTp0Lm1vZHVsYXRpb25FbnZlbG9wZSx2b2x1bWU6LTEwfSksdGhpcy5vc2NpbGxhdG9yPXRoaXMuX2NhcnJpZXIub3NjaWxsYXRvcix0aGlzLmVudmVsb3BlPXRoaXMuX2NhcnJpZXIuZW52ZWxvcGUsdGhpcy5tb2R1bGF0aW9uPXRoaXMuX21vZHVsYXRvci5vc2NpbGxhdG9yLHRoaXMubW9kdWxhdGlvbkVudmVsb3BlPXRoaXMuX21vZHVsYXRvci5lbnZlbG9wZSx0aGlzLmZyZXF1ZW5jeT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiZnJlcXVlbmN5XCJ9KSx0aGlzLmRldHVuZT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOnQuZGV0dW5lLHVuaXRzOlwiY2VudHNcIn0pLHRoaXMuaGFybW9uaWNpdHk9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0Lmhhcm1vbmljaXR5LG1pblZhbHVlOjB9KSx0aGlzLl9tb2R1bGF0aW9uTm9kZT1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46MH0pLE9pKHRoaXMsW1wiZnJlcXVlbmN5XCIsXCJoYXJtb25pY2l0eVwiLFwib3NjaWxsYXRvclwiLFwiZW52ZWxvcGVcIixcIm1vZHVsYXRpb25cIixcIm1vZHVsYXRpb25FbnZlbG9wZVwiLFwiZGV0dW5lXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihUci5nZXREZWZhdWx0cygpLHtoYXJtb25pY2l0eTozLG9zY2lsbGF0b3I6T2JqZWN0LmFzc2lnbihkaShzci5nZXREZWZhdWx0cygpLFsuLi5PYmplY3Qua2V5cyhQby5nZXREZWZhdWx0cygpKSxcImZyZXF1ZW5jeVwiLFwiZGV0dW5lXCJdKSx7dHlwZTpcInNpbmVcIn0pLGVudmVsb3BlOk9iamVjdC5hc3NpZ24oZGkoeHIuZ2V0RGVmYXVsdHMoKSxPYmplY3Qua2V5cyhpby5nZXREZWZhdWx0cygpKSkse2F0dGFjazouMDEsZGVjYXk6LjAxLHN1c3RhaW46MSxyZWxlYXNlOi41fSksbW9kdWxhdGlvbjpPYmplY3QuYXNzaWduKGRpKHNyLmdldERlZmF1bHRzKCksWy4uLk9iamVjdC5rZXlzKFBvLmdldERlZmF1bHRzKCkpLFwiZnJlcXVlbmN5XCIsXCJkZXR1bmVcIl0pLHt0eXBlOlwic3F1YXJlXCJ9KSxtb2R1bGF0aW9uRW52ZWxvcGU6T2JqZWN0LmFzc2lnbihkaSh4ci5nZXREZWZhdWx0cygpLE9iamVjdC5rZXlzKGlvLmdldERlZmF1bHRzKCkpKSx7YXR0YWNrOi41LGRlY2F5OjAsc3VzdGFpbjoxLHJlbGVhc2U6LjV9KX0pfV90cmlnZ2VyRW52ZWxvcGVBdHRhY2sodCxlKXt0aGlzLl9jYXJyaWVyLl90cmlnZ2VyRW52ZWxvcGVBdHRhY2sodCxlKSx0aGlzLl9tb2R1bGF0b3IuX3RyaWdnZXJFbnZlbG9wZUF0dGFjayh0LGUpfV90cmlnZ2VyRW52ZWxvcGVSZWxlYXNlKHQpe3JldHVybiB0aGlzLl9jYXJyaWVyLl90cmlnZ2VyRW52ZWxvcGVSZWxlYXNlKHQpLHRoaXMuX21vZHVsYXRvci5fdHJpZ2dlckVudmVsb3BlUmVsZWFzZSh0KSx0aGlzfWdldExldmVsQXRUaW1lKHQpe3JldHVybiB0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuZW52ZWxvcGUuZ2V0VmFsdWVBdFRpbWUodCl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fY2Fycmllci5kaXNwb3NlKCksdGhpcy5fbW9kdWxhdG9yLmRpc3Bvc2UoKSx0aGlzLmZyZXF1ZW5jeS5kaXNwb3NlKCksdGhpcy5kZXR1bmUuZGlzcG9zZSgpLHRoaXMuaGFybW9uaWNpdHkuZGlzcG9zZSgpLHRoaXMuX21vZHVsYXRpb25Ob2RlLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBDciBleHRlbmRzIEFye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoQ3IuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJBTVN5bnRoXCIsdGhpcy5fbW9kdWxhdGlvblNjYWxlPW5ldyBYbyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLmZyZXF1ZW5jeS5jb25uZWN0KHRoaXMuX2NhcnJpZXIuZnJlcXVlbmN5KSx0aGlzLmZyZXF1ZW5jeS5jaGFpbih0aGlzLmhhcm1vbmljaXR5LHRoaXMuX21vZHVsYXRvci5mcmVxdWVuY3kpLHRoaXMuZGV0dW5lLmZhbih0aGlzLl9jYXJyaWVyLmRldHVuZSx0aGlzLl9tb2R1bGF0b3IuZGV0dW5lKSx0aGlzLl9tb2R1bGF0b3IuY2hhaW4odGhpcy5fbW9kdWxhdGlvblNjYWxlLHRoaXMuX21vZHVsYXRpb25Ob2RlLmdhaW4pLHRoaXMuX2NhcnJpZXIuY2hhaW4odGhpcy5fbW9kdWxhdGlvbk5vZGUsdGhpcy5vdXRwdXQpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX21vZHVsYXRpb25TY2FsZS5kaXNwb3NlKCksdGhpc319Y2xhc3MgRHIgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKERyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwidHlwZVwiXSkpLHRoaXMubmFtZT1cIkJpcXVhZEZpbHRlclwiO2NvbnN0IHQ9dWkoRHIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJ0eXBlXCJdKTt0aGlzLl9maWx0ZXI9dGhpcy5jb250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpLHRoaXMuaW5wdXQ9dGhpcy5vdXRwdXQ9dGhpcy5fZmlsdGVyLHRoaXMuUT1uZXcgbm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwibnVtYmVyXCIsdmFsdWU6dC5RLHBhcmFtOnRoaXMuX2ZpbHRlci5RfSksdGhpcy5mcmVxdWVuY3k9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcImZyZXF1ZW5jeVwiLHZhbHVlOnQuZnJlcXVlbmN5LHBhcmFtOnRoaXMuX2ZpbHRlci5mcmVxdWVuY3l9KSx0aGlzLmRldHVuZT1uZXcgbm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiY2VudHNcIix2YWx1ZTp0LmRldHVuZSxwYXJhbTp0aGlzLl9maWx0ZXIuZGV0dW5lfSksdGhpcy5nYWluPW5ldyBubyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJkZWNpYmVsc1wiLGNvbnZlcnQ6ITEsdmFsdWU6dC5nYWluLHBhcmFtOnRoaXMuX2ZpbHRlci5nYWlufSksdGhpcy50eXBlPXQudHlwZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtROjEsdHlwZTpcImxvd3Bhc3NcIixmcmVxdWVuY3k6MzUwLGRldHVuZTowLGdhaW46MH0pfWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuX2ZpbHRlci50eXBlfXNldCB0eXBlKHQpe0JuKC0xIT09W1wibG93cGFzc1wiLFwiaGlnaHBhc3NcIixcImJhbmRwYXNzXCIsXCJsb3dzaGVsZlwiLFwiaGlnaHNoZWxmXCIsXCJub3RjaFwiLFwiYWxscGFzc1wiLFwicGVha2luZ1wiXS5pbmRleE9mKHQpLGBJbnZhbGlkIGZpbHRlciB0eXBlOiAke3R9YCksdGhpcy5fZmlsdGVyLnR5cGU9dH1nZXRGcmVxdWVuY3lSZXNwb25zZSh0PTEyOCl7Y29uc3QgZT1uZXcgRmxvYXQzMkFycmF5KHQpO2ZvcihsZXQgcz0wO3M8dDtzKyspe2NvbnN0IG49MTk5ODAqTWF0aC5wb3cocy90LDIpKzIwO2Vbc109bn1jb25zdCBzPW5ldyBGbG9hdDMyQXJyYXkodCksbj1uZXcgRmxvYXQzMkFycmF5KHQpLGk9dGhpcy5jb250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO3JldHVybiBpLnR5cGU9dGhpcy50eXBlLGkuUS52YWx1ZT10aGlzLlEudmFsdWUsaS5mcmVxdWVuY3kudmFsdWU9dGhpcy5mcmVxdWVuY3kudmFsdWUsaS5nYWluLnZhbHVlPXRoaXMuZ2Fpbi52YWx1ZSxpLmdldEZyZXF1ZW5jeVJlc3BvbnNlKGUscyxuKSxzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2ZpbHRlci5kaXNjb25uZWN0KCksdGhpcy5RLmRpc3Bvc2UoKSx0aGlzLmZyZXF1ZW5jeS5kaXNwb3NlKCksdGhpcy5nYWluLmRpc3Bvc2UoKSx0aGlzLmRldHVuZS5kaXNwb3NlKCksdGhpc319Y2xhc3MgT3IgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKE9yLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwidHlwZVwiLFwicm9sbG9mZlwiXSkpLHRoaXMubmFtZT1cIkZpbHRlclwiLHRoaXMuaW5wdXQ9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMub3V0cHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9maWx0ZXJzPVtdO2NvbnN0IHQ9dWkoT3IuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJ0eXBlXCIsXCJyb2xsb2ZmXCJdKTt0aGlzLl9maWx0ZXJzPVtdLHRoaXMuUT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwicG9zaXRpdmVcIix2YWx1ZTp0LlF9KSx0aGlzLmZyZXF1ZW5jeT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiZnJlcXVlbmN5XCIsdmFsdWU6dC5mcmVxdWVuY3l9KSx0aGlzLmRldHVuZT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiY2VudHNcIix2YWx1ZTp0LmRldHVuZX0pLHRoaXMuZ2Fpbj1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiZGVjaWJlbHNcIixjb252ZXJ0OiExLHZhbHVlOnQuZ2Fpbn0pLHRoaXMuX3R5cGU9dC50eXBlLHRoaXMucm9sbG9mZj10LnJvbGxvZmYsT2kodGhpcyxbXCJkZXR1bmVcIixcImZyZXF1ZW5jeVwiLFwiZ2FpblwiLFwiUVwiXSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7UToxLGRldHVuZTowLGZyZXF1ZW5jeTozNTAsZ2FpbjowLHJvbGxvZmY6LTEyLHR5cGU6XCJsb3dwYXNzXCJ9KX1nZXQgdHlwZSgpe3JldHVybiB0aGlzLl90eXBlfXNldCB0eXBlKHQpe0JuKC0xIT09W1wibG93cGFzc1wiLFwiaGlnaHBhc3NcIixcImJhbmRwYXNzXCIsXCJsb3dzaGVsZlwiLFwiaGlnaHNoZWxmXCIsXCJub3RjaFwiLFwiYWxscGFzc1wiLFwicGVha2luZ1wiXS5pbmRleE9mKHQpLGBJbnZhbGlkIGZpbHRlciB0eXBlOiAke3R9YCksdGhpcy5fdHlwZT10LHRoaXMuX2ZpbHRlcnMuZm9yRWFjaCgoZT0+ZS50eXBlPXQpKX1nZXQgcm9sbG9mZigpe3JldHVybiB0aGlzLl9yb2xsb2ZmfXNldCByb2xsb2ZmKHQpe2NvbnN0IGU9Tm4odCk/dDpwYXJzZUludCh0LDEwKSxzPVstMTIsLTI0LC00OCwtOTZdO2xldCBuPXMuaW5kZXhPZihlKTtCbigtMSE9PW4sYHJvbGxvZmYgY2FuIG9ubHkgYmUgJHtzLmpvaW4oXCIsIFwiKX1gKSxuKz0xLHRoaXMuX3JvbGxvZmY9ZSx0aGlzLmlucHV0LmRpc2Nvbm5lY3QoKSx0aGlzLl9maWx0ZXJzLmZvckVhY2goKHQ9PnQuZGlzY29ubmVjdCgpKSksdGhpcy5fZmlsdGVycz1uZXcgQXJyYXkobik7Zm9yKGxldCB0PTA7dDxuO3QrKyl7Y29uc3QgZT1uZXcgRHIoe2NvbnRleHQ6dGhpcy5jb250ZXh0fSk7ZS50eXBlPXRoaXMuX3R5cGUsdGhpcy5mcmVxdWVuY3kuY29ubmVjdChlLmZyZXF1ZW5jeSksdGhpcy5kZXR1bmUuY29ubmVjdChlLmRldHVuZSksdGhpcy5RLmNvbm5lY3QoZS5RKSx0aGlzLmdhaW4uY29ubmVjdChlLmdhaW4pLHRoaXMuX2ZpbHRlcnNbdF09ZX10aGlzLl9pbnRlcm5hbENoYW5uZWxzPXRoaXMuX2ZpbHRlcnMsb28odGhpcy5pbnB1dCwuLi50aGlzLl9pbnRlcm5hbENoYW5uZWxzLHRoaXMub3V0cHV0KX1nZXRGcmVxdWVuY3lSZXNwb25zZSh0PTEyOCl7Y29uc3QgZT1uZXcgRHIoe2ZyZXF1ZW5jeTp0aGlzLmZyZXF1ZW5jeS52YWx1ZSxnYWluOnRoaXMuZ2Fpbi52YWx1ZSxROnRoaXMuUS52YWx1ZSx0eXBlOnRoaXMuX3R5cGUsZGV0dW5lOnRoaXMuZGV0dW5lLnZhbHVlfSkscz1uZXcgRmxvYXQzMkFycmF5KHQpLm1hcCgoKCk9PjEpKTtyZXR1cm4gdGhpcy5fZmlsdGVycy5mb3JFYWNoKCgoKT0+e2UuZ2V0RnJlcXVlbmN5UmVzcG9uc2UodCkuZm9yRWFjaCgoKHQsZSk9PnNbZV0qPXQpKX0pKSxlLmRpc3Bvc2UoKSxzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2ZpbHRlcnMuZm9yRWFjaCgodD0+e3QuZGlzcG9zZSgpfSkpLE1pKHRoaXMsW1wiZGV0dW5lXCIsXCJmcmVxdWVuY3lcIixcImdhaW5cIixcIlFcIl0pLHRoaXMuZnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLlEuZGlzcG9zZSgpLHRoaXMuZGV0dW5lLmRpc3Bvc2UoKSx0aGlzLmdhaW4uZGlzcG9zZSgpLHRoaXN9fWNsYXNzIE1yIGV4dGVuZHMgeHJ7Y29uc3RydWN0b3IoKXtzdXBlcih1aShNci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJhdHRhY2tcIixcImRlY2F5XCIsXCJzdXN0YWluXCIsXCJyZWxlYXNlXCJdKSksdGhpcy5uYW1lPVwiRnJlcXVlbmN5RW52ZWxvcGVcIjtjb25zdCB0PXVpKE1yLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImF0dGFja1wiLFwiZGVjYXlcIixcInN1c3RhaW5cIixcInJlbGVhc2VcIl0pO3RoaXMuX29jdGF2ZXM9dC5vY3RhdmVzLHRoaXMuX2Jhc2VGcmVxdWVuY3k9dGhpcy50b0ZyZXF1ZW5jeSh0LmJhc2VGcmVxdWVuY3kpLHRoaXMuX2V4cG9uZW50PXRoaXMuaW5wdXQ9bmV3IEZvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0LmV4cG9uZW50fSksdGhpcy5fc2NhbGU9dGhpcy5vdXRwdXQ9bmV3IGlyKHtjb250ZXh0OnRoaXMuY29udGV4dCxtaW46dGhpcy5fYmFzZUZyZXF1ZW5jeSxtYXg6dGhpcy5fYmFzZUZyZXF1ZW5jeSpNYXRoLnBvdygyLHRoaXMuX29jdGF2ZXMpfSksdGhpcy5fc2lnLmNoYWluKHRoaXMuX2V4cG9uZW50LHRoaXMuX3NjYWxlKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbih4ci5nZXREZWZhdWx0cygpLHtiYXNlRnJlcXVlbmN5OjIwMCxleHBvbmVudDoxLG9jdGF2ZXM6NH0pfWdldCBiYXNlRnJlcXVlbmN5KCl7cmV0dXJuIHRoaXMuX2Jhc2VGcmVxdWVuY3l9c2V0IGJhc2VGcmVxdWVuY3kodCl7Y29uc3QgZT10aGlzLnRvRnJlcXVlbmN5KHQpO1VuKGUsMCksdGhpcy5fYmFzZUZyZXF1ZW5jeT1lLHRoaXMuX3NjYWxlLm1pbj10aGlzLl9iYXNlRnJlcXVlbmN5LHRoaXMub2N0YXZlcz10aGlzLl9vY3RhdmVzfWdldCBvY3RhdmVzKCl7cmV0dXJuIHRoaXMuX29jdGF2ZXN9c2V0IG9jdGF2ZXModCl7dGhpcy5fb2N0YXZlcz10LHRoaXMuX3NjYWxlLm1heD10aGlzLl9iYXNlRnJlcXVlbmN5Kk1hdGgucG93KDIsdCl9Z2V0IGV4cG9uZW50KCl7cmV0dXJuIHRoaXMuX2V4cG9uZW50LnZhbHVlfXNldCBleHBvbmVudCh0KXt0aGlzLl9leHBvbmVudC52YWx1ZT10fWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2V4cG9uZW50LmRpc3Bvc2UoKSx0aGlzLl9zY2FsZS5kaXNwb3NlKCksdGhpc319Y2xhc3MgRXIgZXh0ZW5kcyBUcntjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKEVyLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSksdGhpcy5uYW1lPVwiTW9ub1N5bnRoXCI7Y29uc3QgdD11aShFci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyk7dGhpcy5vc2NpbGxhdG9yPW5ldyBzcihPYmplY3QuYXNzaWduKHQub3NjaWxsYXRvcix7Y29udGV4dDp0aGlzLmNvbnRleHQsZGV0dW5lOnQuZGV0dW5lLG9uc3RvcDooKT0+dGhpcy5vbnNpbGVuY2UodGhpcyl9KSksdGhpcy5mcmVxdWVuY3k9dGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeSx0aGlzLmRldHVuZT10aGlzLm9zY2lsbGF0b3IuZGV0dW5lLHRoaXMuZmlsdGVyPW5ldyBPcihPYmplY3QuYXNzaWduKHQuZmlsdGVyLHtjb250ZXh0OnRoaXMuY29udGV4dH0pKSx0aGlzLmZpbHRlckVudmVsb3BlPW5ldyBNcihPYmplY3QuYXNzaWduKHQuZmlsdGVyRW52ZWxvcGUse2NvbnRleHQ6dGhpcy5jb250ZXh0fSkpLHRoaXMuZW52ZWxvcGU9bmV3IFNyKE9iamVjdC5hc3NpZ24odC5lbnZlbG9wZSx7Y29udGV4dDp0aGlzLmNvbnRleHR9KSksdGhpcy5vc2NpbGxhdG9yLmNoYWluKHRoaXMuZmlsdGVyLHRoaXMuZW52ZWxvcGUsdGhpcy5vdXRwdXQpLHRoaXMuZmlsdGVyRW52ZWxvcGUuY29ubmVjdCh0aGlzLmZpbHRlci5mcmVxdWVuY3kpLE9pKHRoaXMsW1wib3NjaWxsYXRvclwiLFwiZnJlcXVlbmN5XCIsXCJkZXR1bmVcIixcImZpbHRlclwiLFwiZmlsdGVyRW52ZWxvcGVcIixcImVudmVsb3BlXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihUci5nZXREZWZhdWx0cygpLHtlbnZlbG9wZTpPYmplY3QuYXNzaWduKGRpKHhyLmdldERlZmF1bHRzKCksT2JqZWN0LmtleXMoaW8uZ2V0RGVmYXVsdHMoKSkpLHthdHRhY2s6LjAwNSxkZWNheTouMSxyZWxlYXNlOjEsc3VzdGFpbjouOX0pLGZpbHRlcjpPYmplY3QuYXNzaWduKGRpKE9yLmdldERlZmF1bHRzKCksT2JqZWN0LmtleXMoaW8uZ2V0RGVmYXVsdHMoKSkpLHtROjEscm9sbG9mZjotMTIsdHlwZTpcImxvd3Bhc3NcIn0pLGZpbHRlckVudmVsb3BlOk9iamVjdC5hc3NpZ24oZGkoTXIuZ2V0RGVmYXVsdHMoKSxPYmplY3Qua2V5cyhpby5nZXREZWZhdWx0cygpKSkse2F0dGFjazouNixiYXNlRnJlcXVlbmN5OjIwMCxkZWNheTouMixleHBvbmVudDoyLG9jdGF2ZXM6MyxyZWxlYXNlOjIsc3VzdGFpbjouNX0pLG9zY2lsbGF0b3I6T2JqZWN0LmFzc2lnbihkaShzci5nZXREZWZhdWx0cygpLE9iamVjdC5rZXlzKFBvLmdldERlZmF1bHRzKCkpKSx7dHlwZTpcInNhd3Rvb3RoXCJ9KX0pfV90cmlnZ2VyRW52ZWxvcGVBdHRhY2sodCxlPTEpe2lmKHRoaXMuZW52ZWxvcGUudHJpZ2dlckF0dGFjayh0LGUpLHRoaXMuZmlsdGVyRW52ZWxvcGUudHJpZ2dlckF0dGFjayh0KSx0aGlzLm9zY2lsbGF0b3Iuc3RhcnQodCksMD09PXRoaXMuZW52ZWxvcGUuc3VzdGFpbil7Y29uc3QgZT10aGlzLnRvU2Vjb25kcyh0aGlzLmVudmVsb3BlLmF0dGFjaykscz10aGlzLnRvU2Vjb25kcyh0aGlzLmVudmVsb3BlLmRlY2F5KTt0aGlzLm9zY2lsbGF0b3Iuc3RvcCh0K2Urcyl9fV90cmlnZ2VyRW52ZWxvcGVSZWxlYXNlKHQpe3RoaXMuZW52ZWxvcGUudHJpZ2dlclJlbGVhc2UodCksdGhpcy5maWx0ZXJFbnZlbG9wZS50cmlnZ2VyUmVsZWFzZSh0KSx0aGlzLm9zY2lsbGF0b3Iuc3RvcCh0K3RoaXMudG9TZWNvbmRzKHRoaXMuZW52ZWxvcGUucmVsZWFzZSkpfWdldExldmVsQXRUaW1lKHQpe3JldHVybiB0PXRoaXMudG9TZWNvbmRzKHQpLHRoaXMuZW52ZWxvcGUuZ2V0VmFsdWVBdFRpbWUodCl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5vc2NpbGxhdG9yLmRpc3Bvc2UoKSx0aGlzLmVudmVsb3BlLmRpc3Bvc2UoKSx0aGlzLmZpbHRlckVudmVsb3BlLmRpc3Bvc2UoKSx0aGlzLmZpbHRlci5kaXNwb3NlKCksdGhpc319Y2xhc3MgUnIgZXh0ZW5kcyBUcntjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFJyLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSksdGhpcy5uYW1lPVwiRHVvU3ludGhcIjtjb25zdCB0PXVpKFJyLmdldERlZmF1bHRzKCksYXJndW1lbnRzKTt0aGlzLnZvaWNlMD1uZXcgRXIoT2JqZWN0LmFzc2lnbih0LnZvaWNlMCx7Y29udGV4dDp0aGlzLmNvbnRleHQsb25zaWxlbmNlOigpPT50aGlzLm9uc2lsZW5jZSh0aGlzKX0pKSx0aGlzLnZvaWNlMT1uZXcgRXIoT2JqZWN0LmFzc2lnbih0LnZvaWNlMSx7Y29udGV4dDp0aGlzLmNvbnRleHR9KSksdGhpcy5oYXJtb25pY2l0eT1uZXcgWW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwicG9zaXRpdmVcIix2YWx1ZTp0Lmhhcm1vbmljaXR5fSksdGhpcy5fdmlicmF0bz1uZXcgcnIoe2ZyZXF1ZW5jeTp0LnZpYnJhdG9SYXRlLGNvbnRleHQ6dGhpcy5jb250ZXh0LG1pbjotNTAsbWF4OjUwfSksdGhpcy5fdmlicmF0by5zdGFydCgpLHRoaXMudmlicmF0b1JhdGU9dGhpcy5fdmlicmF0by5mcmVxdWVuY3ksdGhpcy5fdmlicmF0b0dhaW49bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcIm5vcm1hbFJhbmdlXCIsZ2Fpbjp0LnZpYnJhdG9BbW91bnR9KSx0aGlzLnZpYnJhdG9BbW91bnQ9dGhpcy5fdmlicmF0b0dhaW4uZ2Fpbix0aGlzLmZyZXF1ZW5jeT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiZnJlcXVlbmN5XCIsdmFsdWU6NDQwfSksdGhpcy5kZXR1bmU9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcImNlbnRzXCIsdmFsdWU6dC5kZXR1bmV9KSx0aGlzLmZyZXF1ZW5jeS5jb25uZWN0KHRoaXMudm9pY2UwLmZyZXF1ZW5jeSksdGhpcy5mcmVxdWVuY3kuY2hhaW4odGhpcy5oYXJtb25pY2l0eSx0aGlzLnZvaWNlMS5mcmVxdWVuY3kpLHRoaXMuX3ZpYnJhdG8uY29ubmVjdCh0aGlzLl92aWJyYXRvR2FpbiksdGhpcy5fdmlicmF0b0dhaW4uZmFuKHRoaXMudm9pY2UwLmRldHVuZSx0aGlzLnZvaWNlMS5kZXR1bmUpLHRoaXMuZGV0dW5lLmZhbih0aGlzLnZvaWNlMC5kZXR1bmUsdGhpcy52b2ljZTEuZGV0dW5lKSx0aGlzLnZvaWNlMC5jb25uZWN0KHRoaXMub3V0cHV0KSx0aGlzLnZvaWNlMS5jb25uZWN0KHRoaXMub3V0cHV0KSxPaSh0aGlzLFtcInZvaWNlMFwiLFwidm9pY2UxXCIsXCJmcmVxdWVuY3lcIixcInZpYnJhdG9BbW91bnRcIixcInZpYnJhdG9SYXRlXCJdKX1nZXRMZXZlbEF0VGltZSh0KXtyZXR1cm4gdD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLnZvaWNlMC5lbnZlbG9wZS5nZXRWYWx1ZUF0VGltZSh0KSt0aGlzLnZvaWNlMS5lbnZlbG9wZS5nZXRWYWx1ZUF0VGltZSh0KX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gbGkoVHIuZ2V0RGVmYXVsdHMoKSx7dmlicmF0b0Ftb3VudDouNSx2aWJyYXRvUmF0ZTo1LGhhcm1vbmljaXR5OjEuNSx2b2ljZTA6bGkoZGkoRXIuZ2V0RGVmYXVsdHMoKSxPYmplY3Qua2V5cyhUci5nZXREZWZhdWx0cygpKSkse2ZpbHRlckVudmVsb3BlOnthdHRhY2s6LjAxLGRlY2F5OjAsc3VzdGFpbjoxLHJlbGVhc2U6LjV9LGVudmVsb3BlOnthdHRhY2s6LjAxLGRlY2F5OjAsc3VzdGFpbjoxLHJlbGVhc2U6LjV9fSksdm9pY2UxOmxpKGRpKEVyLmdldERlZmF1bHRzKCksT2JqZWN0LmtleXMoVHIuZ2V0RGVmYXVsdHMoKSkpLHtmaWx0ZXJFbnZlbG9wZTp7YXR0YWNrOi4wMSxkZWNheTowLHN1c3RhaW46MSxyZWxlYXNlOi41fSxlbnZlbG9wZTp7YXR0YWNrOi4wMSxkZWNheTowLHN1c3RhaW46MSxyZWxlYXNlOi41fX0pfSl9X3RyaWdnZXJFbnZlbG9wZUF0dGFjayh0LGUpe3RoaXMudm9pY2UwLl90cmlnZ2VyRW52ZWxvcGVBdHRhY2sodCxlKSx0aGlzLnZvaWNlMS5fdHJpZ2dlckVudmVsb3BlQXR0YWNrKHQsZSl9X3RyaWdnZXJFbnZlbG9wZVJlbGVhc2UodCl7cmV0dXJuIHRoaXMudm9pY2UwLl90cmlnZ2VyRW52ZWxvcGVSZWxlYXNlKHQpLHRoaXMudm9pY2UxLl90cmlnZ2VyRW52ZWxvcGVSZWxlYXNlKHQpLHRoaXN9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy52b2ljZTAuZGlzcG9zZSgpLHRoaXMudm9pY2UxLmRpc3Bvc2UoKSx0aGlzLmZyZXF1ZW5jeS5kaXNwb3NlKCksdGhpcy5kZXR1bmUuZGlzcG9zZSgpLHRoaXMuX3ZpYnJhdG8uZGlzcG9zZSgpLHRoaXMudmlicmF0b1JhdGUuZGlzcG9zZSgpLHRoaXMuX3ZpYnJhdG9HYWluLmRpc3Bvc2UoKSx0aGlzLmhhcm1vbmljaXR5LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBxciBleHRlbmRzIEFye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkocXIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJGTVN5bnRoXCI7Y29uc3QgdD11aShxci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyk7dGhpcy5tb2R1bGF0aW9uSW5kZXg9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0Lm1vZHVsYXRpb25JbmRleH0pLHRoaXMuZnJlcXVlbmN5LmNvbm5lY3QodGhpcy5fY2Fycmllci5mcmVxdWVuY3kpLHRoaXMuZnJlcXVlbmN5LmNoYWluKHRoaXMuaGFybW9uaWNpdHksdGhpcy5fbW9kdWxhdG9yLmZyZXF1ZW5jeSksdGhpcy5mcmVxdWVuY3kuY2hhaW4odGhpcy5tb2R1bGF0aW9uSW5kZXgsdGhpcy5fbW9kdWxhdGlvbk5vZGUpLHRoaXMuZGV0dW5lLmZhbih0aGlzLl9jYXJyaWVyLmRldHVuZSx0aGlzLl9tb2R1bGF0b3IuZGV0dW5lKSx0aGlzLl9tb2R1bGF0b3IuY29ubmVjdCh0aGlzLl9tb2R1bGF0aW9uTm9kZS5nYWluKSx0aGlzLl9tb2R1bGF0aW9uTm9kZS5jb25uZWN0KHRoaXMuX2NhcnJpZXIuZnJlcXVlbmN5KSx0aGlzLl9jYXJyaWVyLmNvbm5lY3QodGhpcy5vdXRwdXQpfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKEFyLmdldERlZmF1bHRzKCkse21vZHVsYXRpb25JbmRleDoxMH0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMubW9kdWxhdGlvbkluZGV4LmRpc3Bvc2UoKSx0aGlzfX1jb25zdCBGcj1bMSwxLjQ4MywxLjkzMiwyLjU0NiwyLjYzLDMuODk3XTtjbGFzcyBJciBleHRlbmRzIFRye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoSXIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJNZXRhbFN5bnRoXCIsdGhpcy5fb3NjaWxsYXRvcnM9W10sdGhpcy5fZnJlcU11bHRpcGxpZXJzPVtdO2NvbnN0IHQ9dWkoSXIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpO3RoaXMuZGV0dW5lPW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJjZW50c1wiLHZhbHVlOnQuZGV0dW5lfSksdGhpcy5mcmVxdWVuY3k9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcImZyZXF1ZW5jeVwifSksdGhpcy5fYW1wbGl0dWRlPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHQsZ2FpbjowfSkuY29ubmVjdCh0aGlzLm91dHB1dCksdGhpcy5faGlnaHBhc3M9bmV3IE9yKHtROjAsY29udGV4dDp0aGlzLmNvbnRleHQsdHlwZTpcImhpZ2hwYXNzXCJ9KS5jb25uZWN0KHRoaXMuX2FtcGxpdHVkZSk7Zm9yKGxldCBlPTA7ZTxGci5sZW5ndGg7ZSsrKXtjb25zdCBzPW5ldyBIbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsaGFybW9uaWNpdHk6dC5oYXJtb25pY2l0eSxtb2R1bGF0aW9uSW5kZXg6dC5tb2R1bGF0aW9uSW5kZXgsbW9kdWxhdGlvblR5cGU6XCJzcXVhcmVcIixvbnN0b3A6MD09PWU/KCk9PnRoaXMub25zaWxlbmNlKHRoaXMpOkVpLHR5cGU6XCJzcXVhcmVcIn0pO3MuY29ubmVjdCh0aGlzLl9oaWdocGFzcyksdGhpcy5fb3NjaWxsYXRvcnNbZV09cztjb25zdCBuPW5ldyBZbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdmFsdWU6RnJbZV19KTt0aGlzLl9mcmVxTXVsdGlwbGllcnNbZV09bix0aGlzLmZyZXF1ZW5jeS5jaGFpbihuLHMuZnJlcXVlbmN5KSx0aGlzLmRldHVuZS5jb25uZWN0KHMuZGV0dW5lKX10aGlzLl9maWx0ZXJGcmVxU2NhbGVyPW5ldyBpcih7Y29udGV4dDp0aGlzLmNvbnRleHQsbWF4OjdlMyxtaW46dGhpcy50b0ZyZXF1ZW5jeSh0LnJlc29uYW5jZSl9KSx0aGlzLmVudmVsb3BlPW5ldyB4cih7YXR0YWNrOnQuZW52ZWxvcGUuYXR0YWNrLGF0dGFja0N1cnZlOlwibGluZWFyXCIsY29udGV4dDp0aGlzLmNvbnRleHQsZGVjYXk6dC5lbnZlbG9wZS5kZWNheSxyZWxlYXNlOnQuZW52ZWxvcGUucmVsZWFzZSxzdXN0YWluOjB9KSx0aGlzLmVudmVsb3BlLmNoYWluKHRoaXMuX2ZpbHRlckZyZXFTY2FsZXIsdGhpcy5faGlnaHBhc3MuZnJlcXVlbmN5KSx0aGlzLmVudmVsb3BlLmNvbm5lY3QodGhpcy5fYW1wbGl0dWRlLmdhaW4pLHRoaXMuX29jdGF2ZXM9dC5vY3RhdmVzLHRoaXMub2N0YXZlcz10Lm9jdGF2ZXN9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIGxpKFRyLmdldERlZmF1bHRzKCkse2VudmVsb3BlOk9iamVjdC5hc3NpZ24oZGkoeHIuZ2V0RGVmYXVsdHMoKSxPYmplY3Qua2V5cyhpby5nZXREZWZhdWx0cygpKSkse2F0dGFjazouMDAxLGRlY2F5OjEuNCxyZWxlYXNlOi4yfSksaGFybW9uaWNpdHk6NS4xLG1vZHVsYXRpb25JbmRleDozMixvY3RhdmVzOjEuNSxyZXNvbmFuY2U6NGUzfSl9X3RyaWdnZXJFbnZlbG9wZUF0dGFjayh0LGU9MSl7cmV0dXJuIHRoaXMuZW52ZWxvcGUudHJpZ2dlckF0dGFjayh0LGUpLHRoaXMuX29zY2lsbGF0b3JzLmZvckVhY2goKGU9PmUuc3RhcnQodCkpKSwwPT09dGhpcy5lbnZlbG9wZS5zdXN0YWluJiZ0aGlzLl9vc2NpbGxhdG9ycy5mb3JFYWNoKChlPT57ZS5zdG9wKHQrdGhpcy50b1NlY29uZHModGhpcy5lbnZlbG9wZS5hdHRhY2spK3RoaXMudG9TZWNvbmRzKHRoaXMuZW52ZWxvcGUuZGVjYXkpKX0pKSx0aGlzfV90cmlnZ2VyRW52ZWxvcGVSZWxlYXNlKHQpe3JldHVybiB0aGlzLmVudmVsb3BlLnRyaWdnZXJSZWxlYXNlKHQpLHRoaXMuX29zY2lsbGF0b3JzLmZvckVhY2goKGU9PmUuc3RvcCh0K3RoaXMudG9TZWNvbmRzKHRoaXMuZW52ZWxvcGUucmVsZWFzZSkpKSksdGhpc31nZXRMZXZlbEF0VGltZSh0KXtyZXR1cm4gdD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLmVudmVsb3BlLmdldFZhbHVlQXRUaW1lKHQpfWdldCBtb2R1bGF0aW9uSW5kZXgoKXtyZXR1cm4gdGhpcy5fb3NjaWxsYXRvcnNbMF0ubW9kdWxhdGlvbkluZGV4LnZhbHVlfXNldCBtb2R1bGF0aW9uSW5kZXgodCl7dGhpcy5fb3NjaWxsYXRvcnMuZm9yRWFjaCgoZT0+ZS5tb2R1bGF0aW9uSW5kZXgudmFsdWU9dCkpfWdldCBoYXJtb25pY2l0eSgpe3JldHVybiB0aGlzLl9vc2NpbGxhdG9yc1swXS5oYXJtb25pY2l0eS52YWx1ZX1zZXQgaGFybW9uaWNpdHkodCl7dGhpcy5fb3NjaWxsYXRvcnMuZm9yRWFjaCgoZT0+ZS5oYXJtb25pY2l0eS52YWx1ZT10KSl9Z2V0IHJlc29uYW5jZSgpe3JldHVybiB0aGlzLl9maWx0ZXJGcmVxU2NhbGVyLm1pbn1zZXQgcmVzb25hbmNlKHQpe3RoaXMuX2ZpbHRlckZyZXFTY2FsZXIubWluPXRoaXMudG9GcmVxdWVuY3kodCksdGhpcy5vY3RhdmVzPXRoaXMuX29jdGF2ZXN9Z2V0IG9jdGF2ZXMoKXtyZXR1cm4gdGhpcy5fb2N0YXZlc31zZXQgb2N0YXZlcyh0KXt0aGlzLl9vY3RhdmVzPXQsdGhpcy5fZmlsdGVyRnJlcVNjYWxlci5tYXg9dGhpcy5fZmlsdGVyRnJlcVNjYWxlci5taW4qTWF0aC5wb3coMix0KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9vc2NpbGxhdG9ycy5mb3JFYWNoKCh0PT50LmRpc3Bvc2UoKSkpLHRoaXMuX2ZyZXFNdWx0aXBsaWVycy5mb3JFYWNoKCh0PT50LmRpc3Bvc2UoKSkpLHRoaXMuZnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLmRldHVuZS5kaXNwb3NlKCksdGhpcy5fZmlsdGVyRnJlcVNjYWxlci5kaXNwb3NlKCksdGhpcy5fYW1wbGl0dWRlLmRpc3Bvc2UoKSx0aGlzLmVudmVsb3BlLmRpc3Bvc2UoKSx0aGlzLl9oaWdocGFzcy5kaXNwb3NlKCksdGhpc319Y2xhc3MgVnIgZXh0ZW5kcyBrcntjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFZyLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSksdGhpcy5uYW1lPVwiTWVtYnJhbmVTeW50aFwiLHRoaXMucG9ydGFtZW50bz0wO2NvbnN0IHQ9dWkoVnIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpO3RoaXMucGl0Y2hEZWNheT10LnBpdGNoRGVjYXksdGhpcy5vY3RhdmVzPXQub2N0YXZlcyxPaSh0aGlzLFtcIm9zY2lsbGF0b3JcIixcImVudmVsb3BlXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gbGkoVHIuZ2V0RGVmYXVsdHMoKSxrci5nZXREZWZhdWx0cygpLHtlbnZlbG9wZTp7YXR0YWNrOi4wMDEsYXR0YWNrQ3VydmU6XCJleHBvbmVudGlhbFwiLGRlY2F5Oi40LHJlbGVhc2U6MS40LHN1c3RhaW46LjAxfSxvY3RhdmVzOjEwLG9zY2lsbGF0b3I6e3R5cGU6XCJzaW5lXCJ9LHBpdGNoRGVjYXk6LjA1fSl9c2V0Tm90ZSh0LGUpe2NvbnN0IHM9dGhpcy50b1NlY29uZHMoZSksbj10aGlzLnRvRnJlcXVlbmN5KHQgaW5zdGFuY2VvZiBZaT90LnRvRnJlcXVlbmN5KCk6dCksaT1uKnRoaXMub2N0YXZlcztyZXR1cm4gdGhpcy5vc2NpbGxhdG9yLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZShpLHMpLHRoaXMub3NjaWxsYXRvci5mcmVxdWVuY3kuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZShuLHMrdGhpcy50b1NlY29uZHModGhpcy5waXRjaERlY2F5KSksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzfX1zaShbYXIoMCldLFZyLnByb3RvdHlwZSxcIm9jdGF2ZXNcIix2b2lkIDApLHNpKFtjcigwKV0sVnIucHJvdG90eXBlLFwicGl0Y2hEZWNheVwiLHZvaWQgMCk7Y2xhc3MgTnIgZXh0ZW5kcyBicntjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKE5yLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSksdGhpcy5uYW1lPVwiTm9pc2VTeW50aFwiO2NvbnN0IHQ9dWkoTnIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpO3RoaXMubm9pc2U9bmV3IExvKE9iamVjdC5hc3NpZ24oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSx0Lm5vaXNlKSksdGhpcy5lbnZlbG9wZT1uZXcgU3IoT2JqZWN0LmFzc2lnbih7Y29udGV4dDp0aGlzLmNvbnRleHR9LHQuZW52ZWxvcGUpKSx0aGlzLm5vaXNlLmNoYWluKHRoaXMuZW52ZWxvcGUsdGhpcy5vdXRwdXQpfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGJyLmdldERlZmF1bHRzKCkse2VudmVsb3BlOk9iamVjdC5hc3NpZ24oZGkoeHIuZ2V0RGVmYXVsdHMoKSxPYmplY3Qua2V5cyhpby5nZXREZWZhdWx0cygpKSkse2RlY2F5Oi4xLHN1c3RhaW46MH0pLG5vaXNlOk9iamVjdC5hc3NpZ24oZGkoTG8uZ2V0RGVmYXVsdHMoKSxPYmplY3Qua2V5cyhQby5nZXREZWZhdWx0cygpKSkse3R5cGU6XCJ3aGl0ZVwifSl9KX10cmlnZ2VyQXR0YWNrKHQsZT0xKXtyZXR1cm4gdD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLmVudmVsb3BlLnRyaWdnZXJBdHRhY2sodCxlKSx0aGlzLm5vaXNlLnN0YXJ0KHQpLDA9PT10aGlzLmVudmVsb3BlLnN1c3RhaW4mJnRoaXMubm9pc2Uuc3RvcCh0K3RoaXMudG9TZWNvbmRzKHRoaXMuZW52ZWxvcGUuYXR0YWNrKSt0aGlzLnRvU2Vjb25kcyh0aGlzLmVudmVsb3BlLmRlY2F5KSksdGhpc310cmlnZ2VyUmVsZWFzZSh0KXtyZXR1cm4gdD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLmVudmVsb3BlLnRyaWdnZXJSZWxlYXNlKHQpLHRoaXMubm9pc2Uuc3RvcCh0K3RoaXMudG9TZWNvbmRzKHRoaXMuZW52ZWxvcGUucmVsZWFzZSkpLHRoaXN9c3luYygpe3JldHVybiB0aGlzLl9zeW5jU3RhdGUoKSYmKHRoaXMuX3N5bmNNZXRob2QoXCJ0cmlnZ2VyQXR0YWNrXCIsMCksdGhpcy5fc3luY01ldGhvZChcInRyaWdnZXJSZWxlYXNlXCIsMCkpLHRoaXN9dHJpZ2dlckF0dGFja1JlbGVhc2UodCxlLHM9MSl7cmV0dXJuIGU9dGhpcy50b1NlY29uZHMoZSksdD10aGlzLnRvU2Vjb25kcyh0KSx0aGlzLnRyaWdnZXJBdHRhY2soZSxzKSx0aGlzLnRyaWdnZXJSZWxlYXNlKGUrdCksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLm5vaXNlLmRpc3Bvc2UoKSx0aGlzLmVudmVsb3BlLmRpc3Bvc2UoKSx0aGlzfX1jb25zdCBQcj1uZXcgU2V0O2Z1bmN0aW9uIGpyKHQpe1ByLmFkZCh0KX1mdW5jdGlvbiBMcih0LGUpe2NvbnN0IHM9YHJlZ2lzdGVyUHJvY2Vzc29yKFwiJHt0fVwiLCAke2V9KWA7UHIuYWRkKHMpfWNsYXNzIHpyIGV4dGVuZHMgaW97Y29uc3RydWN0b3IodCl7c3VwZXIodCksdGhpcy5uYW1lPVwiVG9uZUF1ZGlvV29ya2xldFwiLHRoaXMud29ya2xldE9wdGlvbnM9e30sdGhpcy5vbnByb2Nlc3NvcmVycm9yPUVpO2NvbnN0IGU9VVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihbQXJyYXkuZnJvbShQcikuam9pbihcIlxcblwiKV0se3R5cGU6XCJ0ZXh0L2phdmFzY3JpcHRcIn0pKSxzPXRoaXMuX2F1ZGlvV29ya2xldE5hbWUoKTt0aGlzLl9kdW1teUdhaW49dGhpcy5jb250ZXh0LmNyZWF0ZUdhaW4oKSx0aGlzLl9kdW1teVBhcmFtPXRoaXMuX2R1bW15R2Fpbi5nYWluLHRoaXMuY29udGV4dC5hZGRBdWRpb1dvcmtsZXRNb2R1bGUoZSkudGhlbigoKCk9Pnt0aGlzLmRpc3Bvc2VkfHwodGhpcy5fd29ya2xldD10aGlzLmNvbnRleHQuY3JlYXRlQXVkaW9Xb3JrbGV0Tm9kZShzLHRoaXMud29ya2xldE9wdGlvbnMpLHRoaXMuX3dvcmtsZXQub25wcm9jZXNzb3JlcnJvcj10aGlzLm9ucHJvY2Vzc29yZXJyb3IuYmluZCh0aGlzKSx0aGlzLm9uUmVhZHkodGhpcy5fd29ya2xldCkpfSkpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2R1bW15R2Fpbi5kaXNjb25uZWN0KCksdGhpcy5fd29ya2xldCYmKHRoaXMuX3dvcmtsZXQucG9ydC5wb3N0TWVzc2FnZShcImRpc3Bvc2VcIiksdGhpcy5fd29ya2xldC5kaXNjb25uZWN0KCkpLHRoaXN9fWpyKCdcXG5cXHQvKipcXG5cXHQgKiBUaGUgYmFzZSBBdWRpb1dvcmtsZXRQcm9jZXNzb3IgZm9yIHVzZSBpbiBUb25lLmpzLiBXb3JrcyB3aXRoIHRoZSB7QGxpbmsgVG9uZUF1ZGlvV29ya2xldH0uIFxcblxcdCAqL1xcblxcdGNsYXNzIFRvbmVBdWRpb1dvcmtsZXRQcm9jZXNzb3IgZXh0ZW5kcyBBdWRpb1dvcmtsZXRQcm9jZXNzb3Ige1xcblxcblxcdFxcdGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcXG5cXHRcXHRcXHRcXG5cXHRcXHRcXHRzdXBlcihvcHRpb25zKTtcXG5cXHRcXHRcXHQvKipcXG5cXHRcXHRcXHQgKiBJZiB0aGUgcHJvY2Vzc29yIHdhcyBkaXNwb3NlZCBvciBub3QuIEtlZXAgYWxpdmUgdW50aWwgaXRcXCdzIGRpc3Bvc2VkLlxcblxcdFxcdFxcdCAqL1xcblxcdFxcdFxcdHRoaXMuZGlzcG9zZWQgPSBmYWxzZTtcXG5cXHRcXHQgICBcXHQvKiogXFxuXFx0XFx0XFx0ICogVGhlIG51bWJlciBvZiBzYW1wbGVzIGluIHRoZSBwcm9jZXNzaW5nIGJsb2NrXFxuXFx0XFx0XFx0ICovXFxuXFx0XFx0XFx0dGhpcy5ibG9ja1NpemUgPSAxMjg7XFxuXFx0XFx0XFx0LyoqXFxuXFx0XFx0XFx0ICogdGhlIHNhbXBsZSByYXRlXFxuXFx0XFx0XFx0ICovXFxuXFx0XFx0XFx0dGhpcy5zYW1wbGVSYXRlID0gc2FtcGxlUmF0ZTtcXG5cXG5cXHRcXHRcXHR0aGlzLnBvcnQub25tZXNzYWdlID0gKGV2ZW50KSA9PiB7XFxuXFx0XFx0XFx0XFx0Ly8gd2hlbiBpdCByZWNlaXZlcyBhIGRpc3Bvc2UgXFxuXFx0XFx0XFx0XFx0aWYgKGV2ZW50LmRhdGEgPT09IFwiZGlzcG9zZVwiKSB7XFxuXFx0XFx0XFx0XFx0XFx0dGhpcy5kaXNwb3NlZCA9IHRydWU7XFxuXFx0XFx0XFx0XFx0fVxcblxcdFxcdFxcdH07XFxuXFx0XFx0fVxcblxcdH1cXG4nKSxqcihcIlxcblxcdC8qKlxcblxcdCAqIEFic3RyYWN0IGNsYXNzIGZvciBhIHNpbmdsZSBpbnB1dC9vdXRwdXQgcHJvY2Vzc29yLiBcXG5cXHQgKiBoYXMgYSAnZ2VuZXJhdGUnIGZ1bmN0aW9uIHdoaWNoIHByb2Nlc3NlcyBvbmUgc2FtcGxlIGF0IGEgdGltZVxcblxcdCAqL1xcblxcdGNsYXNzIFNpbmdsZUlPUHJvY2Vzc29yIGV4dGVuZHMgVG9uZUF1ZGlvV29ya2xldFByb2Nlc3NvciB7XFxuXFxuXFx0XFx0Y29uc3RydWN0b3Iob3B0aW9ucykge1xcblxcdFxcdFxcdHN1cGVyKE9iamVjdC5hc3NpZ24ob3B0aW9ucywge1xcblxcdFxcdFxcdFxcdG51bWJlck9mSW5wdXRzOiAxLFxcblxcdFxcdFxcdFxcdG51bWJlck9mT3V0cHV0czogMVxcblxcdFxcdFxcdH0pKTtcXG5cXHRcXHRcXHQvKipcXG5cXHRcXHRcXHQgKiBIb2xkcyB0aGUgbmFtZSBvZiB0aGUgcGFyYW1ldGVyIGFuZCBhIHNpbmdsZSB2YWx1ZSBvZiB0aGF0XFxuXFx0XFx0XFx0ICogcGFyYW1ldGVyIGF0IHRoZSBjdXJyZW50IHNhbXBsZVxcblxcdFxcdFxcdCAqIEB0eXBlIHsgW25hbWU6IHN0cmluZ106IG51bWJlciB9XFxuXFx0XFx0XFx0ICovXFxuXFx0XFx0XFx0dGhpcy5wYXJhbXMgPSB7fVxcblxcdFxcdH1cXG5cXG5cXHRcXHQvKipcXG5cXHRcXHQgKiBHZW5lcmF0ZSBhbiBvdXRwdXQgc2FtcGxlIGZyb20gdGhlIGlucHV0IHNhbXBsZSBhbmQgcGFyYW1ldGVyc1xcblxcdFxcdCAqIEBhYnN0cmFjdFxcblxcdFxcdCAqIEBwYXJhbSBpbnB1dCBudW1iZXJcXG5cXHRcXHQgKiBAcGFyYW0gY2hhbm5lbCBudW1iZXJcXG5cXHRcXHQgKiBAcGFyYW0gcGFyYW1ldGVycyB7IFtuYW1lOiBzdHJpbmddOiBudW1iZXIgfVxcblxcdFxcdCAqIEByZXR1cm5zIG51bWJlclxcblxcdFxcdCAqL1xcblxcdFxcdGdlbmVyYXRlKCl7fVxcblxcblxcdFxcdC8qKlxcblxcdFxcdCAqIFVwZGF0ZSB0aGUgcHJpdmF0ZSBwYXJhbXMgb2JqZWN0IHdpdGggdGhlIFxcblxcdFxcdCAqIHZhbHVlcyBvZiB0aGUgcGFyYW1ldGVycyBhdCB0aGUgZ2l2ZW4gaW5kZXhcXG5cXHRcXHQgKiBAcGFyYW0gcGFyYW1ldGVycyB7IFtuYW1lOiBzdHJpbmddOiBGbG9hdDMyQXJyYXkgfSxcXG5cXHRcXHQgKiBAcGFyYW0gaW5kZXggbnVtYmVyXFxuXFx0XFx0ICovXFxuXFx0XFx0dXBkYXRlUGFyYW1zKHBhcmFtZXRlcnMsIGluZGV4KSB7XFxuXFx0XFx0XFx0Zm9yIChjb25zdCBwYXJhbU5hbWUgaW4gcGFyYW1ldGVycykge1xcblxcdFxcdFxcdFxcdGNvbnN0IHBhcmFtID0gcGFyYW1ldGVyc1twYXJhbU5hbWVdO1xcblxcdFxcdFxcdFxcdGlmIChwYXJhbS5sZW5ndGggPiAxKSB7XFxuXFx0XFx0XFx0XFx0XFx0dGhpcy5wYXJhbXNbcGFyYW1OYW1lXSA9IHBhcmFtZXRlcnNbcGFyYW1OYW1lXVtpbmRleF07XFxuXFx0XFx0XFx0XFx0fSBlbHNlIHtcXG5cXHRcXHRcXHRcXHRcXHR0aGlzLnBhcmFtc1twYXJhbU5hbWVdID0gcGFyYW1ldGVyc1twYXJhbU5hbWVdWzBdO1xcblxcdFxcdFxcdFxcdH1cXG5cXHRcXHRcXHR9XFxuXFx0XFx0fVxcblxcblxcdFxcdC8qKlxcblxcdFxcdCAqIFByb2Nlc3MgYSBzaW5nbGUgZnJhbWUgb2YgdGhlIGF1ZGlvXFxuXFx0XFx0ICogQHBhcmFtIGlucHV0cyBGbG9hdDMyQXJyYXlbXVtdXFxuXFx0XFx0ICogQHBhcmFtIG91dHB1dHMgRmxvYXQzMkFycmF5W11bXVxcblxcdFxcdCAqL1xcblxcdFxcdHByb2Nlc3MoaW5wdXRzLCBvdXRwdXRzLCBwYXJhbWV0ZXJzKSB7XFxuXFx0XFx0XFx0Y29uc3QgaW5wdXQgPSBpbnB1dHNbMF07XFxuXFx0XFx0XFx0Y29uc3Qgb3V0cHV0ID0gb3V0cHV0c1swXTtcXG5cXHRcXHRcXHQvLyBnZXQgdGhlIHBhcmFtZXRlciB2YWx1ZXNcXG5cXHRcXHRcXHRjb25zdCBjaGFubmVsQ291bnQgPSBNYXRoLm1heChpbnB1dCAmJiBpbnB1dC5sZW5ndGggfHwgMCwgb3V0cHV0Lmxlbmd0aCk7XFxuXFx0XFx0XFx0Zm9yIChsZXQgc2FtcGxlID0gMDsgc2FtcGxlIDwgdGhpcy5ibG9ja1NpemU7IHNhbXBsZSsrKSB7XFxuXFx0XFx0XFx0XFx0dGhpcy51cGRhdGVQYXJhbXMocGFyYW1ldGVycywgc2FtcGxlKTtcXG5cXHRcXHRcXHRcXHRmb3IgKGxldCBjaGFubmVsID0gMDsgY2hhbm5lbCA8IGNoYW5uZWxDb3VudDsgY2hhbm5lbCsrKSB7XFxuXFx0XFx0XFx0XFx0XFx0Y29uc3QgaW5wdXRTYW1wbGUgPSBpbnB1dCAmJiBpbnB1dC5sZW5ndGggPyBpbnB1dFtjaGFubmVsXVtzYW1wbGVdIDogMDtcXG5cXHRcXHRcXHRcXHRcXHRvdXRwdXRbY2hhbm5lbF1bc2FtcGxlXSA9IHRoaXMuZ2VuZXJhdGUoaW5wdXRTYW1wbGUsIGNoYW5uZWwsIHRoaXMucGFyYW1zKTtcXG5cXHRcXHRcXHRcXHR9XFxuXFx0XFx0XFx0fVxcblxcdFxcdFxcdHJldHVybiAhdGhpcy5kaXNwb3NlZDtcXG5cXHRcXHR9XFxuXFx0fTtcXG5cIiksanIoXCJcXG5cXHQvKipcXG5cXHQgKiBBIG11bHRpY2hhbm5lbCBidWZmZXIgZm9yIHVzZSB3aXRoaW4gYW4gQXVkaW9Xb3JrbGV0UHJvY2Vzc29yIGFzIGEgZGVsYXkgbGluZVxcblxcdCAqL1xcblxcdGNsYXNzIERlbGF5TGluZSB7XFxuXFx0XFx0XFxuXFx0XFx0Y29uc3RydWN0b3Ioc2l6ZSwgY2hhbm5lbHMpIHtcXG5cXHRcXHRcXHR0aGlzLmJ1ZmZlciA9IFtdO1xcblxcdFxcdFxcdHRoaXMud3JpdGVIZWFkID0gW11cXG5cXHRcXHRcXHR0aGlzLnNpemUgPSBzaXplO1xcblxcblxcdFxcdFxcdC8vIGNyZWF0ZSB0aGUgZW1wdHkgY2hhbm5lbHNcXG5cXHRcXHRcXHRmb3IgKGxldCBpID0gMDsgaSA8IGNoYW5uZWxzOyBpKyspIHtcXG5cXHRcXHRcXHRcXHR0aGlzLmJ1ZmZlcltpXSA9IG5ldyBGbG9hdDMyQXJyYXkodGhpcy5zaXplKTtcXG5cXHRcXHRcXHRcXHR0aGlzLndyaXRlSGVhZFtpXSA9IDA7XFxuXFx0XFx0XFx0fVxcblxcdFxcdH1cXG5cXG5cXHRcXHQvKipcXG5cXHRcXHQgKiBQdXNoIGEgdmFsdWUgb250byB0aGUgZW5kXFxuXFx0XFx0ICogQHBhcmFtIGNoYW5uZWwgbnVtYmVyXFxuXFx0XFx0ICogQHBhcmFtIHZhbHVlIG51bWJlclxcblxcdFxcdCAqL1xcblxcdFxcdHB1c2goY2hhbm5lbCwgdmFsdWUpIHtcXG5cXHRcXHRcXHR0aGlzLndyaXRlSGVhZFtjaGFubmVsXSArPSAxO1xcblxcdFxcdFxcdGlmICh0aGlzLndyaXRlSGVhZFtjaGFubmVsXSA+IHRoaXMuc2l6ZSkge1xcblxcdFxcdFxcdFxcdHRoaXMud3JpdGVIZWFkW2NoYW5uZWxdID0gMDtcXG5cXHRcXHRcXHR9XFxuXFx0XFx0XFx0dGhpcy5idWZmZXJbY2hhbm5lbF1bdGhpcy53cml0ZUhlYWRbY2hhbm5lbF1dID0gdmFsdWU7XFxuXFx0XFx0fVxcblxcblxcdFxcdC8qKlxcblxcdFxcdCAqIEdldCB0aGUgcmVjb3JkZWQgdmFsdWUgb2YgdGhlIGNoYW5uZWwgZ2l2ZW4gdGhlIGRlbGF5XFxuXFx0XFx0ICogQHBhcmFtIGNoYW5uZWwgbnVtYmVyXFxuXFx0XFx0ICogQHBhcmFtIGRlbGF5IG51bWJlciBkZWxheSBzYW1wbGVzXFxuXFx0XFx0ICovXFxuXFx0XFx0Z2V0KGNoYW5uZWwsIGRlbGF5KSB7XFxuXFx0XFx0XFx0bGV0IHJlYWRIZWFkID0gdGhpcy53cml0ZUhlYWRbY2hhbm5lbF0gLSBNYXRoLmZsb29yKGRlbGF5KTtcXG5cXHRcXHRcXHRpZiAocmVhZEhlYWQgPCAwKSB7XFxuXFx0XFx0XFx0XFx0cmVhZEhlYWQgKz0gdGhpcy5zaXplO1xcblxcdFxcdFxcdH1cXG5cXHRcXHRcXHRyZXR1cm4gdGhpcy5idWZmZXJbY2hhbm5lbF1bcmVhZEhlYWRdO1xcblxcdFxcdH1cXG5cXHR9XFxuXCIpO2NvbnN0IFdyPVwiZmVlZGJhY2stY29tYi1maWx0ZXJcIjtMcihXciwnXFxuXFx0Y2xhc3MgRmVlZGJhY2tDb21iRmlsdGVyV29ya2xldCBleHRlbmRzIFNpbmdsZUlPUHJvY2Vzc29yIHtcXG5cXG5cXHRcXHRjb25zdHJ1Y3RvcihvcHRpb25zKSB7XFxuXFx0XFx0XFx0c3VwZXIob3B0aW9ucyk7XFxuXFx0XFx0XFx0dGhpcy5kZWxheUxpbmUgPSBuZXcgRGVsYXlMaW5lKHRoaXMuc2FtcGxlUmF0ZSwgb3B0aW9ucy5jaGFubmVsQ291bnQgfHwgMik7XFxuXFx0XFx0fVxcblxcblxcdFxcdHN0YXRpYyBnZXQgcGFyYW1ldGVyRGVzY3JpcHRvcnMoKSB7XFxuXFx0XFx0XFx0cmV0dXJuIFt7XFxuXFx0XFx0XFx0XFx0bmFtZTogXCJkZWxheVRpbWVcIixcXG5cXHRcXHRcXHRcXHRkZWZhdWx0VmFsdWU6IDAuMSxcXG5cXHRcXHRcXHRcXHRtaW5WYWx1ZTogMCxcXG5cXHRcXHRcXHRcXHRtYXhWYWx1ZTogMSxcXG5cXHRcXHRcXHRcXHRhdXRvbWF0aW9uUmF0ZTogXCJrLXJhdGVcIlxcblxcdFxcdFxcdH0sIHtcXG5cXHRcXHRcXHRcXHRuYW1lOiBcImZlZWRiYWNrXCIsXFxuXFx0XFx0XFx0XFx0ZGVmYXVsdFZhbHVlOiAwLjUsXFxuXFx0XFx0XFx0XFx0bWluVmFsdWU6IDAsXFxuXFx0XFx0XFx0XFx0bWF4VmFsdWU6IDAuOTk5OSxcXG5cXHRcXHRcXHRcXHRhdXRvbWF0aW9uUmF0ZTogXCJrLXJhdGVcIlxcblxcdFxcdFxcdH1dO1xcblxcdFxcdH1cXG5cXG5cXHRcXHRnZW5lcmF0ZShpbnB1dCwgY2hhbm5lbCwgcGFyYW1ldGVycykge1xcblxcdFxcdFxcdGNvbnN0IGRlbGF5ZWRTYW1wbGUgPSB0aGlzLmRlbGF5TGluZS5nZXQoY2hhbm5lbCwgcGFyYW1ldGVycy5kZWxheVRpbWUgKiB0aGlzLnNhbXBsZVJhdGUpO1xcblxcdFxcdFxcdHRoaXMuZGVsYXlMaW5lLnB1c2goY2hhbm5lbCwgaW5wdXQgKyBkZWxheWVkU2FtcGxlICogcGFyYW1ldGVycy5mZWVkYmFjayk7XFxuXFx0XFx0XFx0cmV0dXJuIGRlbGF5ZWRTYW1wbGU7XFxuXFx0XFx0fVxcblxcdH1cXG4nKTtjbGFzcyBCciBleHRlbmRzIHpye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoQnIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZGVsYXlUaW1lXCIsXCJyZXNvbmFuY2VcIl0pKSx0aGlzLm5hbWU9XCJGZWVkYmFja0NvbWJGaWx0ZXJcIjtjb25zdCB0PXVpKEJyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImRlbGF5VGltZVwiLFwicmVzb25hbmNlXCJdKTt0aGlzLmlucHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLm91dHB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5kZWxheVRpbWU9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0LmRlbGF5VGltZSx1bml0czpcInRpbWVcIixtaW5WYWx1ZTowLG1heFZhbHVlOjEscGFyYW06dGhpcy5fZHVtbXlQYXJhbSxzd2FwcGFibGU6ITB9KSx0aGlzLnJlc29uYW5jZT1uZXcgbm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOnQucmVzb25hbmNlLHVuaXRzOlwibm9ybWFsUmFuZ2VcIixwYXJhbTp0aGlzLl9kdW1teVBhcmFtLHN3YXBwYWJsZTohMH0pLE9pKHRoaXMsW1wicmVzb25hbmNlXCIsXCJkZWxheVRpbWVcIl0pfV9hdWRpb1dvcmtsZXROYW1lKCl7cmV0dXJuIFdyfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGlvLmdldERlZmF1bHRzKCkse2RlbGF5VGltZTouMSxyZXNvbmFuY2U6LjV9KX1vblJlYWR5KHQpe29vKHRoaXMuaW5wdXQsdCx0aGlzLm91dHB1dCk7Y29uc3QgZT10LnBhcmFtZXRlcnMuZ2V0KFwiZGVsYXlUaW1lXCIpO3RoaXMuZGVsYXlUaW1lLnNldFBhcmFtKGUpO2NvbnN0IHM9dC5wYXJhbWV0ZXJzLmdldChcImZlZWRiYWNrXCIpO3RoaXMucmVzb25hbmNlLnNldFBhcmFtKHMpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuaW5wdXQuZGlzcG9zZSgpLHRoaXMub3V0cHV0LmRpc3Bvc2UoKSx0aGlzLmRlbGF5VGltZS5kaXNwb3NlKCksdGhpcy5yZXNvbmFuY2UuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIFVyIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShVci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcInR5cGVcIl0pKSx0aGlzLm5hbWU9XCJPbmVQb2xlRmlsdGVyXCI7Y29uc3QgdD11aShVci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcInR5cGVcIl0pO3RoaXMuX2ZyZXF1ZW5jeT10LmZyZXF1ZW5jeSx0aGlzLl90eXBlPXQudHlwZSx0aGlzLmlucHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLm91dHB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fY3JlYXRlRmlsdGVyKCl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7ZnJlcXVlbmN5Ojg4MCx0eXBlOlwibG93cGFzc1wifSl9X2NyZWF0ZUZpbHRlcigpe2NvbnN0IHQ9dGhpcy5fZmlsdGVyLGU9dGhpcy50b0ZyZXF1ZW5jeSh0aGlzLl9mcmVxdWVuY3kpLHM9MS8oMipNYXRoLlBJKmUpO2lmKFwibG93cGFzc1wiPT09dGhpcy5fdHlwZSl7Y29uc3QgdD0xLyhzKnRoaXMuY29udGV4dC5zYW1wbGVSYXRlKSxlPXQtMTt0aGlzLl9maWx0ZXI9dGhpcy5jb250ZXh0LmNyZWF0ZUlJUkZpbHRlcihbdCwwXSxbMSxlXSl9ZWxzZXtjb25zdCB0PTEvKHMqdGhpcy5jb250ZXh0LnNhbXBsZVJhdGUpLTE7dGhpcy5fZmlsdGVyPXRoaXMuY29udGV4dC5jcmVhdGVJSVJGaWx0ZXIoWzEsLTFdLFsxLHRdKX10aGlzLmlucHV0LmNoYWluKHRoaXMuX2ZpbHRlcix0aGlzLm91dHB1dCksdCYmdGhpcy5jb250ZXh0LnNldFRpbWVvdXQoKCgpPT57dGhpcy5kaXNwb3NlZHx8KHRoaXMuaW5wdXQuZGlzY29ubmVjdCh0KSx0LmRpc2Nvbm5lY3QoKSl9KSx0aGlzLmJsb2NrVGltZSl9Z2V0IGZyZXF1ZW5jeSgpe3JldHVybiB0aGlzLl9mcmVxdWVuY3l9c2V0IGZyZXF1ZW5jeSh0KXt0aGlzLl9mcmVxdWVuY3k9dCx0aGlzLl9jcmVhdGVGaWx0ZXIoKX1nZXQgdHlwZSgpe3JldHVybiB0aGlzLl90eXBlfXNldCB0eXBlKHQpe3RoaXMuX3R5cGU9dCx0aGlzLl9jcmVhdGVGaWx0ZXIoKX1nZXRGcmVxdWVuY3lSZXNwb25zZSh0PTEyOCl7Y29uc3QgZT1uZXcgRmxvYXQzMkFycmF5KHQpO2ZvcihsZXQgcz0wO3M8dDtzKyspe2NvbnN0IG49MTk5ODAqTWF0aC5wb3cocy90LDIpKzIwO2Vbc109bn1jb25zdCBzPW5ldyBGbG9hdDMyQXJyYXkodCksbj1uZXcgRmxvYXQzMkFycmF5KHQpO3JldHVybiB0aGlzLl9maWx0ZXIuZ2V0RnJlcXVlbmN5UmVzcG9uc2UoZSxzLG4pLHN9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5pbnB1dC5kaXNwb3NlKCksdGhpcy5vdXRwdXQuZGlzcG9zZSgpLHRoaXMuX2ZpbHRlci5kaXNjb25uZWN0KCksdGhpc319Y2xhc3MgR3IgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKEdyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImRlbGF5VGltZVwiLFwicmVzb25hbmNlXCIsXCJkYW1wZW5pbmdcIl0pKSx0aGlzLm5hbWU9XCJMb3dwYXNzQ29tYkZpbHRlclwiO2NvbnN0IHQ9dWkoR3IuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZGVsYXlUaW1lXCIsXCJyZXNvbmFuY2VcIixcImRhbXBlbmluZ1wiXSk7dGhpcy5fY29tYkZpbHRlcj10aGlzLm91dHB1dD1uZXcgQnIoe2NvbnRleHQ6dGhpcy5jb250ZXh0LGRlbGF5VGltZTp0LmRlbGF5VGltZSxyZXNvbmFuY2U6dC5yZXNvbmFuY2V9KSx0aGlzLmRlbGF5VGltZT10aGlzLl9jb21iRmlsdGVyLmRlbGF5VGltZSx0aGlzLnJlc29uYW5jZT10aGlzLl9jb21iRmlsdGVyLnJlc29uYW5jZSx0aGlzLl9sb3dwYXNzPXRoaXMuaW5wdXQ9bmV3IFVyKHtjb250ZXh0OnRoaXMuY29udGV4dCxmcmVxdWVuY3k6dC5kYW1wZW5pbmcsdHlwZTpcImxvd3Bhc3NcIn0pLHRoaXMuX2xvd3Bhc3MuY29ubmVjdCh0aGlzLl9jb21iRmlsdGVyKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtkYW1wZW5pbmc6M2UzLGRlbGF5VGltZTouMSxyZXNvbmFuY2U6LjV9KX1nZXQgZGFtcGVuaW5nKCl7cmV0dXJuIHRoaXMuX2xvd3Bhc3MuZnJlcXVlbmN5fXNldCBkYW1wZW5pbmcodCl7dGhpcy5fbG93cGFzcy5mcmVxdWVuY3k9dH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9jb21iRmlsdGVyLmRpc3Bvc2UoKSx0aGlzLl9sb3dwYXNzLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBRciBleHRlbmRzIGJye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoUXIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJQbHVja1N5bnRoXCI7Y29uc3QgdD11aShRci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyk7dGhpcy5fbm9pc2U9bmV3IExvKHtjb250ZXh0OnRoaXMuY29udGV4dCx0eXBlOlwicGlua1wifSksdGhpcy5hdHRhY2tOb2lzZT10LmF0dGFja05vaXNlLHRoaXMuX2xmY2Y9bmV3IEdyKHtjb250ZXh0OnRoaXMuY29udGV4dCxkYW1wZW5pbmc6dC5kYW1wZW5pbmcscmVzb25hbmNlOnQucmVzb25hbmNlfSksdGhpcy5yZXNvbmFuY2U9dC5yZXNvbmFuY2UsdGhpcy5yZWxlYXNlPXQucmVsZWFzZSx0aGlzLl9ub2lzZS5jb25uZWN0KHRoaXMuX2xmY2YpLHRoaXMuX2xmY2YuY29ubmVjdCh0aGlzLm91dHB1dCl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIGxpKGJyLmdldERlZmF1bHRzKCkse2F0dGFja05vaXNlOjEsZGFtcGVuaW5nOjRlMyxyZXNvbmFuY2U6LjcscmVsZWFzZToxfSl9Z2V0IGRhbXBlbmluZygpe3JldHVybiB0aGlzLl9sZmNmLmRhbXBlbmluZ31zZXQgZGFtcGVuaW5nKHQpe3RoaXMuX2xmY2YuZGFtcGVuaW5nPXR9dHJpZ2dlckF0dGFjayh0LGUpe2NvbnN0IHM9dGhpcy50b0ZyZXF1ZW5jeSh0KTtlPXRoaXMudG9TZWNvbmRzKGUpO2NvbnN0IG49MS9zO3JldHVybiB0aGlzLl9sZmNmLmRlbGF5VGltZS5zZXRWYWx1ZUF0VGltZShuLGUpLHRoaXMuX25vaXNlLnN0YXJ0KGUpLHRoaXMuX25vaXNlLnN0b3AoZStuKnRoaXMuYXR0YWNrTm9pc2UpLHRoaXMuX2xmY2YucmVzb25hbmNlLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhlKSx0aGlzLl9sZmNmLnJlc29uYW5jZS5zZXRWYWx1ZUF0VGltZSh0aGlzLnJlc29uYW5jZSxlKSx0aGlzfXRyaWdnZXJSZWxlYXNlKHQpe3JldHVybiB0aGlzLl9sZmNmLnJlc29uYW5jZS5saW5lYXJSYW1wVG8oMCx0aGlzLnJlbGVhc2UsdCksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9ub2lzZS5kaXNwb3NlKCksdGhpcy5fbGZjZi5kaXNwb3NlKCksdGhpc319Y2xhc3MgWnIgZXh0ZW5kcyBicntjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFpyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZvaWNlXCIsXCJvcHRpb25zXCJdKSksdGhpcy5uYW1lPVwiUG9seVN5bnRoXCIsdGhpcy5fYXZhaWxhYmxlVm9pY2VzPVtdLHRoaXMuX2FjdGl2ZVZvaWNlcz1bXSx0aGlzLl92b2ljZXM9W10sdGhpcy5fZ2NUaW1lb3V0PS0xLHRoaXMuX2F2ZXJhZ2VBY3RpdmVWb2ljZXM9MCx0aGlzLl9zeW5jZWRSZWxlYXNlPXQ9PnRoaXMucmVsZWFzZUFsbCh0KTtjb25zdCB0PXVpKFpyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZvaWNlXCIsXCJvcHRpb25zXCJdKTtCbighTm4odC52b2ljZSksXCJERVBSRUNBVEVEOiBUaGUgcG9seXBob255IGNvdW50IGlzIG5vIGxvbmdlciB0aGUgZmlyc3QgYXJndW1lbnQuXCIpO2NvbnN0IGU9dC52b2ljZS5nZXREZWZhdWx0cygpO3RoaXMub3B0aW9ucz1PYmplY3QuYXNzaWduKGUsdC5vcHRpb25zKSx0aGlzLnZvaWNlPXQudm9pY2UsdGhpcy5tYXhQb2x5cGhvbnk9dC5tYXhQb2x5cGhvbnksdGhpcy5fZHVtbXlWb2ljZT10aGlzLl9nZXROZXh0QXZhaWxhYmxlVm9pY2UoKTtjb25zdCBzPXRoaXMuX3ZvaWNlcy5pbmRleE9mKHRoaXMuX2R1bW15Vm9pY2UpO3RoaXMuX3ZvaWNlcy5zcGxpY2UocywxKSx0aGlzLl9nY1RpbWVvdXQ9dGhpcy5jb250ZXh0LnNldEludGVydmFsKHRoaXMuX2NvbGxlY3RHYXJiYWdlLmJpbmQodGhpcyksMSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oYnIuZ2V0RGVmYXVsdHMoKSx7bWF4UG9seXBob255OjMyLG9wdGlvbnM6e30sdm9pY2U6a3J9KX1nZXQgYWN0aXZlVm9pY2VzKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZVZvaWNlcy5sZW5ndGh9X21ha2VWb2ljZUF2YWlsYWJsZSh0KXt0aGlzLl9hdmFpbGFibGVWb2ljZXMucHVzaCh0KTtjb25zdCBlPXRoaXMuX2FjdGl2ZVZvaWNlcy5maW5kSW5kZXgoKGU9PmUudm9pY2U9PT10KSk7dGhpcy5fYWN0aXZlVm9pY2VzLnNwbGljZShlLDEpfV9nZXROZXh0QXZhaWxhYmxlVm9pY2UoKXtpZih0aGlzLl9hdmFpbGFibGVWb2ljZXMubGVuZ3RoKXJldHVybiB0aGlzLl9hdmFpbGFibGVWb2ljZXMuc2hpZnQoKTtpZih0aGlzLl92b2ljZXMubGVuZ3RoPHRoaXMubWF4UG9seXBob255KXtjb25zdCB0PW5ldyB0aGlzLnZvaWNlKE9iamVjdC5hc3NpZ24odGhpcy5vcHRpb25zLHtjb250ZXh0OnRoaXMuY29udGV4dCxvbnNpbGVuY2U6dGhpcy5fbWFrZVZvaWNlQXZhaWxhYmxlLmJpbmQodGhpcyl9KSk7cmV0dXJuIEJuKHQgaW5zdGFuY2VvZiBUcixcIlZvaWNlIG11c3QgZXh0ZW5kIE1vbm9waG9uaWMgY2xhc3NcIiksdC5jb25uZWN0KHRoaXMub3V0cHV0KSx0aGlzLl92b2ljZXMucHVzaCh0KSx0fUtuKFwiTWF4IHBvbHlwaG9ueSBleGNlZWRlZC4gTm90ZSBkcm9wcGVkLlwiKX1fY29sbGVjdEdhcmJhZ2UoKXtpZih0aGlzLl9hdmVyYWdlQWN0aXZlVm9pY2VzPU1hdGgubWF4KC45NSp0aGlzLl9hdmVyYWdlQWN0aXZlVm9pY2VzLHRoaXMuYWN0aXZlVm9pY2VzKSx0aGlzLl9hdmFpbGFibGVWb2ljZXMubGVuZ3RoJiZ0aGlzLl92b2ljZXMubGVuZ3RoPk1hdGguY2VpbCh0aGlzLl9hdmVyYWdlQWN0aXZlVm9pY2VzKzEpKXtjb25zdCB0PXRoaXMuX2F2YWlsYWJsZVZvaWNlcy5zaGlmdCgpLGU9dGhpcy5fdm9pY2VzLmluZGV4T2YodCk7dGhpcy5fdm9pY2VzLnNwbGljZShlLDEpLHRoaXMuY29udGV4dC5pc09mZmxpbmV8fHQuZGlzcG9zZSgpfX1fdHJpZ2dlckF0dGFjayh0LGUscyl7dC5mb3JFYWNoKCh0PT57Y29uc3Qgbj1uZXcgYm8odGhpcy5jb250ZXh0LHQpLnRvTWlkaSgpLGk9dGhpcy5fZ2V0TmV4dEF2YWlsYWJsZVZvaWNlKCk7aSYmKGkudHJpZ2dlckF0dGFjayh0LGUscyksdGhpcy5fYWN0aXZlVm9pY2VzLnB1c2goe21pZGk6bix2b2ljZTppLHJlbGVhc2VkOiExfSksdGhpcy5sb2coXCJ0cmlnZ2VyQXR0YWNrXCIsdCxlKSl9KSl9X3RyaWdnZXJSZWxlYXNlKHQsZSl7dC5mb3JFYWNoKCh0PT57Y29uc3Qgcz1uZXcgYm8odGhpcy5jb250ZXh0LHQpLnRvTWlkaSgpLG49dGhpcy5fYWN0aXZlVm9pY2VzLmZpbmQoKCh7bWlkaTp0LHJlbGVhc2VkOmV9KT0+dD09PXMmJiFlKSk7biYmKG4udm9pY2UudHJpZ2dlclJlbGVhc2UoZSksbi5yZWxlYXNlZD0hMCx0aGlzLmxvZyhcInRyaWdnZXJSZWxlYXNlXCIsdCxlKSl9KSl9X3NjaGVkdWxlRXZlbnQodCxlLHMsbil7Qm4oIXRoaXMuZGlzcG9zZWQsXCJTeW50aCB3YXMgYWxyZWFkeSBkaXNwb3NlZFwiKSxzPD10aGlzLm5vdygpP1wiYXR0YWNrXCI9PT10P3RoaXMuX3RyaWdnZXJBdHRhY2soZSxzLG4pOnRoaXMuX3RyaWdnZXJSZWxlYXNlKGUscyk6dGhpcy5jb250ZXh0LnNldFRpbWVvdXQoKCgpPT57dGhpcy5kaXNwb3NlZHx8dGhpcy5fc2NoZWR1bGVFdmVudCh0LGUscyxuKX0pLHMtdGhpcy5ub3coKSl9dHJpZ2dlckF0dGFjayh0LGUscyl7QXJyYXkuaXNBcnJheSh0KXx8KHQ9W3RdKTtjb25zdCBuPXRoaXMudG9TZWNvbmRzKGUpO3JldHVybiB0aGlzLl9zY2hlZHVsZUV2ZW50KFwiYXR0YWNrXCIsdCxuLHMpLHRoaXN9dHJpZ2dlclJlbGVhc2UodCxlKXtBcnJheS5pc0FycmF5KHQpfHwodD1bdF0pO2NvbnN0IHM9dGhpcy50b1NlY29uZHMoZSk7cmV0dXJuIHRoaXMuX3NjaGVkdWxlRXZlbnQoXCJyZWxlYXNlXCIsdCxzKSx0aGlzfXRyaWdnZXJBdHRhY2tSZWxlYXNlKHQsZSxzLG4pe2NvbnN0IGk9dGhpcy50b1NlY29uZHMocyk7aWYodGhpcy50cmlnZ2VyQXR0YWNrKHQsaSxuKSxMbihlKSl7Qm4oTG4odCksXCJJZiB0aGUgZHVyYXRpb24gaXMgYW4gYXJyYXksIHRoZSBub3RlcyBtdXN0IGFsc28gYmUgYW4gYXJyYXlcIik7Zm9yKGxldCBzPTA7czx0Lmxlbmd0aDtzKyspe2NvbnN0IG49ZVtNYXRoLm1pbihzLGUubGVuZ3RoLTEpXSxvPXRoaXMudG9TZWNvbmRzKG4pO0JuKG8+MCxcIlRoZSBkdXJhdGlvbiBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAwXCIpLHRoaXMudHJpZ2dlclJlbGVhc2UodFtzXSxpK28pfX1lbHNle2NvbnN0IHM9dGhpcy50b1NlY29uZHMoZSk7Qm4ocz4wLFwiVGhlIGR1cmF0aW9uIG11c3QgYmUgZ3JlYXRlciB0aGFuIDBcIiksdGhpcy50cmlnZ2VyUmVsZWFzZSh0LGkrcyl9cmV0dXJuIHRoaXN9c3luYygpe3JldHVybiB0aGlzLl9zeW5jU3RhdGUoKSYmKHRoaXMuX3N5bmNNZXRob2QoXCJ0cmlnZ2VyQXR0YWNrXCIsMSksdGhpcy5fc3luY01ldGhvZChcInRyaWdnZXJSZWxlYXNlXCIsMSksdGhpcy5jb250ZXh0LnRyYW5zcG9ydC5vbihcInN0b3BcIix0aGlzLl9zeW5jZWRSZWxlYXNlKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0Lm9uKFwicGF1c2VcIix0aGlzLl9zeW5jZWRSZWxlYXNlKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0Lm9uKFwibG9vcEVuZFwiLHRoaXMuX3N5bmNlZFJlbGVhc2UpKSx0aGlzfXNldCh0KXtjb25zdCBlPWRpKHQsW1wib25zaWxlbmNlXCIsXCJjb250ZXh0XCJdKTtyZXR1cm4gdGhpcy5vcHRpb25zPWxpKHRoaXMub3B0aW9ucyxlKSx0aGlzLl92b2ljZXMuZm9yRWFjaCgodD0+dC5zZXQoZSkpKSx0aGlzLl9kdW1teVZvaWNlLnNldChlKSx0aGlzfWdldCgpe3JldHVybiB0aGlzLl9kdW1teVZvaWNlLmdldCgpfXJlbGVhc2VBbGwodCl7Y29uc3QgZT10aGlzLnRvU2Vjb25kcyh0KTtyZXR1cm4gdGhpcy5fYWN0aXZlVm9pY2VzLmZvckVhY2goKCh7dm9pY2U6dH0pPT57dC50cmlnZ2VyUmVsZWFzZShlKX0pKSx0aGlzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2R1bW15Vm9pY2UuZGlzcG9zZSgpLHRoaXMuX3ZvaWNlcy5mb3JFYWNoKCh0PT50LmRpc3Bvc2UoKSkpLHRoaXMuX2FjdGl2ZVZvaWNlcz1bXSx0aGlzLl9hdmFpbGFibGVWb2ljZXM9W10sdGhpcy5jb250ZXh0LmNsZWFySW50ZXJ2YWwodGhpcy5fZ2NUaW1lb3V0KSx0aGlzfX1jbGFzcyBYciBleHRlbmRzIGJye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoWHIuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsc1wiLFwib25sb2FkXCIsXCJiYXNlVXJsXCJdLFwidXJsc1wiKSksdGhpcy5uYW1lPVwiU2FtcGxlclwiLHRoaXMuX2FjdGl2ZVNvdXJjZXM9bmV3IE1hcDtjb25zdCB0PXVpKFhyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInVybHNcIixcIm9ubG9hZFwiLFwiYmFzZVVybFwiXSxcInVybHNcIiksZT17fTtPYmplY3Qua2V5cyh0LnVybHMpLmZvckVhY2goKHM9Pntjb25zdCBuPXBhcnNlSW50KHMsMTApO2lmKEJuKFduKHMpfHxObihuKSYmaXNGaW5pdGUobiksYHVybCBrZXkgaXMgbmVpdGhlciBhIG5vdGUgb3IgbWlkaSBwaXRjaDogJHtzfWApLFduKHMpKXtjb25zdCBuPW5ldyBZaSh0aGlzLmNvbnRleHQscykudG9NaWRpKCk7ZVtuXT10LnVybHNbc119ZWxzZSBObihuKSYmaXNGaW5pdGUobikmJihlW25dPXQudXJsc1tuXSl9KSksdGhpcy5fYnVmZmVycz1uZXcgd28oe3VybHM6ZSxvbmxvYWQ6dC5vbmxvYWQsYmFzZVVybDp0LmJhc2VVcmwsb25lcnJvcjp0Lm9uZXJyb3J9KSx0aGlzLmF0dGFjaz10LmF0dGFjayx0aGlzLnJlbGVhc2U9dC5yZWxlYXNlLHRoaXMuY3VydmU9dC5jdXJ2ZSx0aGlzLl9idWZmZXJzLmxvYWRlZCYmUHJvbWlzZS5yZXNvbHZlKCkudGhlbih0Lm9ubG9hZCl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oYnIuZ2V0RGVmYXVsdHMoKSx7YXR0YWNrOjAsYmFzZVVybDpcIlwiLGN1cnZlOlwiZXhwb25lbnRpYWxcIixvbmxvYWQ6RWksb25lcnJvcjpFaSxyZWxlYXNlOi4xLHVybHM6e319KX1fZmluZENsb3Nlc3QodCl7bGV0IGU9MDtmb3IoO2U8OTY7KXtpZih0aGlzLl9idWZmZXJzLmhhcyh0K2UpKXJldHVybi1lO2lmKHRoaXMuX2J1ZmZlcnMuaGFzKHQtZSkpcmV0dXJuIGU7ZSsrfXRocm93IG5ldyBFcnJvcihgTm8gYXZhaWxhYmxlIGJ1ZmZlcnMgZm9yIG5vdGU6ICR7dH1gKX10cmlnZ2VyQXR0YWNrKHQsZSxzPTEpe3JldHVybiB0aGlzLmxvZyhcInRyaWdnZXJBdHRhY2tcIix0LGUscyksQXJyYXkuaXNBcnJheSh0KXx8KHQ9W3RdKSx0LmZvckVhY2goKHQ9Pntjb25zdCBuPVVpKG5ldyBZaSh0aGlzLmNvbnRleHQsdCkudG9GcmVxdWVuY3koKSksaT1NYXRoLnJvdW5kKG4pLG89bi1pLHI9dGhpcy5fZmluZENsb3Nlc3QoaSksYT1pLXIsYz10aGlzLl9idWZmZXJzLmdldChhKSxoPXppKHIrbyksbD1uZXcgam8oe3VybDpjLGNvbnRleHQ6dGhpcy5jb250ZXh0LGN1cnZlOnRoaXMuY3VydmUsZmFkZUluOnRoaXMuYXR0YWNrLGZhZGVPdXQ6dGhpcy5yZWxlYXNlLHBsYXliYWNrUmF0ZTpofSkuY29ubmVjdCh0aGlzLm91dHB1dCk7bC5zdGFydChlLDAsYy5kdXJhdGlvbi9oLHMpLExuKHRoaXMuX2FjdGl2ZVNvdXJjZXMuZ2V0KGkpKXx8dGhpcy5fYWN0aXZlU291cmNlcy5zZXQoaSxbXSksdGhpcy5fYWN0aXZlU291cmNlcy5nZXQoaSkucHVzaChsKSxsLm9uZW5kZWQ9KCk9PntpZih0aGlzLl9hY3RpdmVTb3VyY2VzJiZ0aGlzLl9hY3RpdmVTb3VyY2VzLmhhcyhpKSl7Y29uc3QgdD10aGlzLl9hY3RpdmVTb3VyY2VzLmdldChpKSxlPXQuaW5kZXhPZihsKTstMSE9PWUmJnQuc3BsaWNlKGUsMSl9fX0pKSx0aGlzfXRyaWdnZXJSZWxlYXNlKHQsZSl7cmV0dXJuIHRoaXMubG9nKFwidHJpZ2dlclJlbGVhc2VcIix0LGUpLEFycmF5LmlzQXJyYXkodCl8fCh0PVt0XSksdC5mb3JFYWNoKCh0PT57Y29uc3Qgcz1uZXcgWWkodGhpcy5jb250ZXh0LHQpLnRvTWlkaSgpO2lmKHRoaXMuX2FjdGl2ZVNvdXJjZXMuaGFzKHMpJiZ0aGlzLl9hY3RpdmVTb3VyY2VzLmdldChzKS5sZW5ndGgpe2NvbnN0IHQ9dGhpcy5fYWN0aXZlU291cmNlcy5nZXQocyk7ZT10aGlzLnRvU2Vjb25kcyhlKSx0LmZvckVhY2goKHQ9Pnt0LnN0b3AoZSl9KSksdGhpcy5fYWN0aXZlU291cmNlcy5zZXQocyxbXSl9fSkpLHRoaXN9cmVsZWFzZUFsbCh0KXtjb25zdCBlPXRoaXMudG9TZWNvbmRzKHQpO3JldHVybiB0aGlzLl9hY3RpdmVTb3VyY2VzLmZvckVhY2goKHQ9Pntmb3IoO3QubGVuZ3RoOyl0LnNoaWZ0KCkuc3RvcChlKX0pKSx0aGlzfXN5bmMoKXtyZXR1cm4gdGhpcy5fc3luY1N0YXRlKCkmJih0aGlzLl9zeW5jTWV0aG9kKFwidHJpZ2dlckF0dGFja1wiLDEpLHRoaXMuX3N5bmNNZXRob2QoXCJ0cmlnZ2VyUmVsZWFzZVwiLDEpKSx0aGlzfXRyaWdnZXJBdHRhY2tSZWxlYXNlKHQsZSxzLG49MSl7Y29uc3QgaT10aGlzLnRvU2Vjb25kcyhzKTtyZXR1cm4gdGhpcy50cmlnZ2VyQXR0YWNrKHQsaSxuKSxMbihlKT8oQm4oTG4odCksXCJub3RlcyBtdXN0IGJlIGFuIGFycmF5IHdoZW4gZHVyYXRpb24gaXMgYXJyYXlcIiksdC5mb3JFYWNoKCgodCxzKT0+e2NvbnN0IG49ZVtNYXRoLm1pbihzLGUubGVuZ3RoLTEpXTt0aGlzLnRyaWdnZXJSZWxlYXNlKHQsaSt0aGlzLnRvU2Vjb25kcyhuKSl9KSkpOnRoaXMudHJpZ2dlclJlbGVhc2UodCxpK3RoaXMudG9TZWNvbmRzKGUpKSx0aGlzfWFkZCh0LGUscyl7aWYoQm4oV24odCl8fGlzRmluaXRlKHQpLGBub3RlIG11c3QgYmUgYSBwaXRjaCBvciBtaWRpOiAke3R9YCksV24odCkpe2NvbnN0IG49bmV3IFlpKHRoaXMuY29udGV4dCx0KS50b01pZGkoKTt0aGlzLl9idWZmZXJzLmFkZChuLGUscyl9ZWxzZSB0aGlzLl9idWZmZXJzLmFkZCh0LGUscyk7cmV0dXJuIHRoaXN9Z2V0IGxvYWRlZCgpe3JldHVybiB0aGlzLl9idWZmZXJzLmxvYWRlZH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9idWZmZXJzLmRpc3Bvc2UoKSx0aGlzLl9hY3RpdmVTb3VyY2VzLmZvckVhY2goKHQ9Pnt0LmZvckVhY2goKHQ9PnQuZGlzcG9zZSgpKSl9KSksdGhpcy5fYWN0aXZlU291cmNlcy5jbGVhcigpLHRoaXN9fXNpKFtjcigwKV0sWHIucHJvdG90eXBlLFwiYXR0YWNrXCIsdm9pZCAwKSxzaShbY3IoMCldLFhyLnByb3RvdHlwZSxcInJlbGVhc2VcIix2b2lkIDApO2NsYXNzIFlyIGV4dGVuZHMgZW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShZci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjYWxsYmFja1wiLFwidmFsdWVcIl0pKSx0aGlzLm5hbWU9XCJUb25lRXZlbnRcIix0aGlzLl9zdGF0ZT1uZXcgc28oXCJzdG9wcGVkXCIpLHRoaXMuX3N0YXJ0T2Zmc2V0PTA7Y29uc3QgdD11aShZci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjYWxsYmFja1wiLFwidmFsdWVcIl0pO3RoaXMuX2xvb3A9dC5sb29wLHRoaXMuY2FsbGJhY2s9dC5jYWxsYmFjayx0aGlzLnZhbHVlPXQudmFsdWUsdGhpcy5fbG9vcFN0YXJ0PXRoaXMudG9UaWNrcyh0Lmxvb3BTdGFydCksdGhpcy5fbG9vcEVuZD10aGlzLnRvVGlja3ModC5sb29wRW5kKSx0aGlzLl9wbGF5YmFja1JhdGU9dC5wbGF5YmFja1JhdGUsdGhpcy5fcHJvYmFiaWxpdHk9dC5wcm9iYWJpbGl0eSx0aGlzLl9odW1hbml6ZT10Lmh1bWFuaXplLHRoaXMubXV0ZT10Lm11dGUsdGhpcy5fcGxheWJhY2tSYXRlPXQucGxheWJhY2tSYXRlLHRoaXMuX3N0YXRlLmluY3JlYXNpbmc9ITAsdGhpcy5fcmVzY2hlZHVsZUV2ZW50cygpfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGVvLmdldERlZmF1bHRzKCkse2NhbGxiYWNrOkVpLGh1bWFuaXplOiExLGxvb3A6ITEsbG9vcEVuZDpcIjFtXCIsbG9vcFN0YXJ0OjAsbXV0ZTohMSxwbGF5YmFja1JhdGU6MSxwcm9iYWJpbGl0eToxLHZhbHVlOm51bGx9KX1fcmVzY2hlZHVsZUV2ZW50cyh0PS0xKXt0aGlzLl9zdGF0ZS5mb3JFYWNoRnJvbSh0LCh0PT57bGV0IGU7aWYoXCJzdGFydGVkXCI9PT10LnN0YXRlKXstMSE9PXQuaWQmJnRoaXMuY29udGV4dC50cmFuc3BvcnQuY2xlYXIodC5pZCk7Y29uc3Qgcz10LnRpbWUrTWF0aC5yb3VuZCh0aGlzLnN0YXJ0T2Zmc2V0L3RoaXMuX3BsYXliYWNrUmF0ZSk7aWYoITA9PT10aGlzLl9sb29wfHxObih0aGlzLl9sb29wKSYmdGhpcy5fbG9vcD4xKXtlPTEvMCxObih0aGlzLl9sb29wKSYmKGU9dGhpcy5fbG9vcCp0aGlzLl9nZXRMb29wRHVyYXRpb24oKSk7Y29uc3Qgbj10aGlzLl9zdGF0ZS5nZXRBZnRlcihzKTtudWxsIT09biYmKGU9TWF0aC5taW4oZSxuLnRpbWUtcykpLGUhPT0xLzAmJihlPW5ldyBTbyh0aGlzLmNvbnRleHQsZSkpO2NvbnN0IGk9bmV3IFNvKHRoaXMuY29udGV4dCx0aGlzLl9nZXRMb29wRHVyYXRpb24oKSk7dC5pZD10aGlzLmNvbnRleHQudHJhbnNwb3J0LnNjaGVkdWxlUmVwZWF0KHRoaXMuX3RpY2suYmluZCh0aGlzKSxpLG5ldyBTbyh0aGlzLmNvbnRleHQscyksZSl9ZWxzZSB0LmlkPXRoaXMuY29udGV4dC50cmFuc3BvcnQuc2NoZWR1bGUodGhpcy5fdGljay5iaW5kKHRoaXMpLG5ldyBTbyh0aGlzLmNvbnRleHQscykpfX0pKX1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUodGhpcy5jb250ZXh0LnRyYW5zcG9ydC50aWNrcyl9Z2V0IHN0YXJ0T2Zmc2V0KCl7cmV0dXJuIHRoaXMuX3N0YXJ0T2Zmc2V0fXNldCBzdGFydE9mZnNldCh0KXt0aGlzLl9zdGFydE9mZnNldD10fWdldCBwcm9iYWJpbGl0eSgpe3JldHVybiB0aGlzLl9wcm9iYWJpbGl0eX1zZXQgcHJvYmFiaWxpdHkodCl7dGhpcy5fcHJvYmFiaWxpdHk9dH1nZXQgaHVtYW5pemUoKXtyZXR1cm4gdGhpcy5faHVtYW5pemV9c2V0IGh1bWFuaXplKHQpe3RoaXMuX2h1bWFuaXplPXR9c3RhcnQodCl7Y29uc3QgZT10aGlzLnRvVGlja3ModCk7cmV0dXJuXCJzdG9wcGVkXCI9PT10aGlzLl9zdGF0ZS5nZXRWYWx1ZUF0VGltZShlKSYmKHRoaXMuX3N0YXRlLmFkZCh7aWQ6LTEsc3RhdGU6XCJzdGFydGVkXCIsdGltZTplfSksdGhpcy5fcmVzY2hlZHVsZUV2ZW50cyhlKSksdGhpc31zdG9wKHQpe3RoaXMuY2FuY2VsKHQpO2NvbnN0IGU9dGhpcy50b1RpY2tzKHQpO2lmKFwic3RhcnRlZFwiPT09dGhpcy5fc3RhdGUuZ2V0VmFsdWVBdFRpbWUoZSkpe3RoaXMuX3N0YXRlLnNldFN0YXRlQXRUaW1lKFwic3RvcHBlZFwiLGUse2lkOi0xfSk7Y29uc3QgdD10aGlzLl9zdGF0ZS5nZXRCZWZvcmUoZSk7bGV0IHM9ZTtudWxsIT09dCYmKHM9dC50aW1lKSx0aGlzLl9yZXNjaGVkdWxlRXZlbnRzKHMpfXJldHVybiB0aGlzfWNhbmNlbCh0KXt0PXBpKHQsLTEvMCk7Y29uc3QgZT10aGlzLnRvVGlja3ModCk7cmV0dXJuIHRoaXMuX3N0YXRlLmZvckVhY2hGcm9tKGUsKHQ9Pnt0aGlzLmNvbnRleHQudHJhbnNwb3J0LmNsZWFyKHQuaWQpfSkpLHRoaXMuX3N0YXRlLmNhbmNlbChlKSx0aGlzfV90aWNrKHQpe2NvbnN0IGU9dGhpcy5jb250ZXh0LnRyYW5zcG9ydC5nZXRUaWNrc0F0VGltZSh0KTtpZighdGhpcy5tdXRlJiZcInN0YXJ0ZWRcIj09PXRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKGUpKXtpZih0aGlzLnByb2JhYmlsaXR5PDEmJk1hdGgucmFuZG9tKCk+dGhpcy5wcm9iYWJpbGl0eSlyZXR1cm47aWYodGhpcy5odW1hbml6ZSl7bGV0IGU9LjAyO2puKHRoaXMuaHVtYW5pemUpfHwoZT10aGlzLnRvU2Vjb25kcyh0aGlzLmh1bWFuaXplKSksdCs9KDIqTWF0aC5yYW5kb20oKS0xKSplfXRoaXMuY2FsbGJhY2sodCx0aGlzLnZhbHVlKX19X2dldExvb3BEdXJhdGlvbigpe3JldHVybih0aGlzLl9sb29wRW5kLXRoaXMuX2xvb3BTdGFydCkvdGhpcy5fcGxheWJhY2tSYXRlfWdldCBsb29wKCl7cmV0dXJuIHRoaXMuX2xvb3B9c2V0IGxvb3AodCl7dGhpcy5fbG9vcD10LHRoaXMuX3Jlc2NoZWR1bGVFdmVudHMoKX1nZXQgcGxheWJhY2tSYXRlKCl7cmV0dXJuIHRoaXMuX3BsYXliYWNrUmF0ZX1zZXQgcGxheWJhY2tSYXRlKHQpe3RoaXMuX3BsYXliYWNrUmF0ZT10LHRoaXMuX3Jlc2NoZWR1bGVFdmVudHMoKX1nZXQgbG9vcEVuZCgpe3JldHVybiBuZXcgU28odGhpcy5jb250ZXh0LHRoaXMuX2xvb3BFbmQpLnRvU2Vjb25kcygpfXNldCBsb29wRW5kKHQpe3RoaXMuX2xvb3BFbmQ9dGhpcy50b1RpY2tzKHQpLHRoaXMuX2xvb3AmJnRoaXMuX3Jlc2NoZWR1bGVFdmVudHMoKX1nZXQgbG9vcFN0YXJ0KCl7cmV0dXJuIG5ldyBTbyh0aGlzLmNvbnRleHQsdGhpcy5fbG9vcFN0YXJ0KS50b1NlY29uZHMoKX1zZXQgbG9vcFN0YXJ0KHQpe3RoaXMuX2xvb3BTdGFydD10aGlzLnRvVGlja3ModCksdGhpcy5fbG9vcCYmdGhpcy5fcmVzY2hlZHVsZUV2ZW50cygpfWdldCBwcm9ncmVzcygpe2lmKHRoaXMuX2xvb3Ape2NvbnN0IHQ9dGhpcy5jb250ZXh0LnRyYW5zcG9ydC50aWNrcyxlPXRoaXMuX3N0YXRlLmdldCh0KTtpZihudWxsIT09ZSYmXCJzdGFydGVkXCI9PT1lLnN0YXRlKXtjb25zdCBzPXRoaXMuX2dldExvb3BEdXJhdGlvbigpO3JldHVybih0LWUudGltZSklcy9zfXJldHVybiAwfXJldHVybiAwfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuY2FuY2VsKCksdGhpcy5fc3RhdGUuZGlzcG9zZSgpLHRoaXN9fWNsYXNzICRyIGV4dGVuZHMgZW97Y29uc3RydWN0b3IoKXtzdXBlcih1aSgkci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjYWxsYmFja1wiLFwiaW50ZXJ2YWxcIl0pKSx0aGlzLm5hbWU9XCJMb29wXCI7Y29uc3QgdD11aSgkci5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjYWxsYmFja1wiLFwiaW50ZXJ2YWxcIl0pO3RoaXMuX2V2ZW50PW5ldyBZcih7Y29udGV4dDp0aGlzLmNvbnRleHQsY2FsbGJhY2s6dGhpcy5fdGljay5iaW5kKHRoaXMpLGxvb3A6ITAsbG9vcEVuZDp0LmludGVydmFsLHBsYXliYWNrUmF0ZTp0LnBsYXliYWNrUmF0ZSxwcm9iYWJpbGl0eTp0LnByb2JhYmlsaXR5LGh1bWFuaXplOnQuaHVtYW5pemV9KSx0aGlzLmNhbGxiYWNrPXQuY2FsbGJhY2ssdGhpcy5pdGVyYXRpb25zPXQuaXRlcmF0aW9uc31zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihlby5nZXREZWZhdWx0cygpLHtpbnRlcnZhbDpcIjRuXCIsY2FsbGJhY2s6RWkscGxheWJhY2tSYXRlOjEsaXRlcmF0aW9uczoxLzAscHJvYmFiaWxpdHk6MSxtdXRlOiExLGh1bWFuaXplOiExfSl9c3RhcnQodCl7cmV0dXJuIHRoaXMuX2V2ZW50LnN0YXJ0KHQpLHRoaXN9c3RvcCh0KXtyZXR1cm4gdGhpcy5fZXZlbnQuc3RvcCh0KSx0aGlzfWNhbmNlbCh0KXtyZXR1cm4gdGhpcy5fZXZlbnQuY2FuY2VsKHQpLHRoaXN9X3RpY2sodCl7dGhpcy5jYWxsYmFjayh0KX1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5fZXZlbnQuc3RhdGV9Z2V0IHByb2dyZXNzKCl7cmV0dXJuIHRoaXMuX2V2ZW50LnByb2dyZXNzfWdldCBpbnRlcnZhbCgpe3JldHVybiB0aGlzLl9ldmVudC5sb29wRW5kfXNldCBpbnRlcnZhbCh0KXt0aGlzLl9ldmVudC5sb29wRW5kPXR9Z2V0IHBsYXliYWNrUmF0ZSgpe3JldHVybiB0aGlzLl9ldmVudC5wbGF5YmFja1JhdGV9c2V0IHBsYXliYWNrUmF0ZSh0KXt0aGlzLl9ldmVudC5wbGF5YmFja1JhdGU9dH1nZXQgaHVtYW5pemUoKXtyZXR1cm4gdGhpcy5fZXZlbnQuaHVtYW5pemV9c2V0IGh1bWFuaXplKHQpe3RoaXMuX2V2ZW50Lmh1bWFuaXplPXR9Z2V0IHByb2JhYmlsaXR5KCl7cmV0dXJuIHRoaXMuX2V2ZW50LnByb2JhYmlsaXR5fXNldCBwcm9iYWJpbGl0eSh0KXt0aGlzLl9ldmVudC5wcm9iYWJpbGl0eT10fWdldCBtdXRlKCl7cmV0dXJuIHRoaXMuX2V2ZW50Lm11dGV9c2V0IG11dGUodCl7dGhpcy5fZXZlbnQubXV0ZT10fWdldCBpdGVyYXRpb25zKCl7cmV0dXJuITA9PT10aGlzLl9ldmVudC5sb29wPzEvMDp0aGlzLl9ldmVudC5sb29wfXNldCBpdGVyYXRpb25zKHQpe3RoaXMuX2V2ZW50Lmxvb3A9dD09PTEvMHx8dH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9ldmVudC5kaXNwb3NlKCksdGhpc319Y2xhc3MgSHIgZXh0ZW5kcyBZcntjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKEhyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImNhbGxiYWNrXCIsXCJldmVudHNcIl0pKSx0aGlzLm5hbWU9XCJQYXJ0XCIsdGhpcy5fc3RhdGU9bmV3IHNvKFwic3RvcHBlZFwiKSx0aGlzLl9ldmVudHM9bmV3IFNldDtjb25zdCB0PXVpKEhyLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImNhbGxiYWNrXCIsXCJldmVudHNcIl0pO3RoaXMuX3N0YXRlLmluY3JlYXNpbmc9ITAsdC5ldmVudHMuZm9yRWFjaCgodD0+e0xuKHQpP3RoaXMuYWRkKHRbMF0sdFsxXSk6dGhpcy5hZGQodCl9KSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oWXIuZ2V0RGVmYXVsdHMoKSx7ZXZlbnRzOltdfSl9c3RhcnQodCxlKXtjb25zdCBzPXRoaXMudG9UaWNrcyh0KTtpZihcInN0YXJ0ZWRcIiE9PXRoaXMuX3N0YXRlLmdldFZhbHVlQXRUaW1lKHMpKXtlPXBpKGUsdGhpcy5fbG9vcD90aGlzLl9sb29wU3RhcnQ6MCksZT10aGlzLl9sb29wP3BpKGUsdGhpcy5fbG9vcFN0YXJ0KTpwaShlLDApO2NvbnN0IHQ9dGhpcy50b1RpY2tzKGUpO3RoaXMuX3N0YXRlLmFkZCh7aWQ6LTEsb2Zmc2V0OnQsc3RhdGU6XCJzdGFydGVkXCIsdGltZTpzfSksdGhpcy5fZm9yRWFjaCgoZT0+e3RoaXMuX3N0YXJ0Tm90ZShlLHMsdCl9KSl9cmV0dXJuIHRoaXN9X3N0YXJ0Tm90ZSh0LGUscyl7ZS09cyx0aGlzLl9sb29wP3Quc3RhcnRPZmZzZXQ+PXRoaXMuX2xvb3BTdGFydCYmdC5zdGFydE9mZnNldDx0aGlzLl9sb29wRW5kPyh0LnN0YXJ0T2Zmc2V0PHMmJihlKz10aGlzLl9nZXRMb29wRHVyYXRpb24oKSksdC5zdGFydChuZXcgU28odGhpcy5jb250ZXh0LGUpKSk6dC5zdGFydE9mZnNldDx0aGlzLl9sb29wU3RhcnQmJnQuc3RhcnRPZmZzZXQ+PXMmJih0Lmxvb3A9ITEsdC5zdGFydChuZXcgU28odGhpcy5jb250ZXh0LGUpKSk6dC5zdGFydE9mZnNldD49cyYmdC5zdGFydChuZXcgU28odGhpcy5jb250ZXh0LGUpKX1nZXQgc3RhcnRPZmZzZXQoKXtyZXR1cm4gdGhpcy5fc3RhcnRPZmZzZXR9c2V0IHN0YXJ0T2Zmc2V0KHQpe3RoaXMuX3N0YXJ0T2Zmc2V0PXQsdGhpcy5fZm9yRWFjaCgodD0+e3Quc3RhcnRPZmZzZXQrPXRoaXMuX3N0YXJ0T2Zmc2V0fSkpfXN0b3AodCl7Y29uc3QgZT10aGlzLnRvVGlja3ModCk7cmV0dXJuIHRoaXMuX3N0YXRlLmNhbmNlbChlKSx0aGlzLl9zdGF0ZS5zZXRTdGF0ZUF0VGltZShcInN0b3BwZWRcIixlKSx0aGlzLl9mb3JFYWNoKChlPT57ZS5zdG9wKHQpfSkpLHRoaXN9YXQodCxlKXtjb25zdCBzPW5ldyBLaSh0aGlzLmNvbnRleHQsdCkudG9UaWNrcygpLG49bmV3IFNvKHRoaXMuY29udGV4dCwxKS50b1NlY29uZHMoKSxpPXRoaXMuX2V2ZW50cy52YWx1ZXMoKTtsZXQgbz1pLm5leHQoKTtmb3IoOyFvLmRvbmU7KXtjb25zdCB0PW8udmFsdWU7aWYoTWF0aC5hYnMocy10LnN0YXJ0T2Zmc2V0KTxuKXJldHVybiBJbihlKSYmKHQudmFsdWU9ZSksdDtvPWkubmV4dCgpfXJldHVybiBJbihlKT8odGhpcy5hZGQodCxlKSx0aGlzLmF0KHQpKTpudWxsfWFkZCh0LGUpe3QgaW5zdGFuY2VvZiBPYmplY3QmJlJlZmxlY3QuaGFzKHQsXCJ0aW1lXCIpJiYodD0oZT10KS50aW1lKTtjb25zdCBzPXRoaXMudG9UaWNrcyh0KTtsZXQgbjtyZXR1cm4gZSBpbnN0YW5jZW9mIFlyPyhuPWUsbi5jYWxsYmFjaz10aGlzLl90aWNrLmJpbmQodGhpcykpOm49bmV3IFlyKHtjYWxsYmFjazp0aGlzLl90aWNrLmJpbmQodGhpcyksY29udGV4dDp0aGlzLmNvbnRleHQsdmFsdWU6ZX0pLG4uc3RhcnRPZmZzZXQ9cyxuLnNldCh7aHVtYW5pemU6dGhpcy5odW1hbml6ZSxsb29wOnRoaXMubG9vcCxsb29wRW5kOnRoaXMubG9vcEVuZCxsb29wU3RhcnQ6dGhpcy5sb29wU3RhcnQscGxheWJhY2tSYXRlOnRoaXMucGxheWJhY2tSYXRlLHByb2JhYmlsaXR5OnRoaXMucHJvYmFiaWxpdHl9KSx0aGlzLl9ldmVudHMuYWRkKG4pLHRoaXMuX3Jlc3RhcnRFdmVudChuKSx0aGlzfV9yZXN0YXJ0RXZlbnQodCl7dGhpcy5fc3RhdGUuZm9yRWFjaCgoZT0+e1wic3RhcnRlZFwiPT09ZS5zdGF0ZT90aGlzLl9zdGFydE5vdGUodCxlLnRpbWUsZS5vZmZzZXQpOnQuc3RvcChuZXcgU28odGhpcy5jb250ZXh0LGUudGltZSkpfSkpfXJlbW92ZSh0LGUpe3JldHVybiBQbih0KSYmdC5oYXNPd25Qcm9wZXJ0eShcInRpbWVcIikmJih0PShlPXQpLnRpbWUpLHQ9dGhpcy50b1RpY2tzKHQpLHRoaXMuX2V2ZW50cy5mb3JFYWNoKChzPT57cy5zdGFydE9mZnNldD09PXQmJihGbihlKXx8SW4oZSkmJnMudmFsdWU9PT1lKSYmKHRoaXMuX2V2ZW50cy5kZWxldGUocykscy5kaXNwb3NlKCkpfSkpLHRoaXN9Y2xlYXIoKXtyZXR1cm4gdGhpcy5fZm9yRWFjaCgodD0+dC5kaXNwb3NlKCkpKSx0aGlzLl9ldmVudHMuY2xlYXIoKSx0aGlzfWNhbmNlbCh0KXtyZXR1cm4gdGhpcy5fZm9yRWFjaCgoZT0+ZS5jYW5jZWwodCkpKSx0aGlzLl9zdGF0ZS5jYW5jZWwodGhpcy50b1RpY2tzKHQpKSx0aGlzfV9mb3JFYWNoKHQpe3JldHVybiB0aGlzLl9ldmVudHMmJnRoaXMuX2V2ZW50cy5mb3JFYWNoKChlPT57ZSBpbnN0YW5jZW9mIEhyP2UuX2ZvckVhY2godCk6dChlKX0pKSx0aGlzfV9zZXRBbGwodCxlKXt0aGlzLl9mb3JFYWNoKChzPT57c1t0XT1lfSkpfV90aWNrKHQsZSl7dGhpcy5tdXRlfHx0aGlzLmNhbGxiYWNrKHQsZSl9X3Rlc3RMb29wQm91bmRyaWVzKHQpe3RoaXMuX2xvb3AmJih0LnN0YXJ0T2Zmc2V0PHRoaXMuX2xvb3BTdGFydHx8dC5zdGFydE9mZnNldD49dGhpcy5fbG9vcEVuZCk/dC5jYW5jZWwoMCk6XCJzdG9wcGVkXCI9PT10LnN0YXRlJiZ0aGlzLl9yZXN0YXJ0RXZlbnQodCl9Z2V0IHByb2JhYmlsaXR5KCl7cmV0dXJuIHRoaXMuX3Byb2JhYmlsaXR5fXNldCBwcm9iYWJpbGl0eSh0KXt0aGlzLl9wcm9iYWJpbGl0eT10LHRoaXMuX3NldEFsbChcInByb2JhYmlsaXR5XCIsdCl9Z2V0IGh1bWFuaXplKCl7cmV0dXJuIHRoaXMuX2h1bWFuaXplfXNldCBodW1hbml6ZSh0KXt0aGlzLl9odW1hbml6ZT10LHRoaXMuX3NldEFsbChcImh1bWFuaXplXCIsdCl9Z2V0IGxvb3AoKXtyZXR1cm4gdGhpcy5fbG9vcH1zZXQgbG9vcCh0KXt0aGlzLl9sb29wPXQsdGhpcy5fZm9yRWFjaCgoZT0+e2UubG9vcFN0YXJ0PXRoaXMubG9vcFN0YXJ0LGUubG9vcEVuZD10aGlzLmxvb3BFbmQsZS5sb29wPXQsdGhpcy5fdGVzdExvb3BCb3VuZHJpZXMoZSl9KSl9Z2V0IGxvb3BFbmQoKXtyZXR1cm4gbmV3IFNvKHRoaXMuY29udGV4dCx0aGlzLl9sb29wRW5kKS50b1NlY29uZHMoKX1zZXQgbG9vcEVuZCh0KXt0aGlzLl9sb29wRW5kPXRoaXMudG9UaWNrcyh0KSx0aGlzLl9sb29wJiZ0aGlzLl9mb3JFYWNoKChlPT57ZS5sb29wRW5kPXQsdGhpcy5fdGVzdExvb3BCb3VuZHJpZXMoZSl9KSl9Z2V0IGxvb3BTdGFydCgpe3JldHVybiBuZXcgU28odGhpcy5jb250ZXh0LHRoaXMuX2xvb3BTdGFydCkudG9TZWNvbmRzKCl9c2V0IGxvb3BTdGFydCh0KXt0aGlzLl9sb29wU3RhcnQ9dGhpcy50b1RpY2tzKHQpLHRoaXMuX2xvb3AmJnRoaXMuX2ZvckVhY2goKHQ9Pnt0Lmxvb3BTdGFydD10aGlzLmxvb3BTdGFydCx0aGlzLl90ZXN0TG9vcEJvdW5kcmllcyh0KX0pKX1nZXQgcGxheWJhY2tSYXRlKCl7cmV0dXJuIHRoaXMuX3BsYXliYWNrUmF0ZX1zZXQgcGxheWJhY2tSYXRlKHQpe3RoaXMuX3BsYXliYWNrUmF0ZT10LHRoaXMuX3NldEFsbChcInBsYXliYWNrUmF0ZVwiLHQpfWdldCBsZW5ndGgoKXtyZXR1cm4gdGhpcy5fZXZlbnRzLnNpemV9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5jbGVhcigpLHRoaXN9fWZ1bmN0aW9uKkpyKHQpe2xldCBlPTA7Zm9yKDtlPHQ7KWU9eGkoZSwwLHQtMSkseWllbGQgZSxlKyt9ZnVuY3Rpb24qS3IodCl7bGV0IGU9dC0xO2Zvcig7ZT49MDspZT14aShlLDAsdC0xKSx5aWVsZCBlLGUtLX1mdW5jdGlvbip0YSh0LGUpe2Zvcig7Oyl5aWVsZCplKHQpfWZ1bmN0aW9uKmVhKHQsZSl7bGV0IHM9ZT8wOnQtMTtmb3IoOzspcz14aShzLDAsdC0xKSx5aWVsZCBzLGU/KHMrKyxzPj10LTEmJihlPSExKSk6KHMtLSxzPD0wJiYoZT0hMCkpfWZ1bmN0aW9uKnNhKHQpe2xldCBlPTAscz0wO2Zvcig7ZTx0OyllPXhpKGUsMCx0LTEpLHlpZWxkIGUscysrLGUrPXMlMj8yOi0xfWZ1bmN0aW9uKm5hKHQpe2xldCBlPXQtMSxzPTA7Zm9yKDtlPj0wOyllPXhpKGUsMCx0LTEpLHlpZWxkIGUscysrLGUrPXMlMj8tMjoxfWZ1bmN0aW9uKmlhKHQpe2NvbnN0IGU9W107Zm9yKGxldCBzPTA7czx0O3MrKyllLnB1c2gocyk7Zm9yKDtlLmxlbmd0aD4wOyl7Y29uc3Qgcz14aShlLnNwbGljZShNYXRoLmZsb29yKGUubGVuZ3RoKk1hdGgucmFuZG9tKCkpLDEpWzBdLDAsdC0xKTt5aWVsZCBzfX1mdW5jdGlvbipvYSh0LGU9XCJ1cFwiLHM9MCl7c3dpdGNoKEJuKHQ+PTEsXCJUaGUgbnVtYmVyIG9mIHZhbHVlcyBtdXN0IGJlIGF0IGxlYXN0IG9uZVwiKSxlKXtjYXNlXCJ1cFwiOnlpZWxkKnRhKHQsSnIpO2Nhc2VcImRvd25cIjp5aWVsZCp0YSh0LEtyKTtjYXNlXCJ1cERvd25cIjp5aWVsZCplYSh0LCEwKTtjYXNlXCJkb3duVXBcIjp5aWVsZCplYSh0LCExKTtjYXNlXCJhbHRlcm5hdGVVcFwiOnlpZWxkKnRhKHQsc2EpO2Nhc2VcImFsdGVybmF0ZURvd25cIjp5aWVsZCp0YSh0LG5hKTtjYXNlXCJyYW5kb21cIjp5aWVsZCpmdW5jdGlvbioodCl7Zm9yKDs7KXtjb25zdCBlPU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSp0KTt5aWVsZCBlfX0odCk7Y2FzZVwicmFuZG9tT25jZVwiOnlpZWxkKnRhKHQsaWEpO2Nhc2VcInJhbmRvbVdhbGtcIjp5aWVsZCpmdW5jdGlvbioodCl7bGV0IGU9TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnQpO2Zvcig7OykwPT09ZT9lKys6ZT09PXQtMXx8TWF0aC5yYW5kb20oKTwuNT9lLS06ZSsrLHlpZWxkIGV9KHQpfX1jbGFzcyByYSBleHRlbmRzICRye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkocmEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiY2FsbGJhY2tcIixcInZhbHVlc1wiLFwicGF0dGVyblwiXSkpLHRoaXMubmFtZT1cIlBhdHRlcm5cIjtjb25zdCB0PXVpKHJhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImNhbGxiYWNrXCIsXCJ2YWx1ZXNcIixcInBhdHRlcm5cIl0pO3RoaXMuY2FsbGJhY2s9dC5jYWxsYmFjayx0aGlzLl92YWx1ZXM9dC52YWx1ZXMsdGhpcy5fcGF0dGVybj1vYSh0LnZhbHVlcy5sZW5ndGgsdC5wYXR0ZXJuKSx0aGlzLl90eXBlPXQucGF0dGVybn1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbigkci5nZXREZWZhdWx0cygpLHtwYXR0ZXJuOlwidXBcIix2YWx1ZXM6W10sY2FsbGJhY2s6RWl9KX1fdGljayh0KXtjb25zdCBlPXRoaXMuX3BhdHRlcm4ubmV4dCgpO3RoaXMuX2luZGV4PWUudmFsdWUsdGhpcy5fdmFsdWU9dGhpcy5fdmFsdWVzW2UudmFsdWVdLHRoaXMuY2FsbGJhY2sodCx0aGlzLl92YWx1ZSl9Z2V0IHZhbHVlcygpe3JldHVybiB0aGlzLl92YWx1ZXN9c2V0IHZhbHVlcyh0KXt0aGlzLl92YWx1ZXM9dCx0aGlzLnBhdHRlcm49dGhpcy5fdHlwZX1nZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5fdmFsdWV9Z2V0IGluZGV4KCl7cmV0dXJuIHRoaXMuX2luZGV4fWdldCBwYXR0ZXJuKCl7cmV0dXJuIHRoaXMuX3R5cGV9c2V0IHBhdHRlcm4odCl7dGhpcy5fdHlwZT10LHRoaXMuX3BhdHRlcm49b2EodGhpcy5fdmFsdWVzLmxlbmd0aCx0aGlzLl90eXBlKX19Y2xhc3MgYWEgZXh0ZW5kcyBZcntjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKGFhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImNhbGxiYWNrXCIsXCJldmVudHNcIixcInN1YmRpdmlzaW9uXCJdKSksdGhpcy5uYW1lPVwiU2VxdWVuY2VcIix0aGlzLl9wYXJ0PW5ldyBIcih7Y2FsbGJhY2s6dGhpcy5fc2VxQ2FsbGJhY2suYmluZCh0aGlzKSxjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2V2ZW50cz1bXSx0aGlzLl9ldmVudHNBcnJheT1bXTtjb25zdCB0PXVpKGFhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImNhbGxiYWNrXCIsXCJldmVudHNcIixcInN1YmRpdmlzaW9uXCJdKTt0aGlzLl9zdWJkaXZpc2lvbj10aGlzLnRvVGlja3ModC5zdWJkaXZpc2lvbiksdGhpcy5ldmVudHM9dC5ldmVudHMsdGhpcy5sb29wPXQubG9vcCx0aGlzLmxvb3BTdGFydD10Lmxvb3BTdGFydCx0aGlzLmxvb3BFbmQ9dC5sb29wRW5kLHRoaXMucGxheWJhY2tSYXRlPXQucGxheWJhY2tSYXRlLHRoaXMucHJvYmFiaWxpdHk9dC5wcm9iYWJpbGl0eSx0aGlzLmh1bWFuaXplPXQuaHVtYW5pemUsdGhpcy5tdXRlPXQubXV0ZSx0aGlzLnBsYXliYWNrUmF0ZT10LnBsYXliYWNrUmF0ZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihkaShZci5nZXREZWZhdWx0cygpLFtcInZhbHVlXCJdKSx7ZXZlbnRzOltdLGxvb3A6ITAsbG9vcEVuZDowLGxvb3BTdGFydDowLHN1YmRpdmlzaW9uOlwiOG5cIn0pfV9zZXFDYWxsYmFjayh0LGUpe251bGw9PT1lfHx0aGlzLm11dGV8fHRoaXMuY2FsbGJhY2sodCxlKX1nZXQgZXZlbnRzKCl7cmV0dXJuIHRoaXMuX2V2ZW50c31zZXQgZXZlbnRzKHQpe3RoaXMuY2xlYXIoKSx0aGlzLl9ldmVudHNBcnJheT10LHRoaXMuX2V2ZW50cz10aGlzLl9jcmVhdGVTZXF1ZW5jZSh0aGlzLl9ldmVudHNBcnJheSksdGhpcy5fZXZlbnRzVXBkYXRlZCgpfXN0YXJ0KHQsZSl7cmV0dXJuIHRoaXMuX3BhcnQuc3RhcnQodCxlP3RoaXMuX2luZGV4VGltZShlKTplKSx0aGlzfXN0b3AodCl7cmV0dXJuIHRoaXMuX3BhcnQuc3RvcCh0KSx0aGlzfWdldCBzdWJkaXZpc2lvbigpe3JldHVybiBuZXcgU28odGhpcy5jb250ZXh0LHRoaXMuX3N1YmRpdmlzaW9uKS50b1NlY29uZHMoKX1fY3JlYXRlU2VxdWVuY2UodCl7cmV0dXJuIG5ldyBQcm94eSh0LHtnZXQ6KHQsZSk9PnRbZV0sc2V0Oih0LGUscyk9Pih6bihlKSYmaXNGaW5pdGUocGFyc2VJbnQoZSwxMCkpJiZMbihzKT90W2VdPXRoaXMuX2NyZWF0ZVNlcXVlbmNlKHMpOnRbZV09cyx0aGlzLl9ldmVudHNVcGRhdGVkKCksITApfSl9X2V2ZW50c1VwZGF0ZWQoKXt0aGlzLl9wYXJ0LmNsZWFyKCksdGhpcy5fcmVzY2hlZHVsZVNlcXVlbmNlKHRoaXMuX2V2ZW50c0FycmF5LHRoaXMuX3N1YmRpdmlzaW9uLHRoaXMuc3RhcnRPZmZzZXQpLHRoaXMubG9vcEVuZD10aGlzLmxvb3BFbmR9X3Jlc2NoZWR1bGVTZXF1ZW5jZSh0LGUscyl7dC5mb3JFYWNoKCgodCxuKT0+e2NvbnN0IGk9biplK3M7aWYoTG4odCkpdGhpcy5fcmVzY2hlZHVsZVNlcXVlbmNlKHQsZS90Lmxlbmd0aCxpKTtlbHNle2NvbnN0IGU9bmV3IFNvKHRoaXMuY29udGV4dCxpLFwiaVwiKS50b1NlY29uZHMoKTt0aGlzLl9wYXJ0LmFkZChlLHQpfX0pKX1faW5kZXhUaW1lKHQpe3JldHVybiBuZXcgU28odGhpcy5jb250ZXh0LHQqdGhpcy5fc3ViZGl2aXNpb24rdGhpcy5zdGFydE9mZnNldCkudG9TZWNvbmRzKCl9Y2xlYXIoKXtyZXR1cm4gdGhpcy5fcGFydC5jbGVhcigpLHRoaXN9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fcGFydC5kaXNwb3NlKCksdGhpc31nZXQgbG9vcCgpe3JldHVybiB0aGlzLl9wYXJ0Lmxvb3B9c2V0IGxvb3AodCl7dGhpcy5fcGFydC5sb29wPXR9Z2V0IGxvb3BTdGFydCgpe3JldHVybiB0aGlzLl9sb29wU3RhcnR9c2V0IGxvb3BTdGFydCh0KXt0aGlzLl9sb29wU3RhcnQ9dCx0aGlzLl9wYXJ0Lmxvb3BTdGFydD10aGlzLl9pbmRleFRpbWUodCl9Z2V0IGxvb3BFbmQoKXtyZXR1cm4gdGhpcy5fbG9vcEVuZH1zZXQgbG9vcEVuZCh0KXt0aGlzLl9sb29wRW5kPXQsdGhpcy5fcGFydC5sb29wRW5kPTA9PT10P3RoaXMuX2luZGV4VGltZSh0aGlzLl9ldmVudHNBcnJheS5sZW5ndGgpOnRoaXMuX2luZGV4VGltZSh0KX1nZXQgc3RhcnRPZmZzZXQoKXtyZXR1cm4gdGhpcy5fcGFydC5zdGFydE9mZnNldH1zZXQgc3RhcnRPZmZzZXQodCl7dGhpcy5fcGFydC5zdGFydE9mZnNldD10fWdldCBwbGF5YmFja1JhdGUoKXtyZXR1cm4gdGhpcy5fcGFydC5wbGF5YmFja1JhdGV9c2V0IHBsYXliYWNrUmF0ZSh0KXt0aGlzLl9wYXJ0LnBsYXliYWNrUmF0ZT10fWdldCBwcm9iYWJpbGl0eSgpe3JldHVybiB0aGlzLl9wYXJ0LnByb2JhYmlsaXR5fXNldCBwcm9iYWJpbGl0eSh0KXt0aGlzLl9wYXJ0LnByb2JhYmlsaXR5PXR9Z2V0IHByb2dyZXNzKCl7cmV0dXJuIHRoaXMuX3BhcnQucHJvZ3Jlc3N9Z2V0IGh1bWFuaXplKCl7cmV0dXJuIHRoaXMuX3BhcnQuaHVtYW5pemV9c2V0IGh1bWFuaXplKHQpe3RoaXMuX3BhcnQuaHVtYW5pemU9dH1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuX3BhcnQubGVuZ3RofX1jbGFzcyBjYSBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIoT2JqZWN0LmFzc2lnbih1aShjYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmYWRlXCJdKSkpLHRoaXMubmFtZT1cIkNyb3NzRmFkZVwiLHRoaXMuX3Bhbm5lcj10aGlzLmNvbnRleHQuY3JlYXRlU3RlcmVvUGFubmVyKCksdGhpcy5fc3BsaXQ9dGhpcy5jb250ZXh0LmNyZWF0ZUNoYW5uZWxTcGxpdHRlcigyKSx0aGlzLl9nMmE9bmV3IGRyKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuYT1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46MH0pLHRoaXMuYj1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46MH0pLHRoaXMub3V0cHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9pbnRlcm5hbENoYW5uZWxzPVt0aGlzLmEsdGhpcy5iXTtjb25zdCB0PXVpKGNhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZhZGVcIl0pO3RoaXMuZmFkZT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwibm9ybWFsUmFuZ2VcIix2YWx1ZTp0LmZhZGV9KSxPaSh0aGlzLFwiZmFkZVwiKSx0aGlzLmNvbnRleHQuZ2V0Q29uc3RhbnQoMSkuY29ubmVjdCh0aGlzLl9wYW5uZXIpLHRoaXMuX3Bhbm5lci5jb25uZWN0KHRoaXMuX3NwbGl0KSx0aGlzLl9wYW5uZXIuY2hhbm5lbENvdW50PTEsdGhpcy5fcGFubmVyLmNoYW5uZWxDb3VudE1vZGU9XCJleHBsaWNpdFwiLHJvKHRoaXMuX3NwbGl0LHRoaXMuYS5nYWluLDApLHJvKHRoaXMuX3NwbGl0LHRoaXMuYi5nYWluLDEpLHRoaXMuZmFkZS5jaGFpbih0aGlzLl9nMmEsdGhpcy5fcGFubmVyLnBhbiksdGhpcy5hLmNvbm5lY3QodGhpcy5vdXRwdXQpLHRoaXMuYi5jb25uZWN0KHRoaXMub3V0cHV0KX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtmYWRlOi41fSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5hLmRpc3Bvc2UoKSx0aGlzLmIuZGlzcG9zZSgpLHRoaXMub3V0cHV0LmRpc3Bvc2UoKSx0aGlzLmZhZGUuZGlzcG9zZSgpLHRoaXMuX2cyYS5kaXNwb3NlKCksdGhpcy5fcGFubmVyLmRpc2Nvbm5lY3QoKSx0aGlzLl9zcGxpdC5kaXNjb25uZWN0KCksdGhpc319Y2xhc3MgaGEgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KSx0aGlzLm5hbWU9XCJFZmZlY3RcIix0aGlzLl9kcnlXZXQ9bmV3IGNhKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMud2V0PXRoaXMuX2RyeVdldC5mYWRlLHRoaXMuZWZmZWN0U2VuZD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5lZmZlY3RSZXR1cm49bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuaW5wdXQ9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMub3V0cHV0PXRoaXMuX2RyeVdldCx0aGlzLmlucHV0LmZhbih0aGlzLl9kcnlXZXQuYSx0aGlzLmVmZmVjdFNlbmQpLHRoaXMuZWZmZWN0UmV0dXJuLmNvbm5lY3QodGhpcy5fZHJ5V2V0LmIpLHRoaXMud2V0LnNldFZhbHVlQXRUaW1lKHQud2V0LDApLHRoaXMuX2ludGVybmFsQ2hhbm5lbHM9W3RoaXMuZWZmZWN0UmV0dXJuLHRoaXMuZWZmZWN0U2VuZF0sT2kodGhpcyxcIndldFwiKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHt3ZXQ6MX0pfWNvbm5lY3RFZmZlY3QodCl7cmV0dXJuIHRoaXMuX2ludGVybmFsQ2hhbm5lbHMucHVzaCh0KSx0aGlzLmVmZmVjdFNlbmQuY2hhaW4odCx0aGlzLmVmZmVjdFJldHVybiksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9kcnlXZXQuZGlzcG9zZSgpLHRoaXMuZWZmZWN0U2VuZC5kaXNwb3NlKCksdGhpcy5lZmZlY3RSZXR1cm4uZGlzcG9zZSgpLHRoaXMud2V0LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBsYSBleHRlbmRzIGhhe2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMubmFtZT1cIkxGT0VmZmVjdFwiLHRoaXMuX2xmbz1uZXcgcnIoe2NvbnRleHQ6dGhpcy5jb250ZXh0LGZyZXF1ZW5jeTp0LmZyZXF1ZW5jeSxhbXBsaXR1ZGU6dC5kZXB0aH0pLHRoaXMuZGVwdGg9dGhpcy5fbGZvLmFtcGxpdHVkZSx0aGlzLmZyZXF1ZW5jeT10aGlzLl9sZm8uZnJlcXVlbmN5LHRoaXMudHlwZT10LnR5cGUsT2kodGhpcyxbXCJmcmVxdWVuY3lcIixcImRlcHRoXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihoYS5nZXREZWZhdWx0cygpLHtmcmVxdWVuY3k6MSx0eXBlOlwic2luZVwiLGRlcHRoOjF9KX1zdGFydCh0KXtyZXR1cm4gdGhpcy5fbGZvLnN0YXJ0KHQpLHRoaXN9c3RvcCh0KXtyZXR1cm4gdGhpcy5fbGZvLnN0b3AodCksdGhpc31zeW5jKCl7cmV0dXJuIHRoaXMuX2xmby5zeW5jKCksdGhpc311bnN5bmMoKXtyZXR1cm4gdGhpcy5fbGZvLnVuc3luYygpLHRoaXN9Z2V0IHR5cGUoKXtyZXR1cm4gdGhpcy5fbGZvLnR5cGV9c2V0IHR5cGUodCl7dGhpcy5fbGZvLnR5cGU9dH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9sZm8uZGlzcG9zZSgpLHRoaXMuZnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLmRlcHRoLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyB1YSBleHRlbmRzIGxhe2NvbnN0cnVjdG9yKCl7c3VwZXIodWkodWEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJiYXNlRnJlcXVlbmN5XCIsXCJvY3RhdmVzXCJdKSksdGhpcy5uYW1lPVwiQXV0b0ZpbHRlclwiO2NvbnN0IHQ9dWkodWEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJiYXNlRnJlcXVlbmN5XCIsXCJvY3RhdmVzXCJdKTt0aGlzLmZpbHRlcj1uZXcgT3IoT2JqZWN0LmFzc2lnbih0LmZpbHRlcix7Y29udGV4dDp0aGlzLmNvbnRleHR9KSksdGhpcy5jb25uZWN0RWZmZWN0KHRoaXMuZmlsdGVyKSx0aGlzLl9sZm8uY29ubmVjdCh0aGlzLmZpbHRlci5mcmVxdWVuY3kpLHRoaXMub2N0YXZlcz10Lm9jdGF2ZXMsdGhpcy5iYXNlRnJlcXVlbmN5PXQuYmFzZUZyZXF1ZW5jeX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihsYS5nZXREZWZhdWx0cygpLHtiYXNlRnJlcXVlbmN5OjIwMCxvY3RhdmVzOjIuNixmaWx0ZXI6e3R5cGU6XCJsb3dwYXNzXCIscm9sbG9mZjotMTIsUToxfX0pfWdldCBiYXNlRnJlcXVlbmN5KCl7cmV0dXJuIHRoaXMuX2xmby5taW59c2V0IGJhc2VGcmVxdWVuY3kodCl7dGhpcy5fbGZvLm1pbj10aGlzLnRvRnJlcXVlbmN5KHQpLHRoaXMub2N0YXZlcz10aGlzLl9vY3RhdmVzfWdldCBvY3RhdmVzKCl7cmV0dXJuIHRoaXMuX29jdGF2ZXN9c2V0IG9jdGF2ZXModCl7dGhpcy5fb2N0YXZlcz10LHRoaXMuX2xmby5tYXg9dGhpcy5fbGZvLm1pbipNYXRoLnBvdygyLHQpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuZmlsdGVyLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBwYSBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIoT2JqZWN0LmFzc2lnbih1aShwYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJwYW5cIl0pKSksdGhpcy5uYW1lPVwiUGFubmVyXCIsdGhpcy5fcGFubmVyPXRoaXMuY29udGV4dC5jcmVhdGVTdGVyZW9QYW5uZXIoKSx0aGlzLmlucHV0PXRoaXMuX3Bhbm5lcix0aGlzLm91dHB1dD10aGlzLl9wYW5uZXI7Y29uc3QgdD11aShwYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJwYW5cIl0pO3RoaXMucGFuPW5ldyBubyh7Y29udGV4dDp0aGlzLmNvbnRleHQscGFyYW06dGhpcy5fcGFubmVyLnBhbix2YWx1ZTp0LnBhbixtaW5WYWx1ZTotMSxtYXhWYWx1ZToxfSksdGhpcy5fcGFubmVyLmNoYW5uZWxDb3VudD10LmNoYW5uZWxDb3VudCx0aGlzLl9wYW5uZXIuY2hhbm5lbENvdW50TW9kZT1cImV4cGxpY2l0XCIsT2kodGhpcyxcInBhblwiKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtwYW46MCxjaGFubmVsQ291bnQ6MX0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3Bhbm5lci5kaXNjb25uZWN0KCksdGhpcy5wYW4uZGlzcG9zZSgpLHRoaXN9fWNsYXNzIGRhIGV4dGVuZHMgbGF7Y29uc3RydWN0b3IoKXtzdXBlcih1aShkYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIl0pKSx0aGlzLm5hbWU9XCJBdXRvUGFubmVyXCI7Y29uc3QgdD11aShkYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIl0pO3RoaXMuX3Bhbm5lcj1uZXcgcGEoe2NvbnRleHQ6dGhpcy5jb250ZXh0LGNoYW5uZWxDb3VudDp0LmNoYW5uZWxDb3VudH0pLHRoaXMuY29ubmVjdEVmZmVjdCh0aGlzLl9wYW5uZXIpLHRoaXMuX2xmby5jb25uZWN0KHRoaXMuX3Bhbm5lci5wYW4pLHRoaXMuX2xmby5taW49LTEsdGhpcy5fbGZvLm1heD0xfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGxhLmdldERlZmF1bHRzKCkse2NoYW5uZWxDb3VudDoxfSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fcGFubmVyLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBmYSBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoZmEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wic21vb3RoaW5nXCJdKSksdGhpcy5uYW1lPVwiRm9sbG93ZXJcIjtjb25zdCB0PXVpKGZhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInNtb290aGluZ1wiXSk7dGhpcy5fYWJzPXRoaXMuaW5wdXQ9bmV3IHByKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2xvd3Bhc3M9dGhpcy5vdXRwdXQ9bmV3IFVyKHtjb250ZXh0OnRoaXMuY29udGV4dCxmcmVxdWVuY3k6MS90aGlzLnRvU2Vjb25kcyh0LnNtb290aGluZyksdHlwZTpcImxvd3Bhc3NcIn0pLHRoaXMuX2Ficy5jb25uZWN0KHRoaXMuX2xvd3Bhc3MpLHRoaXMuX3Ntb290aGluZz10LnNtb290aGluZ31zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtzbW9vdGhpbmc6LjA1fSl9Z2V0IHNtb290aGluZygpe3JldHVybiB0aGlzLl9zbW9vdGhpbmd9c2V0IHNtb290aGluZyh0KXt0aGlzLl9zbW9vdGhpbmc9dCx0aGlzLl9sb3dwYXNzLmZyZXF1ZW5jeT0xL3RoaXMudG9TZWNvbmRzKHRoaXMuc21vb3RoaW5nKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9hYnMuZGlzcG9zZSgpLHRoaXMuX2xvd3Bhc3MuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIF9hIGV4dGVuZHMgaGF7Y29uc3RydWN0b3IoKXtzdXBlcih1aShfYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJiYXNlRnJlcXVlbmN5XCIsXCJvY3RhdmVzXCIsXCJzZW5zaXRpdml0eVwiXSkpLHRoaXMubmFtZT1cIkF1dG9XYWhcIjtjb25zdCB0PXVpKF9hLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImJhc2VGcmVxdWVuY3lcIixcIm9jdGF2ZXNcIixcInNlbnNpdGl2aXR5XCJdKTt0aGlzLl9mb2xsb3dlcj1uZXcgZmEoe2NvbnRleHQ6dGhpcy5jb250ZXh0LHNtb290aGluZzp0LmZvbGxvd2VyfSksdGhpcy5fc3dlZXBSYW5nZT1uZXcgdnIoe2NvbnRleHQ6dGhpcy5jb250ZXh0LG1pbjowLG1heDoxLGV4cG9uZW50Oi41fSksdGhpcy5fYmFzZUZyZXF1ZW5jeT10aGlzLnRvRnJlcXVlbmN5KHQuYmFzZUZyZXF1ZW5jeSksdGhpcy5fb2N0YXZlcz10Lm9jdGF2ZXMsdGhpcy5faW5wdXRCb29zdD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fYmFuZHBhc3M9bmV3IE9yKHtjb250ZXh0OnRoaXMuY29udGV4dCxyb2xsb2ZmOi00OCxmcmVxdWVuY3k6MCxROnQuUX0pLHRoaXMuX3BlYWtpbmc9bmV3IE9yKHtjb250ZXh0OnRoaXMuY29udGV4dCx0eXBlOlwicGVha2luZ1wifSksdGhpcy5fcGVha2luZy5nYWluLnZhbHVlPXQuZ2Fpbix0aGlzLmdhaW49dGhpcy5fcGVha2luZy5nYWluLHRoaXMuUT10aGlzLl9iYW5kcGFzcy5RLHRoaXMuZWZmZWN0U2VuZC5jaGFpbih0aGlzLl9pbnB1dEJvb3N0LHRoaXMuX2ZvbGxvd2VyLHRoaXMuX3N3ZWVwUmFuZ2UpLHRoaXMuX3N3ZWVwUmFuZ2UuY29ubmVjdCh0aGlzLl9iYW5kcGFzcy5mcmVxdWVuY3kpLHRoaXMuX3N3ZWVwUmFuZ2UuY29ubmVjdCh0aGlzLl9wZWFraW5nLmZyZXF1ZW5jeSksdGhpcy5lZmZlY3RTZW5kLmNoYWluKHRoaXMuX2JhbmRwYXNzLHRoaXMuX3BlYWtpbmcsdGhpcy5lZmZlY3RSZXR1cm4pLHRoaXMuX3NldFN3ZWVwUmFuZ2UoKSx0aGlzLnNlbnNpdGl2aXR5PXQuc2Vuc2l0aXZpdHksT2kodGhpcyxbXCJnYWluXCIsXCJRXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihoYS5nZXREZWZhdWx0cygpLHtiYXNlRnJlcXVlbmN5OjEwMCxvY3RhdmVzOjYsc2Vuc2l0aXZpdHk6MCxROjIsZ2FpbjoyLGZvbGxvd2VyOi4yfSl9Z2V0IG9jdGF2ZXMoKXtyZXR1cm4gdGhpcy5fb2N0YXZlc31zZXQgb2N0YXZlcyh0KXt0aGlzLl9vY3RhdmVzPXQsdGhpcy5fc2V0U3dlZXBSYW5nZSgpfWdldCBmb2xsb3dlcigpe3JldHVybiB0aGlzLl9mb2xsb3dlci5zbW9vdGhpbmd9c2V0IGZvbGxvd2VyKHQpe3RoaXMuX2ZvbGxvd2VyLnNtb290aGluZz10fWdldCBiYXNlRnJlcXVlbmN5KCl7cmV0dXJuIHRoaXMuX2Jhc2VGcmVxdWVuY3l9c2V0IGJhc2VGcmVxdWVuY3kodCl7dGhpcy5fYmFzZUZyZXF1ZW5jeT10aGlzLnRvRnJlcXVlbmN5KHQpLHRoaXMuX3NldFN3ZWVwUmFuZ2UoKX1nZXQgc2Vuc2l0aXZpdHkoKXtyZXR1cm4gTGkoMS90aGlzLl9pbnB1dEJvb3N0LmdhaW4udmFsdWUpfXNldCBzZW5zaXRpdml0eSh0KXt0aGlzLl9pbnB1dEJvb3N0LmdhaW4udmFsdWU9MS9qaSh0KX1fc2V0U3dlZXBSYW5nZSgpe3RoaXMuX3N3ZWVwUmFuZ2UubWluPXRoaXMuX2Jhc2VGcmVxdWVuY3ksdGhpcy5fc3dlZXBSYW5nZS5tYXg9TWF0aC5taW4odGhpcy5fYmFzZUZyZXF1ZW5jeSpNYXRoLnBvdygyLHRoaXMuX29jdGF2ZXMpLHRoaXMuY29udGV4dC5zYW1wbGVSYXRlLzIpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2ZvbGxvd2VyLmRpc3Bvc2UoKSx0aGlzLl9zd2VlcFJhbmdlLmRpc3Bvc2UoKSx0aGlzLl9iYW5kcGFzcy5kaXNwb3NlKCksdGhpcy5fcGVha2luZy5kaXNwb3NlKCksdGhpcy5faW5wdXRCb29zdC5kaXNwb3NlKCksdGhpc319Y29uc3QgbWE9XCJiaXQtY3J1c2hlclwiO0xyKG1hLFwiXFxuXFx0Y2xhc3MgQml0Q3J1c2hlcldvcmtsZXQgZXh0ZW5kcyBTaW5nbGVJT1Byb2Nlc3NvciB7XFxuXFxuXFx0XFx0c3RhdGljIGdldCBwYXJhbWV0ZXJEZXNjcmlwdG9ycygpIHtcXG5cXHRcXHRcXHRyZXR1cm4gW3tcXG5cXHRcXHRcXHRcXHRuYW1lOiBcXFwiYml0c1xcXCIsXFxuXFx0XFx0XFx0XFx0ZGVmYXVsdFZhbHVlOiAxMixcXG5cXHRcXHRcXHRcXHRtaW5WYWx1ZTogMSxcXG5cXHRcXHRcXHRcXHRtYXhWYWx1ZTogMTYsXFxuXFx0XFx0XFx0XFx0YXV0b21hdGlvblJhdGU6ICdrLXJhdGUnXFxuXFx0XFx0XFx0fV07XFxuXFx0XFx0fVxcblxcblxcdFxcdGdlbmVyYXRlKGlucHV0LCBfY2hhbm5lbCwgcGFyYW1ldGVycykge1xcblxcdFxcdFxcdGNvbnN0IHN0ZXAgPSBNYXRoLnBvdygwLjUsIHBhcmFtZXRlcnMuYml0cyAtIDEpO1xcblxcdFxcdFxcdGNvbnN0IHZhbCA9IHN0ZXAgKiBNYXRoLmZsb29yKGlucHV0IC8gc3RlcCArIDAuNSk7XFxuXFx0XFx0XFx0cmV0dXJuIHZhbDtcXG5cXHRcXHR9XFxuXFx0fVxcblwiKTtjbGFzcyBnYSBleHRlbmRzIGhhe2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoZ2EuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiYml0c1wiXSkpLHRoaXMubmFtZT1cIkJpdENydXNoZXJcIjtjb25zdCB0PXVpKGdhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImJpdHNcIl0pO3RoaXMuX2JpdENydXNoZXJXb3JrbGV0PW5ldyB2YSh7Y29udGV4dDp0aGlzLmNvbnRleHQsYml0czp0LmJpdHN9KSx0aGlzLmNvbm5lY3RFZmZlY3QodGhpcy5fYml0Q3J1c2hlcldvcmtsZXQpLHRoaXMuYml0cz10aGlzLl9iaXRDcnVzaGVyV29ya2xldC5iaXRzfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGhhLmdldERlZmF1bHRzKCkse2JpdHM6NH0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2JpdENydXNoZXJXb3JrbGV0LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyB2YSBleHRlbmRzIHpye2NvbnN0cnVjdG9yKCl7c3VwZXIodWkodmEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJCaXRDcnVzaGVyV29ya2xldFwiO2NvbnN0IHQ9dWkodmEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpO3RoaXMuaW5wdXQ9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMub3V0cHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLmJpdHM9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0LmJpdHMsdW5pdHM6XCJwb3NpdGl2ZVwiLG1pblZhbHVlOjEsbWF4VmFsdWU6MTYscGFyYW06dGhpcy5fZHVtbXlQYXJhbSxzd2FwcGFibGU6ITB9KX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbih6ci5nZXREZWZhdWx0cygpLHtiaXRzOjEyfSl9X2F1ZGlvV29ya2xldE5hbWUoKXtyZXR1cm4gbWF9b25SZWFkeSh0KXtvbyh0aGlzLmlucHV0LHQsdGhpcy5vdXRwdXQpO2NvbnN0IGU9dC5wYXJhbWV0ZXJzLmdldChcImJpdHNcIik7dGhpcy5iaXRzLnNldFBhcmFtKGUpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuaW5wdXQuZGlzcG9zZSgpLHRoaXMub3V0cHV0LmRpc3Bvc2UoKSx0aGlzLmJpdHMuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIHlhIGV4dGVuZHMgaGF7Y29uc3RydWN0b3IoKXtzdXBlcih1aSh5YS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJvcmRlclwiXSkpLHRoaXMubmFtZT1cIkNoZWJ5c2hldlwiO2NvbnN0IHQ9dWkoeWEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wib3JkZXJcIl0pO3RoaXMuX3NoYXBlcj1uZXcgcW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGxlbmd0aDo0MDk2fSksdGhpcy5fb3JkZXI9dC5vcmRlcix0aGlzLmNvbm5lY3RFZmZlY3QodGhpcy5fc2hhcGVyKSx0aGlzLm9yZGVyPXQub3JkZXIsdGhpcy5vdmVyc2FtcGxlPXQub3ZlcnNhbXBsZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihoYS5nZXREZWZhdWx0cygpLHtvcmRlcjoxLG92ZXJzYW1wbGU6XCJub25lXCJ9KX1fZ2V0Q29lZmZpY2llbnQodCxlLHMpe3JldHVybiBzLmhhcyhlKXx8KDA9PT1lP3Muc2V0KGUsMCk6MT09PWU/cy5zZXQoZSx0KTpzLnNldChlLDIqdCp0aGlzLl9nZXRDb2VmZmljaWVudCh0LGUtMSxzKS10aGlzLl9nZXRDb2VmZmljaWVudCh0LGUtMixzKSkpLHMuZ2V0KGUpfWdldCBvcmRlcigpe3JldHVybiB0aGlzLl9vcmRlcn1zZXQgb3JkZXIodCl7Qm4oTnVtYmVyLmlzSW50ZWdlcih0KSxcIidvcmRlcicgbXVzdCBiZSBhbiBpbnRlZ2VyXCIpLHRoaXMuX29yZGVyPXQsdGhpcy5fc2hhcGVyLnNldE1hcCgoZT0+dGhpcy5fZ2V0Q29lZmZpY2llbnQoZSx0LG5ldyBNYXApKSl9Z2V0IG92ZXJzYW1wbGUoKXtyZXR1cm4gdGhpcy5fc2hhcGVyLm92ZXJzYW1wbGV9c2V0IG92ZXJzYW1wbGUodCl7dGhpcy5fc2hhcGVyLm92ZXJzYW1wbGU9dH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9zaGFwZXIuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIHhhIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aSh4YS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjaGFubmVsc1wiXSkpLHRoaXMubmFtZT1cIlNwbGl0XCI7Y29uc3QgdD11aSh4YS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjaGFubmVsc1wiXSk7dGhpcy5fc3BsaXR0ZXI9dGhpcy5pbnB1dD10aGlzLm91dHB1dD10aGlzLmNvbnRleHQuY3JlYXRlQ2hhbm5lbFNwbGl0dGVyKHQuY2hhbm5lbHMpLHRoaXMuX2ludGVybmFsQ2hhbm5lbHM9W3RoaXMuX3NwbGl0dGVyXX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtjaGFubmVsczoyfSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fc3BsaXR0ZXIuZGlzY29ubmVjdCgpLHRoaXN9fWNsYXNzIHdhIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aSh3YS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjaGFubmVsc1wiXSkpLHRoaXMubmFtZT1cIk1lcmdlXCI7Y29uc3QgdD11aSh3YS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJjaGFubmVsc1wiXSk7dGhpcy5fbWVyZ2VyPXRoaXMub3V0cHV0PXRoaXMuaW5wdXQ9dGhpcy5jb250ZXh0LmNyZWF0ZUNoYW5uZWxNZXJnZXIodC5jaGFubmVscyl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7Y2hhbm5lbHM6Mn0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX21lcmdlci5kaXNjb25uZWN0KCksdGhpc319Y2xhc3MgYmEgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KSx0aGlzLm5hbWU9XCJTdGVyZW9FZmZlY3RcIix0aGlzLmlucHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLmlucHV0LmNoYW5uZWxDb3VudD0yLHRoaXMuaW5wdXQuY2hhbm5lbENvdW50TW9kZT1cImV4cGxpY2l0XCIsdGhpcy5fZHJ5V2V0PXRoaXMub3V0cHV0PW5ldyBjYSh7Y29udGV4dDp0aGlzLmNvbnRleHQsZmFkZTp0LndldH0pLHRoaXMud2V0PXRoaXMuX2RyeVdldC5mYWRlLHRoaXMuX3NwbGl0PW5ldyB4YSh7Y29udGV4dDp0aGlzLmNvbnRleHQsY2hhbm5lbHM6Mn0pLHRoaXMuX21lcmdlPW5ldyB3YSh7Y29udGV4dDp0aGlzLmNvbnRleHQsY2hhbm5lbHM6Mn0pLHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLl9zcGxpdCksdGhpcy5pbnB1dC5jb25uZWN0KHRoaXMuX2RyeVdldC5hKSx0aGlzLl9tZXJnZS5jb25uZWN0KHRoaXMuX2RyeVdldC5iKSxPaSh0aGlzLFtcIndldFwiXSl9Y29ubmVjdEVmZmVjdExlZnQoLi4udCl7dGhpcy5fc3BsaXQuY29ubmVjdCh0WzBdLDAsMCksb28oLi4udCkscm8odFt0Lmxlbmd0aC0xXSx0aGlzLl9tZXJnZSwwLDApfWNvbm5lY3RFZmZlY3RSaWdodCguLi50KXt0aGlzLl9zcGxpdC5jb25uZWN0KHRbMF0sMSwwKSxvbyguLi50KSxybyh0W3QubGVuZ3RoLTFdLHRoaXMuX21lcmdlLDAsMSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7d2V0OjF9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9kcnlXZXQuZGlzcG9zZSgpLHRoaXMuX3NwbGl0LmRpc3Bvc2UoKSx0aGlzLl9tZXJnZS5kaXNwb3NlKCksdGhpc319Y2xhc3MgVGEgZXh0ZW5kcyBiYXtjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KSx0aGlzLmZlZWRiYWNrPW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdmFsdWU6dC5mZWVkYmFjayx1bml0czpcIm5vcm1hbFJhbmdlXCJ9KSx0aGlzLl9mZWVkYmFja0w9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2ZlZWRiYWNrUj1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fZmVlZGJhY2tTcGxpdD1uZXcgeGEoe2NvbnRleHQ6dGhpcy5jb250ZXh0LGNoYW5uZWxzOjJ9KSx0aGlzLl9mZWVkYmFja01lcmdlPW5ldyB3YSh7Y29udGV4dDp0aGlzLmNvbnRleHQsY2hhbm5lbHM6Mn0pLHRoaXMuX21lcmdlLmNvbm5lY3QodGhpcy5fZmVlZGJhY2tTcGxpdCksdGhpcy5fZmVlZGJhY2tNZXJnZS5jb25uZWN0KHRoaXMuX3NwbGl0KSx0aGlzLl9mZWVkYmFja1NwbGl0LmNvbm5lY3QodGhpcy5fZmVlZGJhY2tMLDAsMCksdGhpcy5fZmVlZGJhY2tMLmNvbm5lY3QodGhpcy5fZmVlZGJhY2tNZXJnZSwwLDApLHRoaXMuX2ZlZWRiYWNrU3BsaXQuY29ubmVjdCh0aGlzLl9mZWVkYmFja1IsMSwwKSx0aGlzLl9mZWVkYmFja1IuY29ubmVjdCh0aGlzLl9mZWVkYmFja01lcmdlLDAsMSksdGhpcy5mZWVkYmFjay5mYW4odGhpcy5fZmVlZGJhY2tMLmdhaW4sdGhpcy5fZmVlZGJhY2tSLmdhaW4pLE9pKHRoaXMsW1wiZmVlZGJhY2tcIl0pfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGJhLmdldERlZmF1bHRzKCkse2ZlZWRiYWNrOi41fSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5mZWVkYmFjay5kaXNwb3NlKCksdGhpcy5fZmVlZGJhY2tMLmRpc3Bvc2UoKSx0aGlzLl9mZWVkYmFja1IuZGlzcG9zZSgpLHRoaXMuX2ZlZWRiYWNrU3BsaXQuZGlzcG9zZSgpLHRoaXMuX2ZlZWRiYWNrTWVyZ2UuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIFNhIGV4dGVuZHMgVGF7Y29uc3RydWN0b3IoKXtzdXBlcih1aShTYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcImRlbGF5VGltZVwiLFwiZGVwdGhcIl0pKSx0aGlzLm5hbWU9XCJDaG9ydXNcIjtjb25zdCB0PXVpKFNhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwiZGVsYXlUaW1lXCIsXCJkZXB0aFwiXSk7dGhpcy5fZGVwdGg9dC5kZXB0aCx0aGlzLl9kZWxheVRpbWU9dC5kZWxheVRpbWUvMWUzLHRoaXMuX2xmb0w9bmV3IHJyKHtjb250ZXh0OnRoaXMuY29udGV4dCxmcmVxdWVuY3k6dC5mcmVxdWVuY3ksbWluOjAsbWF4OjF9KSx0aGlzLl9sZm9SPW5ldyBycih7Y29udGV4dDp0aGlzLmNvbnRleHQsZnJlcXVlbmN5OnQuZnJlcXVlbmN5LG1pbjowLG1heDoxLHBoYXNlOjE4MH0pLHRoaXMuX2RlbGF5Tm9kZUw9bmV3IHlvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2RlbGF5Tm9kZVI9bmV3IHlvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuZnJlcXVlbmN5PXRoaXMuX2xmb0wuZnJlcXVlbmN5LE9pKHRoaXMsW1wiZnJlcXVlbmN5XCJdKSx0aGlzLl9sZm9MLmZyZXF1ZW5jeS5jb25uZWN0KHRoaXMuX2xmb1IuZnJlcXVlbmN5KSx0aGlzLmNvbm5lY3RFZmZlY3RMZWZ0KHRoaXMuX2RlbGF5Tm9kZUwpLHRoaXMuY29ubmVjdEVmZmVjdFJpZ2h0KHRoaXMuX2RlbGF5Tm9kZVIpLHRoaXMuX2xmb0wuY29ubmVjdCh0aGlzLl9kZWxheU5vZGVMLmRlbGF5VGltZSksdGhpcy5fbGZvUi5jb25uZWN0KHRoaXMuX2RlbGF5Tm9kZVIuZGVsYXlUaW1lKSx0aGlzLmRlcHRoPXRoaXMuX2RlcHRoLHRoaXMudHlwZT10LnR5cGUsdGhpcy5zcHJlYWQ9dC5zcHJlYWR9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oVGEuZ2V0RGVmYXVsdHMoKSx7ZnJlcXVlbmN5OjEuNSxkZWxheVRpbWU6My41LGRlcHRoOi43LHR5cGU6XCJzaW5lXCIsc3ByZWFkOjE4MCxmZWVkYmFjazowLHdldDouNX0pfWdldCBkZXB0aCgpe3JldHVybiB0aGlzLl9kZXB0aH1zZXQgZGVwdGgodCl7dGhpcy5fZGVwdGg9dDtjb25zdCBlPXRoaXMuX2RlbGF5VGltZSp0O3RoaXMuX2xmb0wubWluPU1hdGgubWF4KHRoaXMuX2RlbGF5VGltZS1lLDApLHRoaXMuX2xmb0wubWF4PXRoaXMuX2RlbGF5VGltZStlLHRoaXMuX2xmb1IubWluPU1hdGgubWF4KHRoaXMuX2RlbGF5VGltZS1lLDApLHRoaXMuX2xmb1IubWF4PXRoaXMuX2RlbGF5VGltZStlfWdldCBkZWxheVRpbWUoKXtyZXR1cm4gMWUzKnRoaXMuX2RlbGF5VGltZX1zZXQgZGVsYXlUaW1lKHQpe3RoaXMuX2RlbGF5VGltZT10LzFlMyx0aGlzLmRlcHRoPXRoaXMuX2RlcHRofWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuX2xmb0wudHlwZX1zZXQgdHlwZSh0KXt0aGlzLl9sZm9MLnR5cGU9dCx0aGlzLl9sZm9SLnR5cGU9dH1nZXQgc3ByZWFkKCl7cmV0dXJuIHRoaXMuX2xmb1IucGhhc2UtdGhpcy5fbGZvTC5waGFzZX1zZXQgc3ByZWFkKHQpe3RoaXMuX2xmb0wucGhhc2U9OTAtdC8yLHRoaXMuX2xmb1IucGhhc2U9dC8yKzkwfXN0YXJ0KHQpe3JldHVybiB0aGlzLl9sZm9MLnN0YXJ0KHQpLHRoaXMuX2xmb1Iuc3RhcnQodCksdGhpc31zdG9wKHQpe3JldHVybiB0aGlzLl9sZm9MLnN0b3AodCksdGhpcy5fbGZvUi5zdG9wKHQpLHRoaXN9c3luYygpe3JldHVybiB0aGlzLl9sZm9MLnN5bmMoKSx0aGlzLl9sZm9SLnN5bmMoKSx0aGlzfXVuc3luYygpe3JldHVybiB0aGlzLl9sZm9MLnVuc3luYygpLHRoaXMuX2xmb1IudW5zeW5jKCksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9sZm9MLmRpc3Bvc2UoKSx0aGlzLl9sZm9SLmRpc3Bvc2UoKSx0aGlzLl9kZWxheU5vZGVMLmRpc3Bvc2UoKSx0aGlzLl9kZWxheU5vZGVSLmRpc3Bvc2UoKSx0aGlzLmZyZXF1ZW5jeS5kaXNwb3NlKCksdGhpc319Y2xhc3Mga2EgZXh0ZW5kcyBoYXtjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKGthLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImRpc3RvcnRpb25cIl0pKSx0aGlzLm5hbWU9XCJEaXN0b3J0aW9uXCI7Y29uc3QgdD11aShrYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJkaXN0b3J0aW9uXCJdKTt0aGlzLl9zaGFwZXI9bmV3IHFvKHtjb250ZXh0OnRoaXMuY29udGV4dCxsZW5ndGg6NDA5Nn0pLHRoaXMuX2Rpc3RvcnRpb249dC5kaXN0b3J0aW9uLHRoaXMuY29ubmVjdEVmZmVjdCh0aGlzLl9zaGFwZXIpLHRoaXMuZGlzdG9ydGlvbj10LmRpc3RvcnRpb24sdGhpcy5vdmVyc2FtcGxlPXQub3ZlcnNhbXBsZX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihoYS5nZXREZWZhdWx0cygpLHtkaXN0b3J0aW9uOi40LG92ZXJzYW1wbGU6XCJub25lXCJ9KX1nZXQgZGlzdG9ydGlvbigpe3JldHVybiB0aGlzLl9kaXN0b3J0aW9ufXNldCBkaXN0b3J0aW9uKHQpe3RoaXMuX2Rpc3RvcnRpb249dDtjb25zdCBlPTEwMCp0LHM9TWF0aC5QSS8xODA7dGhpcy5fc2hhcGVyLnNldE1hcCgodD0+TWF0aC5hYnModCk8LjAwMT8wOigzK2UpKnQqMjAqcy8oTWF0aC5QSStlKk1hdGguYWJzKHQpKSkpfWdldCBvdmVyc2FtcGxlKCl7cmV0dXJuIHRoaXMuX3NoYXBlci5vdmVyc2FtcGxlfXNldCBvdmVyc2FtcGxlKHQpe3RoaXMuX3NoYXBlci5vdmVyc2FtcGxlPXR9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fc2hhcGVyLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBBYSBleHRlbmRzIGhhe2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMubmFtZT1cIkZlZWRiYWNrRWZmZWN0XCIsdGhpcy5fZmVlZGJhY2tHYWluPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHQsZ2Fpbjp0LmZlZWRiYWNrLHVuaXRzOlwibm9ybWFsUmFuZ2VcIn0pLHRoaXMuZmVlZGJhY2s9dGhpcy5fZmVlZGJhY2tHYWluLmdhaW4sT2kodGhpcyxcImZlZWRiYWNrXCIpLHRoaXMuZWZmZWN0UmV0dXJuLmNoYWluKHRoaXMuX2ZlZWRiYWNrR2Fpbix0aGlzLmVmZmVjdFNlbmQpfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGhhLmdldERlZmF1bHRzKCkse2ZlZWRiYWNrOi4xMjV9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9mZWVkYmFja0dhaW4uZGlzcG9zZSgpLHRoaXMuZmVlZGJhY2suZGlzcG9zZSgpLHRoaXN9fWNsYXNzIENhIGV4dGVuZHMgQWF7Y29uc3RydWN0b3IoKXtzdXBlcih1aShDYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJkZWxheVRpbWVcIixcImZlZWRiYWNrXCJdKSksdGhpcy5uYW1lPVwiRmVlZGJhY2tEZWxheVwiO2NvbnN0IHQ9dWkoQ2EuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZGVsYXlUaW1lXCIsXCJmZWVkYmFja1wiXSk7dGhpcy5fZGVsYXlOb2RlPW5ldyB5byh7Y29udGV4dDp0aGlzLmNvbnRleHQsZGVsYXlUaW1lOnQuZGVsYXlUaW1lLG1heERlbGF5OnQubWF4RGVsYXl9KSx0aGlzLmRlbGF5VGltZT10aGlzLl9kZWxheU5vZGUuZGVsYXlUaW1lLHRoaXMuY29ubmVjdEVmZmVjdCh0aGlzLl9kZWxheU5vZGUpLE9pKHRoaXMsXCJkZWxheVRpbWVcIil9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oQWEuZ2V0RGVmYXVsdHMoKSx7ZGVsYXlUaW1lOi4yNSxtYXhEZWxheToxfSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fZGVsYXlOb2RlLmRpc3Bvc2UoKSx0aGlzLmRlbGF5VGltZS5kaXNwb3NlKCksdGhpc319Y2xhc3MgRGEgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KSx0aGlzLm5hbWU9XCJQaGFzZVNoaWZ0QWxscGFzc1wiLHRoaXMuaW5wdXQ9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMub3V0cHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLm9mZnNldDkwPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9iYW5rMD10aGlzLl9jcmVhdGVBbGxQYXNzRmlsdGVyQmFuayhbLjY5MjM4NzgsLjkzNjA2NTQzMjI5NTksLjk4ODIyOTUyMjY4NiwuOTk4NzQ4ODQ1MjczN10pLHRoaXMuX2JhbmsxPXRoaXMuX2NyZWF0ZUFsbFBhc3NGaWx0ZXJCYW5rKFsuNDAyMTkyMTE2MjQyNiwuODU2MTcxMDg4MjQyLC45NzIyOTA5NTQ1NjUxLC45OTUyODg0NzkxMjc4XSksdGhpcy5fb25lU2FtcGxlRGVsYXk9dGhpcy5jb250ZXh0LmNyZWF0ZUlJUkZpbHRlcihbMCwxXSxbMSwwXSksb28odGhpcy5pbnB1dCwuLi50aGlzLl9iYW5rMCx0aGlzLl9vbmVTYW1wbGVEZWxheSx0aGlzLm91dHB1dCksb28odGhpcy5pbnB1dCwuLi50aGlzLl9iYW5rMSx0aGlzLm9mZnNldDkwKX1fY3JlYXRlQWxsUGFzc0ZpbHRlckJhbmsodCl7cmV0dXJuIHQubWFwKCh0PT57Y29uc3QgZT1bW3QqdCwwLC0xXSxbMSwwLC10KnRdXTtyZXR1cm4gdGhpcy5jb250ZXh0LmNyZWF0ZUlJUkZpbHRlcihlWzBdLGVbMV0pfSkpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuaW5wdXQuZGlzcG9zZSgpLHRoaXMub3V0cHV0LmRpc3Bvc2UoKSx0aGlzLm9mZnNldDkwLmRpc3Bvc2UoKSx0aGlzLl9iYW5rMC5mb3JFYWNoKCh0PT50LmRpc2Nvbm5lY3QoKSkpLHRoaXMuX2JhbmsxLmZvckVhY2goKHQ9PnQuZGlzY29ubmVjdCgpKSksdGhpcy5fb25lU2FtcGxlRGVsYXkuZGlzY29ubmVjdCgpLHRoaXN9fWNsYXNzIE9hIGV4dGVuZHMgaGF7Y29uc3RydWN0b3IoKXtzdXBlcih1aShPYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIl0pKSx0aGlzLm5hbWU9XCJGcmVxdWVuY3lTaGlmdGVyXCI7Y29uc3QgdD11aShPYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIl0pO3RoaXMuZnJlcXVlbmN5PW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdW5pdHM6XCJmcmVxdWVuY3lcIix2YWx1ZTp0LmZyZXF1ZW5jeSxtaW5WYWx1ZTotdGhpcy5jb250ZXh0LnNhbXBsZVJhdGUvMixtYXhWYWx1ZTp0aGlzLmNvbnRleHQuc2FtcGxlUmF0ZS8yfSksdGhpcy5fc2luZT1uZXcgUW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHR5cGU6XCJzaW5lXCJ9KSx0aGlzLl9jb3NpbmU9bmV3IFpvKHtjb250ZXh0OnRoaXMuY29udGV4dCxwaGFzZTotOTAsdHlwZTpcInNpbmVcIn0pLHRoaXMuX3NpbmVNdWx0aXBseT1uZXcgWW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fY29zaW5lTXVsdGlwbHk9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX25lZ2F0ZT1uZXcgZnIoe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fYWRkPW5ldyBucih7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9waGFzZVNoaWZ0ZXI9bmV3IERhKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuZWZmZWN0U2VuZC5jb25uZWN0KHRoaXMuX3BoYXNlU2hpZnRlciksdGhpcy5mcmVxdWVuY3kuZmFuKHRoaXMuX3NpbmUuZnJlcXVlbmN5LHRoaXMuX2Nvc2luZS5mcmVxdWVuY3kpLHRoaXMuX3BoYXNlU2hpZnRlci5vZmZzZXQ5MC5jb25uZWN0KHRoaXMuX2Nvc2luZU11bHRpcGx5KSx0aGlzLl9jb3NpbmUuY29ubmVjdCh0aGlzLl9jb3NpbmVNdWx0aXBseS5mYWN0b3IpLHRoaXMuX3BoYXNlU2hpZnRlci5jb25uZWN0KHRoaXMuX3NpbmVNdWx0aXBseSksdGhpcy5fc2luZS5jb25uZWN0KHRoaXMuX3NpbmVNdWx0aXBseS5mYWN0b3IpLHRoaXMuX3NpbmVNdWx0aXBseS5jb25uZWN0KHRoaXMuX25lZ2F0ZSksdGhpcy5fY29zaW5lTXVsdGlwbHkuY29ubmVjdCh0aGlzLl9hZGQpLHRoaXMuX25lZ2F0ZS5jb25uZWN0KHRoaXMuX2FkZC5hZGRlbmQpLHRoaXMuX2FkZC5jb25uZWN0KHRoaXMuZWZmZWN0UmV0dXJuKTtjb25zdCBlPXRoaXMuaW1tZWRpYXRlKCk7dGhpcy5fc2luZS5zdGFydChlKSx0aGlzLl9jb3NpbmUuc3RhcnQoZSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaGEuZ2V0RGVmYXVsdHMoKSx7ZnJlcXVlbmN5OjB9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLmZyZXF1ZW5jeS5kaXNwb3NlKCksdGhpcy5fYWRkLmRpc3Bvc2UoKSx0aGlzLl9jb3NpbmUuZGlzcG9zZSgpLHRoaXMuX2Nvc2luZU11bHRpcGx5LmRpc3Bvc2UoKSx0aGlzLl9uZWdhdGUuZGlzcG9zZSgpLHRoaXMuX3BoYXNlU2hpZnRlci5kaXNwb3NlKCksdGhpcy5fc2luZS5kaXNwb3NlKCksdGhpcy5fc2luZU11bHRpcGx5LmRpc3Bvc2UoKSx0aGlzfX1jb25zdCBNYT1bMTU1Ny80NDEwMCwxNjE3LzQ0MTAwLDE0OTEvNDQxMDAsMTQyMi80NDEwMCwxMjc3LzQ0MTAwLDEzNTYvNDQxMDAsMTE4OC80NDEwMCwxMTE2LzQ0MTAwXSxFYT1bMjI1LDU1Niw0NDEsMzQxXTtjbGFzcyBSYSBleHRlbmRzIGJhe2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoUmEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wicm9vbVNpemVcIixcImRhbXBlbmluZ1wiXSkpLHRoaXMubmFtZT1cIkZyZWV2ZXJiXCIsdGhpcy5fY29tYkZpbHRlcnM9W10sdGhpcy5fYWxscGFzc0ZpbHRlcnNMPVtdLHRoaXMuX2FsbHBhc3NGaWx0ZXJzUj1bXTtjb25zdCB0PXVpKFJhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInJvb21TaXplXCIsXCJkYW1wZW5pbmdcIl0pO3RoaXMucm9vbVNpemU9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0LnJvb21TaXplLHVuaXRzOlwibm9ybWFsUmFuZ2VcIn0pLHRoaXMuX2FsbHBhc3NGaWx0ZXJzTD1FYS5tYXAoKHQ9Pntjb25zdCBlPXRoaXMuY29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtyZXR1cm4gZS50eXBlPVwiYWxscGFzc1wiLGUuZnJlcXVlbmN5LnZhbHVlPXQsZX0pKSx0aGlzLl9hbGxwYXNzRmlsdGVyc1I9RWEubWFwKCh0PT57Y29uc3QgZT10aGlzLmNvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7cmV0dXJuIGUudHlwZT1cImFsbHBhc3NcIixlLmZyZXF1ZW5jeS52YWx1ZT10LGV9KSksdGhpcy5fY29tYkZpbHRlcnM9TWEubWFwKCgoZSxzKT0+e2NvbnN0IG49bmV3IEdyKHtjb250ZXh0OnRoaXMuY29udGV4dCxkYW1wZW5pbmc6dC5kYW1wZW5pbmcsZGVsYXlUaW1lOmV9KTtyZXR1cm4gczxNYS5sZW5ndGgvMj90aGlzLmNvbm5lY3RFZmZlY3RMZWZ0KG4sLi4udGhpcy5fYWxscGFzc0ZpbHRlcnNMKTp0aGlzLmNvbm5lY3RFZmZlY3RSaWdodChuLC4uLnRoaXMuX2FsbHBhc3NGaWx0ZXJzUiksdGhpcy5yb29tU2l6ZS5jb25uZWN0KG4ucmVzb25hbmNlKSxufSkpLE9pKHRoaXMsW1wicm9vbVNpemVcIl0pfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGJhLmdldERlZmF1bHRzKCkse3Jvb21TaXplOi43LGRhbXBlbmluZzozZTN9KX1nZXQgZGFtcGVuaW5nKCl7cmV0dXJuIHRoaXMuX2NvbWJGaWx0ZXJzWzBdLmRhbXBlbmluZ31zZXQgZGFtcGVuaW5nKHQpe3RoaXMuX2NvbWJGaWx0ZXJzLmZvckVhY2goKGU9PmUuZGFtcGVuaW5nPXQpKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9hbGxwYXNzRmlsdGVyc0wuZm9yRWFjaCgodD0+dC5kaXNjb25uZWN0KCkpKSx0aGlzLl9hbGxwYXNzRmlsdGVyc1IuZm9yRWFjaCgodD0+dC5kaXNjb25uZWN0KCkpKSx0aGlzLl9jb21iRmlsdGVycy5mb3JFYWNoKCh0PT50LmRpc3Bvc2UoKSkpLHRoaXMucm9vbVNpemUuZGlzcG9zZSgpLHRoaXN9fWNvbnN0IHFhPVsuMDY3NDgsLjA2NDA0LC4wODIxMiwuMDkwMDRdLEZhPVsuNzczLC44MDIsLjc1MywuNzMzXSxJYT1bMzQ3LDExMywzN107Y2xhc3MgVmEgZXh0ZW5kcyBiYXtjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFZhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInJvb21TaXplXCJdKSksdGhpcy5uYW1lPVwiSkNSZXZlcmJcIix0aGlzLl9hbGxwYXNzRmlsdGVycz1bXSx0aGlzLl9mZWVkYmFja0NvbWJGaWx0ZXJzPVtdO2NvbnN0IHQ9dWkoVmEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wicm9vbVNpemVcIl0pO3RoaXMucm9vbVNpemU9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0LnJvb21TaXplLHVuaXRzOlwibm9ybWFsUmFuZ2VcIn0pLHRoaXMuX3NjYWxlUm9vbVNpemU9bmV3IGlyKHtjb250ZXh0OnRoaXMuY29udGV4dCxtaW46LS43MzMsbWF4Oi4xOTd9KSx0aGlzLl9hbGxwYXNzRmlsdGVycz1JYS5tYXAoKHQ9Pntjb25zdCBlPXRoaXMuY29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtyZXR1cm4gZS50eXBlPVwiYWxscGFzc1wiLGUuZnJlcXVlbmN5LnZhbHVlPXQsZX0pKSx0aGlzLl9mZWVkYmFja0NvbWJGaWx0ZXJzPXFhLm1hcCgoKHQsZSk9Pntjb25zdCBzPW5ldyBCcih7Y29udGV4dDp0aGlzLmNvbnRleHQsZGVsYXlUaW1lOnR9KTtyZXR1cm4gdGhpcy5fc2NhbGVSb29tU2l6ZS5jb25uZWN0KHMucmVzb25hbmNlKSxzLnJlc29uYW5jZS52YWx1ZT1GYVtlXSxlPHFhLmxlbmd0aC8yP3RoaXMuY29ubmVjdEVmZmVjdExlZnQoLi4udGhpcy5fYWxscGFzc0ZpbHRlcnMscyk6dGhpcy5jb25uZWN0RWZmZWN0UmlnaHQoLi4udGhpcy5fYWxscGFzc0ZpbHRlcnMscyksc30pKSx0aGlzLnJvb21TaXplLmNvbm5lY3QodGhpcy5fc2NhbGVSb29tU2l6ZSksT2kodGhpcyxbXCJyb29tU2l6ZVwiXSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oYmEuZ2V0RGVmYXVsdHMoKSx7cm9vbVNpemU6LjV9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9hbGxwYXNzRmlsdGVycy5mb3JFYWNoKCh0PT50LmRpc2Nvbm5lY3QoKSkpLHRoaXMuX2ZlZWRiYWNrQ29tYkZpbHRlcnMuZm9yRWFjaCgodD0+dC5kaXNwb3NlKCkpKSx0aGlzLnJvb21TaXplLmRpc3Bvc2UoKSx0aGlzLl9zY2FsZVJvb21TaXplLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBOYSBleHRlbmRzIFRhe2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMuX2ZlZWRiYWNrTC5kaXNjb25uZWN0KCksdGhpcy5fZmVlZGJhY2tMLmNvbm5lY3QodGhpcy5fZmVlZGJhY2tNZXJnZSwwLDEpLHRoaXMuX2ZlZWRiYWNrUi5kaXNjb25uZWN0KCksdGhpcy5fZmVlZGJhY2tSLmNvbm5lY3QodGhpcy5fZmVlZGJhY2tNZXJnZSwwLDApLE9pKHRoaXMsW1wiZmVlZGJhY2tcIl0pfX1jbGFzcyBQYSBleHRlbmRzIE5he2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoUGEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZGVsYXlUaW1lXCIsXCJmZWVkYmFja1wiXSkpLHRoaXMubmFtZT1cIlBpbmdQb25nRGVsYXlcIjtjb25zdCB0PXVpKFBhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImRlbGF5VGltZVwiLFwiZmVlZGJhY2tcIl0pO3RoaXMuX2xlZnREZWxheT1uZXcgeW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LG1heERlbGF5OnQubWF4RGVsYXl9KSx0aGlzLl9yaWdodERlbGF5PW5ldyB5byh7Y29udGV4dDp0aGlzLmNvbnRleHQsbWF4RGVsYXk6dC5tYXhEZWxheX0pLHRoaXMuX3JpZ2h0UHJlRGVsYXk9bmV3IHlvKHtjb250ZXh0OnRoaXMuY29udGV4dCxtYXhEZWxheTp0Lm1heERlbGF5fSksdGhpcy5kZWxheVRpbWU9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcInRpbWVcIix2YWx1ZTp0LmRlbGF5VGltZX0pLHRoaXMuY29ubmVjdEVmZmVjdExlZnQodGhpcy5fbGVmdERlbGF5KSx0aGlzLmNvbm5lY3RFZmZlY3RSaWdodCh0aGlzLl9yaWdodFByZURlbGF5LHRoaXMuX3JpZ2h0RGVsYXkpLHRoaXMuZGVsYXlUaW1lLmZhbih0aGlzLl9sZWZ0RGVsYXkuZGVsYXlUaW1lLHRoaXMuX3JpZ2h0RGVsYXkuZGVsYXlUaW1lLHRoaXMuX3JpZ2h0UHJlRGVsYXkuZGVsYXlUaW1lKSx0aGlzLl9mZWVkYmFja0wuZGlzY29ubmVjdCgpLHRoaXMuX2ZlZWRiYWNrTC5jb25uZWN0KHRoaXMuX3JpZ2h0RGVsYXkpLE9pKHRoaXMsW1wiZGVsYXlUaW1lXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihOYS5nZXREZWZhdWx0cygpLHtkZWxheVRpbWU6LjI1LG1heERlbGF5OjF9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9sZWZ0RGVsYXkuZGlzcG9zZSgpLHRoaXMuX3JpZ2h0RGVsYXkuZGlzcG9zZSgpLHRoaXMuX3JpZ2h0UHJlRGVsYXkuZGlzcG9zZSgpLHRoaXMuZGVsYXlUaW1lLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBqYSBleHRlbmRzIEFhe2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoamEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wicGl0Y2hcIl0pKSx0aGlzLm5hbWU9XCJQaXRjaFNoaWZ0XCI7Y29uc3QgdD11aShqYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJwaXRjaFwiXSk7dGhpcy5fZnJlcXVlbmN5PW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9kZWxheUE9bmV3IHlvKHttYXhEZWxheToxLGNvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fbGZvQT1uZXcgcnIoe2NvbnRleHQ6dGhpcy5jb250ZXh0LG1pbjowLG1heDouMSx0eXBlOlwic2F3dG9vdGhcIn0pLmNvbm5lY3QodGhpcy5fZGVsYXlBLmRlbGF5VGltZSksdGhpcy5fZGVsYXlCPW5ldyB5byh7bWF4RGVsYXk6MSxjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2xmb0I9bmV3IHJyKHtjb250ZXh0OnRoaXMuY29udGV4dCxtaW46MCxtYXg6LjEsdHlwZTpcInNhd3Rvb3RoXCIscGhhc2U6MTgwfSkuY29ubmVjdCh0aGlzLl9kZWxheUIuZGVsYXlUaW1lKSx0aGlzLl9jcm9zc0ZhZGU9bmV3IGNhKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2Nyb3NzRmFkZUxGTz1uZXcgcnIoe2NvbnRleHQ6dGhpcy5jb250ZXh0LG1pbjowLG1heDoxLHR5cGU6XCJ0cmlhbmdsZVwiLHBoYXNlOjkwfSkuY29ubmVjdCh0aGlzLl9jcm9zc0ZhZGUuZmFkZSksdGhpcy5fZmVlZGJhY2tEZWxheT1uZXcgeW8oe2RlbGF5VGltZTp0LmRlbGF5VGltZSxjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuZGVsYXlUaW1lPXRoaXMuX2ZlZWRiYWNrRGVsYXkuZGVsYXlUaW1lLE9pKHRoaXMsXCJkZWxheVRpbWVcIiksdGhpcy5fcGl0Y2g9dC5waXRjaCx0aGlzLl93aW5kb3dTaXplPXQud2luZG93U2l6ZSx0aGlzLl9kZWxheUEuY29ubmVjdCh0aGlzLl9jcm9zc0ZhZGUuYSksdGhpcy5fZGVsYXlCLmNvbm5lY3QodGhpcy5fY3Jvc3NGYWRlLmIpLHRoaXMuX2ZyZXF1ZW5jeS5mYW4odGhpcy5fbGZvQS5mcmVxdWVuY3ksdGhpcy5fbGZvQi5mcmVxdWVuY3ksdGhpcy5fY3Jvc3NGYWRlTEZPLmZyZXF1ZW5jeSksdGhpcy5lZmZlY3RTZW5kLmZhbih0aGlzLl9kZWxheUEsdGhpcy5fZGVsYXlCKSx0aGlzLl9jcm9zc0ZhZGUuY2hhaW4odGhpcy5fZmVlZGJhY2tEZWxheSx0aGlzLmVmZmVjdFJldHVybik7Y29uc3QgZT10aGlzLm5vdygpO3RoaXMuX2xmb0Euc3RhcnQoZSksdGhpcy5fbGZvQi5zdGFydChlKSx0aGlzLl9jcm9zc0ZhZGVMRk8uc3RhcnQoZSksdGhpcy53aW5kb3dTaXplPXRoaXMuX3dpbmRvd1NpemV9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oQWEuZ2V0RGVmYXVsdHMoKSx7cGl0Y2g6MCx3aW5kb3dTaXplOi4xLGRlbGF5VGltZTowLGZlZWRiYWNrOjB9KX1nZXQgcGl0Y2goKXtyZXR1cm4gdGhpcy5fcGl0Y2h9c2V0IHBpdGNoKHQpe3RoaXMuX3BpdGNoPXQ7bGV0IGU9MDt0PDA/KHRoaXMuX2xmb0EubWluPTAsdGhpcy5fbGZvQS5tYXg9dGhpcy5fd2luZG93U2l6ZSx0aGlzLl9sZm9CLm1pbj0wLHRoaXMuX2xmb0IubWF4PXRoaXMuX3dpbmRvd1NpemUsZT16aSh0LTEpKzEpOih0aGlzLl9sZm9BLm1pbj10aGlzLl93aW5kb3dTaXplLHRoaXMuX2xmb0EubWF4PTAsdGhpcy5fbGZvQi5taW49dGhpcy5fd2luZG93U2l6ZSx0aGlzLl9sZm9CLm1heD0wLGU9emkodCktMSksdGhpcy5fZnJlcXVlbmN5LnZhbHVlPWUqKDEuMi90aGlzLl93aW5kb3dTaXplKX1nZXQgd2luZG93U2l6ZSgpe3JldHVybiB0aGlzLl93aW5kb3dTaXplfXNldCB3aW5kb3dTaXplKHQpe3RoaXMuX3dpbmRvd1NpemU9dGhpcy50b1NlY29uZHModCksdGhpcy5waXRjaD10aGlzLl9waXRjaH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9mcmVxdWVuY3kuZGlzcG9zZSgpLHRoaXMuX2RlbGF5QS5kaXNwb3NlKCksdGhpcy5fZGVsYXlCLmRpc3Bvc2UoKSx0aGlzLl9sZm9BLmRpc3Bvc2UoKSx0aGlzLl9sZm9CLmRpc3Bvc2UoKSx0aGlzLl9jcm9zc0ZhZGUuZGlzcG9zZSgpLHRoaXMuX2Nyb3NzRmFkZUxGTy5kaXNwb3NlKCksdGhpcy5fZmVlZGJhY2tEZWxheS5kaXNwb3NlKCksdGhpc319Y2xhc3MgTGEgZXh0ZW5kcyBiYXtjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKExhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwib2N0YXZlc1wiLFwiYmFzZUZyZXF1ZW5jeVwiXSkpLHRoaXMubmFtZT1cIlBoYXNlclwiO2NvbnN0IHQ9dWkoTGEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZnJlcXVlbmN5XCIsXCJvY3RhdmVzXCIsXCJiYXNlRnJlcXVlbmN5XCJdKTt0aGlzLl9sZm9MPW5ldyBycih7Y29udGV4dDp0aGlzLmNvbnRleHQsZnJlcXVlbmN5OnQuZnJlcXVlbmN5LG1pbjowLG1heDoxfSksdGhpcy5fbGZvUj1uZXcgcnIoe2NvbnRleHQ6dGhpcy5jb250ZXh0LGZyZXF1ZW5jeTp0LmZyZXF1ZW5jeSxtaW46MCxtYXg6MSxwaGFzZToxODB9KSx0aGlzLl9iYXNlRnJlcXVlbmN5PXRoaXMudG9GcmVxdWVuY3kodC5iYXNlRnJlcXVlbmN5KSx0aGlzLl9vY3RhdmVzPXQub2N0YXZlcyx0aGlzLlE9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTp0LlEsdW5pdHM6XCJwb3NpdGl2ZVwifSksdGhpcy5fZmlsdGVyc0w9dGhpcy5fbWFrZUZpbHRlcnModC5zdGFnZXMsdGhpcy5fbGZvTCksdGhpcy5fZmlsdGVyc1I9dGhpcy5fbWFrZUZpbHRlcnModC5zdGFnZXMsdGhpcy5fbGZvUiksdGhpcy5mcmVxdWVuY3k9dGhpcy5fbGZvTC5mcmVxdWVuY3ksdGhpcy5mcmVxdWVuY3kudmFsdWU9dC5mcmVxdWVuY3ksdGhpcy5jb25uZWN0RWZmZWN0TGVmdCguLi50aGlzLl9maWx0ZXJzTCksdGhpcy5jb25uZWN0RWZmZWN0UmlnaHQoLi4udGhpcy5fZmlsdGVyc1IpLHRoaXMuX2xmb0wuZnJlcXVlbmN5LmNvbm5lY3QodGhpcy5fbGZvUi5mcmVxdWVuY3kpLHRoaXMuYmFzZUZyZXF1ZW5jeT10LmJhc2VGcmVxdWVuY3ksdGhpcy5vY3RhdmVzPXQub2N0YXZlcyx0aGlzLl9sZm9MLnN0YXJ0KCksdGhpcy5fbGZvUi5zdGFydCgpLE9pKHRoaXMsW1wiZnJlcXVlbmN5XCIsXCJRXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihiYS5nZXREZWZhdWx0cygpLHtmcmVxdWVuY3k6LjUsb2N0YXZlczozLHN0YWdlczoxMCxROjEwLGJhc2VGcmVxdWVuY3k6MzUwfSl9X21ha2VGaWx0ZXJzKHQsZSl7Y29uc3Qgcz1bXTtmb3IobGV0IG49MDtuPHQ7bisrKXtjb25zdCB0PXRoaXMuY29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTt0LnR5cGU9XCJhbGxwYXNzXCIsdGhpcy5RLmNvbm5lY3QodC5RKSxlLmNvbm5lY3QodC5mcmVxdWVuY3kpLHMucHVzaCh0KX1yZXR1cm4gc31nZXQgb2N0YXZlcygpe3JldHVybiB0aGlzLl9vY3RhdmVzfXNldCBvY3RhdmVzKHQpe3RoaXMuX29jdGF2ZXM9dDtjb25zdCBlPXRoaXMuX2Jhc2VGcmVxdWVuY3kqTWF0aC5wb3coMix0KTt0aGlzLl9sZm9MLm1heD1lLHRoaXMuX2xmb1IubWF4PWV9Z2V0IGJhc2VGcmVxdWVuY3koKXtyZXR1cm4gdGhpcy5fYmFzZUZyZXF1ZW5jeX1zZXQgYmFzZUZyZXF1ZW5jeSh0KXt0aGlzLl9iYXNlRnJlcXVlbmN5PXRoaXMudG9GcmVxdWVuY3kodCksdGhpcy5fbGZvTC5taW49dGhpcy5fYmFzZUZyZXF1ZW5jeSx0aGlzLl9sZm9SLm1pbj10aGlzLl9iYXNlRnJlcXVlbmN5LHRoaXMub2N0YXZlcz10aGlzLl9vY3RhdmVzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuUS5kaXNwb3NlKCksdGhpcy5fbGZvTC5kaXNwb3NlKCksdGhpcy5fbGZvUi5kaXNwb3NlKCksdGhpcy5fZmlsdGVyc0wuZm9yRWFjaCgodD0+dC5kaXNjb25uZWN0KCkpKSx0aGlzLl9maWx0ZXJzUi5mb3JFYWNoKCh0PT50LmRpc2Nvbm5lY3QoKSkpLHRoaXMuZnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyB6YSBleHRlbmRzIGhhe2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoemEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wiZGVjYXlcIl0pKSx0aGlzLm5hbWU9XCJSZXZlcmJcIix0aGlzLl9jb252b2x2ZXI9dGhpcy5jb250ZXh0LmNyZWF0ZUNvbnZvbHZlcigpLHRoaXMucmVhZHk9UHJvbWlzZS5yZXNvbHZlKCk7Y29uc3QgdD11aSh6YS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJkZWNheVwiXSk7dGhpcy5fZGVjYXk9dC5kZWNheSx0aGlzLl9wcmVEZWxheT10LnByZURlbGF5LHRoaXMuZ2VuZXJhdGUoKSx0aGlzLmNvbm5lY3RFZmZlY3QodGhpcy5fY29udm9sdmVyKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihoYS5nZXREZWZhdWx0cygpLHtkZWNheToxLjUscHJlRGVsYXk6LjAxfSl9Z2V0IGRlY2F5KCl7cmV0dXJuIHRoaXMuX2RlY2F5fXNldCBkZWNheSh0KXtVbih0PXRoaXMudG9TZWNvbmRzKHQpLC4wMDEpLHRoaXMuX2RlY2F5PXQsdGhpcy5nZW5lcmF0ZSgpfWdldCBwcmVEZWxheSgpe3JldHVybiB0aGlzLl9wcmVEZWxheX1zZXQgcHJlRGVsYXkodCl7VW4odD10aGlzLnRvU2Vjb25kcyh0KSwwKSx0aGlzLl9wcmVEZWxheT10LHRoaXMuZ2VuZXJhdGUoKX1nZW5lcmF0ZSgpe3JldHVybiBuaSh0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKigpe2NvbnN0IHQ9dGhpcy5yZWFkeSxlPW5ldyBxaSgyLHRoaXMuX2RlY2F5K3RoaXMuX3ByZURlbGF5LHRoaXMuY29udGV4dC5zYW1wbGVSYXRlKSxzPW5ldyBMbyh7Y29udGV4dDplfSksbj1uZXcgTG8oe2NvbnRleHQ6ZX0pLGk9bmV3IHdhKHtjb250ZXh0OmV9KTtzLmNvbm5lY3QoaSwwLDApLG4uY29ubmVjdChpLDAsMSk7Y29uc3Qgbz1uZXcgaG8oe2NvbnRleHQ6ZX0pLnRvRGVzdGluYXRpb24oKTtpLmNvbm5lY3Qobykscy5zdGFydCgwKSxuLnN0YXJ0KDApLG8uZ2Fpbi5zZXRWYWx1ZUF0VGltZSgwLDApLG8uZ2Fpbi5zZXRWYWx1ZUF0VGltZSgxLHRoaXMuX3ByZURlbGF5KSxvLmdhaW4uZXhwb25lbnRpYWxBcHByb2FjaFZhbHVlQXRUaW1lKDAsdGhpcy5fcHJlRGVsYXksdGhpcy5kZWNheSk7Y29uc3Qgcj1lLnJlbmRlcigpO3JldHVybiB0aGlzLnJlYWR5PXIudGhlbihFaSkseWllbGQgdCx0aGlzLl9jb252b2x2ZXIuYnVmZmVyPSh5aWVsZCByKS5nZXQoKSx0aGlzfSkpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2NvbnZvbHZlci5kaXNjb25uZWN0KCksdGhpc319Y2xhc3MgV2EgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFdhLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSksdGhpcy5uYW1lPVwiTWlkU2lkZVNwbGl0XCIsdGhpcy5fc3BsaXQ9dGhpcy5pbnB1dD1uZXcgeGEoe2NoYW5uZWxzOjIsY29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9taWRBZGQ9bmV3IG5yKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMubWlkPW5ldyBZbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdmFsdWU6TWF0aC5TUVJUMV8yfSksdGhpcy5fc2lkZVN1YnRyYWN0PW5ldyBfcih7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLnNpZGU9bmV3IFlvKHtjb250ZXh0OnRoaXMuY29udGV4dCx2YWx1ZTpNYXRoLlNRUlQxXzJ9KSx0aGlzLl9zcGxpdC5jb25uZWN0KHRoaXMuX21pZEFkZCwwKSx0aGlzLl9zcGxpdC5jb25uZWN0KHRoaXMuX21pZEFkZC5hZGRlbmQsMSksdGhpcy5fc3BsaXQuY29ubmVjdCh0aGlzLl9zaWRlU3VidHJhY3QsMCksdGhpcy5fc3BsaXQuY29ubmVjdCh0aGlzLl9zaWRlU3VidHJhY3Quc3VidHJhaGVuZCwxKSx0aGlzLl9taWRBZGQuY29ubmVjdCh0aGlzLm1pZCksdGhpcy5fc2lkZVN1YnRyYWN0LmNvbm5lY3QodGhpcy5zaWRlKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLm1pZC5kaXNwb3NlKCksdGhpcy5zaWRlLmRpc3Bvc2UoKSx0aGlzLl9taWRBZGQuZGlzcG9zZSgpLHRoaXMuX3NpZGVTdWJ0cmFjdC5kaXNwb3NlKCksdGhpcy5fc3BsaXQuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIEJhIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShCYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cykpLHRoaXMubmFtZT1cIk1pZFNpZGVNZXJnZVwiLHRoaXMubWlkPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLnNpZGU9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2xlZnQ9bmV3IG5yKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2xlZnRNdWx0PW5ldyBZbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdmFsdWU6TWF0aC5TUVJUMV8yfSksdGhpcy5fcmlnaHQ9bmV3IF9yKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX3JpZ2h0TXVsdD1uZXcgWW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOk1hdGguU1FSVDFfMn0pLHRoaXMuX21lcmdlPXRoaXMub3V0cHV0PW5ldyB3YSh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLm1pZC5mYW4odGhpcy5fbGVmdCksdGhpcy5zaWRlLmNvbm5lY3QodGhpcy5fbGVmdC5hZGRlbmQpLHRoaXMubWlkLmNvbm5lY3QodGhpcy5fcmlnaHQpLHRoaXMuc2lkZS5jb25uZWN0KHRoaXMuX3JpZ2h0LnN1YnRyYWhlbmQpLHRoaXMuX2xlZnQuY29ubmVjdCh0aGlzLl9sZWZ0TXVsdCksdGhpcy5fcmlnaHQuY29ubmVjdCh0aGlzLl9yaWdodE11bHQpLHRoaXMuX2xlZnRNdWx0LmNvbm5lY3QodGhpcy5fbWVyZ2UsMCwwKSx0aGlzLl9yaWdodE11bHQuY29ubmVjdCh0aGlzLl9tZXJnZSwwLDEpfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMubWlkLmRpc3Bvc2UoKSx0aGlzLnNpZGUuZGlzcG9zZSgpLHRoaXMuX2xlZnRNdWx0LmRpc3Bvc2UoKSx0aGlzLl9yaWdodE11bHQuZGlzcG9zZSgpLHRoaXMuX2xlZnQuZGlzcG9zZSgpLHRoaXMuX3JpZ2h0LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBVYSBleHRlbmRzIGhhe2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMubmFtZT1cIk1pZFNpZGVFZmZlY3RcIix0aGlzLl9taWRTaWRlTWVyZ2U9bmV3IEJhKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX21pZFNpZGVTcGxpdD1uZXcgV2Eoe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fbWlkU2VuZD10aGlzLl9taWRTaWRlU3BsaXQubWlkLHRoaXMuX3NpZGVTZW5kPXRoaXMuX21pZFNpZGVTcGxpdC5zaWRlLHRoaXMuX21pZFJldHVybj10aGlzLl9taWRTaWRlTWVyZ2UubWlkLHRoaXMuX3NpZGVSZXR1cm49dGhpcy5fbWlkU2lkZU1lcmdlLnNpZGUsdGhpcy5lZmZlY3RTZW5kLmNvbm5lY3QodGhpcy5fbWlkU2lkZVNwbGl0KSx0aGlzLl9taWRTaWRlTWVyZ2UuY29ubmVjdCh0aGlzLmVmZmVjdFJldHVybil9Y29ubmVjdEVmZmVjdE1pZCguLi50KXt0aGlzLl9taWRTZW5kLmNoYWluKC4uLnQsdGhpcy5fbWlkUmV0dXJuKX1jb25uZWN0RWZmZWN0U2lkZSguLi50KXt0aGlzLl9zaWRlU2VuZC5jaGFpbiguLi50LHRoaXMuX3NpZGVSZXR1cm4pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX21pZFNpZGVTcGxpdC5kaXNwb3NlKCksdGhpcy5fbWlkU2lkZU1lcmdlLmRpc3Bvc2UoKSx0aGlzLl9taWRTZW5kLmRpc3Bvc2UoKSx0aGlzLl9zaWRlU2VuZC5kaXNwb3NlKCksdGhpcy5fbWlkUmV0dXJuLmRpc3Bvc2UoKSx0aGlzLl9zaWRlUmV0dXJuLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBHYSBleHRlbmRzIFVhe2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoR2EuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wid2lkdGhcIl0pKSx0aGlzLm5hbWU9XCJTdGVyZW9XaWRlbmVyXCI7Y29uc3QgdD11aShHYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ3aWR0aFwiXSk7dGhpcy53aWR0aD1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOnQud2lkdGgsdW5pdHM6XCJub3JtYWxSYW5nZVwifSksT2kodGhpcyxbXCJ3aWR0aFwiXSksdGhpcy5fdHdvVGltZXNXaWR0aE1pZD1uZXcgWW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOjJ9KSx0aGlzLl90d29UaW1lc1dpZHRoU2lkZT1uZXcgWW8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOjJ9KSx0aGlzLl9taWRNdWx0PW5ldyBZbyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl90d29UaW1lc1dpZHRoTWlkLmNvbm5lY3QodGhpcy5fbWlkTXVsdC5mYWN0b3IpLHRoaXMuY29ubmVjdEVmZmVjdE1pZCh0aGlzLl9taWRNdWx0KSx0aGlzLl9vbmVNaW51c1dpZHRoPW5ldyBfcih7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9vbmVNaW51c1dpZHRoLmNvbm5lY3QodGhpcy5fdHdvVGltZXNXaWR0aE1pZCkscm8odGhpcy5jb250ZXh0LmdldENvbnN0YW50KDEpLHRoaXMuX29uZU1pbnVzV2lkdGgpLHRoaXMud2lkdGguY29ubmVjdCh0aGlzLl9vbmVNaW51c1dpZHRoLnN1YnRyYWhlbmQpLHRoaXMuX3NpZGVNdWx0PW5ldyBZbyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLndpZHRoLmNvbm5lY3QodGhpcy5fdHdvVGltZXNXaWR0aFNpZGUpLHRoaXMuX3R3b1RpbWVzV2lkdGhTaWRlLmNvbm5lY3QodGhpcy5fc2lkZU11bHQuZmFjdG9yKSx0aGlzLmNvbm5lY3RFZmZlY3RTaWRlKHRoaXMuX3NpZGVNdWx0KX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihVYS5nZXREZWZhdWx0cygpLHt3aWR0aDouNX0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMud2lkdGguZGlzcG9zZSgpLHRoaXMuX21pZE11bHQuZGlzcG9zZSgpLHRoaXMuX3NpZGVNdWx0LmRpc3Bvc2UoKSx0aGlzLl90d29UaW1lc1dpZHRoTWlkLmRpc3Bvc2UoKSx0aGlzLl90d29UaW1lc1dpZHRoU2lkZS5kaXNwb3NlKCksdGhpcy5fb25lTWludXNXaWR0aC5kaXNwb3NlKCksdGhpc319Y2xhc3MgUWEgZXh0ZW5kcyBiYXtjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFFhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwiZGVwdGhcIl0pKSx0aGlzLm5hbWU9XCJUcmVtb2xvXCI7Y29uc3QgdD11aShRYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcImRlcHRoXCJdKTt0aGlzLl9sZm9MPW5ldyBycih7Y29udGV4dDp0aGlzLmNvbnRleHQsdHlwZTp0LnR5cGUsbWluOjEsbWF4OjB9KSx0aGlzLl9sZm9SPW5ldyBycih7Y29udGV4dDp0aGlzLmNvbnRleHQsdHlwZTp0LnR5cGUsbWluOjEsbWF4OjB9KSx0aGlzLl9hbXBsaXR1ZGVMPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9hbXBsaXR1ZGVSPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLmZyZXF1ZW5jeT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHZhbHVlOnQuZnJlcXVlbmN5LHVuaXRzOlwiZnJlcXVlbmN5XCJ9KSx0aGlzLmRlcHRoPW5ldyBwbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdmFsdWU6dC5kZXB0aCx1bml0czpcIm5vcm1hbFJhbmdlXCJ9KSxPaSh0aGlzLFtcImZyZXF1ZW5jeVwiLFwiZGVwdGhcIl0pLHRoaXMuY29ubmVjdEVmZmVjdExlZnQodGhpcy5fYW1wbGl0dWRlTCksdGhpcy5jb25uZWN0RWZmZWN0UmlnaHQodGhpcy5fYW1wbGl0dWRlUiksdGhpcy5fbGZvTC5jb25uZWN0KHRoaXMuX2FtcGxpdHVkZUwuZ2FpbiksdGhpcy5fbGZvUi5jb25uZWN0KHRoaXMuX2FtcGxpdHVkZVIuZ2FpbiksdGhpcy5mcmVxdWVuY3kuZmFuKHRoaXMuX2xmb0wuZnJlcXVlbmN5LHRoaXMuX2xmb1IuZnJlcXVlbmN5KSx0aGlzLmRlcHRoLmZhbih0aGlzLl9sZm9SLmFtcGxpdHVkZSx0aGlzLl9sZm9MLmFtcGxpdHVkZSksdGhpcy5zcHJlYWQ9dC5zcHJlYWR9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oYmEuZ2V0RGVmYXVsdHMoKSx7ZnJlcXVlbmN5OjEwLHR5cGU6XCJzaW5lXCIsZGVwdGg6LjUsc3ByZWFkOjE4MH0pfXN0YXJ0KHQpe3JldHVybiB0aGlzLl9sZm9MLnN0YXJ0KHQpLHRoaXMuX2xmb1Iuc3RhcnQodCksdGhpc31zdG9wKHQpe3JldHVybiB0aGlzLl9sZm9MLnN0b3AodCksdGhpcy5fbGZvUi5zdG9wKHQpLHRoaXN9c3luYygpe3JldHVybiB0aGlzLl9sZm9MLnN5bmMoKSx0aGlzLl9sZm9SLnN5bmMoKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0LnN5bmNTaWduYWwodGhpcy5mcmVxdWVuY3kpLHRoaXN9dW5zeW5jKCl7cmV0dXJuIHRoaXMuX2xmb0wudW5zeW5jKCksdGhpcy5fbGZvUi51bnN5bmMoKSx0aGlzLmNvbnRleHQudHJhbnNwb3J0LnVuc3luY1NpZ25hbCh0aGlzLmZyZXF1ZW5jeSksdGhpc31nZXQgdHlwZSgpe3JldHVybiB0aGlzLl9sZm9MLnR5cGV9c2V0IHR5cGUodCl7dGhpcy5fbGZvTC50eXBlPXQsdGhpcy5fbGZvUi50eXBlPXR9Z2V0IHNwcmVhZCgpe3JldHVybiB0aGlzLl9sZm9SLnBoYXNlLXRoaXMuX2xmb0wucGhhc2V9c2V0IHNwcmVhZCh0KXt0aGlzLl9sZm9MLnBoYXNlPTkwLXQvMix0aGlzLl9sZm9SLnBoYXNlPXQvMis5MH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9sZm9MLmRpc3Bvc2UoKSx0aGlzLl9sZm9SLmRpc3Bvc2UoKSx0aGlzLl9hbXBsaXR1ZGVMLmRpc3Bvc2UoKSx0aGlzLl9hbXBsaXR1ZGVSLmRpc3Bvc2UoKSx0aGlzLmZyZXF1ZW5jeS5kaXNwb3NlKCksdGhpcy5kZXB0aC5kaXNwb3NlKCksdGhpc319Y2xhc3MgWmEgZXh0ZW5kcyBoYXtjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFphLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImZyZXF1ZW5jeVwiLFwiZGVwdGhcIl0pKSx0aGlzLm5hbWU9XCJWaWJyYXRvXCI7Y29uc3QgdD11aShaYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJmcmVxdWVuY3lcIixcImRlcHRoXCJdKTt0aGlzLl9kZWxheU5vZGU9bmV3IHlvKHtjb250ZXh0OnRoaXMuY29udGV4dCxkZWxheVRpbWU6MCxtYXhEZWxheTp0Lm1heERlbGF5fSksdGhpcy5fbGZvPW5ldyBycih7Y29udGV4dDp0aGlzLmNvbnRleHQsdHlwZTp0LnR5cGUsbWluOjAsbWF4OnQubWF4RGVsYXksZnJlcXVlbmN5OnQuZnJlcXVlbmN5LHBoYXNlOi05MH0pLnN0YXJ0KCkuY29ubmVjdCh0aGlzLl9kZWxheU5vZGUuZGVsYXlUaW1lKSx0aGlzLmZyZXF1ZW5jeT10aGlzLl9sZm8uZnJlcXVlbmN5LHRoaXMuZGVwdGg9dGhpcy5fbGZvLmFtcGxpdHVkZSx0aGlzLmRlcHRoLnZhbHVlPXQuZGVwdGgsT2kodGhpcyxbXCJmcmVxdWVuY3lcIixcImRlcHRoXCJdKSx0aGlzLmVmZmVjdFNlbmQuY2hhaW4odGhpcy5fZGVsYXlOb2RlLHRoaXMuZWZmZWN0UmV0dXJuKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihoYS5nZXREZWZhdWx0cygpLHttYXhEZWxheTouMDA1LGZyZXF1ZW5jeTo1LGRlcHRoOi4xLHR5cGU6XCJzaW5lXCJ9KX1nZXQgdHlwZSgpe3JldHVybiB0aGlzLl9sZm8udHlwZX1zZXQgdHlwZSh0KXt0aGlzLl9sZm8udHlwZT10fWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2RlbGF5Tm9kZS5kaXNwb3NlKCksdGhpcy5fbGZvLmRpc3Bvc2UoKSx0aGlzLmZyZXF1ZW5jeS5kaXNwb3NlKCksdGhpcy5kZXB0aC5kaXNwb3NlKCksdGhpc319Y2xhc3MgWGEgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKFhhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInR5cGVcIixcInNpemVcIl0pKSx0aGlzLm5hbWU9XCJBbmFseXNlclwiLHRoaXMuX2FuYWx5c2Vycz1bXSx0aGlzLl9idWZmZXJzPVtdO2NvbnN0IHQ9dWkoWGEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widHlwZVwiLFwic2l6ZVwiXSk7dGhpcy5pbnB1dD10aGlzLm91dHB1dD10aGlzLl9nYWluPW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9zcGxpdD1uZXcgeGEoe2NvbnRleHQ6dGhpcy5jb250ZXh0LGNoYW5uZWxzOnQuY2hhbm5lbHN9KSx0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5fc3BsaXQpLFVuKHQuY2hhbm5lbHMsMSk7Zm9yKGxldCBlPTA7ZTx0LmNoYW5uZWxzO2UrKyl0aGlzLl9hbmFseXNlcnNbZV09dGhpcy5jb250ZXh0LmNyZWF0ZUFuYWx5c2VyKCksdGhpcy5fc3BsaXQuY29ubmVjdCh0aGlzLl9hbmFseXNlcnNbZV0sZSwwKTt0aGlzLnNpemU9dC5zaXplLHRoaXMudHlwZT10LnR5cGUsdGhpcy5zbW9vdGhpbmc9dC5zbW9vdGhpbmd9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7c2l6ZToxMDI0LHNtb290aGluZzouOCx0eXBlOlwiZmZ0XCIsY2hhbm5lbHM6MX0pfWdldFZhbHVlKCl7cmV0dXJuIHRoaXMuX2FuYWx5c2Vycy5mb3JFYWNoKCgodCxlKT0+e2NvbnN0IHM9dGhpcy5fYnVmZmVyc1tlXTtcImZmdFwiPT09dGhpcy5fdHlwZT90LmdldEZsb2F0RnJlcXVlbmN5RGF0YShzKTpcIndhdmVmb3JtXCI9PT10aGlzLl90eXBlJiZ0LmdldEZsb2F0VGltZURvbWFpbkRhdGEocyl9KSksMT09PXRoaXMuY2hhbm5lbHM/dGhpcy5fYnVmZmVyc1swXTp0aGlzLl9idWZmZXJzfWdldCBzaXplKCl7cmV0dXJuIHRoaXMuX2FuYWx5c2Vyc1swXS5mcmVxdWVuY3lCaW5Db3VudH1zZXQgc2l6ZSh0KXt0aGlzLl9hbmFseXNlcnMuZm9yRWFjaCgoKGUscyk9PntlLmZmdFNpemU9Mip0LHRoaXMuX2J1ZmZlcnNbc109bmV3IEZsb2F0MzJBcnJheSh0KX0pKX1nZXQgY2hhbm5lbHMoKXtyZXR1cm4gdGhpcy5fYW5hbHlzZXJzLmxlbmd0aH1nZXQgdHlwZSgpe3JldHVybiB0aGlzLl90eXBlfXNldCB0eXBlKHQpe0JuKFwid2F2ZWZvcm1cIj09PXR8fFwiZmZ0XCI9PT10LGBBbmFseXNlcjogaW52YWxpZCB0eXBlOiAke3R9YCksdGhpcy5fdHlwZT10fWdldCBzbW9vdGhpbmcoKXtyZXR1cm4gdGhpcy5fYW5hbHlzZXJzWzBdLnNtb290aGluZ1RpbWVDb25zdGFudH1zZXQgc21vb3RoaW5nKHQpe3RoaXMuX2FuYWx5c2Vycy5mb3JFYWNoKChlPT5lLnNtb290aGluZ1RpbWVDb25zdGFudD10KSl9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fYW5hbHlzZXJzLmZvckVhY2goKHQ9PnQuZGlzY29ubmVjdCgpKSksdGhpcy5fc3BsaXQuZGlzcG9zZSgpLHRoaXMuX2dhaW4uZGlzcG9zZSgpLHRoaXN9fWNsYXNzIFlhIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShZYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cykpLHRoaXMubmFtZT1cIk1ldGVyQmFzZVwiLHRoaXMuaW5wdXQ9dGhpcy5vdXRwdXQ9dGhpcy5fYW5hbHlzZXI9bmV3IFhhKHtjb250ZXh0OnRoaXMuY29udGV4dCxzaXplOjI1Nix0eXBlOlwid2F2ZWZvcm1cIn0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2FuYWx5c2VyLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyAkYSBleHRlbmRzIFlhe2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoJGEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wic21vb3RoaW5nXCJdKSksdGhpcy5uYW1lPVwiTWV0ZXJcIjtjb25zdCB0PXVpKCRhLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInNtb290aGluZ1wiXSk7dGhpcy5pbnB1dD10aGlzLm91dHB1dD10aGlzLl9hbmFseXNlcj1uZXcgWGEoe2NvbnRleHQ6dGhpcy5jb250ZXh0LHNpemU6MjU2LHR5cGU6XCJ3YXZlZm9ybVwiLGNoYW5uZWxzOnQuY2hhbm5lbENvdW50fSksdGhpcy5zbW9vdGhpbmc9dC5zbW9vdGhpbmcsdGhpcy5ub3JtYWxSYW5nZT10Lm5vcm1hbFJhbmdlLHRoaXMuX3Jtcz1uZXcgQXJyYXkodC5jaGFubmVsQ291bnQpLHRoaXMuX3Jtcy5maWxsKDApfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKFlhLmdldERlZmF1bHRzKCkse3Ntb290aGluZzouOCxub3JtYWxSYW5nZTohMSxjaGFubmVsQ291bnQ6MX0pfWdldExldmVsKCl7cmV0dXJuIEtuKFwiJ2dldExldmVsJyBoYXMgYmVlbiBjaGFuZ2VkIHRvICdnZXRWYWx1ZSdcIiksdGhpcy5nZXRWYWx1ZSgpfWdldFZhbHVlKCl7Y29uc3QgdD10aGlzLl9hbmFseXNlci5nZXRWYWx1ZSgpLGU9KDE9PT10aGlzLmNoYW5uZWxzP1t0XTp0KS5tYXAoKCh0LGUpPT57Y29uc3Qgcz10LnJlZHVjZSgoKHQsZSk9PnQrZSplKSwwKSxuPU1hdGguc3FydChzL3QubGVuZ3RoKTtyZXR1cm4gdGhpcy5fcm1zW2VdPU1hdGgubWF4KG4sdGhpcy5fcm1zW2VdKnRoaXMuc21vb3RoaW5nKSx0aGlzLm5vcm1hbFJhbmdlP3RoaXMuX3Jtc1tlXTpMaSh0aGlzLl9ybXNbZV0pfSkpO3JldHVybiAxPT09dGhpcy5jaGFubmVscz9lWzBdOmV9Z2V0IGNoYW5uZWxzKCl7cmV0dXJuIHRoaXMuX2FuYWx5c2VyLmNoYW5uZWxzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2FuYWx5c2VyLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBIYSBleHRlbmRzIFlhe2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoSGEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wic2l6ZVwiXSkpLHRoaXMubmFtZT1cIkZGVFwiO2NvbnN0IHQ9dWkoSGEuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wic2l6ZVwiXSk7dGhpcy5ub3JtYWxSYW5nZT10Lm5vcm1hbFJhbmdlLHRoaXMuX2FuYWx5c2VyLnR5cGU9XCJmZnRcIix0aGlzLnNpemU9dC5zaXplfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGlvLmdldERlZmF1bHRzKCkse25vcm1hbFJhbmdlOiExLHNpemU6MTAyNCxzbW9vdGhpbmc6Ljh9KX1nZXRWYWx1ZSgpe3JldHVybiB0aGlzLl9hbmFseXNlci5nZXRWYWx1ZSgpLm1hcCgodD0+dGhpcy5ub3JtYWxSYW5nZT9qaSh0KTp0KSl9Z2V0IHNpemUoKXtyZXR1cm4gdGhpcy5fYW5hbHlzZXIuc2l6ZX1zZXQgc2l6ZSh0KXt0aGlzLl9hbmFseXNlci5zaXplPXR9Z2V0IHNtb290aGluZygpe3JldHVybiB0aGlzLl9hbmFseXNlci5zbW9vdGhpbmd9c2V0IHNtb290aGluZyh0KXt0aGlzLl9hbmFseXNlci5zbW9vdGhpbmc9dH1nZXRGcmVxdWVuY3lPZkluZGV4KHQpe3JldHVybiBCbigwPD10JiZ0PHRoaXMuc2l6ZSxgaW5kZXggbXVzdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMCBhbmQgbGVzcyB0aGFuICR7dGhpcy5zaXplfWApLHQqdGhpcy5jb250ZXh0LnNhbXBsZVJhdGUvKDIqdGhpcy5zaXplKX19Y2xhc3MgSmEgZXh0ZW5kcyBZYXtjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKEphLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSksdGhpcy5uYW1lPVwiRENNZXRlclwiLHRoaXMuX2FuYWx5c2VyLnR5cGU9XCJ3YXZlZm9ybVwiLHRoaXMuX2FuYWx5c2VyLnNpemU9MjU2fWdldFZhbHVlKCl7cmV0dXJuIHRoaXMuX2FuYWx5c2VyLmdldFZhbHVlKClbMF19fWNsYXNzIEthIGV4dGVuZHMgWWF7Y29uc3RydWN0b3IoKXtzdXBlcih1aShLYS5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJzaXplXCJdKSksdGhpcy5uYW1lPVwiV2F2ZWZvcm1cIjtjb25zdCB0PXVpKEthLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInNpemVcIl0pO3RoaXMuX2FuYWx5c2VyLnR5cGU9XCJ3YXZlZm9ybVwiLHRoaXMuc2l6ZT10LnNpemV9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oWWEuZ2V0RGVmYXVsdHMoKSx7c2l6ZToxMDI0fSl9Z2V0VmFsdWUoKXtyZXR1cm4gdGhpcy5fYW5hbHlzZXIuZ2V0VmFsdWUoKX1nZXQgc2l6ZSgpe3JldHVybiB0aGlzLl9hbmFseXNlci5zaXplfXNldCBzaXplKHQpe3RoaXMuX2FuYWx5c2VyLnNpemU9dH19Y2xhc3MgdGMgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKHRjLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInNvbG9cIl0pKSx0aGlzLm5hbWU9XCJTb2xvXCI7Y29uc3QgdD11aSh0Yy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJzb2xvXCJdKTt0aGlzLmlucHV0PXRoaXMub3V0cHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0Yy5fYWxsU29sb3MuaGFzKHRoaXMuY29udGV4dCl8fHRjLl9hbGxTb2xvcy5zZXQodGhpcy5jb250ZXh0LG5ldyBTZXQpLHRjLl9hbGxTb2xvcy5nZXQodGhpcy5jb250ZXh0KS5hZGQodGhpcyksdGhpcy5zb2xvPXQuc29sb31zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtzb2xvOiExfSl9Z2V0IHNvbG8oKXtyZXR1cm4gdGhpcy5faXNTb2xvZWQoKX1zZXQgc29sbyh0KXt0P3RoaXMuX2FkZFNvbG8oKTp0aGlzLl9yZW1vdmVTb2xvKCksdGMuX2FsbFNvbG9zLmdldCh0aGlzLmNvbnRleHQpLmZvckVhY2goKHQ9PnQuX3VwZGF0ZVNvbG8oKSkpfWdldCBtdXRlZCgpe3JldHVybiAwPT09dGhpcy5pbnB1dC5nYWluLnZhbHVlfV9hZGRTb2xvKCl7dGMuX3NvbG9lZC5oYXModGhpcy5jb250ZXh0KXx8dGMuX3NvbG9lZC5zZXQodGhpcy5jb250ZXh0LG5ldyBTZXQpLHRjLl9zb2xvZWQuZ2V0KHRoaXMuY29udGV4dCkuYWRkKHRoaXMpfV9yZW1vdmVTb2xvKCl7dGMuX3NvbG9lZC5oYXModGhpcy5jb250ZXh0KSYmdGMuX3NvbG9lZC5nZXQodGhpcy5jb250ZXh0KS5kZWxldGUodGhpcyl9X2lzU29sb2VkKCl7cmV0dXJuIHRjLl9zb2xvZWQuaGFzKHRoaXMuY29udGV4dCkmJnRjLl9zb2xvZWQuZ2V0KHRoaXMuY29udGV4dCkuaGFzKHRoaXMpfV9ub1NvbG9zKCl7cmV0dXJuIXRjLl9zb2xvZWQuaGFzKHRoaXMuY29udGV4dCl8fHRjLl9zb2xvZWQuaGFzKHRoaXMuY29udGV4dCkmJjA9PT10Yy5fc29sb2VkLmdldCh0aGlzLmNvbnRleHQpLnNpemV9X3VwZGF0ZVNvbG8oKXt0aGlzLl9pc1NvbG9lZCgpfHx0aGlzLl9ub1NvbG9zKCk/dGhpcy5pbnB1dC5nYWluLnZhbHVlPTE6dGhpcy5pbnB1dC5nYWluLnZhbHVlPTB9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGMuX2FsbFNvbG9zLmdldCh0aGlzLmNvbnRleHQpLmRlbGV0ZSh0aGlzKSx0aGlzLl9yZW1vdmVTb2xvKCksdGhpc319dGMuX2FsbFNvbG9zPW5ldyBNYXAsdGMuX3NvbG9lZD1uZXcgTWFwO2NsYXNzIGVjIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShlYy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJwYW5cIixcInZvbHVtZVwiXSkpLHRoaXMubmFtZT1cIlBhblZvbFwiO2NvbnN0IHQ9dWkoZWMuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wicGFuXCIsXCJ2b2x1bWVcIl0pO3RoaXMuX3Bhbm5lcj10aGlzLmlucHV0PW5ldyBwYSh7Y29udGV4dDp0aGlzLmNvbnRleHQscGFuOnQucGFuLGNoYW5uZWxDb3VudDp0LmNoYW5uZWxDb3VudH0pLHRoaXMucGFuPXRoaXMuX3Bhbm5lci5wYW4sdGhpcy5fdm9sdW1lPXRoaXMub3V0cHV0PW5ldyBPbyh7Y29udGV4dDp0aGlzLmNvbnRleHQsdm9sdW1lOnQudm9sdW1lfSksdGhpcy52b2x1bWU9dGhpcy5fdm9sdW1lLnZvbHVtZSx0aGlzLl9wYW5uZXIuY29ubmVjdCh0aGlzLl92b2x1bWUpLHRoaXMubXV0ZT10Lm11dGUsT2kodGhpcyxbXCJwYW5cIixcInZvbHVtZVwiXSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7bXV0ZTohMSxwYW46MCx2b2x1bWU6MCxjaGFubmVsQ291bnQ6MX0pfWdldCBtdXRlKCl7cmV0dXJuIHRoaXMuX3ZvbHVtZS5tdXRlfXNldCBtdXRlKHQpe3RoaXMuX3ZvbHVtZS5tdXRlPXR9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fcGFubmVyLmRpc3Bvc2UoKSx0aGlzLnBhbi5kaXNwb3NlKCksdGhpcy5fdm9sdW1lLmRpc3Bvc2UoKSx0aGlzLnZvbHVtZS5kaXNwb3NlKCksdGhpc319Y2xhc3Mgc2MgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKHNjLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInZvbHVtZVwiLFwicGFuXCJdKSksdGhpcy5uYW1lPVwiQ2hhbm5lbFwiO2NvbnN0IHQ9dWkoc2MuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widm9sdW1lXCIsXCJwYW5cIl0pO3RoaXMuX3NvbG89dGhpcy5pbnB1dD1uZXcgdGMoe3NvbG86dC5zb2xvLGNvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fcGFuVm9sPXRoaXMub3V0cHV0PW5ldyBlYyh7Y29udGV4dDp0aGlzLmNvbnRleHQscGFuOnQucGFuLHZvbHVtZTp0LnZvbHVtZSxtdXRlOnQubXV0ZSxjaGFubmVsQ291bnQ6dC5jaGFubmVsQ291bnR9KSx0aGlzLnBhbj10aGlzLl9wYW5Wb2wucGFuLHRoaXMudm9sdW1lPXRoaXMuX3BhblZvbC52b2x1bWUsdGhpcy5fc29sby5jb25uZWN0KHRoaXMuX3BhblZvbCksT2kodGhpcyxbXCJwYW5cIixcInZvbHVtZVwiXSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7cGFuOjAsdm9sdW1lOjAsbXV0ZTohMSxzb2xvOiExLGNoYW5uZWxDb3VudDoxfSl9Z2V0IHNvbG8oKXtyZXR1cm4gdGhpcy5fc29sby5zb2xvfXNldCBzb2xvKHQpe3RoaXMuX3NvbG8uc29sbz10fWdldCBtdXRlZCgpe3JldHVybiB0aGlzLl9zb2xvLm11dGVkfHx0aGlzLm11dGV9Z2V0IG11dGUoKXtyZXR1cm4gdGhpcy5fcGFuVm9sLm11dGV9c2V0IG11dGUodCl7dGhpcy5fcGFuVm9sLm11dGU9dH1fZ2V0QnVzKHQpe3JldHVybiBzYy5idXNlcy5oYXModCl8fHNjLmJ1c2VzLnNldCh0LG5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSksc2MuYnVzZXMuZ2V0KHQpfXNlbmQodCxlPTApe2NvbnN0IHM9dGhpcy5fZ2V0QnVzKHQpLG49bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcImRlY2liZWxzXCIsZ2FpbjplfSk7cmV0dXJuIHRoaXMuY29ubmVjdChuKSxuLmNvbm5lY3Qocyksbn1yZWNlaXZlKHQpe3JldHVybiB0aGlzLl9nZXRCdXModCkuY29ubmVjdCh0aGlzKSx0aGlzfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX3BhblZvbC5kaXNwb3NlKCksdGhpcy5wYW4uZGlzcG9zZSgpLHRoaXMudm9sdW1lLmRpc3Bvc2UoKSx0aGlzLl9zb2xvLmRpc3Bvc2UoKSx0aGlzfX1zYy5idXNlcz1uZXcgTWFwO2NsYXNzIG5jIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShuYy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cykpLHRoaXMubmFtZT1cIk1vbm9cIix0aGlzLmlucHV0PW5ldyBobyh7Y29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLl9tZXJnZT10aGlzLm91dHB1dD1uZXcgd2Eoe2NoYW5uZWxzOjIsY29udGV4dDp0aGlzLmNvbnRleHR9KSx0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5fbWVyZ2UsMCwwKSx0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5fbWVyZ2UsMCwxKX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9tZXJnZS5kaXNwb3NlKCksdGhpcy5pbnB1dC5kaXNwb3NlKCksdGhpc319Y2xhc3MgaWMgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKHVpKGljLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImxvd0ZyZXF1ZW5jeVwiLFwiaGlnaEZyZXF1ZW5jeVwiXSkpLHRoaXMubmFtZT1cIk11bHRpYmFuZFNwbGl0XCIsdGhpcy5pbnB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5vdXRwdXQ9dm9pZCAwLHRoaXMubG93PW5ldyBPcih7Y29udGV4dDp0aGlzLmNvbnRleHQsZnJlcXVlbmN5OjAsdHlwZTpcImxvd3Bhc3NcIn0pLHRoaXMuX2xvd01pZEZpbHRlcj1uZXcgT3Ioe2NvbnRleHQ6dGhpcy5jb250ZXh0LGZyZXF1ZW5jeTowLHR5cGU6XCJoaWdocGFzc1wifSksdGhpcy5taWQ9bmV3IE9yKHtjb250ZXh0OnRoaXMuY29udGV4dCxmcmVxdWVuY3k6MCx0eXBlOlwibG93cGFzc1wifSksdGhpcy5oaWdoPW5ldyBPcih7Y29udGV4dDp0aGlzLmNvbnRleHQsZnJlcXVlbmN5OjAsdHlwZTpcImhpZ2hwYXNzXCJ9KSx0aGlzLl9pbnRlcm5hbENoYW5uZWxzPVt0aGlzLmxvdyx0aGlzLm1pZCx0aGlzLmhpZ2hdO2NvbnN0IHQ9dWkoaWMuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wibG93RnJlcXVlbmN5XCIsXCJoaWdoRnJlcXVlbmN5XCJdKTt0aGlzLmxvd0ZyZXF1ZW5jeT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwiZnJlcXVlbmN5XCIsdmFsdWU6dC5sb3dGcmVxdWVuY3l9KSx0aGlzLmhpZ2hGcmVxdWVuY3k9bmV3IHBvKHtjb250ZXh0OnRoaXMuY29udGV4dCx1bml0czpcImZyZXF1ZW5jeVwiLHZhbHVlOnQuaGlnaEZyZXF1ZW5jeX0pLHRoaXMuUT1uZXcgcG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHVuaXRzOlwicG9zaXRpdmVcIix2YWx1ZTp0LlF9KSx0aGlzLmlucHV0LmZhbih0aGlzLmxvdyx0aGlzLmhpZ2gpLHRoaXMuaW5wdXQuY2hhaW4odGhpcy5fbG93TWlkRmlsdGVyLHRoaXMubWlkKSx0aGlzLmxvd0ZyZXF1ZW5jeS5mYW4odGhpcy5sb3cuZnJlcXVlbmN5LHRoaXMuX2xvd01pZEZpbHRlci5mcmVxdWVuY3kpLHRoaXMuaGlnaEZyZXF1ZW5jeS5mYW4odGhpcy5taWQuZnJlcXVlbmN5LHRoaXMuaGlnaC5mcmVxdWVuY3kpLHRoaXMuUS5jb25uZWN0KHRoaXMubG93LlEpLHRoaXMuUS5jb25uZWN0KHRoaXMuX2xvd01pZEZpbHRlci5RKSx0aGlzLlEuY29ubmVjdCh0aGlzLm1pZC5RKSx0aGlzLlEuY29ubmVjdCh0aGlzLmhpZ2guUSksT2kodGhpcyxbXCJoaWdoXCIsXCJtaWRcIixcImxvd1wiLFwiaGlnaEZyZXF1ZW5jeVwiLFwibG93RnJlcXVlbmN5XCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtROjEsaGlnaEZyZXF1ZW5jeToyNTAwLGxvd0ZyZXF1ZW5jeTo0MDB9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSxNaSh0aGlzLFtcImhpZ2hcIixcIm1pZFwiLFwibG93XCIsXCJoaWdoRnJlcXVlbmN5XCIsXCJsb3dGcmVxdWVuY3lcIl0pLHRoaXMubG93LmRpc3Bvc2UoKSx0aGlzLl9sb3dNaWRGaWx0ZXIuZGlzcG9zZSgpLHRoaXMubWlkLmRpc3Bvc2UoKSx0aGlzLmhpZ2guZGlzcG9zZSgpLHRoaXMubG93RnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLmhpZ2hGcmVxdWVuY3kuZGlzcG9zZSgpLHRoaXMuUS5kaXNwb3NlKCksdGhpc319Y2xhc3Mgb2MgZXh0ZW5kcyBpb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5uYW1lPVwiTGlzdGVuZXJcIix0aGlzLnBvc2l0aW9uWD1uZXcgbm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHBhcmFtOnRoaXMuY29udGV4dC5yYXdDb250ZXh0Lmxpc3RlbmVyLnBvc2l0aW9uWH0pLHRoaXMucG9zaXRpb25ZPW5ldyBubyh7Y29udGV4dDp0aGlzLmNvbnRleHQscGFyYW06dGhpcy5jb250ZXh0LnJhd0NvbnRleHQubGlzdGVuZXIucG9zaXRpb25ZfSksdGhpcy5wb3NpdGlvblo9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLmNvbnRleHQucmF3Q29udGV4dC5saXN0ZW5lci5wb3NpdGlvblp9KSx0aGlzLmZvcndhcmRYPW5ldyBubyh7Y29udGV4dDp0aGlzLmNvbnRleHQscGFyYW06dGhpcy5jb250ZXh0LnJhd0NvbnRleHQubGlzdGVuZXIuZm9yd2FyZFh9KSx0aGlzLmZvcndhcmRZPW5ldyBubyh7Y29udGV4dDp0aGlzLmNvbnRleHQscGFyYW06dGhpcy5jb250ZXh0LnJhd0NvbnRleHQubGlzdGVuZXIuZm9yd2FyZFl9KSx0aGlzLmZvcndhcmRaPW5ldyBubyh7Y29udGV4dDp0aGlzLmNvbnRleHQscGFyYW06dGhpcy5jb250ZXh0LnJhd0NvbnRleHQubGlzdGVuZXIuZm9yd2FyZFp9KSx0aGlzLnVwWD1uZXcgbm8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LHBhcmFtOnRoaXMuY29udGV4dC5yYXdDb250ZXh0Lmxpc3RlbmVyLnVwWH0pLHRoaXMudXBZPW5ldyBubyh7Y29udGV4dDp0aGlzLmNvbnRleHQscGFyYW06dGhpcy5jb250ZXh0LnJhd0NvbnRleHQubGlzdGVuZXIudXBZfSksdGhpcy51cFo9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLmNvbnRleHQucmF3Q29udGV4dC5saXN0ZW5lci51cFp9KX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtwb3NpdGlvblg6MCxwb3NpdGlvblk6MCxwb3NpdGlvblo6MCxmb3J3YXJkWDowLGZvcndhcmRZOjAsZm9yd2FyZFo6LTEsdXBYOjAsdXBZOjEsdXBaOjB9KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLnBvc2l0aW9uWC5kaXNwb3NlKCksdGhpcy5wb3NpdGlvblkuZGlzcG9zZSgpLHRoaXMucG9zaXRpb25aLmRpc3Bvc2UoKSx0aGlzLmZvcndhcmRYLmRpc3Bvc2UoKSx0aGlzLmZvcndhcmRZLmRpc3Bvc2UoKSx0aGlzLmZvcndhcmRaLmRpc3Bvc2UoKSx0aGlzLnVwWC5kaXNwb3NlKCksdGhpcy51cFkuZGlzcG9zZSgpLHRoaXMudXBaLmRpc3Bvc2UoKSx0aGlzfX1UaSgodD0+e3QubGlzdGVuZXI9bmV3IG9jKHtjb250ZXh0OnR9KX0pKSxraSgodD0+e3QubGlzdGVuZXIuZGlzcG9zZSgpfSkpO2NsYXNzIHJjIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShyYy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJwb3NpdGlvblhcIixcInBvc2l0aW9uWVwiLFwicG9zaXRpb25aXCJdKSksdGhpcy5uYW1lPVwiUGFubmVyM0RcIjtjb25zdCB0PXVpKHJjLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInBvc2l0aW9uWFwiLFwicG9zaXRpb25ZXCIsXCJwb3NpdGlvblpcIl0pO3RoaXMuX3Bhbm5lcj10aGlzLmlucHV0PXRoaXMub3V0cHV0PXRoaXMuY29udGV4dC5jcmVhdGVQYW5uZXIoKSx0aGlzLnBhbm5pbmdNb2RlbD10LnBhbm5pbmdNb2RlbCx0aGlzLm1heERpc3RhbmNlPXQubWF4RGlzdGFuY2UsdGhpcy5kaXN0YW5jZU1vZGVsPXQuZGlzdGFuY2VNb2RlbCx0aGlzLmNvbmVPdXRlckdhaW49dC5jb25lT3V0ZXJHYWluLHRoaXMuY29uZU91dGVyQW5nbGU9dC5jb25lT3V0ZXJBbmdsZSx0aGlzLmNvbmVJbm5lckFuZ2xlPXQuY29uZUlubmVyQW5nbGUsdGhpcy5yZWZEaXN0YW5jZT10LnJlZkRpc3RhbmNlLHRoaXMucm9sbG9mZkZhY3Rvcj10LnJvbGxvZmZGYWN0b3IsdGhpcy5wb3NpdGlvblg9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLl9wYW5uZXIucG9zaXRpb25YLHZhbHVlOnQucG9zaXRpb25YfSksdGhpcy5wb3NpdGlvblk9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLl9wYW5uZXIucG9zaXRpb25ZLHZhbHVlOnQucG9zaXRpb25ZfSksdGhpcy5wb3NpdGlvblo9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLl9wYW5uZXIucG9zaXRpb25aLHZhbHVlOnQucG9zaXRpb25afSksdGhpcy5vcmllbnRhdGlvblg9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLl9wYW5uZXIub3JpZW50YXRpb25YLHZhbHVlOnQub3JpZW50YXRpb25YfSksdGhpcy5vcmllbnRhdGlvblk9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLl9wYW5uZXIub3JpZW50YXRpb25ZLHZhbHVlOnQub3JpZW50YXRpb25ZfSksdGhpcy5vcmllbnRhdGlvblo9bmV3IG5vKHtjb250ZXh0OnRoaXMuY29udGV4dCxwYXJhbTp0aGlzLl9wYW5uZXIub3JpZW50YXRpb25aLHZhbHVlOnQub3JpZW50YXRpb25afSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7Y29uZUlubmVyQW5nbGU6MzYwLGNvbmVPdXRlckFuZ2xlOjM2MCxjb25lT3V0ZXJHYWluOjAsZGlzdGFuY2VNb2RlbDpcImludmVyc2VcIixtYXhEaXN0YW5jZToxZTQsb3JpZW50YXRpb25YOjAsb3JpZW50YXRpb25ZOjAsb3JpZW50YXRpb25aOjAscGFubmluZ01vZGVsOlwiZXF1YWxwb3dlclwiLHBvc2l0aW9uWDowLHBvc2l0aW9uWTowLHBvc2l0aW9uWjowLHJlZkRpc3RhbmNlOjEscm9sbG9mZkZhY3RvcjoxfSl9c2V0UG9zaXRpb24odCxlLHMpe3JldHVybiB0aGlzLnBvc2l0aW9uWC52YWx1ZT10LHRoaXMucG9zaXRpb25ZLnZhbHVlPWUsdGhpcy5wb3NpdGlvbloudmFsdWU9cyx0aGlzfXNldE9yaWVudGF0aW9uKHQsZSxzKXtyZXR1cm4gdGhpcy5vcmllbnRhdGlvblgudmFsdWU9dCx0aGlzLm9yaWVudGF0aW9uWS52YWx1ZT1lLHRoaXMub3JpZW50YXRpb25aLnZhbHVlPXMsdGhpc31nZXQgcGFubmluZ01vZGVsKCl7cmV0dXJuIHRoaXMuX3Bhbm5lci5wYW5uaW5nTW9kZWx9c2V0IHBhbm5pbmdNb2RlbCh0KXt0aGlzLl9wYW5uZXIucGFubmluZ01vZGVsPXR9Z2V0IHJlZkRpc3RhbmNlKCl7cmV0dXJuIHRoaXMuX3Bhbm5lci5yZWZEaXN0YW5jZX1zZXQgcmVmRGlzdGFuY2UodCl7dGhpcy5fcGFubmVyLnJlZkRpc3RhbmNlPXR9Z2V0IHJvbGxvZmZGYWN0b3IoKXtyZXR1cm4gdGhpcy5fcGFubmVyLnJvbGxvZmZGYWN0b3J9c2V0IHJvbGxvZmZGYWN0b3IodCl7dGhpcy5fcGFubmVyLnJvbGxvZmZGYWN0b3I9dH1nZXQgZGlzdGFuY2VNb2RlbCgpe3JldHVybiB0aGlzLl9wYW5uZXIuZGlzdGFuY2VNb2RlbH1zZXQgZGlzdGFuY2VNb2RlbCh0KXt0aGlzLl9wYW5uZXIuZGlzdGFuY2VNb2RlbD10fWdldCBjb25lSW5uZXJBbmdsZSgpe3JldHVybiB0aGlzLl9wYW5uZXIuY29uZUlubmVyQW5nbGV9c2V0IGNvbmVJbm5lckFuZ2xlKHQpe3RoaXMuX3Bhbm5lci5jb25lSW5uZXJBbmdsZT10fWdldCBjb25lT3V0ZXJBbmdsZSgpe3JldHVybiB0aGlzLl9wYW5uZXIuY29uZU91dGVyQW5nbGV9c2V0IGNvbmVPdXRlckFuZ2xlKHQpe3RoaXMuX3Bhbm5lci5jb25lT3V0ZXJBbmdsZT10fWdldCBjb25lT3V0ZXJHYWluKCl7cmV0dXJuIHRoaXMuX3Bhbm5lci5jb25lT3V0ZXJHYWlufXNldCBjb25lT3V0ZXJHYWluKHQpe3RoaXMuX3Bhbm5lci5jb25lT3V0ZXJHYWluPXR9Z2V0IG1heERpc3RhbmNlKCl7cmV0dXJuIHRoaXMuX3Bhbm5lci5tYXhEaXN0YW5jZX1zZXQgbWF4RGlzdGFuY2UodCl7dGhpcy5fcGFubmVyLm1heERpc3RhbmNlPXR9ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fcGFubmVyLmRpc2Nvbm5lY3QoKSx0aGlzLm9yaWVudGF0aW9uWC5kaXNwb3NlKCksdGhpcy5vcmllbnRhdGlvblkuZGlzcG9zZSgpLHRoaXMub3JpZW50YXRpb25aLmRpc3Bvc2UoKSx0aGlzLnBvc2l0aW9uWC5kaXNwb3NlKCksdGhpcy5wb3NpdGlvblkuZGlzcG9zZSgpLHRoaXMucG9zaXRpb25aLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBhYyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoYWMuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpKSx0aGlzLm5hbWU9XCJSZWNvcmRlclwiO2NvbnN0IHQ9dWkoYWMuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMpO3RoaXMuaW5wdXQ9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLEJuKGFjLnN1cHBvcnRlZCxcIk1lZGlhIFJlY29yZGVyIEFQSSBpcyBub3QgYXZhaWxhYmxlXCIpLHRoaXMuX3N0cmVhbT10aGlzLmNvbnRleHQuY3JlYXRlTWVkaWFTdHJlYW1EZXN0aW5hdGlvbigpLHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLl9zdHJlYW0pLHRoaXMuX3JlY29yZGVyPW5ldyBNZWRpYVJlY29yZGVyKHRoaXMuX3N0cmVhbS5zdHJlYW0se21pbWVUeXBlOnQubWltZVR5cGV9KX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gaW8uZ2V0RGVmYXVsdHMoKX1nZXQgbWltZVR5cGUoKXtyZXR1cm4gdGhpcy5fcmVjb3JkZXIubWltZVR5cGV9c3RhdGljIGdldCBzdXBwb3J0ZWQoKXtyZXR1cm4gbnVsbCE9PXRpJiZSZWZsZWN0Lmhhcyh0aSxcIk1lZGlhUmVjb3JkZXJcIil9Z2V0IHN0YXRlKCl7cmV0dXJuXCJpbmFjdGl2ZVwiPT09dGhpcy5fcmVjb3JkZXIuc3RhdGU/XCJzdG9wcGVkXCI6XCJwYXVzZWRcIj09PXRoaXMuX3JlY29yZGVyLnN0YXRlP1wicGF1c2VkXCI6XCJzdGFydGVkXCJ9c3RhcnQoKXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXtCbihcInN0YXJ0ZWRcIiE9PXRoaXMuc3RhdGUsXCJSZWNvcmRlciBpcyBhbHJlYWR5IHN0YXJ0ZWRcIik7Y29uc3QgdD1uZXcgUHJvbWlzZSgodD0+e2NvbnN0IGU9KCk9Pnt0aGlzLl9yZWNvcmRlci5yZW1vdmVFdmVudExpc3RlbmVyKFwic3RhcnRcIixlLCExKSx0KCl9O3RoaXMuX3JlY29yZGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJzdGFydFwiLGUsITEpfSkpO3JldHVybiB0aGlzLl9yZWNvcmRlci5zdGFydCgpLHlpZWxkIHR9KSl9c3RvcCgpe3JldHVybiBuaSh0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKigpe0JuKFwic3RvcHBlZFwiIT09dGhpcy5zdGF0ZSxcIlJlY29yZGVyIGlzIG5vdCBzdGFydGVkXCIpO2NvbnN0IHQ9bmV3IFByb21pc2UoKHQ9Pntjb25zdCBlPXM9Pnt0aGlzLl9yZWNvcmRlci5yZW1vdmVFdmVudExpc3RlbmVyKFwiZGF0YWF2YWlsYWJsZVwiLGUsITEpLHQocy5kYXRhKX07dGhpcy5fcmVjb3JkZXIuYWRkRXZlbnRMaXN0ZW5lcihcImRhdGFhdmFpbGFibGVcIixlLCExKX0pKTtyZXR1cm4gdGhpcy5fcmVjb3JkZXIuc3RvcCgpLHlpZWxkIHR9KSl9cGF1c2UoKXtyZXR1cm4gQm4oXCJzdGFydGVkXCI9PT10aGlzLnN0YXRlLFwiUmVjb3JkZXIgbXVzdCBiZSBzdGFydGVkXCIpLHRoaXMuX3JlY29yZGVyLnBhdXNlKCksdGhpc31kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLmlucHV0LmRpc3Bvc2UoKSx0aGlzLl9zdHJlYW0uZGlzY29ubmVjdCgpLHRoaXN9fWNsYXNzIGNjIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcih1aShjYy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ0aHJlc2hvbGRcIixcInJhdGlvXCJdKSksdGhpcy5uYW1lPVwiQ29tcHJlc3NvclwiLHRoaXMuX2NvbXByZXNzb3I9dGhpcy5jb250ZXh0LmNyZWF0ZUR5bmFtaWNzQ29tcHJlc3NvcigpLHRoaXMuaW5wdXQ9dGhpcy5fY29tcHJlc3Nvcix0aGlzLm91dHB1dD10aGlzLl9jb21wcmVzc29yO2NvbnN0IHQ9dWkoY2MuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widGhyZXNob2xkXCIsXCJyYXRpb1wiXSk7dGhpcy50aHJlc2hvbGQ9bmV3IG5vKHttaW5WYWx1ZTp0aGlzLl9jb21wcmVzc29yLnRocmVzaG9sZC5taW5WYWx1ZSxtYXhWYWx1ZTp0aGlzLl9jb21wcmVzc29yLnRocmVzaG9sZC5tYXhWYWx1ZSxjb250ZXh0OnRoaXMuY29udGV4dCxjb252ZXJ0OiExLHBhcmFtOnRoaXMuX2NvbXByZXNzb3IudGhyZXNob2xkLHVuaXRzOlwiZGVjaWJlbHNcIix2YWx1ZTp0LnRocmVzaG9sZH0pLHRoaXMuYXR0YWNrPW5ldyBubyh7bWluVmFsdWU6dGhpcy5fY29tcHJlc3Nvci5hdHRhY2subWluVmFsdWUsbWF4VmFsdWU6dGhpcy5fY29tcHJlc3Nvci5hdHRhY2subWF4VmFsdWUsY29udGV4dDp0aGlzLmNvbnRleHQscGFyYW06dGhpcy5fY29tcHJlc3Nvci5hdHRhY2ssdW5pdHM6XCJ0aW1lXCIsdmFsdWU6dC5hdHRhY2t9KSx0aGlzLnJlbGVhc2U9bmV3IG5vKHttaW5WYWx1ZTp0aGlzLl9jb21wcmVzc29yLnJlbGVhc2UubWluVmFsdWUsbWF4VmFsdWU6dGhpcy5fY29tcHJlc3Nvci5yZWxlYXNlLm1heFZhbHVlLGNvbnRleHQ6dGhpcy5jb250ZXh0LHBhcmFtOnRoaXMuX2NvbXByZXNzb3IucmVsZWFzZSx1bml0czpcInRpbWVcIix2YWx1ZTp0LnJlbGVhc2V9KSx0aGlzLmtuZWU9bmV3IG5vKHttaW5WYWx1ZTp0aGlzLl9jb21wcmVzc29yLmtuZWUubWluVmFsdWUsbWF4VmFsdWU6dGhpcy5fY29tcHJlc3Nvci5rbmVlLm1heFZhbHVlLGNvbnRleHQ6dGhpcy5jb250ZXh0LGNvbnZlcnQ6ITEscGFyYW06dGhpcy5fY29tcHJlc3Nvci5rbmVlLHVuaXRzOlwiZGVjaWJlbHNcIix2YWx1ZTp0LmtuZWV9KSx0aGlzLnJhdGlvPW5ldyBubyh7bWluVmFsdWU6dGhpcy5fY29tcHJlc3Nvci5yYXRpby5taW5WYWx1ZSxtYXhWYWx1ZTp0aGlzLl9jb21wcmVzc29yLnJhdGlvLm1heFZhbHVlLGNvbnRleHQ6dGhpcy5jb250ZXh0LGNvbnZlcnQ6ITEscGFyYW06dGhpcy5fY29tcHJlc3Nvci5yYXRpbyx1bml0czpcInBvc2l0aXZlXCIsdmFsdWU6dC5yYXRpb30pLE9pKHRoaXMsW1wia25lZVwiLFwicmVsZWFzZVwiLFwiYXR0YWNrXCIsXCJyYXRpb1wiLFwidGhyZXNob2xkXCJdKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHthdHRhY2s6LjAwMyxrbmVlOjMwLHJhdGlvOjEyLHJlbGVhc2U6LjI1LHRocmVzaG9sZDotMjR9KX1nZXQgcmVkdWN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbXByZXNzb3IucmVkdWN0aW9ufWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2NvbXByZXNzb3IuZGlzY29ubmVjdCgpLHRoaXMuYXR0YWNrLmRpc3Bvc2UoKSx0aGlzLnJlbGVhc2UuZGlzcG9zZSgpLHRoaXMudGhyZXNob2xkLmRpc3Bvc2UoKSx0aGlzLnJhdGlvLmRpc3Bvc2UoKSx0aGlzLmtuZWUuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIGhjIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcihPYmplY3QuYXNzaWduKHVpKGhjLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInRocmVzaG9sZFwiLFwic21vb3RoaW5nXCJdKSkpLHRoaXMubmFtZT1cIkdhdGVcIjtjb25zdCB0PXVpKGhjLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInRocmVzaG9sZFwiLFwic21vb3RoaW5nXCJdKTt0aGlzLl9mb2xsb3dlcj1uZXcgZmEoe2NvbnRleHQ6dGhpcy5jb250ZXh0LHNtb290aGluZzp0LnNtb290aGluZ30pLHRoaXMuX2d0PW5ldyBncih7Y29udGV4dDp0aGlzLmNvbnRleHQsdmFsdWU6amkodC50aHJlc2hvbGQpfSksdGhpcy5pbnB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5fZ2F0ZT10aGlzLm91dHB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5pbnB1dC5jb25uZWN0KHRoaXMuX2dhdGUpLHRoaXMuaW5wdXQuY2hhaW4odGhpcy5fZm9sbG93ZXIsdGhpcy5fZ3QsdGhpcy5fZ2F0ZS5nYWluKX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtzbW9vdGhpbmc6LjEsdGhyZXNob2xkOi00MH0pfWdldCB0aHJlc2hvbGQoKXtyZXR1cm4gTGkodGhpcy5fZ3QudmFsdWUpfXNldCB0aHJlc2hvbGQodCl7dGhpcy5fZ3QudmFsdWU9amkodCl9Z2V0IHNtb290aGluZygpe3JldHVybiB0aGlzLl9mb2xsb3dlci5zbW9vdGhpbmd9c2V0IHNtb290aGluZyh0KXt0aGlzLl9mb2xsb3dlci5zbW9vdGhpbmc9dH1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLmlucHV0LmRpc3Bvc2UoKSx0aGlzLl9mb2xsb3dlci5kaXNwb3NlKCksdGhpcy5fZ3QuZGlzcG9zZSgpLHRoaXMuX2dhdGUuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIGxjIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcihPYmplY3QuYXNzaWduKHVpKGxjLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcInRocmVzaG9sZFwiXSkpKSx0aGlzLm5hbWU9XCJMaW1pdGVyXCI7Y29uc3QgdD11aShsYy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyxbXCJ0aHJlc2hvbGRcIl0pO3RoaXMuX2NvbXByZXNzb3I9dGhpcy5pbnB1dD10aGlzLm91dHB1dD1uZXcgY2Moe2NvbnRleHQ6dGhpcy5jb250ZXh0LHJhdGlvOjIwLGF0dGFjazouMDAzLHJlbGVhc2U6LjAxLHRocmVzaG9sZDp0LnRocmVzaG9sZH0pLHRoaXMudGhyZXNob2xkPXRoaXMuX2NvbXByZXNzb3IudGhyZXNob2xkLE9pKHRoaXMsXCJ0aHJlc2hvbGRcIil9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7dGhyZXNob2xkOi0xMn0pfWdldCByZWR1Y3Rpb24oKXtyZXR1cm4gdGhpcy5fY29tcHJlc3Nvci5yZWR1Y3Rpb259ZGlzcG9zZSgpe3JldHVybiBzdXBlci5kaXNwb3NlKCksdGhpcy5fY29tcHJlc3Nvci5kaXNwb3NlKCksdGhpcy50aHJlc2hvbGQuZGlzcG9zZSgpLHRoaXN9fWNsYXNzIHVjIGV4dGVuZHMgaW97Y29uc3RydWN0b3IoKXtzdXBlcihPYmplY3QuYXNzaWduKHVpKHVjLmdldERlZmF1bHRzKCksYXJndW1lbnRzKSkpLHRoaXMubmFtZT1cIk1pZFNpZGVDb21wcmVzc29yXCI7Y29uc3QgdD11aSh1Yy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyk7dGhpcy5fbWlkU2lkZVNwbGl0PXRoaXMuaW5wdXQ9bmV3IFdhKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX21pZFNpZGVNZXJnZT10aGlzLm91dHB1dD1uZXcgQmEoe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5taWQ9bmV3IGNjKE9iamVjdC5hc3NpZ24odC5taWQse2NvbnRleHQ6dGhpcy5jb250ZXh0fSkpLHRoaXMuc2lkZT1uZXcgY2MoT2JqZWN0LmFzc2lnbih0LnNpZGUse2NvbnRleHQ6dGhpcy5jb250ZXh0fSkpLHRoaXMuX21pZFNpZGVTcGxpdC5taWQuY2hhaW4odGhpcy5taWQsdGhpcy5fbWlkU2lkZU1lcmdlLm1pZCksdGhpcy5fbWlkU2lkZVNwbGl0LnNpZGUuY2hhaW4odGhpcy5zaWRlLHRoaXMuX21pZFNpZGVNZXJnZS5zaWRlKSxPaSh0aGlzLFtcIm1pZFwiLFwic2lkZVwiXSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7bWlkOntyYXRpbzozLHRocmVzaG9sZDotMjQscmVsZWFzZTouMDMsYXR0YWNrOi4wMixrbmVlOjE2fSxzaWRlOntyYXRpbzo2LHRocmVzaG9sZDotMzAscmVsZWFzZTouMjUsYXR0YWNrOi4wMyxrbmVlOjEwfX0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMubWlkLmRpc3Bvc2UoKSx0aGlzLnNpZGUuZGlzcG9zZSgpLHRoaXMuX21pZFNpZGVTcGxpdC5kaXNwb3NlKCksdGhpcy5fbWlkU2lkZU1lcmdlLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBwYyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIoT2JqZWN0LmFzc2lnbih1aShwYy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cykpKSx0aGlzLm5hbWU9XCJNdWx0aWJhbmRDb21wcmVzc29yXCI7Y29uc3QgdD11aShwYy5nZXREZWZhdWx0cygpLGFyZ3VtZW50cyk7dGhpcy5fc3BsaXR0ZXI9dGhpcy5pbnB1dD1uZXcgaWMoe2NvbnRleHQ6dGhpcy5jb250ZXh0LGxvd0ZyZXF1ZW5jeTp0Lmxvd0ZyZXF1ZW5jeSxoaWdoRnJlcXVlbmN5OnQuaGlnaEZyZXF1ZW5jeX0pLHRoaXMubG93RnJlcXVlbmN5PXRoaXMuX3NwbGl0dGVyLmxvd0ZyZXF1ZW5jeSx0aGlzLmhpZ2hGcmVxdWVuY3k9dGhpcy5fc3BsaXR0ZXIuaGlnaEZyZXF1ZW5jeSx0aGlzLm91dHB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5sb3c9bmV3IGNjKE9iamVjdC5hc3NpZ24odC5sb3cse2NvbnRleHQ6dGhpcy5jb250ZXh0fSkpLHRoaXMubWlkPW5ldyBjYyhPYmplY3QuYXNzaWduKHQubWlkLHtjb250ZXh0OnRoaXMuY29udGV4dH0pKSx0aGlzLmhpZ2g9bmV3IGNjKE9iamVjdC5hc3NpZ24odC5oaWdoLHtjb250ZXh0OnRoaXMuY29udGV4dH0pKSx0aGlzLl9zcGxpdHRlci5sb3cuY2hhaW4odGhpcy5sb3csdGhpcy5vdXRwdXQpLHRoaXMuX3NwbGl0dGVyLm1pZC5jaGFpbih0aGlzLm1pZCx0aGlzLm91dHB1dCksdGhpcy5fc3BsaXR0ZXIuaGlnaC5jaGFpbih0aGlzLmhpZ2gsdGhpcy5vdXRwdXQpLE9pKHRoaXMsW1wiaGlnaFwiLFwibWlkXCIsXCJsb3dcIixcImhpZ2hGcmVxdWVuY3lcIixcImxvd0ZyZXF1ZW5jeVwiXSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24oaW8uZ2V0RGVmYXVsdHMoKSx7bG93RnJlcXVlbmN5OjI1MCxoaWdoRnJlcXVlbmN5OjJlMyxsb3c6e3JhdGlvOjYsdGhyZXNob2xkOi0zMCxyZWxlYXNlOi4yNSxhdHRhY2s6LjAzLGtuZWU6MTB9LG1pZDp7cmF0aW86Myx0aHJlc2hvbGQ6LTI0LHJlbGVhc2U6LjAzLGF0dGFjazouMDIsa25lZToxNn0saGlnaDp7cmF0aW86Myx0aHJlc2hvbGQ6LTI0LHJlbGVhc2U6LjAzLGF0dGFjazouMDIsa25lZToxNn19KX1kaXNwb3NlKCl7cmV0dXJuIHN1cGVyLmRpc3Bvc2UoKSx0aGlzLl9zcGxpdHRlci5kaXNwb3NlKCksdGhpcy5sb3cuZGlzcG9zZSgpLHRoaXMubWlkLmRpc3Bvc2UoKSx0aGlzLmhpZ2guZGlzcG9zZSgpLHRoaXMub3V0cHV0LmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBkYyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoZGMuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1wibG93XCIsXCJtaWRcIixcImhpZ2hcIl0pKSx0aGlzLm5hbWU9XCJFUTNcIix0aGlzLm91dHB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5faW50ZXJuYWxDaGFubmVscz1bXTtjb25zdCB0PXVpKGRjLmdldERlZmF1bHRzKCksYXJndW1lbnRzLFtcImxvd1wiLFwibWlkXCIsXCJoaWdoXCJdKTt0aGlzLmlucHV0PXRoaXMuX211bHRpYmFuZFNwbGl0PW5ldyBpYyh7Y29udGV4dDp0aGlzLmNvbnRleHQsaGlnaEZyZXF1ZW5jeTp0LmhpZ2hGcmVxdWVuY3ksbG93RnJlcXVlbmN5OnQubG93RnJlcXVlbmN5fSksdGhpcy5fbG93R2Fpbj1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46dC5sb3csdW5pdHM6XCJkZWNpYmVsc1wifSksdGhpcy5fbWlkR2Fpbj1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0LGdhaW46dC5taWQsdW5pdHM6XCJkZWNpYmVsc1wifSksdGhpcy5faGlnaEdhaW49bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dCxnYWluOnQuaGlnaCx1bml0czpcImRlY2liZWxzXCJ9KSx0aGlzLmxvdz10aGlzLl9sb3dHYWluLmdhaW4sdGhpcy5taWQ9dGhpcy5fbWlkR2Fpbi5nYWluLHRoaXMuaGlnaD10aGlzLl9oaWdoR2Fpbi5nYWluLHRoaXMuUT10aGlzLl9tdWx0aWJhbmRTcGxpdC5RLHRoaXMubG93RnJlcXVlbmN5PXRoaXMuX211bHRpYmFuZFNwbGl0Lmxvd0ZyZXF1ZW5jeSx0aGlzLmhpZ2hGcmVxdWVuY3k9dGhpcy5fbXVsdGliYW5kU3BsaXQuaGlnaEZyZXF1ZW5jeSx0aGlzLl9tdWx0aWJhbmRTcGxpdC5sb3cuY2hhaW4odGhpcy5fbG93R2Fpbix0aGlzLm91dHB1dCksdGhpcy5fbXVsdGliYW5kU3BsaXQubWlkLmNoYWluKHRoaXMuX21pZEdhaW4sdGhpcy5vdXRwdXQpLHRoaXMuX211bHRpYmFuZFNwbGl0LmhpZ2guY2hhaW4odGhpcy5faGlnaEdhaW4sdGhpcy5vdXRwdXQpLE9pKHRoaXMsW1wibG93XCIsXCJtaWRcIixcImhpZ2hcIixcImxvd0ZyZXF1ZW5jeVwiLFwiaGlnaEZyZXF1ZW5jeVwiXSksdGhpcy5faW50ZXJuYWxDaGFubmVscz1bdGhpcy5fbXVsdGliYW5kU3BsaXRdfXN0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBPYmplY3QuYXNzaWduKGlvLmdldERlZmF1bHRzKCkse2hpZ2g6MCxoaWdoRnJlcXVlbmN5OjI1MDAsbG93OjAsbG93RnJlcXVlbmN5OjQwMCxtaWQ6MH0pfWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLE1pKHRoaXMsW1wibG93XCIsXCJtaWRcIixcImhpZ2hcIixcImxvd0ZyZXF1ZW5jeVwiLFwiaGlnaEZyZXF1ZW5jeVwiXSksdGhpcy5fbXVsdGliYW5kU3BsaXQuZGlzcG9zZSgpLHRoaXMubG93RnJlcXVlbmN5LmRpc3Bvc2UoKSx0aGlzLmhpZ2hGcmVxdWVuY3kuZGlzcG9zZSgpLHRoaXMuX2xvd0dhaW4uZGlzcG9zZSgpLHRoaXMuX21pZEdhaW4uZGlzcG9zZSgpLHRoaXMuX2hpZ2hHYWluLmRpc3Bvc2UoKSx0aGlzLmxvdy5kaXNwb3NlKCksdGhpcy5taWQuZGlzcG9zZSgpLHRoaXMuaGlnaC5kaXNwb3NlKCksdGhpcy5RLmRpc3Bvc2UoKSx0aGlzfX1jbGFzcyBmYyBleHRlbmRzIGlve2NvbnN0cnVjdG9yKCl7c3VwZXIodWkoZmMuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsXCIsXCJvbmxvYWRcIl0pKSx0aGlzLm5hbWU9XCJDb252b2x2ZXJcIix0aGlzLl9jb252b2x2ZXI9dGhpcy5jb250ZXh0LmNyZWF0ZUNvbnZvbHZlcigpO2NvbnN0IHQ9dWkoZmMuZ2V0RGVmYXVsdHMoKSxhcmd1bWVudHMsW1widXJsXCIsXCJvbmxvYWRcIl0pO3RoaXMuX2J1ZmZlcj1uZXcgUmkodC51cmwsKGU9Pnt0aGlzLmJ1ZmZlcj1lLHQub25sb2FkKCl9KSksdGhpcy5pbnB1dD1uZXcgaG8oe2NvbnRleHQ6dGhpcy5jb250ZXh0fSksdGhpcy5vdXRwdXQ9bmV3IGhvKHtjb250ZXh0OnRoaXMuY29udGV4dH0pLHRoaXMuX2J1ZmZlci5sb2FkZWQmJih0aGlzLmJ1ZmZlcj10aGlzLl9idWZmZXIpLHRoaXMubm9ybWFsaXplPXQubm9ybWFsaXplLHRoaXMuaW5wdXQuY2hhaW4odGhpcy5fY29udm9sdmVyLHRoaXMub3V0cHV0KX1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihpby5nZXREZWZhdWx0cygpLHtub3JtYWxpemU6ITAsb25sb2FkOkVpfSl9bG9hZCh0KXtyZXR1cm4gbmkodGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbiooKXt0aGlzLmJ1ZmZlcj15aWVsZCB0aGlzLl9idWZmZXIubG9hZCh0KX0pKX1nZXQgYnVmZmVyKCl7cmV0dXJuIHRoaXMuX2J1ZmZlci5sZW5ndGg/dGhpcy5fYnVmZmVyOm51bGx9c2V0IGJ1ZmZlcih0KXt0JiZ0aGlzLl9idWZmZXIuc2V0KHQpLHRoaXMuX2NvbnZvbHZlci5idWZmZXImJih0aGlzLmlucHV0LmRpc2Nvbm5lY3QoKSx0aGlzLl9jb252b2x2ZXIuZGlzY29ubmVjdCgpLHRoaXMuX2NvbnZvbHZlcj10aGlzLmNvbnRleHQuY3JlYXRlQ29udm9sdmVyKCksdGhpcy5pbnB1dC5jaGFpbih0aGlzLl9jb252b2x2ZXIsdGhpcy5vdXRwdXQpKTtjb25zdCBlPXRoaXMuX2J1ZmZlci5nZXQoKTt0aGlzLl9jb252b2x2ZXIuYnVmZmVyPWV8fG51bGx9Z2V0IG5vcm1hbGl6ZSgpe3JldHVybiB0aGlzLl9jb252b2x2ZXIubm9ybWFsaXplfXNldCBub3JtYWxpemUodCl7dGhpcy5fY29udm9sdmVyLm5vcm1hbGl6ZT10fWRpc3Bvc2UoKXtyZXR1cm4gc3VwZXIuZGlzcG9zZSgpLHRoaXMuX2J1ZmZlci5kaXNwb3NlKCksdGhpcy5fY29udm9sdmVyLmRpc2Nvbm5lY3QoKSx0aGlzfX1mdW5jdGlvbiBfYygpe3JldHVybiBWaSgpLm5vdygpfWZ1bmN0aW9uIG1jKCl7cmV0dXJuIFZpKCkuaW1tZWRpYXRlKCl9Y29uc3QgZ2M9VmkoKS50cmFuc3BvcnQ7ZnVuY3Rpb24gdmMoKXtyZXR1cm4gVmkoKS50cmFuc3BvcnR9Y29uc3QgeWM9VmkoKS5kZXN0aW5hdGlvbix4Yz1WaSgpLmRlc3RpbmF0aW9uO2Z1bmN0aW9uIHdjKCl7cmV0dXJuIFZpKCkuZGVzdGluYXRpb259Y29uc3QgYmM9VmkoKS5saXN0ZW5lcjtmdW5jdGlvbiBUYygpe3JldHVybiBWaSgpLmxpc3RlbmVyfWNvbnN0IFNjPVZpKCkuZHJhdztmdW5jdGlvbiBrYygpe3JldHVybiBWaSgpLmRyYXd9Y29uc3QgQWM9VmkoKTtmdW5jdGlvbiBDYygpe3JldHVybiBSaS5sb2FkZWQoKX1jb25zdCBEYz1SaSxPYz13byxNYz1qb30pKCksbn0pKCkpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRvbmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tone/build/Tone.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/zustand/esm/index.mjs ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: function() { return /* binding */ create; },\n/* harmony export */   createStore: function() { return /* reexport safe */ zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__.createStore; },\n/* harmony export */   \"default\": function() { return /* binding */ react; },\n/* harmony export */   useStore: function() { return /* binding */ useStore; }\n/* harmony export */ });\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand/vanilla */ \"(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/with-selector.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\");\n\n\n\n\n\nconst { useDebugValue } = react__WEBPACK_IMPORTED_MODULE_1__;\nconst { useSyncExternalStoreWithSelector } = use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_2__;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if (( false ? 0 : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__.createStore)(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QztBQUNkO0FBQ0M7QUFDdUQ7O0FBRXhGLFFBQVEsZ0JBQWdCLEVBQUUsa0NBQVk7QUFDdEMsUUFBUSxtQ0FBbUMsRUFBRSwwRUFBMkI7QUFDeEU7QUFDQTtBQUNBO0FBQ0EsT0FBTyxNQUFlLEdBQUcsQ0FBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLE1BQWUsR0FBRyxDQUFvQjtBQUM3QztBQUNBLDJHQUEyRyxXQUFXO0FBQ3RIO0FBQ0E7QUFDQSxrREFBa0QsNERBQVc7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxNQUFlLEdBQUcsQ0FBb0I7QUFDN0M7QUFDQSx3RUFBd0UsU0FBUztBQUNqRjtBQUNBO0FBQ0E7QUFDQTs7QUFFOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL2luZGV4Lm1qcz8wMWE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAnenVzdGFuZC92YW5pbGxhJztcbmV4cG9ydCAqIGZyb20gJ3p1c3RhbmQvdmFuaWxsYSc7XG5pbXBvcnQgUmVhY3RFeHBvcnRzIGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VTeW5jRXh0ZXJuYWxTdG9yZUV4cG9ydHMgZnJvbSAndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzJztcblxuY29uc3QgeyB1c2VEZWJ1Z1ZhbHVlIH0gPSBSZWFjdEV4cG9ydHM7XG5jb25zdCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yIH0gPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZUV4cG9ydHM7XG5sZXQgZGlkV2FybkFib3V0RXF1YWxpdHlGbiA9IGZhbHNlO1xuY29uc3QgaWRlbnRpdHkgPSAoYXJnKSA9PiBhcmc7XG5mdW5jdGlvbiB1c2VTdG9yZShhcGksIHNlbGVjdG9yID0gaWRlbnRpdHksIGVxdWFsaXR5Rm4pIHtcbiAgaWYgKChpbXBvcnQubWV0YS5lbnYgPyBpbXBvcnQubWV0YS5lbnYuTU9ERSA6IHZvaWQgMCkgIT09IFwicHJvZHVjdGlvblwiICYmIGVxdWFsaXR5Rm4gJiYgIWRpZFdhcm5BYm91dEVxdWFsaXR5Rm4pIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICBcIltERVBSRUNBVEVEXSBVc2UgYGNyZWF0ZVdpdGhFcXVhbGl0eUZuYCBpbnN0ZWFkIG9mIGBjcmVhdGVgIG9yIHVzZSBgdXNlU3RvcmVXaXRoRXF1YWxpdHlGbmAgaW5zdGVhZCBvZiBgdXNlU3RvcmVgLiBUaGV5IGNhbiBiZSBpbXBvcnRlZCBmcm9tICd6dXN0YW5kL3RyYWRpdGlvbmFsJy4gaHR0cHM6Ly9naXRodWIuY29tL3BtbmRycy96dXN0YW5kL2Rpc2N1c3Npb25zLzE5MzdcIlxuICAgICk7XG4gICAgZGlkV2FybkFib3V0RXF1YWxpdHlGbiA9IHRydWU7XG4gIH1cbiAgY29uc3Qgc2xpY2UgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvcihcbiAgICBhcGkuc3Vic2NyaWJlLFxuICAgIGFwaS5nZXRTdGF0ZSxcbiAgICBhcGkuZ2V0U2VydmVyU3RhdGUgfHwgYXBpLmdldEluaXRpYWxTdGF0ZSxcbiAgICBzZWxlY3RvcixcbiAgICBlcXVhbGl0eUZuXG4gICk7XG4gIHVzZURlYnVnVmFsdWUoc2xpY2UpO1xuICByZXR1cm4gc2xpY2U7XG59XG5jb25zdCBjcmVhdGVJbXBsID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGlmICgoaW1wb3J0Lm1ldGEuZW52ID8gaW1wb3J0Lm1ldGEuZW52Lk1PREUgOiB2b2lkIDApICE9PSBcInByb2R1Y3Rpb25cIiAmJiB0eXBlb2YgY3JlYXRlU3RhdGUgIT09IFwiZnVuY3Rpb25cIikge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiW0RFUFJFQ0FURURdIFBhc3NpbmcgYSB2YW5pbGxhIHN0b3JlIHdpbGwgYmUgdW5zdXBwb3J0ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbi4gSW5zdGVhZCB1c2UgYGltcG9ydCB7IHVzZVN0b3JlIH0gZnJvbSAnenVzdGFuZCdgLlwiXG4gICAgKTtcbiAgfVxuICBjb25zdCBhcGkgPSB0eXBlb2YgY3JlYXRlU3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IGNyZWF0ZVN0b3JlKGNyZWF0ZVN0YXRlKSA6IGNyZWF0ZVN0YXRlO1xuICBjb25zdCB1c2VCb3VuZFN0b3JlID0gKHNlbGVjdG9yLCBlcXVhbGl0eUZuKSA9PiB1c2VTdG9yZShhcGksIHNlbGVjdG9yLCBlcXVhbGl0eUZuKTtcbiAgT2JqZWN0LmFzc2lnbih1c2VCb3VuZFN0b3JlLCBhcGkpO1xuICByZXR1cm4gdXNlQm91bmRTdG9yZTtcbn07XG5jb25zdCBjcmVhdGUgPSAoY3JlYXRlU3RhdGUpID0+IGNyZWF0ZVN0YXRlID8gY3JlYXRlSW1wbChjcmVhdGVTdGF0ZSkgOiBjcmVhdGVJbXBsO1xudmFyIHJlYWN0ID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGlmICgoaW1wb3J0Lm1ldGEuZW52ID8gaW1wb3J0Lm1ldGEuZW52Lk1PREUgOiB2b2lkIDApICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiW0RFUFJFQ0FURURdIERlZmF1bHQgZXhwb3J0IGlzIGRlcHJlY2F0ZWQuIEluc3RlYWQgdXNlIGBpbXBvcnQgeyBjcmVhdGUgfSBmcm9tICd6dXN0YW5kJ2AuXCJcbiAgICApO1xuICB9XG4gIHJldHVybiBjcmVhdGUoY3JlYXRlU3RhdGUpO1xufTtcblxuZXhwb3J0IHsgY3JlYXRlLCByZWFjdCBhcyBkZWZhdWx0LCB1c2VTdG9yZSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs":
/*!**********************************************!*\
  !*** ./node_modules/zustand/esm/vanilla.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: function() { return /* binding */ createStore; },\n/* harmony export */   \"default\": function() { return /* binding */ vanilla; }\n/* harmony export */ });\nconst createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if (( false ? 0 : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS92YW5pbGxhLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEhBQThIO0FBQzlIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxNQUFlLEdBQUcsQ0FBb0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLE1BQWUsR0FBRyxDQUFvQjtBQUM3QztBQUNBLHVFQUF1RSxjQUFjO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBOztBQUUyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvenVzdGFuZC9lc20vdmFuaWxsYS5tanM/OWZlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjcmVhdGVTdG9yZUltcGwgPSAoY3JlYXRlU3RhdGUpID0+IHtcbiAgbGV0IHN0YXRlO1xuICBjb25zdCBsaXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBjb25zdCBzZXRTdGF0ZSA9IChwYXJ0aWFsLCByZXBsYWNlKSA9PiB7XG4gICAgY29uc3QgbmV4dFN0YXRlID0gdHlwZW9mIHBhcnRpYWwgPT09IFwiZnVuY3Rpb25cIiA/IHBhcnRpYWwoc3RhdGUpIDogcGFydGlhbDtcbiAgICBpZiAoIU9iamVjdC5pcyhuZXh0U3RhdGUsIHN0YXRlKSkge1xuICAgICAgY29uc3QgcHJldmlvdXNTdGF0ZSA9IHN0YXRlO1xuICAgICAgc3RhdGUgPSAocmVwbGFjZSAhPSBudWxsID8gcmVwbGFjZSA6IHR5cGVvZiBuZXh0U3RhdGUgIT09IFwib2JqZWN0XCIgfHwgbmV4dFN0YXRlID09PSBudWxsKSA/IG5leHRTdGF0ZSA6IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXh0U3RhdGUpO1xuICAgICAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiBsaXN0ZW5lcihzdGF0ZSwgcHJldmlvdXNTdGF0ZSkpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgZ2V0U3RhdGUgPSAoKSA9PiBzdGF0ZTtcbiAgY29uc3QgZ2V0SW5pdGlhbFN0YXRlID0gKCkgPT4gaW5pdGlhbFN0YXRlO1xuICBjb25zdCBzdWJzY3JpYmUgPSAobGlzdGVuZXIpID0+IHtcbiAgICBsaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gKCkgPT4gbGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcik7XG4gIH07XG4gIGNvbnN0IGRlc3Ryb3kgPSAoKSA9PiB7XG4gICAgaWYgKChpbXBvcnQubWV0YS5lbnYgPyBpbXBvcnQubWV0YS5lbnYuTU9ERSA6IHZvaWQgMCkgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIFwiW0RFUFJFQ0FURURdIFRoZSBgZGVzdHJveWAgbWV0aG9kIHdpbGwgYmUgdW5zdXBwb3J0ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbi4gSW5zdGVhZCB1c2UgdW5zdWJzY3JpYmUgZnVuY3Rpb24gcmV0dXJuZWQgYnkgc3Vic2NyaWJlLiBFdmVyeXRoaW5nIHdpbGwgYmUgZ2FyYmFnZS1jb2xsZWN0ZWQgaWYgc3RvcmUgaXMgZ2FyYmFnZS1jb2xsZWN0ZWQuXCJcbiAgICAgICk7XG4gICAgfVxuICAgIGxpc3RlbmVycy5jbGVhcigpO1xuICB9O1xuICBjb25zdCBhcGkgPSB7IHNldFN0YXRlLCBnZXRTdGF0ZSwgZ2V0SW5pdGlhbFN0YXRlLCBzdWJzY3JpYmUsIGRlc3Ryb3kgfTtcbiAgY29uc3QgaW5pdGlhbFN0YXRlID0gc3RhdGUgPSBjcmVhdGVTdGF0ZShzZXRTdGF0ZSwgZ2V0U3RhdGUsIGFwaSk7XG4gIHJldHVybiBhcGk7XG59O1xuY29uc3QgY3JlYXRlU3RvcmUgPSAoY3JlYXRlU3RhdGUpID0+IGNyZWF0ZVN0YXRlID8gY3JlYXRlU3RvcmVJbXBsKGNyZWF0ZVN0YXRlKSA6IGNyZWF0ZVN0b3JlSW1wbDtcbnZhciB2YW5pbGxhID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGlmICgoaW1wb3J0Lm1ldGEuZW52ID8gaW1wb3J0Lm1ldGEuZW52Lk1PREUgOiB2b2lkIDApICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiW0RFUFJFQ0FURURdIERlZmF1bHQgZXhwb3J0IGlzIGRlcHJlY2F0ZWQuIEluc3RlYWQgdXNlIGltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAnenVzdGFuZC92YW5pbGxhJy5cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGNyZWF0ZVN0b3JlKGNyZWF0ZVN0YXRlKTtcbn07XG5cbmV4cG9ydCB7IGNyZWF0ZVN0b3JlLCB2YW5pbGxhIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fproject%2Fsrc%2Fapp%2Fmaker%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);